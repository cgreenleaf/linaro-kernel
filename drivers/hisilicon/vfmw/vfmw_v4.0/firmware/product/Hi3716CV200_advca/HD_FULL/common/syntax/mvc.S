	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"mvc.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/mach-s40/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/drv/memmap
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/model/scd
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV100
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R001
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R002
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R003
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R004
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/model/rawpacket
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3716CV200/osal/linux_kernel
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3716CV200
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiDNR
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiBTLV100
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3716cv200
@ -DSDK_VERSION=HiSTBLinuxV100R002C01SPC020 -DHI_GPIOI2C_SUPPORT
@ -DHI_LOG_SUPPORT=0 -DHI_PROC_SUPPORT=0 -DHI_KEYLED_SUPPORT
@ -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_SUPPORT
@ -DHI_ADVCA_SUPPORT -DHI_ADVCA_TYPE_CONAX -DHI_ADVCA_FUNCTION_RELEASE
@ -DENV_ARMLINUX_KERNEL -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE
@ -DSUPPORT_JPEG_444 -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB
@ -D__VFMW_REGISTER_ISR__ -DVFMW_VDH_V200R004_SUPPORT -DVFMW_H264_SUPPORT
@ -DVFMW_MVC_SUPPORT -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT
@ -DVFMW_AVS_SUPPORT -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT
@ -DVFMW_REAL8_SUPPORT -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT
@ -DVFMW_VP8_SUPPORT -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT
@ -DVFMW_JPEG_SUPPORT -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT
@ -DCFG_MAX_CHAN_NUM=16 -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT
@ -DVFMW_SCD_LOWDLY_SUPPORT -DVFMW_AVSPLUS_SUPPORT
@ -DVFMW_MODULE_LOWDLY_SUPPORT -DVFMW_SYSTEM_REG_DISABLE
@ -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(mvc) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.mvc.o.d
@ /release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.c
@ -mlittle-endian -mabi=aapcs-linux -mno-thumb-interwork -marm
@ -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.o -O2 -Wall -Wundef
@ -Wstrict-prototypes -Wno-trigraphs -Werror-implicit-function-declaration
@ -Wno-format-security -Wframe-larger-than=1024
@ -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-aliasing
@ -fno-common -fno-delete-null-pointer-checks -fno-dwarf2-cfi-asm
@ -fstack-protector -funwind-tables -fomit-frame-pointer
@ -fno-strict-overflow -fconserve-stack -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
@ -foptimize-register-move -foptimize-sibling-calls -fpeephole -fpeephole2
@ -fpromote-loop-indices -freg-struct-return -fregmove -frename-registers
@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
@ -fsched-interblock -fsched-spec -fsched-stalled-insns-dep
@ -fschedule-insns -fschedule-insns2 -fsection-anchors -fsigned-zeros
@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstack-protector
@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-builtin-call-dce
@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-fre -ftree-loop-im
@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
@ -ftree-pre -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-sra
@ -ftree-switch-conversion -ftree-ter -ftree-vect-loop-version -ftree-vrp
@ -funit-at-a-time -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mglibc -mlittle-endian -msched-prolog

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	MVC_FrameStoreRefFlg
	.type	MVC_FrameStoreRefFlg, %function
MVC_FrameStoreRefFlg:
	.fnstart
.LFB1623:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@, <variable>.is_reference,
	movne	r0, #1	@
	bx	lr	@
	.fnend
	.size	MVC_FrameStoreRefFlg, .-MVC_FrameStoreRefFlg
	.align	2
	.global	MVC_NonLongTermRefFlg
	.type	MVC_NonLongTermRefFlg, %function
MVC_NonLongTermRefFlg:
	.fnstart
.LFB1624:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.35710, <variable>.is_reference
	cmp	r3, #3	@ D.35710,
	beq	.L12	@,
	tst	r3, #1	@ D.35710,
	bne	.L6	@,
.L7:
	ands	r3, r3, #2	@ tmp141, D.35710,
	moveq	r0, r3	@ D.35716, tmp141
	bxeq	lr	@
	ldrb	r0, [r0, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	rsbs	r0, r0, #1	@ D.35716, <variable>.bottom_field.is_long_term
	movcc	r0, #0	@ D.35716
	bx	lr	@
.L12:
	ldrb	r2, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	beq	.L5	@,
.L6:
	ldrb	r1, [r0, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r1, #0	@ <variable>.top_field.is_long_term,
	bne	.L7	@,
.L5:
	mov	r0, #1	@ D.35716,
	bx	lr	@
	.fnend
	.size	MVC_NonLongTermRefFlg, .-MVC_NonLongTermRefFlg
	.align	2
	.global	MVC_ShortTermRefFlg
	.type	MVC_ShortTermRefFlg, %function
MVC_ShortTermRefFlg:
	.fnstart
.LFB1625:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.35734, <variable>.is_reference
	cmp	r3, #3	@ D.35734,
	beq	.L21	@,
	tst	r3, #1	@ D.35734,
	bne	.L16	@,
.L17:
	ands	r3, r3, #2	@ tmp145, D.35734,
	moveq	r0, r3	@ D.35741, tmp145
	bxeq	lr	@
	ldr	r1, [r0, #544]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #65536	@ tmp146,
	movne	r0, #0	@, D.35741
	moveq	r0, #1	@, D.35741
	bx	lr	@
.L21:
	ldr	ip, [r0, #464]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #65536	@ tmp138,
	beq	.L15	@,
.L16:
	ldr	ip, [r0, #504]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #65536	@ tmp142,
	bne	.L17	@,
.L15:
	mov	r0, #1	@ D.35741,
	bx	lr	@
	.fnend
	.size	MVC_ShortTermRefFlg, .-MVC_ShortTermRefFlg
	.align	2
	.global	MVC_LongTermRefFlg
	.type	MVC_LongTermRefFlg, %function
MVC_LongTermRefFlg:
	.fnstart
.LFB1626:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.35761, <variable>.is_reference
	cmp	r3, #3	@ D.35761,
	beq	.L30	@,
	tst	r3, #1	@ D.35761,
	bne	.L25	@,
.L26:
	ands	r3, r3, #2	@ tmp145, D.35761,
	moveq	r0, r3	@ D.35768, tmp145
	bxeq	lr	@
	ldr	r1, [r0, #544]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #256	@ tmp146,
	movne	r0, #0	@, D.35768
	moveq	r0, #1	@, D.35768
	bx	lr	@
.L30:
	ldr	ip, [r0, #464]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #256	@ tmp138,
	beq	.L24	@,
.L25:
	ldr	ip, [r0, #504]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #256	@ tmp142,
	bne	.L26	@,
.L24:
	mov	r0, #1	@ D.35768,
	bx	lr	@
	.fnend
	.size	MVC_LongTermRefFlg, .-MVC_LongTermRefFlg
	.align	2
	.global	MVC_UpdateLTReflist
	.type	MVC_UpdateLTReflist, %function
MVC_UpdateLTReflist:
	.fnstart
.LFB1627:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	movw	r8, #:lower16:11168612	@ tmp170,
	movt	r8, #:upper16:11168612	@ tmp170,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L33	@,
	movw	r5, #:lower16:11168420	@ ivtmp.1035,
	mov	sl, #0	@ j,
	movt	r5, #:upper16:11168420	@ ivtmp.1035,
	movw	r9, #:lower16:11196732	@ tmp193,
	add	r5, r0, r5	@ ivtmp.1035, pMvcCtx, ivtmp.1035
	movt	r9, #:upper16:11196732	@ tmp193,
	mov	r6, sl	@ i, j
	b	.L35	@
.L34:
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r2, r6	@ <variable>.DPB.size, i
	bls	.L33	@,
.L35:
	ldr	r4, [r5, #0]	@ D.35797, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1035, ivtmp.1035,
	cmp	r4, #0	@ D.35797,
	mov	r0, r4	@, D.35797
	beq	.L34	@,
	bl	MVC_LongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L34	@,
	ldr	r2, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L34	@,
	movw	ip, #:lower16:2792136	@ tmp176,
	movt	ip, #:upper16:2792136	@ tmp176,
	add	r1, sl, ip	@ tmp176, j, tmp176
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	add	sl, sl, #1	@ j, j,
	add	r0, r7, r1, asl #2	@, tmp180, pMvcCtx, tmp176,
	cmp	r2, r6	@ <variable>.DPB.size, i
	str	r4, [r0, #4]	@ D.35797, <variable>.DPB.fs_ltref
	bhi	.L35	@,
.L33:
	movw	r1, #:lower16:11168612	@ tmp185,
	movt	r1, #:upper16:11168612	@ tmp185,
	movw	r3, #:lower16:11168624	@ tmp184,
	movt	r3, #:upper16:11168624	@ tmp184,
	ldr	r0, [r7, r1]	@ temp.1038, <variable>.DPB.size
	str	sl, [r7, r3]	@ j, <variable>.DPB.ltref_frames_in_buffer
	cmp	r0, sl	@ temp.1038, j
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	movw	r2, #:lower16:2792136	@ tmp186,
	movt	r2, #:upper16:2792136	@ tmp186,
	add	r3, sl, r2	@ tmp186, j, tmp186
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1038, j
	mvn	ip, sl	@ tmp196, j
	add	r7, r7, r3, asl #2	@, tmp189, pMvcCtx, tmp186,
	add	sl, ip, r0	@ tmp195, tmp196, temp.1038
	add	r7, r7, #4	@ ivtmp.1030, tmp189,
	mov	r1, #0	@ tmp192,
	and	sl, sl, #1	@ tmp197, tmp195,
	str	r1, [r7], #4	@ tmp192, <variable>.DPB.fs_ltref
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	cmp	sl, #0	@ tmp197,
	beq	.L37	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp192, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.1038, j
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L37:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp199, ivtmp.1030
	cmp	r0, r2	@ temp.1038, j
	str	r1, [ip], #4	@ tmp192, <variable>.DPB.fs_ltref
	str	r1, [r7, #4]	@ tmp192, <variable>.DPB.fs_ltref
	add	r7, ip, #4	@ ivtmp.1030, tmp199,
	bhi	.L37	@,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	.fnend
	.size	MVC_UpdateLTReflist, .-MVC_UpdateLTReflist
	.align	2
	.global	MVC_UpdateReflist
	.type	MVC_UpdateReflist, %function
MVC_UpdateReflist:
	.fnstart
.LFB1628:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	movw	r8, #:lower16:11168612	@ tmp141,
	movt	r8, #:upper16:11168612	@ tmp141,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L48	@,
	movw	r5, #:lower16:11168420	@ ivtmp.1073,
	mov	sl, #0	@ j,
	movt	r5, #:upper16:11168420	@ ivtmp.1073,
	movw	r9, #:lower16:11196732	@ tmp164,
	add	r5, r0, r5	@ ivtmp.1073, pMvcCtx, ivtmp.1073
	movt	r9, #:upper16:11196732	@ tmp164,
	mov	r6, sl	@ i, j
	b	.L50	@
.L49:
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r2, r6	@ <variable>.DPB.size, i
	bls	.L48	@,
.L50:
	ldr	r4, [r5, #0]	@ D.35821, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1073, ivtmp.1073,
	cmp	r4, #0	@ D.35821,
	mov	r0, r4	@, D.35821
	beq	.L49	@,
	bl	MVC_ShortTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L49	@,
	ldr	r2, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L49	@,
	movw	ip, #:lower16:2792120	@ tmp147,
	movt	ip, #:upper16:2792120	@ tmp147,
	add	r1, sl, ip	@ tmp147, j, tmp147
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	add	sl, sl, #1	@ j, j,
	add	r0, r7, r1, asl #2	@, tmp151, pMvcCtx, tmp147,
	cmp	r2, r6	@ <variable>.DPB.size, i
	str	r4, [r0, #4]	@ D.35821, <variable>.DPB.fs_ref
	bhi	.L50	@,
.L48:
	movw	r1, #:lower16:11168612	@ tmp156,
	movt	r1, #:upper16:11168612	@ tmp156,
	movw	r3, #:lower16:11168620	@ tmp155,
	movt	r3, #:upper16:11168620	@ tmp155,
	ldr	r0, [r7, r1]	@ temp.1076, <variable>.DPB.size
	str	sl, [r7, r3]	@ j, <variable>.DPB.ref_frames_in_buffer
	cmp	r0, sl	@ temp.1076, j
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	movw	r2, #:lower16:2792120	@ tmp157,
	movt	r2, #:upper16:2792120	@ tmp157,
	add	r3, sl, r2	@ tmp157, j, tmp157
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1076, j
	mvn	ip, sl	@ tmp167, j
	add	r7, r7, r3, asl #2	@, tmp160, pMvcCtx, tmp157,
	add	sl, ip, r0	@ tmp166, tmp167, temp.1076
	add	r7, r7, #4	@ ivtmp.1069, tmp160,
	mov	r1, #0	@ tmp163,
	and	sl, sl, #1	@ tmp168, tmp166,
	str	r1, [r7], #4	@ tmp163, <variable>.DPB.fs_ref
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	cmp	sl, #0	@ tmp168,
	beq	.L52	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp163, <variable>.DPB.fs_ref
	cmp	r0, r2	@ temp.1076, j
	ldmlsfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L52:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp170, ivtmp.1069
	cmp	r0, r2	@ temp.1076, j
	str	r1, [ip], #4	@ tmp163, <variable>.DPB.fs_ref
	str	r1, [r7, #4]	@ tmp163, <variable>.DPB.fs_ref
	add	r7, ip, #4	@ ivtmp.1069, tmp170,
	bhi	.L52	@,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	.fnend
	.size	MVC_UpdateReflist, .-MVC_UpdateReflist
	.align	2
	.global	MVC_GetPicNumX
	.type	MVC_GetPicNumX, %function
MVC_GetPicNumX:
	.fnstart
.LFB1629:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mvn	r1, r1	@ tmp141, difference_of_pic_nums_minus1
	ldr	r0, [r0, #480]	@ CurrPicNum, <variable>.frame_num
	cmp	r3, #0	@ <variable>.structure,
	movne	r0, r0, asl #1	@ tmp138, <variable>.frame_num,
	addne	r0, r0, #1	@ CurrPicNum, tmp138,
	add	r0, r0, r1	@, CurrPicNum, tmp141
	bx	lr	@
	.fnend
	.size	MVC_GetPicNumX, .-MVC_GetPicNumX
	.align	2
	.global	MVC_MarkPicLTRef
	.type	MVC_MarkPicLTRef, %function
MVC_MarkPicLTRef:
	.fnstart
.LFB1635:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp}
	ldrb	r3, [r3, #3]	@ zero_extendqisi2	@ D.36097, <variable>.structure
	cmp	r3, #0	@ D.36097,
	beq	.L66	@,
	movw	ip, #:lower16:11168620	@ tmp155,
	movt	ip, #:upper16:11168620	@ tmp155,
	ldr	r8, [r0, ip]	@ D.36117, <variable>.DPB.ref_frames_in_buffer
	cmp	r8, #0	@ D.36117,
	beq	.L76	@,
	movw	sl, #:lower16:11168484	@ ivtmp.1138,
	movt	sl, #:upper16:11168484	@ ivtmp.1138,
	add	r6, r0, sl	@ ivtmp.1138, pMvcCtx, ivtmp.1138
	sub	r7, r8, #1	@ tmp359, D.36117,
	movw	sl, #:lower16:11196732	@ tmp353,
	and	r7, r7, #1	@ tmp361, tmp359,
	ldr	ip, [r6, #0]	@ temp.1148, <variable>.DPB.fs_ref
	movt	sl, #:upper16:11196732	@ tmp353,
	mov	r4, #0	@ i.1158,
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ D.36119, <variable>.is_reference
	tst	r5, #1	@ D.36119,
	beq	.L86	@,
	ldr	r9, [ip, #504]	@ tmp402,
	bic	r9, r9, #-16777216	@ tmp403, tmp402,
	bic	r9, r9, #255	@ tmp403, tmp403,
	cmp	r9, #65536	@ tmp403,
	beq	.L105	@,
.L86:
	tst	r5, #2	@ D.36119,
	beq	.L87	@,
	ldr	r5, [ip, #544]	@ tmp394,
	bic	r5, r5, #-16777216	@ tmp395, tmp394,
	bic	r5, r5, #255	@ tmp395, tmp395,
	cmp	r5, #65536	@ tmp395,
	beq	.L106	@,
.L87:
	mov	r4, #1	@ i.1158,
	cmp	r8, r4	@ D.36117, i.1158
	add	r6, r6, #4	@ ivtmp.1138, ivtmp.1138,
	bls	.L76	@,
	cmp	r7, #0	@ tmp361,
	beq	.L75	@,
	ldr	ip, [r6, #0]	@ temp.1148, <variable>.DPB.fs_ref
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ D.36119, <variable>.is_reference
	tst	r5, #1	@ D.36119,
	beq	.L89	@,
	ldr	r7, [ip, #504]	@ tmp421,
	bic	r7, r7, #-16777216	@ tmp422, tmp421,
	bic	r7, r7, #255	@ tmp422, tmp422,
	cmp	r7, #65536	@ tmp422,
	beq	.L107	@,
.L89:
	tst	r5, #2	@ D.36119,
	beq	.L90	@,
	ldr	r5, [ip, #544]	@ tmp413,
	bic	r5, r5, #-16777216	@ tmp414, tmp413,
	bic	r5, r5, #255	@ tmp414, tmp414,
	cmp	r5, #65536	@ tmp414,
	beq	.L108	@,
.L90:
	add	r4, r4, #1	@ i.1158, i.1158,
	add	r6, r6, #4	@ ivtmp.1138, ivtmp.1138,
	cmp	r8, r4	@ D.36117, i.1158
	bhi	.L75	@,
.L76:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	bx	lr
.L66:
	movw	ip, #:lower16:11168620	@ tmp156,
	movt	ip, #:upper16:11168620	@ tmp156,
	ldr	r7, [r0, ip]	@ temp.1159, <variable>.DPB.ref_frames_in_buffer
	cmp	r7, #0	@ temp.1159,
	beq	.L76	@,
	movw	r4, #:lower16:11168484	@ ivtmp.1133,
	movt	r4, #:upper16:11168484	@ ivtmp.1133,
	add	r4, r0, r4	@ ivtmp.1133, pMvcCtx, ivtmp.1133
	sub	r5, r7, #1	@ tmp354, temp.1159,
	and	r6, r5, #1	@ tmp356, tmp354,
	movw	r8, #:lower16:11196732	@ tmp352,
	ldr	ip, [r4, #0]	@ D.36101, <variable>.DPB.fs_ref
	movt	r8, #:upper16:11196732	@ tmp352,
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L109	@,
.L79:
	mov	r3, #1	@ i,
	cmp	r3, r7	@ i, temp.1159
	add	r4, r4, #4	@ ivtmp.1133, ivtmp.1133,
	bcs	.L76	@,
	cmp	r6, #0	@ tmp356,
	beq	.L70	@,
	ldr	ip, [r4, #0]	@ D.36101, <variable>.DPB.fs_ref
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L110	@,
.L81:
	add	r3, r3, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.1133, ivtmp.1133,
	cmp	r3, r7	@ i, temp.1159
	bcc	.L70	@,
	b	.L76	@
.L69:
	ldr	ip, [r4, #4]	@ D.36101, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	r4, r3	@ tmp357, i
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L111	@,
.L84:
	add	r3, r4, #1	@ i, tmp357,
	add	r4, r5, #4	@ ivtmp.1133, tmp358,
	cmp	r3, r7	@ i, temp.1159
	bcs	.L76	@,
.L70:
	ldr	ip, [r4, #0]	@ D.36101, <variable>.DPB.fs_ref
	add	r5, r4, #4	@ tmp358, ivtmp.1133,
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	bne	.L69	@,
	ldr	r6, [ip, #464]	@ tmp161,
	bic	r6, r6, #-16777216	@ tmp159, tmp161,
	bic	r6, r6, #255	@ tmp159, tmp159,
	cmp	r6, #65536	@ tmp159,
	bne	.L69	@,
	ldr	r6, [ip, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r6, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L69	@,
	ldr	sl, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L102	@,
	ldr	ip, [r4, #4]	@ D.36101, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	r4, r3	@ tmp357, i
	ldrb	r6, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	bne	.L84	@,
.L111:
	ldr	r6, [ip, #464]	@ tmp387,
	bic	r6, r6, #-16777216	@ tmp388, tmp387,
	bic	r6, r6, #255	@ tmp388, tmp388,
	cmp	r6, #65536	@ tmp388,
	bne	.L84	@,
	ldr	r6, [ip, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r6, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L84	@,
	ldr	sl, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L84	@,
	b	.L102	@
.L117:
	ldr	r7, [ip, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r7, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L71	@,
	ldr	r9, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L112	@,
.L71:
	tst	r5, #2	@ D.36119,
	beq	.L73	@,
	ldr	r5, [ip, #544]	@ tmp293,
	bic	r7, r5, #-16777216	@ tmp291, tmp293,
	bic	r5, r7, #255	@ tmp291, tmp291,
	cmp	r5, #65536	@ tmp291,
	beq	.L113	@,
.L73:
	ldr	ip, [r6, #4]	@ temp.1148, <variable>.DPB.fs_ref
	add	r4, r4, #1	@ i.1158, i.1158,
	add	r6, r6, #4	@ tmp363, ivtmp.1138,
	mov	r7, r4	@ tmp362, i.1158
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ D.36119, <variable>.is_reference
	tst	r5, #1	@ D.36119,
	beq	.L93	@,
	ldr	r9, [ip, #504]	@ tmp438,
	bic	r9, r9, #-16777216	@ tmp439, tmp438,
	bic	r9, r9, #255	@ tmp439, tmp439,
	cmp	r9, #65536	@ tmp439,
	beq	.L114	@,
.L93:
	tst	r5, #2	@ D.36119,
	beq	.L94	@,
	ldr	r5, [ip, #544]	@ tmp430,
	bic	r5, r5, #-16777216	@ tmp431, tmp430,
	bic	r5, r5, #255	@ tmp431, tmp431,
	cmp	r5, #65536	@ tmp431,
	beq	.L115	@,
.L94:
	add	r4, r7, #1	@ i.1158, tmp362,
	add	r6, r6, #4	@ ivtmp.1138, tmp363,
	cmp	r8, r4	@ D.36117, i.1158
	bls	.L76	@,
.L75:
	ldr	ip, [r6, #0]	@ temp.1148, <variable>.DPB.fs_ref
	ldrb	r5, [ip, #2]	@ zero_extendqisi2	@ D.36119, <variable>.is_reference
	tst	r5, #1	@ D.36119,
	beq	.L71	@,
	ldr	r7, [ip, #504]	@ tmp231,
	bic	r7, r7, #-16777216	@ tmp229, tmp231,
	bic	r7, r7, #255	@ tmp229, tmp229,
	cmp	r7, #65536	@ tmp229,
	bne	.L71	@,
	b	.L117	@
.L114:
	ldr	r9, [ip, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r9, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L93	@,
	ldr	fp, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r9, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	fp, r9	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L93	@,
	ldrb	r5, [ip, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r5, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
.L72:
	movw	r2, #:lower16:2792120	@ tmp238,
	movt	r2, #:upper16:2792120	@ tmp238,
	add	r2, r4, r2	@ tmp238, i.1158, tmp238
	cmp	r3, #1	@ D.36097,
	movne	r3, #0	@, tmp247
	moveq	r3, #1	@, tmp247
	str	r1, [ip, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	add	ip, r3, r1, asl #1	@, tmp248, tmp247, long_term_frame_idx,
	add	r2, r0, r2, asl #2	@, tmp243, pMvcCtx, tmp238,
	mov	r1, #1	@ tmp256,
	ldr	r3, [r2, #4]	@ tmp240, <variable>.DPB.fs_ref
	str	ip, [r3, #512]	@ tmp248, <variable>.top_field.long_term_pic_num
	mov	ip, #0	@ tmp265,
	ldr	r0, [r2, #4]	@ tmp251, <variable>.DPB.fs_ref
	strb	r1, [r0, #505]	@ tmp256, <variable>.top_field.is_long_term
	ldr	r3, [r2, #4]	@ tmp260, <variable>.DPB.fs_ref
	strb	ip, [r3, #506]	@ tmp265, <variable>.top_field.is_short_term
	ldr	r3, [r2, #4]	@ temp.1155, <variable>.DPB.fs_ref
	ldrb	r0, [r3, #464]	@ zero_extendqisi2	@ D.36142, <variable>.frame.structure
	cmp	r0, #3	@ D.36142,
	cmpne	r0, #0	@, D.36142,
	bne	.L76	@,
	ldrb	r0, [r3, #505]	@ zero_extendqisi2	@ D.36148, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, r0	@ <variable>.bottom_field.is_long_term, D.36148
	streqb	r1, [r3, #465]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	ip, [r2, #4]	@ temp.1157, <variable>.DPB.fs_ref
	ldreqb	r1, [ip, #506]	@ zero_extendqisi2	@ <variable>.top_field.is_short_term, <variable>.top_field.is_short_term
	streqb	r1, [ip, #466]	@ <variable>.top_field.is_short_term, <variable>.frame.is_short_term
	b	.L76	@
.L113:
	ldr	r7, [ip, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r7, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L73	@,
	ldr	r7, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L73	@,
	ldrb	r5, [ip, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r5, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
.L74:
	movw	r2, #:lower16:2792120	@ tmp300,
	movt	r2, #:upper16:2792120	@ tmp300,
	add	r2, r4, r2	@ tmp300, i.1158, tmp300
	str	r1, [ip, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, #2	@ D.36097,
	movne	ip, #0	@, tmp309
	moveq	ip, #1	@, tmp309
	add	r2, r0, r2, asl #2	@, tmp305, pMvcCtx, tmp300,
	add	r1, ip, r1, asl #1	@, tmp310, tmp309, long_term_frame_idx,
	mov	ip, #1	@ tmp318,
	ldr	r3, [r2, #4]	@ tmp302, <variable>.DPB.fs_ref
	str	r1, [r3, #552]	@ tmp310, <variable>.bottom_field.long_term_pic_num
	mov	r1, #0	@ tmp327,
	ldr	r0, [r2, #4]	@ tmp313, <variable>.DPB.fs_ref
	strb	ip, [r0, #545]	@ tmp318, <variable>.bottom_field.is_long_term
	ldr	r3, [r2, #4]	@ tmp322, <variable>.DPB.fs_ref
	strb	r1, [r3, #546]	@ tmp327, <variable>.bottom_field.is_short_term
	ldr	r3, [r2, #4]	@ temp.1168, <variable>.DPB.fs_ref
	ldrb	r0, [r3, #464]	@ zero_extendqisi2	@ D.36170, <variable>.frame.structure
	cmp	r0, #3	@ D.36170,
	cmpne	r0, #0	@, D.36170,
	bne	.L76	@,
	ldrb	r0, [r3, #505]	@ zero_extendqisi2	@ temp.1169, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, r0	@ <variable>.bottom_field.is_long_term, temp.1169
	streqb	r1, [r3, #465]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r3, [r2, #4]	@ temp.1171, <variable>.DPB.fs_ref
	ldreqb	r1, [r3, #546]	@ zero_extendqisi2	@ <variable>.bottom_field.is_short_term, <variable>.bottom_field.is_short_term
	streqb	r1, [r3, #466]	@ <variable>.bottom_field.is_short_term, <variable>.frame.is_short_term
	b	.L76	@
.L115:
	ldr	r5, [ip, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r5, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L94	@,
	ldr	r9, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L94	@,
	ldrb	r5, [ip, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r5, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
	b	.L74	@
.L112:
	ldrb	r5, [ip, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r5, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
	b	.L72	@
.L105:
	ldr	r9, [ip, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r9, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L86	@,
	ldr	fp, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r9, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	fp, r9	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L86	@,
	ldrb	r5, [ip, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r5, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L72	@
.L107:
	ldr	r7, [ip, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r7, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L89	@,
	ldr	r9, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L89	@,
	ldrb	r5, [ip, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r5, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L72	@
.L106:
	ldr	r5, [ip, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r5, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L87	@,
	ldr	r9, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L87	@,
	ldrb	r5, [ip, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r5, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L74	@
.L108:
	ldr	r5, [ip, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r5, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L90	@,
	ldr	r7, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L90	@,
	ldrb	r5, [ip, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r5, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r5, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r5, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L74	@
.L109:
	ldr	r5, [ip, #464]	@ tmp374,
	bic	r5, r5, #-16777216	@ tmp375, tmp374,
	bic	r5, r5, #255	@ tmp375, tmp375,
	cmp	r5, #65536	@ tmp375,
	bne	.L79	@,
	ldr	r5, [ip, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L79	@,
	ldr	sl, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L79	@,
.L102:
	movw	r2, #:lower16:2792120	@ tmp166,
	movt	r2, #:upper16:2792120	@ tmp166,
	add	r2, r3, r2	@ tmp166, i, tmp166
	str	r1, [ip, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	mov	ip, #1	@ tmp180,
	mov	r3, #0	@ tmp207,
	add	r0, r0, r2, asl #2	@, tmp171, pMvcCtx, tmp166,
	ldr	r2, [r0, #4]	@ tmp168, <variable>.DPB.fs_ref
	str	r1, [r2, #472]	@ long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r2, [r0, #4]	@ tmp175, <variable>.DPB.fs_ref
	strb	ip, [r2, #465]	@ tmp180, <variable>.frame.is_long_term
	ldr	r1, [r0, #4]	@ tmp184, <variable>.DPB.fs_ref
	strb	ip, [r1, #505]	@ tmp180, <variable>.top_field.is_long_term
	ldr	r2, [r0, #4]	@ tmp193, <variable>.DPB.fs_ref
	strb	ip, [r2, #545]	@ tmp180, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #4]	@ tmp202, <variable>.DPB.fs_ref
	strb	r3, [ip, #466]	@ tmp207, <variable>.frame.is_short_term
	ldr	r1, [r0, #4]	@ tmp211, <variable>.DPB.fs_ref
	strb	r3, [r1, #506]	@ tmp207, <variable>.top_field.is_short_term
	ldr	r2, [r0, #4]	@ tmp220, <variable>.DPB.fs_ref
	strb	r3, [r2, #546]	@ tmp207, <variable>.bottom_field.is_short_term
	b	.L76	@
.L110:
	ldr	r5, [ip, #464]	@ tmp381,
	bic	r5, r5, #-16777216	@ tmp382, tmp381,
	bic	r5, r5, #255	@ tmp382, tmp382,
	cmp	r5, #65536	@ tmp382,
	bne	.L81	@,
	ldr	r5, [ip, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L81	@,
	ldr	r6, [ip, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L81	@,
	b	.L102	@
	.fnend
	.size	MVC_MarkPicLTRef, .-MVC_MarkPicLTRef
	.align	2
	.global	MVC_SetFrmRepeatCount
	.type	MVC_SetFrmRepeatCount, %function
MVC_SetFrmRepeatCount:
	.fnstart
.LFB1645:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5}	@,
	.save {r4, r5}
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r2, ip, #2032	@ tmp138, <variable>.s32FastForwardBackwardSpeed,
	add	r3, r2, #15	@ tmp138, tmp138,
	cmp	r3, #4096	@ tmp138,
	bcc	.L119	@,
	movw	r3, #:lower16:11199544	@ tmp144,
	movt	r3, #:upper16:11199544	@ tmp144,
	movw	ip, #:lower16:11199540	@ tmp142,
	movw	r2, #:lower16:11168612	@ tmp147,
	movt	ip, #:upper16:11199540	@ tmp142,
	movt	r2, #:upper16:11168612	@ tmp147,
	ldr	r5, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldr	r4, [r0, ip]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldr	r2, [r0, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	add	ip, r2, r5, lsr #1	@, D.36590, <variable>.DPB.size, <variable>.PicOutCounter,
	mov	r2, r4, lsr #1	@ D.36586, <variable>.NewPicCounter,
	add	r4, ip, #1	@ tmp149, D.36590,
	cmp	r2, r4	@ D.36586, tmp149
	bcc	.L119	@,
	mvn	ip, ip	@ tmp150, D.36590
	add	r2, ip, r2	@ tmp151, tmp150, D.36586
	cmp	r2, #1	@ tmp151,
	movhi	r2, #2	@ tmp152,
	movls	r2, #1	@ tmp157,
	strhi	r2, [r1, #84]	@ tmp152, <variable>.u32RepeatCnt
	strls	r2, [r1, #84]	@ tmp157, <variable>.u32RepeatCnt
	ldrhi	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldrls	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	addhi	r2, r2, #4	@ tmp156, <variable>.PicOutCounter,
	addls	r2, r2, #2	@ tmp161, <variable>.PicOutCounter,
	str	r2, [r0, r3]	@ tmp161, <variable>.PicOutCounter
	b	.L123	@
.L119:
	mov	r0, #0	@ tmp163,
	str	r0, [r1, #84]	@ tmp163, <variable>.u32RepeatCnt
.L123:
	ldmfd	sp!, {r4, r5}
	bx	lr
	.fnend
	.size	MVC_SetFrmRepeatCount, .-MVC_SetFrmRepeatCount
	.align	2
	.global	MVC_SplitFrmToFlds
	.type	MVC_SplitFrmToFlds, %function
MVC_SplitFrmToFlds:
	.fnstart
.LFB1648:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5}	@,
	.save {r4, r5}
	ldrb	ip, [r0, #466]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	ldrb	r4, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	mov	r5, #1	@ tmp138,
	ldr	r1, [r0, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldr	r2, [r0, #492]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r3, [r0, #468]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r5, [r0, #504]	@ tmp138, <variable>.top_field.structure
	mov	r5, #2	@ tmp147,
	strb	r4, [r0, #545]	@ <variable>.frame.is_long_term, <variable>.bottom_field.is_long_term
	str	r3, [r0, #548]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r0, #546]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r5, [r0, #544]	@ tmp147, <variable>.bottom_field.structure
	str	r1, [r0, #568]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	r2, [r0, #572]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	r4, [r0, #505]	@ <variable>.frame.is_long_term, <variable>.top_field.is_long_term
	strb	ip, [r0, #506]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r0, #528]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	r2, [r0, #532]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r3, [r0, #508]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldmfd	sp!, {r4, r5}
	bx	lr
	.fnend
	.size	MVC_SplitFrmToFlds, .-MVC_SplitFrmToFlds
	.align	2
	.global	MVC_CombineFldsToFrm
	.type	MVC_CombineFldsToFrm, %function
MVC_CombineFldsToFrm:
	.fnstart
.LFB1649:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	r1, [r0, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	ldr	r3, [r0, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	r4, [sp, #-4]!	@,
	.save {r4}
	cmp	r1, r3	@ <variable>.bottom_field.poc, <variable>.top_field.poc
	movlt	r3, r1	@ D.36703, <variable>.bottom_field.poc
	movge	r3, r3	@ D.36703, <variable>.top_field.poc
	ldr	r4, [r0, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r2, [r0, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldrb	r1, [r0, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #508]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	add	r2, r4, r2	@ tmp144, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	cmp	r1, #0	@ <variable>.bottom_field.is_long_term,
	mov	r4, #3	@ tmp142,
	mov	r2, r2, lsr #1	@ D.36708, tmp144,
	str	r3, [r0, #600]	@ D.36703, <variable>.poc
	strb	r4, [r0, #464]	@ tmp142, <variable>.frame.structure
	str	ip, [r0, #468]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	str	r3, [r0, #480]	@ D.36703, <variable>.frame.poc
	str	r2, [r0, #488]	@ D.36708, <variable>.frame.err_level
	beq	.L128	@,
	ldrb	ip, [r0, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	subs	r1, ip, #0	@ prephitmp.1249, <variable>.top_field.is_long_term,
	movne	r1, #1	@ prephitmp.1249
.L128:
	ldr	r3, [r0, #544]	@ tmp154,
	strb	r1, [r0, #465]	@ prephitmp.1249, <variable>.frame.is_long_term
	bic	ip, r3, #-16777216	@ tmp152, tmp154,
	bic	r3, ip, #255	@ tmp152, tmp152,
	cmp	r3, #0	@ tmp152,
	beq	.L129	@,
	ldr	ip, [r0, #504]	@ tmp157,
	bic	r3, ip, #-16777216	@ tmp155, tmp157,
	bic	ip, r3, #255	@ tmp155, tmp155,
	cmp	ip, #0	@ tmp155,
	bne	.L132	@,
.L129:
	mov	r1, #0	@ prephitmp.1238,
.L130:
	ldr	ip, [r0, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	r3, [r0, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	str	r2, [r0, #624]	@ D.36708, <variable>.err_level
	cmp	ip, r3	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	movcs	r3, ip	@ D.36732, <variable>.bottom_field.pic_type
	strb	r1, [r0, #466]	@ prephitmp.1238, <variable>.frame.is_short_term
	str	r3, [r0, #620]	@ D.36732, <variable>.pic_type
	str	r3, [r0, #492]	@ D.36732, <variable>.frame.pic_type
	ldmfd	sp!, {r4}
	bx	lr
.L132:
	rsbs	r1, r1, #1	@ prephitmp.1238, prephitmp.1249
	movcc	r1, #0	@ prephitmp.1238
	b	.L130	@
	.fnend
	.size	MVC_CombineFldsToFrm, .-MVC_CombineFldsToFrm
	.align	2
	.global	MVC_UpdateCurrFrameInfo
	.type	MVC_UpdateCurrFrameInfo, %function
MVC_UpdateCurrFrameInfo:
	.fnstart
.LFB1660:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r6, #:lower16:11196640	@ tmp152,
	movw	r5, #:lower16:11196170	@ tmp153,
	movt	r6, #:upper16:11196640	@ tmp152,
	movt	r5, #:upper16:11196170	@ tmp153,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldr	r4, [r3, r6]	@ pCurrFrame, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11196172	@ tmp156,
	ldrb	r1, [r3, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	movt	r0, #:upper16:11196172	@ tmp156,
	.pad #4
	sub	sp, sp, #4	@,,
	strb	r1, [r4, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	bne	.L134	@,
	movw	r7, #:lower16:11196173	@ tmp158,
	movt	r7, #:upper16:11196173	@ tmp158,
	ldrb	r1, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	cmp	r1, #0	@ <variable>.CurrPic.is_short_term,
	bne	.L134	@,
.L135:
	movw	r5, #:lower16:11196648	@ tmp161,
	movt	r5, #:upper16:11196648	@ tmp161,
	strb	r1, [r4, #2]	@ iftmp.531, <variable>.is_reference
	movw	ip, #:lower16:11196700	@ tmp163,
	ldr	r2, [r3, r5]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	movt	ip, #:upper16:11196700	@ tmp163,
	movw	r5, #:lower16:11196692	@ tmp165,
	movt	r5, #:upper16:11196692	@ tmp165,
	movw	r8, #:lower16:11196660	@ tmp167,
	movt	r8, #:upper16:11196660	@ tmp167,
	str	r2, [r4, #588]	@ <variable>.CurrPic.frame_num, <variable>.frame_num
	movw	r7, #:lower16:11196724	@ tmp169,
	ldr	sl, [r3, ip]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movt	r7, #:upper16:11196724	@ tmp169,
	movw	r6, #:lower16:11196652	@ tmp171,
	movt	r6, #:upper16:11196652	@ tmp171,
	movw	r0, #:lower16:11196177	@ tmp173,
	movt	r0, #:upper16:11196177	@ tmp173,
	str	sl, [r4, #624]	@ <variable>.CurrPic.err_level, <variable>.err_level
	movw	r2, #:lower16:11196175	@ tmp175,
	ldr	sl, [r3, r5]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	movt	r2, #:upper16:11196175	@ tmp175,
	movw	r1, #:lower16:11196171	@ tmp178,
	movt	r1, #:upper16:11196171	@ tmp178,
	str	sl, [r4, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r8, [r3, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r8, [r4, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r7, [r3, r7]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	str	r7, [r4, #628]	@ <variable>.CurrPic.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r6, [r3, r6]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.CurrPic.long_term_frame_idx
	str	r6, [r4, #596]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.long_term_frame_idx
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	str	r0, [r4, #616]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	r7, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r7, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r7, #3	@ iftmp.533,
	movne	r7, #0	@ iftmp.533,
	strb	r7, [r4, #3]	@ iftmp.533, <variable>.mode_skip_flag
	ldrb	r6, [r3, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r6, #1	@ <variable>.CurrPic.structure,
	beq	.L140	@,
	bcc	.L139	@,
	cmp	r6, #2	@ <variable>.CurrPic.structure,
	beq	.L154	@,
.L152:
	add	sp, sp, #4	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L134:
	mov	r1, #3	@ iftmp.531,
	b	.L135	@
.L139:
	movw	r7, #:lower16:11196172	@ tmp184,
	movt	r7, #:upper16:11196172	@ tmp184,
	str	r4, [r4, #468]	@ pCurrFrame, <variable>.frame.frame_store
	mov	sl, #3	@ tmp180,
	mov	r8, #0	@ tmp182,
	strb	sl, [r4, #1]	@ tmp180, <variable>.is_used
	strb	r8, [r4, #464]	@ tmp182, <variable>.frame.structure
	movw	r0, #:lower16:11196173	@ tmp186,
	ldrb	r8, [r3, r7]	@ zero_extendqisi2	@ temp.1280, <variable>.CurrPic.is_long_term
	movt	r0, #:upper16:11196173	@ tmp186,
	movw	r6, #:lower16:11196664	@ tmp188,
	movt	r6, #:upper16:11196664	@ tmp188,
	movw	r7, #:lower16:11196668	@ tmp192,
	movt	r7, #:upper16:11196668	@ tmp192,
	strb	r8, [r4, #465]	@ temp.1280, <variable>.frame.is_long_term
	movw	lr, #:lower16:11196672	@ tmp194,
	ldrb	sl, [r3, r0]	@ zero_extendqisi2	@ temp.1281, <variable>.CurrPic.is_short_term
	movt	lr, #:upper16:11196672	@ tmp194,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r3, r1	@, pMvcCtx,
	add	r0, r4, #8	@, pCurrFrame,
	strb	sl, [r4, #466]	@ temp.1281, <variable>.frame.is_short_term
	mov	r2, #456	@,
	ldr	r6, [r3, r6]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	str	r6, [r4, #480]	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	ldr	r5, [r3, r5]	@ temp.1282, <variable>.CurrPic.pic_type
	str	r5, [r4, #492]	@ temp.1282, <variable>.frame.pic_type
	ldr	r6, [r3, ip]	@ temp.1283, <variable>.CurrPic.err_level
	str	r6, [r4, #488]	@ temp.1283, <variable>.frame.err_level
	ldr	ip, [r3, r7]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	ip, [r4, #520]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	r3, [r3, lr]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	str	r3, [r4, #560]	@ <variable>.CurrPic.bottompoc, <variable>.bottom_field.poc
	bl	memcpy	@
	mov	ip, #1	@ tmp203,
	mov	r3, #2	@ tmp207,
	strb	r8, [r4, #545]	@ temp.1280, <variable>.bottom_field.is_long_term
	strb	sl, [r4, #546]	@ temp.1281, <variable>.bottom_field.is_short_term
	str	r6, [r4, #568]	@ temp.1283, <variable>.bottom_field.err_level
	strb	ip, [r4, #504]	@ tmp203, <variable>.top_field.structure
	strb	r3, [r4, #544]	@ tmp207, <variable>.bottom_field.structure
	str	r5, [r4, #572]	@ temp.1282, <variable>.bottom_field.pic_type
	str	r4, [r4, #548]	@ pCurrFrame, <variable>.bottom_field.frame_store
	strb	r8, [r4, #505]	@ temp.1280, <variable>.top_field.is_long_term
	strb	sl, [r4, #506]	@ temp.1281, <variable>.top_field.is_short_term
	str	r6, [r4, #528]	@ temp.1283, <variable>.top_field.err_level
	str	r5, [r4, #532]	@ temp.1282, <variable>.top_field.pic_type
	str	r4, [r4, #508]	@ pCurrFrame, <variable>.top_field.frame_store
	b	.L152	@
.L140:
	movw	r8, #:lower16:11196172	@ tmp211,
	movt	r8, #:upper16:11196172	@ tmp211,
	strb	r6, [r4, #504]	@ <variable>.CurrPic.structure, <variable>.top_field.structure
	movw	r0, #:lower16:11196173	@ tmp214,
	str	r4, [r4, #508]	@ pCurrFrame, <variable>.top_field.frame_store
	movt	r0, #:upper16:11196173	@ tmp214,
	ldrb	r9, [r3, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movw	r1, #:lower16:11196668	@ tmp217,
	movt	r1, #:upper16:11196668	@ tmp217,
	movw	r8, #:lower16:11196169	@ tmp222,
	movt	r8, #:upper16:11196169	@ tmp222,
	mov	sl, #0	@ tmp221,
	strb	r9, [r4, #505]	@ <variable>.CurrPic.is_long_term, <variable>.top_field.is_long_term
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r0, [r4, #506]	@ <variable>.CurrPic.is_short_term, <variable>.top_field.is_short_term
	ldr	r1, [r3, r1]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	r1, [r4, #520]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	r1, [r3, r5]	@ temp.1287, <variable>.CurrPic.pic_type
	str	r1, [r4, #532]	@ temp.1287, <variable>.top_field.pic_type
	ldr	r0, [r3, ip]	@ temp.1288, <variable>.CurrPic.err_level
	str	sl, [r4, #616]	@ tmp221, <variable>.MbaffFrameFlag
	str	r0, [r4, #528]	@ temp.1288, <variable>.top_field.err_level
	ldrb	ip, [r3, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	ip, sl	@ <variable>.CurrPic.field_pair_flag,
	beq	.L155	@,
	ldr	r8, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	mov	r5, #3	@ tmp235,
	strb	r5, [r4, #1]	@ tmp235, <variable>.is_used
	add	r6, r0, r8	@ D.37456, temp.1288, <variable>.bottom_field.err_level
	str	r6, [r4, #488]	@ D.37456, <variable>.frame.err_level
	str	r6, [r4, #624]	@ D.37456, <variable>.err_level
	mvn	r6, #0	@ tmp243,
	ldrb	r9, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movw	r2, #:lower16:11196192	@ tmp242,
	movt	r2, #:upper16:11196192	@ tmp242,
	cmp	r9, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	sl, r7, #1	@ iftmp.534, iftmp.533,
	strb	sl, [r4, #3]	@ iftmp.534, <variable>.mode_skip_flag
	ldrd	r8, [r3, r2]	@ D.37463, pMvcCtx, tmp242
	mvn	r7, #0	@,
	cmp	r9, r7	@ D.37463, tmp243
	cmpeq	r8, r6	@ D.37463, tmp243
	beq	.L145	@,
	ldrd	sl, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	fp, r7	@ <variable>.fs_image.PTS, tmp243
	cmpeq	sl, r6	@ <variable>.fs_image.PTS, tmp243
	beq	.L156	@,
.L145:
	ldr	ip, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
.L153:
	movw	r2, #:lower16:11196660	@ tmp288,
	movt	r2, #:upper16:11196660	@ tmp288,
	cmp	ip, r1	@ <variable>.top_field.pic_type, temp.1295
	strcs	ip, [r4, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	strcc	r1, [r4, #620]	@, temp.1295, <variable>.pic_type
	mov	r0, r4	@, pCurrFrame
	ldr	r1, [r3, r2]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r1, [r4, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	add	sp, sp, #4	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	b	MVC_CombineFldsToFrm	@
.L154:
	movw	r8, #:lower16:11196172	@ tmp252,
	movt	r8, #:upper16:11196172	@ tmp252,
	str	r4, [r4, #548]	@ pCurrFrame, <variable>.bottom_field.frame_store
	mov	r1, #1	@ tmp250,
	strb	r1, [r4, #544]	@ tmp250, <variable>.bottom_field.structure
	movw	r0, #:lower16:11196173	@ tmp255,
	ldrb	sl, [r3, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movt	r0, #:upper16:11196173	@ tmp255,
	movw	r1, #:lower16:11196668	@ tmp258,
	movt	r1, #:upper16:11196668	@ tmp258,
	movw	r8, #:lower16:11196169	@ tmp263,
	movt	r8, #:upper16:11196169	@ tmp263,
	strb	sl, [r4, #545]	@ <variable>.CurrPic.is_long_term, <variable>.bottom_field.is_long_term
	mov	sl, #0	@ tmp262,
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r0, [r4, #546]	@ <variable>.CurrPic.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r1, [r3, r1]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	r1, [r4, #560]	@ <variable>.CurrPic.toppoc, <variable>.bottom_field.poc
	ldr	r1, [r3, r5]	@ temp.1295, <variable>.CurrPic.pic_type
	str	r1, [r4, #572]	@ temp.1295, <variable>.bottom_field.pic_type
	ldr	r0, [r3, ip]	@ temp.1296, <variable>.CurrPic.err_level
	str	sl, [r4, #616]	@ tmp262, <variable>.MbaffFrameFlag
	str	r0, [r4, #568]	@ temp.1296, <variable>.bottom_field.err_level
	ldrb	ip, [r3, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	ip, sl	@ <variable>.CurrPic.field_pair_flag,
	beq	.L157	@,
	ldr	ip, [r4, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	mov	r5, #3	@ tmp275,
	strb	r5, [r4, #1]	@ tmp275, <variable>.is_used
	add	r6, r0, ip	@ temp.1299, temp.1296, <variable>.top_field.err_level
	str	r6, [r4, #488]	@ temp.1299, <variable>.frame.err_level
	str	r6, [r4, #624]	@ temp.1299, <variable>.err_level
	mvn	r6, #0	@ tmp283,
	ldrb	r9, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movw	r2, #:lower16:11196192	@ tmp282,
	movt	r2, #:upper16:11196192	@ tmp282,
	cmp	r9, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	sl, r7, #2	@ iftmp.536, iftmp.533,
	strb	sl, [r4, #3]	@ iftmp.536, <variable>.mode_skip_flag
	ldrd	r8, [r3, r2]	@ temp.1301, pMvcCtx, tmp282
	mvn	r7, #0	@,
	cmp	r9, r7	@ temp.1301, tmp283
	cmpeq	r8, r6	@ temp.1301, tmp283
	beq	.L151	@,
	ldrd	sl, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	fp, r7	@ <variable>.fs_image.PTS, tmp283
	cmpeq	sl, r6	@ <variable>.fs_image.PTS, tmp283
	beq	.L158	@,
.L151:
	ldr	ip, [r4, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L153	@
.L157:
	movw	lr, #:lower16:11196184	@,
	movt	lr, #:upper16:11196184	@,
	str	r0, [r4, #488]	@ temp.1296, <variable>.frame.err_level
	add	r1, r3, lr	@, pMvcCtx,
	str	r0, [r4, #624]	@ temp.1296, <variable>.err_level
	add	r0, r4, #8	@, pCurrFrame,
	strb	r6, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	ldrb	r3, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	mov	r2, #456	@,
	cmp	r3, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r3, #2	@ iftmp.535,
	movne	r3, sl	@ iftmp.535,
	strb	r3, [r4, #3]	@ iftmp.535, <variable>.mode_skip_flag
	bl	memcpy	@
	b	.L152	@
.L155:
	str	r0, [r4, #488]	@ temp.1288, <variable>.frame.err_level
	movw	ip, #:lower16:11196184	@,
	str	r0, [r4, #624]	@ temp.1288, <variable>.err_level
	movt	ip, #:upper16:11196184	@,
	strb	r6, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	add	r1, r3, ip	@, pMvcCtx,
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	add	r0, r4, #8	@, pCurrFrame,
	mov	r2, #456	@,
	cmp	lr, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	r3, #0	@, tmp228
	moveq	r3, #1	@, tmp228
	strb	r3, [r4, #3]	@ tmp228, <variable>.mode_skip_flag
	bl	memcpy	@
	b	.L152	@
.L156:
	strd	r8, [r4, #16]	@ D.37463, pCurrFrame,
	b	.L145	@
.L158:
	strd	r8, [r4, #16]	@ temp.1301, pCurrFrame,
	ldr	ip, [r4, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L153	@
	.fnend
	.size	MVC_UpdateCurrFrameInfo, .-MVC_UpdateCurrFrameInfo
	.align	2
	.global	MVC_GetShortTermPicPoint
	.type	MVC_GetShortTermPicPoint, %function
MVC_GetShortTermPicPoint:
	.fnstart
.LFB1666:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11162625	@ tmp144,
	movt	r3, #:upper16:11162625	@ tmp144,
	stmfd	sp!, {r4, r5, r6}	@,
	.save {r4, r5, r6}
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L161	@,
	movw	r2, #:lower16:11162626	@ tmp146,
	movt	r2, #:upper16:11162626	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L161:
	movw	ip, #:lower16:11168620	@ tmp148,
	movt	ip, #:upper16:11168620	@ tmp148,
	ldr	r6, [r0, ip]	@ D.37920, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.37920,
	beq	.L163	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11168484	@ ivtmp.1331,
	sub	r2, r6, #1	@ tmp166, D.37920,
	movt	r5, #:upper16:11168484	@ ivtmp.1331,
	add	r3, r0, r5	@ ivtmp.1331, pMvcCtx, ivtmp.1331
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L171	@,
	ldr	r2, [r3, #0]	@ D.37885, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L173	@,
	ldr	ip, [r2, #464]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #65536	@ tmp186,
	bne	.L173	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L190	@,
.L173:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.37920, i
	add	r3, r3, #4	@ ivtmp.1331, ivtmp.1331,
	bls	.L163	@,
	cmp	r5, #0	@ tmp168,
	beq	.L168	@,
	cmp	r4, #0	@ structure,
	beq	.L191	@,
	ldr	r0, [r3, #0]	@ temp.1334, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37898, <variable>.is_reference
	tst	r2, #1	@ D.37898,
	beq	.L176	@,
	ldr	r5, [r0, #504]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #65536	@ tmp195,
	beq	.L195	@,
.L176:
	tst	r2, #2	@ D.37898,
	beq	.L177	@,
	ldr	r2, [r0, #544]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #65536	@ tmp192,
	bne	.L177	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L188	@,
.L177:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1331, ivtmp.1331,
	cmp	r6, ip	@ D.37920, i
	bhi	.L168	@,
.L163:
	mov	r0, #0	@ D.37896,
.L166:
	ldmfd	sp!, {r4, r5, r6}
	bx	lr
.L171:
	ldr	r0, [r3, #0]	@ temp.1334, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37898, <variable>.is_reference
	tst	r2, #1	@ D.37898,
	beq	.L172	@,
	ldr	ip, [r0, #504]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #65536	@ tmp182,
	beq	.L196	@,
.L172:
	tst	r2, #2	@ D.37898,
	beq	.L173	@,
	ldr	ip, [r0, #544]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #65536	@ tmp179,
	bne	.L173	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L173	@,
.L188:
	add	r0, r0, #544	@ D.37896, temp.1334,
	b	.L166	@
.L197:
	ldr	r2, [r3, #0]	@ D.37885, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L165	@,
	ldr	r0, [r2, #464]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #65536	@ tmp151,
	bne	.L165	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L190	@,
.L165:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1331,
	bne	.L180	@,
.L199:
	ldr	r2, [r3, #4]	@ D.37885, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L182	@,
	ldr	r3, [r2, #464]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #65536	@ tmp212,
	bne	.L182	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L190	@,
.L182:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1331, tmp170,
	cmp	r6, ip	@ D.37920, i
	bls	.L163	@,
.L168:
	cmp	r4, #0	@ structure,
	beq	.L197	@,
	ldr	r0, [r3, #0]	@ temp.1334, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37898, <variable>.is_reference
	tst	r2, #1	@ D.37898,
	beq	.L167	@,
	ldr	r5, [r0, #504]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #65536	@ tmp156,
	beq	.L198	@,
.L167:
	tst	r2, #2	@ D.37898,
	beq	.L165	@,
	ldr	r2, [r0, #544]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #65536	@ tmp161,
	bne	.L165	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L188	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1331,
	beq	.L199	@,
.L180:
	ldr	r0, [r3, #4]	@ temp.1334, <variable>.DPB.fs_ref
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.37898, <variable>.is_reference
	tst	r3, #1	@ D.37898,
	beq	.L181	@,
	ldr	r2, [r0, #504]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #65536	@ tmp208,
	beq	.L200	@,
.L181:
	tst	r3, #2	@ D.37898,
	beq	.L182	@,
	ldr	r3, [r0, #544]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #65536	@ tmp205,
	bne	.L182	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L182	@,
	add	r0, r0, #544	@ D.37896, temp.1334,
	b	.L166	@
.L198:
	ldr	r5, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L167	@,
	add	r0, r0, #504	@ D.37896, temp.1334,
	b	.L166	@
.L200:
	ldr	r2, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r2, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L181	@,
	add	r0, r0, #504	@ D.37896, temp.1334,
	b	.L166	@
.L191:
	ldr	r2, [r3, #0]	@ D.37885, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L177	@,
	ldr	r0, [r2, #464]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #65536	@ tmp199,
	bne	.L177	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	bne	.L177	@,
.L190:
	add	r0, r2, #464	@ D.37896, D.37885,
	b	.L166	@
.L196:
	ldr	ip, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L172	@,
	add	r0, r0, #504	@ D.37896, temp.1334,
	b	.L166	@
.L195:
	ldr	r5, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L176	@,
	add	r0, r0, #504	@ D.37896, temp.1334,
	b	.L166	@
	.fnend
	.size	MVC_GetShortTermPicPoint, .-MVC_GetShortTermPicPoint
	.align	2
	.global	MVC_GetLongTermPicPoint
	.type	MVC_GetLongTermPicPoint, %function
MVC_GetLongTermPicPoint:
	.fnstart
.LFB1667:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11162625	@ tmp144,
	movt	r3, #:upper16:11162625	@ tmp144,
	stmfd	sp!, {r4, r5, r6}	@,
	.save {r4, r5, r6}
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L203	@,
	movw	r2, #:lower16:11162626	@ tmp146,
	movt	r2, #:upper16:11162626	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L203:
	movw	ip, #:lower16:11168624	@ tmp148,
	movt	ip, #:upper16:11168624	@ tmp148,
	ldr	r6, [r0, ip]	@ D.37978, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.37978,
	beq	.L205	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11168548	@ ivtmp.1362,
	sub	r2, r6, #1	@ tmp166, D.37978,
	movt	r5, #:upper16:11168548	@ ivtmp.1362,
	add	r3, r0, r5	@ ivtmp.1362, pMvcCtx, ivtmp.1362
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L213	@,
	ldr	r2, [r3, #0]	@ D.37943, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L215	@,
	ldr	ip, [r2, #464]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #256	@ tmp186,
	bne	.L215	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L232	@,
.L215:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.37978, i
	add	r3, r3, #4	@ ivtmp.1362, ivtmp.1362,
	bls	.L205	@,
	cmp	r5, #0	@ tmp168,
	beq	.L210	@,
	cmp	r4, #0	@ structure,
	beq	.L233	@,
	ldr	r0, [r3, #0]	@ temp.1365, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37956, <variable>.is_reference
	tst	r2, #1	@ D.37956,
	beq	.L218	@,
	ldr	r5, [r0, #504]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #256	@ tmp195,
	beq	.L237	@,
.L218:
	tst	r2, #2	@ D.37956,
	beq	.L219	@,
	ldr	r2, [r0, #544]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #256	@ tmp192,
	bne	.L219	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L230	@,
.L219:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1362, ivtmp.1362,
	cmp	r6, ip	@ D.37978, i
	bhi	.L210	@,
.L205:
	mov	r0, #0	@ D.37954,
.L208:
	ldmfd	sp!, {r4, r5, r6}
	bx	lr
.L213:
	ldr	r0, [r3, #0]	@ temp.1365, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37956, <variable>.is_reference
	tst	r2, #1	@ D.37956,
	beq	.L214	@,
	ldr	ip, [r0, #504]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #256	@ tmp182,
	beq	.L238	@,
.L214:
	tst	r2, #2	@ D.37956,
	beq	.L215	@,
	ldr	ip, [r0, #544]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #256	@ tmp179,
	bne	.L215	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L215	@,
.L230:
	add	r0, r0, #544	@ D.37954, temp.1365,
	b	.L208	@
.L239:
	ldr	r2, [r3, #0]	@ D.37943, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L207	@,
	ldr	r0, [r2, #464]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #256	@ tmp151,
	bne	.L207	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L232	@,
.L207:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1362,
	bne	.L222	@,
.L241:
	ldr	r2, [r3, #4]	@ D.37943, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L224	@,
	ldr	r3, [r2, #464]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #256	@ tmp212,
	bne	.L224	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L232	@,
.L224:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1362, tmp170,
	cmp	r6, ip	@ D.37978, i
	bls	.L205	@,
.L210:
	cmp	r4, #0	@ structure,
	beq	.L239	@,
	ldr	r0, [r3, #0]	@ temp.1365, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.37956, <variable>.is_reference
	tst	r2, #1	@ D.37956,
	beq	.L209	@,
	ldr	r5, [r0, #504]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #256	@ tmp156,
	beq	.L240	@,
.L209:
	tst	r2, #2	@ D.37956,
	beq	.L207	@,
	ldr	r2, [r0, #544]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #256	@ tmp161,
	bne	.L207	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L230	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1362,
	beq	.L241	@,
.L222:
	ldr	r0, [r3, #4]	@ temp.1365, <variable>.DPB.fs_ltref
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.37956, <variable>.is_reference
	tst	r3, #1	@ D.37956,
	beq	.L223	@,
	ldr	r2, [r0, #504]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #256	@ tmp208,
	beq	.L242	@,
.L223:
	tst	r3, #2	@ D.37956,
	beq	.L224	@,
	ldr	r3, [r0, #544]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #256	@ tmp205,
	bne	.L224	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L224	@,
	add	r0, r0, #544	@ D.37954, temp.1365,
	b	.L208	@
.L240:
	ldr	r5, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L209	@,
	add	r0, r0, #504	@ D.37954, temp.1365,
	b	.L208	@
.L242:
	ldr	r2, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L223	@,
	add	r0, r0, #504	@ D.37954, temp.1365,
	b	.L208	@
.L233:
	ldr	r2, [r3, #0]	@ D.37943, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L219	@,
	ldr	r0, [r2, #464]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #256	@ tmp199,
	bne	.L219	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	bne	.L219	@,
.L232:
	add	r0, r2, #464	@ D.37954, D.37943,
	b	.L208	@
.L238:
	ldr	ip, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	ip, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L214	@,
	add	r0, r0, #504	@ D.37954, temp.1365,
	b	.L208	@
.L237:
	ldr	r5, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L218	@,
	add	r0, r0, #504	@ D.37954, temp.1365,
	b	.L208	@
	.fnend
	.size	MVC_GetLongTermPicPoint, .-MVC_GetLongTermPicPoint
	.align	2
	.global	MVC_ReorderSTList
	.type	MVC_ReorderSTList, %function
MVC_ReorderSTList:
	.fnstart
.LFB1668:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	ldr	r4, [sp, #32]	@ refIdxLX, refIdxLX
	mov	r6, r3	@ picNumLX, picNumLX
	add	r5, r1, r1, asl #5	@, tmp159, listidx, listidx,
	add	r1, r0, #11141120	@ tmp155, pMvcCtx,
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r3, r1, #27904	@ tmp155, tmp155,
	mov	r1, r6	@, picNumLX
	add	r5, r3, r5, asl #2	@, RefPicListX, tmp155, tmp159,
	ldr	r8, [sp, #36]	@ CurrViewId, CurrViewId
	bl	MVC_GetShortTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.38009,* refIdxLX
	add	sl, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	sl, r3	@ cIdx, D.38009
	ble	.L244	@,
	add	r1, r5, sl, asl #2	@, ivtmp.1412, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1410, RefPicListX, ivtmp.1407,
.L245:
	ldr	lr, [r2], #-4	@ tmp163,
	mov	ip, r7	@ cIdx.1414, ivtmp.1407
	sub	r7, r7, #1	@ ivtmp.1407, ivtmp.1407,
	str	lr, [r1], #-4	@ tmp163,
	ldr	r3, [r4, #0]	@ D.38009,* refIdxLX
	cmp	r3, ip	@ D.38009, cIdx.1414
	blt	.L245	@,
.L244:
	add	r1, r3, #1	@ cIdx.1413, D.38009,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	sl, r1	@ cIdx, cIdx.1413
	str	r1, [r4, #0]	@ cIdx.1413,* refIdxLX
	ldmltfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1403, RefPicListX, cIdx.1413,
	rsb	r0, r1, sl	@ tmp169, cIdx.1413, cIdx
	and	ip, r0, #1	@ tmp170, tmp169,
	mov	r3, r1	@ nIdx, cIdx.1413
	ldr	r0, [r2, #0]	@ D.38014,* ivtmp.1403
	cmp	r0, #0	@ D.38014,
	beq	.L253	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L266	@,
.L254:
	add	r3, r1, #1	@ nIdx, cIdx.1413,
	str	r0, [r5, r1, asl #2]	@ D.38014,* RefPicListX
.L253:
	add	r0, r1, #1	@ cIdx.1413, cIdx.1413,
	add	r2, r2, #4	@ ivtmp.1403, ivtmp.1403,
	cmp	sl, r0	@ cIdx, cIdx.1413
	ldmltfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	cmp	ip, #0	@ tmp170,
	beq	.L249	@,
	ldr	r1, [r2, #0]	@ D.38014,* ivtmp.1403
	cmp	r1, #0	@ D.38014,
	beq	.L256	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	beq	.L267	@,
.L257:
	str	r1, [r5, r3, asl #2]	@ D.38014,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L256:
	add	r0, r0, #1	@ cIdx.1413, cIdx.1413,
	add	r2, r2, #4	@ ivtmp.1403, ivtmp.1403,
	cmp	sl, r0	@ cIdx, cIdx.1413
	bge	.L249	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L272:
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	beq	.L247	@,
.L248:
	str	r1, [r5, r3, asl #2]	@ D.38014,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L247:
	ldr	r1, [r2, #4]	@ D.38014,
	add	r0, r0, #1	@ tmp171, cIdx.1413,
	add	r2, r2, #4	@ tmp172, ivtmp.1403,
	cmp	r1, #0	@ D.38014,
	beq	.L260	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	bne	.L261	@,
	ldr	lr, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	lr, r6	@ <variable>.pic_num, picNumLX
	beq	.L269	@,
.L261:
	str	r1, [r5, r3, asl #2]	@ D.38014,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L260:
	add	r0, r0, #1	@ cIdx.1413, tmp171,
	add	r2, r2, #4	@ ivtmp.1403, tmp172,
	cmp	sl, r0	@ cIdx, cIdx.1413
	blt	.L270	@,
.L249:
	ldr	r1, [r2, #0]	@ D.38014,* ivtmp.1403
	cmp	r1, #0	@ D.38014,
	beq	.L247	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	bne	.L248	@,
	ldr	lr, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	lr, r6	@ <variable>.pic_num, picNumLX
	bne	.L248	@,
	b	.L272	@
.L266:
	ldr	r4, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	bne	.L254	@,
	ldr	r4, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L254	@,
	b	.L253	@
.L267:
	ldr	lr, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	lr, r6	@ <variable>.pic_num, picNumLX
	bne	.L257	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	bne	.L257	@,
	b	.L256	@
.L269:
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	bne	.L261	@,
	add	r0, r0, #1	@ cIdx.1413, tmp171,
	add	r2, r2, #4	@ ivtmp.1403, tmp172,
	cmp	sl, r0	@ cIdx, cIdx.1413
	bge	.L249	@,
.L270:
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	.fnend
	.size	MVC_ReorderSTList, .-MVC_ReorderSTList
	.align	2
	.global	MVC_ReorderLTList
	.type	MVC_ReorderLTList, %function
MVC_ReorderLTList:
	.fnstart
.LFB1669:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	ldr	r4, [sp, #32]	@ refIdxLX, refIdxLX
	mov	r6, r3	@ LongTermPicNum, LongTermPicNum
	add	r5, r1, r1, asl #5	@, tmp155, listidx, listidx,
	add	r1, r0, #11141120	@ tmp151, pMvcCtx,
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r3, r1, #27904	@ tmp151, tmp151,
	mov	r1, r6	@, LongTermPicNum
	add	r5, r3, r5, asl #2	@, RefPicListX, tmp151, tmp155,
	ldr	r8, [sp, #36]	@ CurrViewId, CurrViewId
	bl	MVC_GetLongTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.38059,* refIdxLX
	add	sl, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	sl, r3	@ cIdx, D.38059
	ble	.L274	@,
	add	r1, r5, sl, asl #2	@, ivtmp.1460, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1458, RefPicListX, ivtmp.1455,
.L275:
	ldr	lr, [r2], #-4	@ tmp159,
	mov	ip, r7	@ cIdx.1462, ivtmp.1455
	sub	r7, r7, #1	@ ivtmp.1455, ivtmp.1455,
	str	lr, [r1], #-4	@ tmp159,
	ldr	r3, [r4, #0]	@ D.38059,* refIdxLX
	cmp	r3, ip	@ D.38059, cIdx.1462
	blt	.L275	@,
.L274:
	add	r1, r3, #1	@ cIdx.1461, D.38059,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	sl, r1	@ cIdx, cIdx.1461
	str	r1, [r4, #0]	@ cIdx.1461,* refIdxLX
	ldmltfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1451, RefPicListX, cIdx.1461,
	rsb	r0, r1, sl	@ tmp165, cIdx.1461, cIdx
	and	ip, r0, #1	@ tmp166, tmp165,
	mov	r3, r1	@ nIdx, cIdx.1461
	ldr	r0, [r2, #0]	@ D.38064,* ivtmp.1451
	cmp	r0, #0	@ D.38064,
	beq	.L283	@,
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L296	@,
.L284:
	add	r3, r1, #1	@ nIdx, cIdx.1461,
	str	r0, [r5, r1, asl #2]	@ D.38064,* RefPicListX
.L283:
	add	r0, r1, #1	@ cIdx.1461, cIdx.1461,
	add	r2, r2, #4	@ ivtmp.1451, ivtmp.1451,
	cmp	sl, r0	@ cIdx, cIdx.1461
	ldmltfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	cmp	ip, #0	@ tmp166,
	beq	.L279	@,
	ldr	r1, [r2, #0]	@ D.38064,* ivtmp.1451
	cmp	r1, #0	@ D.38064,
	beq	.L286	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	bne	.L297	@,
.L287:
	str	r1, [r5, r3, asl #2]	@ D.38064,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L286:
	add	r0, r0, #1	@ cIdx.1461, cIdx.1461,
	add	r2, r2, #4	@ ivtmp.1451, ivtmp.1451,
	cmp	sl, r0	@ cIdx, cIdx.1461
	bge	.L279	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L302:
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	beq	.L277	@,
.L278:
	str	r1, [r5, r3, asl #2]	@ D.38064,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L277:
	ldr	r1, [r2, #4]	@ D.38064,
	add	r0, r0, #1	@ tmp167, cIdx.1461,
	add	r2, r2, #4	@ tmp168, ivtmp.1451,
	cmp	r1, #0	@ D.38064,
	beq	.L290	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	beq	.L291	@,
	ldr	lr, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	lr, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	beq	.L299	@,
.L291:
	str	r1, [r5, r3, asl #2]	@ D.38064,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L290:
	add	r0, r0, #1	@ cIdx.1461, tmp167,
	add	r2, r2, #4	@ ivtmp.1451, tmp168,
	cmp	sl, r0	@ cIdx, cIdx.1461
	blt	.L300	@,
.L279:
	ldr	r1, [r2, #0]	@ D.38064,* ivtmp.1451
	cmp	r1, #0	@ D.38064,
	beq	.L277	@,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, #0	@ <variable>.is_long_term,
	beq	.L278	@,
	ldr	lr, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	lr, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L278	@,
	b	.L302	@
.L296:
	ldr	r4, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L284	@,
	ldr	r4, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L284	@,
	b	.L283	@
.L297:
	ldr	lr, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	lr, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L287	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	bne	.L287	@,
	b	.L286	@
.L299:
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r8	@ <variable>.view_id, CurrViewId
	bne	.L291	@,
	add	r0, r0, #1	@ cIdx.1461, tmp167,
	add	r2, r2, #4	@ ivtmp.1451, tmp168,
	cmp	sl, r0	@ cIdx, cIdx.1461
	bge	.L279	@,
.L300:
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	.fnend
	.size	MVC_ReorderLTList, .-MVC_ReorderLTList
	.align	2
	.global	MVC_GetMaxViewIdx
	.type	MVC_GetMaxViewIdx, %function
MVC_GetMaxViewIdx:
	.fnstart
.LFB1670:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	ip, #:lower16:10818504	@ tmp143,
	movt	ip, #:upper16:10818504	@ tmp143,
	stmfd	sp!, {r4, r5, r6, r7}	@,
	.save {r4, r5, r6, r7}
	ldr	ip, [r0, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	adds	r7, ip, #1	@ D.38089, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L304	@,
	movw	r4, #:lower16:10818508	@ tmp145,
	movt	r4, #:upper16:10818508	@ tmp145,
	ldr	r4, [r0, r4]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r1, r4	@ CurrViewId, <variable>.CurrSUBSPS.view_id
	beq	.L304	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r5, #:lower16:10818512	@ ivtmp.1490,
	movt	r5, #:upper16:10818512	@ ivtmp.1490,
	mov	ip, #0	@ VOIdx,
	add	r4, r0, r5	@ ivtmp.1490, pMvcCtx, ivtmp.1490
	beq	.L305	@,
	ldr	r5, [r4], #4	@ D.44809, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ VOIdx,
	cmp	r1, r5	@ CurrViewId, D.44809
	bne	.L305	@,
.L306:
	cmp	r2, #0	@ anchor_pic_flag,
	add	r3, ip, r3, asl #1	@, tmp149, VOIdx, listidx,
	movwne	r2, #:lower16:2704628	@ tmp150,
	movweq	r2, #:lower16:2704636	@ tmp158,
	movtne	r2, #:upper16:2704628	@ tmp150,
	movteq	r2, #:upper16:2704636	@ tmp158,
	add	r1, r3, r2	@ tmp158, tmp157, tmp158
	add	r2, r0, r1, asl #2	@, tmp162, pMvcCtx, tmp158,
	ldr	r0, [r2, #4]	@ maxViewIdx,
	ldmfd	sp!, {r4, r5, r6, r7}
	bx	lr
.L307:
	ldr	r6, [r5], #4	@ D.44809, <variable>.CurrSUBSPS.view_id
	cmp	r1, r6	@ CurrViewId, D.44809
	beq	.L306	@,
	ldr	r6, [r4, #4]	@ D.44809, <variable>.CurrSUBSPS.view_id
	add	ip, ip, #1	@ VOIdx, VOIdx,
	add	r4, r5, #4	@ ivtmp.1490, tmp169,
	cmp	r1, r6	@ CurrViewId, D.44809
	beq	.L306	@,
.L305:
	add	ip, ip, #1	@ VOIdx, VOIdx,
	mov	r5, r4	@ tmp169, ivtmp.1490
	cmp	r7, ip	@ D.38089, VOIdx
	bhi	.L307	@,
	b	.L306	@
.L304:
	mov	ip, #0	@ VOIdx,
	b	.L306	@
	.fnend
	.size	MVC_GetMaxViewIdx, .-MVC_GetMaxViewIdx
	.align	2
	.global	mvc_get_inter_view_pic
	.type	mvc_get_inter_view_pic, %function
mvc_get_inter_view_pic:
	.fnstart
.LFB1671:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7}	@,
	.save {r4, r5, r6, r7}
	movw	r5, #:lower16:2791074	@ tmp151,
	movt	r5, #:upper16:2791074	@ tmp151,
	movw	r4, #:lower16:11152056	@ tmp147,
	add	ip, r3, r5	@ tmp151, listidx, tmp151
	movt	r4, #:upper16:11152056	@ tmp147,
	add	r4, r0, r4	@ tmp147, pMvcCtx, tmp147
	mov	r5, #1344	@ tmp150,
	ldr	ip, [r0, ip, asl #2]	@ interviewlistsize, <variable>.CurrSlice.interviewlistXsize
	mla	r3, r5, r3, r4	@ fs_interviewlist, tmp150, listidx, tmp147
	cmp	ip, #0	@ interviewlistsize,
	beq	.L317	@,
	ldr	r4, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	sub	r6, ip, #1	@ tmp160, interviewlistsize,
	and	r7, r6, #1	@ tmp162, tmp160,
	movw	r6, #:lower16:11196171	@ tmp159,
	cmp	r4, r1	@ <variable>.view_id, targetViewID
	movt	r6, #:upper16:11196171	@ tmp159,
	mov	r4, r3	@ ivtmp.1525, fs_interviewlist
	bne	.L325	@,
	ldrb	r5, [r0, r6]	@ zero_extendqisi2	@ D.38123, <variable>.CurrPic.structure
	cmp	r5, #0	@ D.38123,
	beq	.L341	@,
	cmp	r5, #1	@ D.38123,
	bne	.L352	@,
	ldr	r5, [r3, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L344	@,
.L325:
	mov	r5, #1	@ i,
	cmp	ip, r5	@ interviewlistsize, i
	add	r4, r3, #672	@ ivtmp.1525, fs_interviewlist,
	bls	.L317	@,
	cmp	r7, #0	@ tmp162,
	beq	.L322	@,
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L329	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.38123, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.38123,
	beq	.L346	@,
	cmp	r3, r5	@ D.38123,
	bne	.L353	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L344	@,
.L329:
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1525, ivtmp.1525,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L322	@,
.L317:
	mov	r0, #0	@ D.38127,
	b	.L320	@
.L355:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L345	@,
.L318:
	add	r4, r4, #672	@ ivtmp.1525, ivtmp.1525,
	add	r5, r5, #1	@ tmp163, i,
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	mov	r7, r4	@ tmp164, ivtmp.1525
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L334	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.38123, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.38123,
	beq	.L348	@,
	cmp	r3, #1	@ D.38123,
	bne	.L354	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L344	@,
.L334:
	add	r5, r5, #1	@ i, tmp163,
	add	r4, r7, #672	@ ivtmp.1525, tmp164,
	cmp	ip, r5	@ interviewlistsize, i
	bls	.L317	@,
.L322:
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L318	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.38123, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.38123,
	beq	.L355	@,
	cmp	r3, #1	@ D.38123,
	bne	.L321	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	bne	.L318	@,
.L344:
	add	r0, r4, #504	@ D.38127, ivtmp.1525,
	b	.L320	@
.L348:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L334	@,
.L345:
	add	r0, r4, #464	@ D.38127, ivtmp.1525,
	b	.L320	@
.L321:
	cmp	r3, #2	@ D.38123,
	bne	.L318	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L318	@,
.L343:
	add	r0, r4, #544	@ D.38127, ivtmp.1525,
.L320:
	ldmfd	sp!, {r4, r5, r6, r7}
	bx	lr
.L354:
	cmp	r3, #2	@ D.38123,
	bne	.L334	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L334	@,
	b	.L343	@
.L341:
	ldr	r5, [r3, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r5, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L325	@,
	add	r0, r4, #464	@ D.38127, ivtmp.1525,
	b	.L320	@
.L346:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L345	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1525, ivtmp.1525,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L322	@,
	b	.L317	@
.L352:
	cmp	r5, #2	@ D.38123,
	bne	.L325	@,
	ldr	r5, [r3, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L325	@,
	b	.L343	@
.L353:
	cmp	r3, #2	@ D.38123,
	bne	.L329	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	beq	.L343	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1525, ivtmp.1525,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L322	@,
	b	.L317	@
	.fnend
	.size	mvc_get_inter_view_pic, .-mvc_get_inter_view_pic
	.align	2
	.global	mvc_reorder_interview
	.type	mvc_reorder_interview, %function
mvc_reorder_interview:
	.fnstart
.LFB1672:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	ldr	r7, [sp, #32]	@ currpoc, currpoc
	ldr	r8, [sp, #36]	@ listidx, listidx
	mov	r6, r3	@ targetViewID, targetViewID
	mov	r4, r1	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	mov	r5, r2	@ refIdxLX, refIdxLX
	mov	r1, r3	@, targetViewID
	mov	r2, r7	@, currpoc
	mov	r3, r8	@, listidx
	mov	sl, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_get_inter_view_pic	@
	cmp	r0, #0	@ picLX
	ldmeqfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	ldr	r3, [r5, #0]	@ D.38167,* refIdxLX
	add	r9, r4, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	add	sl, sl, #11141120	@ tmp150, pMvcCtx,
	add	r8, r8, r8, asl #5	@, tmp154, listidx, listidx,
	cmp	r9, r3	@ cIdx, D.38167
	add	sl, sl, #27904	@ tmp150, tmp150,
	add	r8, sl, r8, asl #2	@, list, tmp150, tmp154,
	bls	.L358	@,
	add	r1, r8, r4, asl #2	@, ivtmp.1572, list, num_ref_idx_lX_active_minus1,
	add	r2, r8, r9, asl #2	@, ivtmp.1574, list, cIdx,
.L359:
	ldr	r3, [r1], #-4	@ tmp158,
	sub	ip, r4, #1	@ num_ref_idx_lX_active_minus1.1576, num_ref_idx_lX_active_minus1,
	str	r3, [r2], #-4	@ tmp158,
	ldr	r3, [r5, #0]	@ D.38167,* refIdxLX
	cmp	r3, r4	@ D.38167, num_ref_idx_lX_active_minus1
	mov	r4, ip	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1.1576
	bcc	.L359	@,
.L358:
	add	r1, r3, #1	@ cIdx.1575, D.38167,
	str	r0, [r8, r3, asl #2]	@ picLX,* list
	cmp	r9, r1	@ cIdx, cIdx.1575
	str	r1, [r5, #0]	@ cIdx.1575,* refIdxLX
	ldmccfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	add	r2, r8, r1, asl #2	@, ivtmp.1565, list, cIdx.1575,
	rsb	r0, r1, r9	@ tmp163, cIdx.1575, cIdx
	and	ip, r0, #1	@ tmp164, tmp163,
	mov	r3, r1	@ nIdx, cIdx.1575
	ldr	r0, [r2, #0]	@ D.38173,* ivtmp.1565
	cmp	r0, #0	@ D.38173,
	beq	.L365	@,
	ldr	lr, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r6	@ <variable>.view_id, targetViewID
	beq	.L379	@,
.L365:
	add	r3, r1, #1	@ nIdx, cIdx.1575,
	str	r0, [r8, r1, asl #2]	@ D.38173,* list
.L366:
	add	r1, r1, #1	@ cIdx.1575, cIdx.1575,
	add	r2, r2, #4	@ ivtmp.1565, ivtmp.1565,
	cmp	r9, r1	@ cIdx, cIdx.1575
	ldmccfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	cmp	ip, #0	@ tmp164,
	beq	.L362	@,
	ldr	r0, [r2, #0]	@ D.38173,* ivtmp.1565
	cmp	r0, #0	@ D.38173,
	beq	.L368	@,
	ldr	lr, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r6	@ <variable>.view_id, targetViewID
	beq	.L380	@,
.L368:
	str	r0, [r8, r3, asl #2]	@ D.38173,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L369:
	add	r1, r1, #1	@ cIdx.1575, cIdx.1575,
	add	r2, r2, #4	@ ivtmp.1565, ivtmp.1565,
	cmp	r9, r1	@ cIdx, cIdx.1575
	ldmccfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
	ldr	r0, [r2, #0]	@ D.38173,* ivtmp.1565
	add	r1, r1, #1	@ tmp165, cIdx.1575,
	add	ip, r2, #4	@ tmp166, ivtmp.1565,
	cmp	r0, #0	@ D.38173,
	bne	.L381	@,
.L360:
	str	r0, [r8, r3, asl #2]	@ D.38173,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L361:
	ldr	r2, [r2, #4]	@ D.38173,
	cmp	r2, #0	@ D.38173,
	beq	.L372	@,
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r0, r6	@ <variable>.view_id, targetViewID
	beq	.L382	@,
.L372:
	add	r1, r1, #1	@ cIdx.1575, tmp165,
	str	r2, [r8, r3, asl #2]	@ D.38173,* list
	cmp	r9, r1	@ cIdx, cIdx.1575
	add	r3, r3, #1	@ nIdx, nIdx,
	add	r2, ip, #4	@ ivtmp.1565, tmp166,
	bcc	.L383	@,
.L362:
	ldr	r0, [r2, #0]	@ D.38173,* ivtmp.1565
	add	r1, r1, #1	@ tmp165, cIdx.1575,
	add	ip, r2, #4	@ tmp166, ivtmp.1565,
	cmp	r0, #0	@ D.38173,
	beq	.L360	@,
.L381:
	ldr	r4, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r6	@ <variable>.view_id, targetViewID
	bne	.L360	@,
	ldr	r4, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r4, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L360	@,
	b	.L361	@
.L382:
	ldr	r0, [r2, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r0, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L372	@,
	add	r1, r1, #1	@ cIdx.1575, tmp165,
	add	r2, ip, #4	@ ivtmp.1565, tmp166,
	cmp	r9, r1	@ cIdx, cIdx.1575
	bcs	.L362	@,
.L383:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L380:
	ldr	ip, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	ip, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L368	@,
	b	.L369	@
.L379:
	ldr	r4, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r4, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L365	@,
	b	.L366	@
	.fnend
	.size	mvc_reorder_interview, .-mvc_reorder_interview
	.align	2
	.global	MVC_ReorderRefPiclist
	.type	MVC_ReorderRefPiclist, %function
MVC_ReorderRefPiclist:
	.fnstart
.LFB1673:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11162625	@ tmp169,
	movt	r3, #:upper16:11162625	@ tmp169,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	.pad #84
	sub	sp, sp, #84	@,,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ listidx, listidx
	str	r2, [sp, #12]	@ num_ref_idx_lX_active_minus1, %sfp
	mov	r2, #0	@ tmp168,
	cmp	r3, r2	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [sp, #76]	@ tmp168, refIdxLX
	beq	.L386	@,
	movw	r0, #:lower16:11162626	@ tmp171,
	movt	r0, #:upper16:11162626	@ tmp171,
	ldrb	r3, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, r2	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@ structure,
	moveq	r3, #1	@ structure,
.L386:
	cmp	r8, #1	@ listidx,
	bls	.L434	@,
.L417:
	add	sp, sp, #84	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L434:
	cmp	r8, #0	@ listidx,
	beq	.L435	@,
	movw	r9, #:lower16:11161708	@ reordering_of_pic_nums_idc,
	movw	r1, #:lower16:11161972	@,
	movw	r2, #:lower16:11162232	@,
	movw	ip, #:lower16:11162492	@,
	movt	r9, #:upper16:11161708	@ reordering_of_pic_nums_idc,
	movt	r1, #:upper16:11161972	@,
	movt	r2, #:upper16:11162232	@,
	movt	ip, #:upper16:11162492	@,
.L432:
	add	r0, r5, r1	@, pMvcCtx,
	str	r0, [sp, #48]	@, %sfp
	movw	r0, #:lower16:11152036	@ tmp182,
	movt	r0, #:upper16:11152036	@ tmp182,
	add	r1, r5, ip	@, pMvcCtx,
	add	r2, r5, r2	@, pMvcCtx,
	str	r1, [sp, #16]	@, %sfp
	cmp	r3, #0	@ structure,
	str	r2, [sp, #52]	@, %sfp
	mov	r1, #1	@ tmp185,
	ldr	ip, [r5, r0]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	add	r9, r5, r9	@ reordering_of_pic_nums_idc, pMvcCtx, reordering_of_pic_nums_idc
	ldr	r2, [ip, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movw	ip, #:lower16:11162644	@ tmp186,
	movt	ip, #:upper16:11162644	@ tmp186,
	add	r3, r2, #4	@ tmp183, <variable>.log2_max_frame_num_minus4,
	ldr	r2, [sp, #12]	@, %sfp
	mov	r0, r1, asl r3	@ MaxFrameNum, tmp185,
	streq	r0, [sp, #56]	@ MaxFrameNum, %sfp
	ldreq	ip, [r5, ip]	@, <variable>.CurrSlice.frame_num
	movne	r0, r0, asl #1	@, MaxFrameNum,
	strne	r0, [sp, #56]	@, %sfp
	ldrne	ip, [r5, ip]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movne	ip, ip, asl #1	@ tmp188, <variable>.CurrSlice.frame_num,
	addne	ip, ip, #1	@, tmp188,
	adds	r1, r2, #2	@,,
	str	ip, [sp, #60]	@, %sfp
	str	r1, [sp, #20]	@, %sfp
	beq	.L417	@,
	ldr	r3, [r9, #0]	@ D.38236,* reordering_of_pic_nums_idc
	cmp	r3, #3	@ D.38236,
	beq	.L417	@,
	movw	r1, #:lower16:10818512	@,
	movt	r1, #:upper16:10818512	@,
	add	ip, r5, r1	@, pMvcCtx,
	str	ip, [sp, #24]	@, %sfp
	ldr	ip, [sp, #60]	@, %sfp
	mov	r2, #0	@ D.38234,
	movw	fp, #:lower16:11196660	@,
	movw	r7, #:lower16:10818504	@,
	movt	fp, #:upper16:11196660	@,
	movt	r7, #:upper16:10818504	@,
	str	fp, [sp, #32]	@, %sfp
	movw	r6, #:lower16:11164280	@,
	str	r7, [sp, #64]	@, %sfp
	movt	r6, #:upper16:11164280	@,
	movw	lr, #:lower16:11164288	@,
	str	r6, [sp, #40]	@, %sfp
	movt	lr, #:upper16:11164288	@,
	movw	r4, #:lower16:10818508	@,
	str	lr, [sp, #36]	@, %sfp
	movt	r4, #:upper16:10818508	@,
	str	ip, [sp, #44]	@, %sfp
	mov	r7, #1	@ init_flag,
	str	r4, [sp, #68]	@, %sfp
	mov	fp, r2	@ picViewIdxLXPred, D.38234
	str	r2, [sp, #28]	@ D.38234, %sfp
	mov	r4, r2	@ CurrVOIdx, D.38234
	mov	r6, r2	@ i, D.38234
	b	.L393	@
.L439:
	add	r3, r0, r7	@ tmp230, tmp252, picViewIdxLX
	movw	r2, #:lower16:2704632	@ tmp232,
	add	ip, r3, r4	@ tmp231, tmp230, CurrVOIdx
	movt	r2, #:upper16:2704632	@ tmp232,
	add	fp, ip, r2	@ tmp232, tmp231, tmp232
	add	r0, r5, fp, asl #2	@, tmp236, pMvcCtx, tmp232,
	ldr	r3, [r0, #4]	@ targetViewId, <variable>.CurrSUBSPS.anchor_ref
.L415:
	ldr	lr, [sp, #32]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [sp, #12]	@, %sfp
	add	r2, sp, #76	@,,
	mov	fp, r7	@ picViewIdxLXPred, picViewIdxLX
	mov	r7, #0	@ init_flag,
	ldr	ip, [r5, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r8, [sp, #4]	@ listidx,
	str	ip, [sp, #0]	@ <variable>.CurrPic.thispoc,
	bl	mvc_reorder_interview	@
.L399:
	ldr	r3, [sp, #20]	@, %sfp
	add	r6, r6, #1	@ i, i,
	cmp	r3, r6	@, i
	bls	.L417	@,
	ldr	r3, [r9, r6, asl #2]	@ D.38236,* reordering_of_pic_nums_idc
	mov	r2, r6, asl #2	@ D.38234, i,
	cmp	r3, #3	@ D.38236,
	beq	.L417	@,
.L393:
	cmp	r3, #1	@ D.38236,
	bls	.L436	@,
	cmp	r3, #2	@ D.38236,
	beq	.L437	@,
	cmp	r7, #1	@ init_flag,
	beq	.L401	@,
	ldr	ip, [sp, #36]	@, %sfp
	mov	r7, fp	@ prephitmp.1593, picViewIdxLXPred
	mov	r0, r8, asl #1	@ tmp252, listidx,
	ldr	fp, [r5, ip]	@ D.38274, <variable>.CurrSlice.anchor_pic_flag
.L402:
	cmp	r3, #4	@ D.38236,
	beq	.L438	@,
	ldr	r1, [sp, #16]	@, %sfp
	ldr	ip, [sp, #28]	@, %sfp
	ldr	lr, [r1, r2]	@ tmp228,* D.38234
	add	r3, lr, #1	@ tmp227, tmp228,
	add	r7, r3, r7	@ picViewIdxLX, tmp227, prephitmp.1593
	cmp	ip, r7	@, picViewIdxLX
	rsble	r7, ip, r7	@ picViewIdxLX,, picViewIdxLX
.L413:
	cmp	fp, #0	@ D.38274,
	bne	.L439	@,
	add	r2, r0, r7	@ tmp239, tmp252, picViewIdxLX
	add	fp, r2, r4	@ tmp240, tmp239, CurrVOIdx
	add	r0, fp, #2703360	@ tmp241, tmp240,
	add	r1, r0, #1280	@ tmp241, tmp241,
	add	lr, r5, r1, asl #2	@, tmp245, pMvcCtx, tmp241,
	ldr	r3, [lr, #4]	@ targetViewId, <variable>.CurrSUBSPS.non_anchor_ref
	b	.L415	@
.L435:
	movw	r9, #:lower16:11161576	@ reordering_of_pic_nums_idc,
	movw	r1, #:lower16:11161840	@,
	movw	r2, #:lower16:11162104	@,
	movw	ip, #:lower16:11162360	@,
	movt	r9, #:upper16:11161576	@ reordering_of_pic_nums_idc,
	movt	r1, #:upper16:11161840	@,
	movt	r2, #:upper16:11162104	@,
	movt	ip, #:upper16:11162360	@,
	b	.L432	@
.L436:
	cmp	r3, #0	@ D.38236,
	bne	.L395	@,
	ldr	lr, [sp, #48]	@, %sfp
	ldr	r0, [lr, r2]	@ tmp191,* D.38234
	ldr	r2, [sp, #44]	@, %sfp
	mvn	sl, r0	@ tmp190, tmp191
	adds	sl, sl, r2	@ picNumLXNoWrap, tmp190,
	bmi	.L440	@,
.L396:
	ldr	r2, [sp, #60]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [sp, #40]	@, %sfp
	add	lr, sp, #76	@,,
	cmp	r2, sl	@, picNumLXNoWrap
	ldr	r2, [sp, #12]	@, %sfp
	ldrlt	ip, [sp, #56]	@, %sfp
	movge	r3, sl	@ picNumLX, picNumLXNoWrap
	rsblt	r3, ip, sl	@ picNumLX,, picNumLXNoWrap
	ldr	ip, [r5, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	mov	r1, r8	@, listidx
	str	lr, [sp, #0]	@,
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	bl	MVC_ReorderSTList	@
	str	sl, [sp, #44]	@ picNumLXNoWrap, %sfp
	b	.L399	@
.L438:
	ldr	lr, [sp, #16]	@, %sfp
	ldr	r1, [lr, r2]	@ tmp226,* D.38234
	mvn	r3, r1	@ tmp225, tmp226
	adds	r7, r7, r3	@ picViewIdxLX, prephitmp.1593, tmp225
	ldrmi	r2, [sp, #28]	@, %sfp
	addmi	r7, r7, r2	@ picViewIdxLX, picViewIdxLX,
	b	.L413	@
.L401:
	ldr	sl, [sp, #64]	@, %sfp
	ldr	fp, [sp, #40]	@, %sfp
	ldr	r4, [r5, sl]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	r0, [r5, fp]	@ temp.1630, <variable>.CurrSlice.view_id
	adds	sl, r4, #1	@ D.38272, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L403	@,
	ldr	ip, [sp, #68]	@, %sfp
	ldr	lr, [r5, ip]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r0, lr	@ temp.1630, <variable>.CurrSUBSPS.view_id
	beq	.L404	@,
	ldr	lr, [sp, #24]	@ ivtmp.1615, %sfp
	tst	sl, #1	@ D.38272,
	mov	r4, #0	@ CurrVOIdx,
	mov	ip, lr	@ ivtmp.1633, ivtmp.1615
	bne	.L405	@,
	cmp	r7, sl	@ CurrVOIdx, D.38272
	mov	r4, r7	@ CurrVOIdx, init_flag
	bcs	.L406	@,
	ldr	ip, [sp, #24]	@ ivtmp.1633, %sfp
	ldr	r1, [ip], #4	@ temp.1634, <variable>.CurrSUBSPS.view_id
	cmp	r0, r1	@ temp.1630, temp.1634
	bne	.L405	@,
	b	.L406	@
.L407:
	ldr	r7, [r1], #4	@ temp.1634, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1630, temp.1634
	beq	.L406	@,
	ldr	fp, [ip, #4]	@ temp.1634, <variable>.CurrSUBSPS.view_id
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	add	ip, r1, #4	@ ivtmp.1633, tmp271,
	cmp	r0, fp	@ temp.1630, temp.1634
	beq	.L406	@,
.L405:
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	mov	r1, ip	@ tmp271, ivtmp.1633
	cmp	r4, sl	@ CurrVOIdx, D.38272
	bcc	.L407	@,
.L406:
	ldr	r1, [sp, #36]	@, %sfp
	tst	sl, #1	@ D.38272,
	ldr	fp, [r5, r1]	@ D.38274, <variable>.CurrSlice.anchor_pic_flag
	mov	r1, #0	@ VOIdx,
	bne	.L408	@,
	mov	r1, #1	@ VOIdx,
	cmp	r1, sl	@ VOIdx, D.38272
	bcs	.L409	@,
	ldr	lr, [sp, #24]	@ ivtmp.1615, %sfp
	ldr	ip, [lr], #4	@ D.44833, <variable>.CurrSUBSPS.view_id
	cmp	r0, ip	@ temp.1630, D.44833
	bne	.L408	@,
	b	.L409	@
.L410:
	ldr	r7, [ip], #4	@ D.44833, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1630, D.44833
	beq	.L409	@,
	ldr	r7, [lr, #4]	@ D.44833, <variable>.CurrSUBSPS.view_id
	add	r1, r1, #1	@ VOIdx, VOIdx,
	add	lr, ip, #4	@ ivtmp.1615, tmp266,
	cmp	r0, r7	@ temp.1630, D.44833
	beq	.L409	@,
.L408:
	add	r1, r1, #1	@ VOIdx, VOIdx,
	mov	ip, lr	@ tmp266, ivtmp.1615
	cmp	r1, sl	@ VOIdx, D.38272
	bcc	.L410	@,
.L409:
	cmp	fp, #0	@ D.38274,
	mov	r0, r8, asl #1	@ tmp252, listidx,
	addne	r1, r0, r1	@ tmp210, tmp252, VOIdx
	addeq	r1, r0, r1	@ tmp218, tmp252, VOIdx
	movwne	ip, #:lower16:2704628	@ tmp211,
	movweq	ip, #:lower16:2704636	@ tmp219,
	movtne	ip, #:upper16:2704628	@ tmp211,
	movteq	ip, #:upper16:2704636	@ tmp219,
	add	ip, r1, ip	@ tmp219, tmp218, tmp219
	mvn	r7, #0	@ prephitmp.1593,
	add	lr, r5, ip, asl #2	@, tmp223, pMvcCtx, tmp219,
	ldr	ip, [lr, #4]	@,
	str	ip, [sp, #28]	@, %sfp
	b	.L402	@
.L395:
	ldr	ip, [sp, #48]	@, %sfp
	ldr	r0, [sp, #44]	@, %sfp
	ldr	r3, [ip, r2]	@ tmp193,* D.38234
	add	sl, r0, #1	@ tmp192,,
	ldr	r2, [sp, #56]	@, %sfp
	add	sl, sl, r3	@ picNumLXNoWrap, tmp192, tmp193
	cmp	r2, sl	@, picNumLXNoWrap
	rsble	sl, r2, sl	@ picNumLXNoWrap,, picNumLXNoWrap
	b	.L396	@
.L437:
	ldr	r1, [sp, #40]	@, %sfp
	add	lr, sp, #76	@,,
	ldr	r0, [sp, #52]	@, %sfp
	ldr	ip, [r5, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	mov	r1, r8	@, listidx
	ldr	r3, [r0, r2]	@ tmp197,* D.38234
	mov	r0, r5	@, pMvcCtx
	ldr	r2, [sp, #12]	@, %sfp
	str	lr, [sp, #0]	@,
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	bl	MVC_ReorderLTList	@
	b	.L399	@
.L440:
	ldr	r1, [sp, #56]	@, %sfp
	add	sl, sl, r1	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L396	@
.L403:
	ldr	ip, [sp, #36]	@, %sfp
	mov	r4, sl	@ CurrVOIdx, D.38272
	mov	r1, sl	@ VOIdx, CurrVOIdx
	ldr	fp, [r5, ip]	@ D.38274, <variable>.CurrSlice.anchor_pic_flag
	b	.L409	@
.L404:
	ldr	r7, [sp, #36]	@, %sfp
	mov	r4, #0	@ CurrVOIdx,
	mov	r1, r4	@ VOIdx, CurrVOIdx
	ldr	fp, [r5, r7]	@ D.38274, <variable>.CurrSlice.anchor_pic_flag
	b	.L409	@
	.fnend
	.size	MVC_ReorderRefPiclist, .-MVC_ReorderRefPiclist
	.align	2
	.global	MVC_ReorderListX
	.type	MVC_ReorderListX, %function
MVC_ReorderListX:
	.fnstart
.LFB1674:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11162624	@ tmp134,
	movt	r1, #:upper16:11162624	@ tmp134,
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmeqfd	sp!, {r4, pc}	@
	movw	ip, #:lower16:11161572	@ tmp136,
	movt	ip, #:upper16:11161572	@ tmp136,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r2, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0,
	bne	.L448	@,
.L443:
	movw	r0, #:lower16:11162624	@ tmp144,
	movt	r0, #:upper16:11162624	@ tmp144,
	movw	ip, #:lower16:11162680	@ tmp141,
	movt	ip, #:upper16:11162680	@ tmp141,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	r3, #:lower16:11162668	@ tmp140,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movt	r3, #:upper16:11162668	@ tmp140,
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	add	r0, r2, #1	@ tmp143, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	str	r0, [r4, r3]	@ tmp143, <variable>.CurrSlice.listXsize
	ldmnefd	sp!, {r4, pc}	@
	movw	r2, #:lower16:11161573	@ tmp146,
	movt	r2, #:upper16:11161573	@ tmp146,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r3, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1,
	bne	.L449	@,
.L444:
	movw	r3, #:lower16:11162684	@ tmp151,
	movt	r3, #:upper16:11162684	@ tmp151,
	movw	ip, #:lower16:11162672	@ tmp150,
	movt	ip, #:upper16:11162672	@ tmp150,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r1, r0, #1	@ tmp153, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	str	r1, [r4, ip]	@ tmp153, <variable>.CurrSlice.listXsize
	ldmfd	sp!, {r4, pc}	@
.L448:
	movw	lr, #:lower16:11162680	@ tmp138,
	movt	lr, #:upper16:11162680	@ tmp138,
	mov	r1, #0	@,
	ldr	r2, [r0, lr]	@, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L443	@
.L449:
	movw	lr, #:lower16:11162684	@ tmp148,
	movt	lr, #:upper16:11162684	@ tmp148,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, lr]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L444	@
	.fnend
	.size	MVC_ReorderListX, .-MVC_ReorderListX
	.align	2
	.global	MVC_IsSTRefFlg
	.type	MVC_IsSTRefFlg, %function
MVC_IsSTRefFlg:
	.fnstart
.LFB1675:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #65536	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	bx	lr	@
	.fnend
	.size	MVC_IsSTRefFlg, .-MVC_IsSTRefFlg
	.align	2
	.global	MVC_IsLTRefFlg
	.type	MVC_IsLTRefFlg, %function
MVC_IsLTRefFlg:
	.fnstart
.LFB1676:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #256	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	bx	lr	@
	.fnend
	.size	MVC_IsLTRefFlg, .-MVC_IsLTRefFlg
	.align	2
	.global	MVC_compare_pic_by_pic_num_desc
	.type	MVC_compare_pic_by_pic_num_desc, %function
MVC_compare_pic_by_pic_num_desc:
	.fnstart
.LFB1677:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #12]	@ D.38338, <variable>.pic_num
	ldr	r3, [r1, #12]	@ D.38341, <variable>.pic_num
	cmp	r2, r3	@ D.38338, D.38341
	movlt	r0, #1	@ D.38344,
	bxlt	lr	@
	movle	r0, #0	@ D.38344,
	mvngt	r0, #0	@ D.38344,
	bx	lr	@
	.fnend
	.size	MVC_compare_pic_by_pic_num_desc, .-MVC_compare_pic_by_pic_num_desc
	.align	2
	.global	MVC_compare_pic_by_lt_pic_num_asc
	.type	MVC_compare_pic_by_lt_pic_num_asc, %function
MVC_compare_pic_by_lt_pic_num_asc:
	.fnstart
.LFB1678:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #8]	@ D.38353, <variable>.long_term_pic_num
	ldr	r3, [r1, #8]	@ D.38356, <variable>.long_term_pic_num
	cmp	r2, r3	@ D.38353, D.38356
	mvnlt	r0, #0	@ D.38359,
	bxlt	lr	@
	movle	r0, #0	@, D.38359
	movgt	r0, #1	@, D.38359
	bx	lr	@
	.fnend
	.size	MVC_compare_pic_by_lt_pic_num_asc, .-MVC_compare_pic_by_lt_pic_num_asc
	.align	2
	.global	MVC_compare_fs_by_frame_num_desc
	.type	MVC_compare_fs_by_frame_num_desc, %function
MVC_compare_fs_by_frame_num_desc:
	.fnstart
.LFB1679:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #592]	@ D.38368, <variable>.frame_num_wrap
	ldr	r3, [r1, #592]	@ D.38371, <variable>.frame_num_wrap
	cmp	r2, r3	@ D.38368, D.38371
	movlt	r0, #1	@ D.38374,
	bxlt	lr	@
	movle	r0, #0	@ D.38374,
	mvngt	r0, #0	@ D.38374,
	bx	lr	@
	.fnend
	.size	MVC_compare_fs_by_frame_num_desc, .-MVC_compare_fs_by_frame_num_desc
	.align	2
	.global	MVC_compare_fs_by_lt_pic_idx_asc
	.type	MVC_compare_fs_by_lt_pic_idx_asc, %function
MVC_compare_fs_by_lt_pic_idx_asc:
	.fnstart
.LFB1680:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #596]	@ D.38383, <variable>.long_term_frame_idx
	ldr	r3, [r1, #596]	@ D.38386, <variable>.long_term_frame_idx
	cmp	r2, r3	@ D.38383, D.38386
	mvncc	r0, #0	@ D.38389,
	bxcc	lr	@
	movls	r0, #0	@, D.38389
	movhi	r0, #1	@, D.38389
	bx	lr	@
	.fnend
	.size	MVC_compare_fs_by_lt_pic_idx_asc, .-MVC_compare_fs_by_lt_pic_idx_asc
	.align	2
	.global	MVC_compare_pic_by_poc_asc
	.type	MVC_compare_pic_by_poc_asc, %function
MVC_compare_pic_by_poc_asc:
	.fnstart
.LFB1681:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.38398, <variable>.poc
	ldr	r3, [r1, #16]	@ D.38401, <variable>.poc
	cmp	r2, r3	@ D.38398, D.38401
	mvnlt	r0, #0	@ D.38404,
	bxlt	lr	@
	movle	r0, #0	@, D.38404
	movgt	r0, #1	@, D.38404
	bx	lr	@
	.fnend
	.size	MVC_compare_pic_by_poc_asc, .-MVC_compare_pic_by_poc_asc
	.align	2
	.global	MVC_compare_pic_by_poc_desc
	.type	MVC_compare_pic_by_poc_desc, %function
MVC_compare_pic_by_poc_desc:
	.fnstart
.LFB1682:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.38413, <variable>.poc
	ldr	r3, [r1, #16]	@ D.38416, <variable>.poc
	cmp	r2, r3	@ D.38413, D.38416
	movlt	r0, #1	@ D.38419,
	bxlt	lr	@
	movle	r0, #0	@ D.38419,
	mvngt	r0, #0	@ D.38419,
	bx	lr	@
	.fnend
	.size	MVC_compare_pic_by_poc_desc, .-MVC_compare_pic_by_poc_desc
	.align	2
	.global	MVC_compare_fs_by_poc_asc
	.type	MVC_compare_fs_by_poc_asc, %function
MVC_compare_fs_by_poc_asc:
	.fnstart
.LFB1683:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #600]	@ D.38428, <variable>.poc
	ldr	r3, [r1, #600]	@ D.38431, <variable>.poc
	cmp	r2, r3	@ D.38428, D.38431
	mvnlt	r0, #0	@ D.38434,
	bxlt	lr	@
	movle	r0, #0	@, D.38434
	movgt	r0, #1	@, D.38434
	bx	lr	@
	.fnend
	.size	MVC_compare_fs_by_poc_asc, .-MVC_compare_fs_by_poc_asc
	.align	2
	.global	MVC_compare_fs_by_poc_desc
	.type	MVC_compare_fs_by_poc_desc, %function
MVC_compare_fs_by_poc_desc:
	.fnstart
.LFB1684:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #600]	@ D.38443, <variable>.poc
	ldr	r3, [r1, #600]	@ D.38446, <variable>.poc
	cmp	r2, r3	@ D.38443, D.38446
	movlt	r0, #1	@ D.38449,
	bxlt	lr	@
	movle	r0, #0	@ D.38449,
	mvngt	r0, #0	@ D.38449,
	bx	lr	@
	.fnend
	.size	MVC_compare_fs_by_poc_desc, .-MVC_compare_fs_by_poc_desc
	.align	2
	.global	MVC_GenPiclistfromFrmlist
	.type	MVC_GenPiclistfromFrmlist, %function
MVC_GenPiclistfromFrmlist:
	.fnstart
.LFB1685:
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #20
	sub	sp, sp, #20	@,,
	cmp	r2, #31	@ list_idx,
	movcc	r4, r2	@ list_idx.2019, list_idx
	movcs	r4, #31	@ list_idx.2019,
	movw	ip, #:lower16:MVC_IsSTRefFlg	@ tmp218,
	ldr	r2, [sp, #60]	@ long_term, long_term
	movt	ip, #:upper16:MVC_IsSTRefFlg	@ tmp218,
	movw	r5, #:lower16:MVC_IsLTRefFlg	@ tmp217,
	movt	r5, #:upper16:MVC_IsLTRefFlg	@ tmp217,
	cmp	r2, #0	@ long_term,
	mov	r6, r1	@ fs_list, fs_list
	str	r3, [sp, #12]	@ list, %sfp
	moveq	r5, ip	@ is_ref, tmp218
	cmp	r0, #1	@ currStrcture,
	ldr	r9, [sp, #56]	@ list_size, list_size
	moveq	r8, #0	@ bot_idx,
	moveq	sl, r8	@ top_idx.2002, bot_idx
	beq	.L546	@,
	cmp	r0, #2	@ currStrcture,
	moveq	r8, #0	@ bot_idx.1997,
	moveq	sl, r8	@ top_idx, bot_idx.1997
	bne	.L501	@,
.L551:
	cmp	sl, r4	@ top_idx, list_idx.2019
	movcs	r0, #0	@,
	movcc	r0, #1	@,
	cmp	r8, r4	@ bot_idx.1997, list_idx.2019
	movcs	r3, #0	@, temp.1991
	movcc	r3, #1	@, temp.1991
	orrs	r2, r3, r0	@, temp.1991,
	str	r0, [sp, #8]	@, %sfp
	beq	.L501	@,
	cmp	r3, #0	@ temp.1991,
	beq	.L506	@,
	ldr	r0, [r6, r8, asl #2]	@ temp.1993,* fs_list
	mvn	r7, r8	@ tmp235, bot_idx.1997
	add	fp, r7, r4	@ tmp234, tmp235, list_idx.2019
	add	r7, r6, r8, asl #2	@, ivtmp.1978, fs_list, bot_idx.1997,
	and	fp, fp, #1	@ tmp236, tmp234,
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L561	@,
.L535:
	add	r8, r8, #1	@ bot_idx.1997, bot_idx.1997,
	add	r7, r7, #4	@ ivtmp.1978, ivtmp.1978,
	cmp	r8, r4	@ bot_idx.1997, list_idx.2019
	bcs	.L506	@,
	cmp	fp, #0	@ tmp236,
	beq	.L505	@,
	ldr	r0, [r7, #0]	@ temp.1993,* ivtmp.1978
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L562	@,
.L537:
	add	r8, r8, #1	@ bot_idx.1997, bot_idx.1997,
	add	r7, r7, #4	@ ivtmp.1978, ivtmp.1978,
	cmp	r8, r4	@ bot_idx.1997, list_idx.2019
	bcc	.L505	@,
	b	.L506	@
.L503:
	add	r7, r7, #4	@ ivtmp.1978, ivtmp.1978,
	add	r8, r8, #1	@ bot_idx.1997, bot_idx.1997,
	ldr	r0, [r7, #0]	@ temp.1993,* ivtmp.1978
	mov	r3, r8	@ tmp237, bot_idx.1997
	mov	fp, r7	@ tmp238, ivtmp.1978
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L563	@,
.L540:
	add	r8, r3, #1	@ bot_idx.1997, tmp237,
	add	r7, fp, #4	@ ivtmp.1978, tmp238,
	cmp	r8, r4	@ bot_idx.1997, list_idx.2019
	bcs	.L506	@,
.L505:
	ldr	r0, [r7, #0]	@ temp.1993,* ivtmp.1978
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	beq	.L503	@,
	add	r0, r0, #544	@, temp.1993,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L503	@,
.L559:
	ldr	r1, [r9, #0]	@ tmp194,* list_size
	add	r8, r8, #1	@ bot_idx.1997, bot_idx.1997,
	ldr	r0, [sp, #12]	@, %sfp
	ldr	ip, [r7, #0]	@ tmp195,* ivtmp.1978
	add	r2, ip, #544	@ tmp196, tmp195,
	str	r2, [r0, r1, asl #2]	@ tmp196,
	ldr	r3, [r9, #0]	@ tmp197,* list_size
	add	lr, r3, #1	@ tmp198, tmp197,
	str	lr, [r9, #0]	@ tmp198,* list_size
.L506:
	ldr	r3, [sp, #8]	@, %sfp
	cmp	r3, #0	@,
	beq	.L551	@,
	ldr	r0, [r6, sl, asl #2]	@ temp.2007,* fs_list
	mvn	r7, sl	@ tmp230, top_idx
	add	fp, r7, r4	@ tmp229, tmp230, list_idx.2019
	add	r7, r6, sl, asl #2	@, ivtmp.1973, fs_list, top_idx,
	and	fp, fp, #1	@ tmp231, tmp229,
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	bne	.L564	@,
.L528:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r7, r7, #4	@ ivtmp.1973, ivtmp.1973,
	cmp	sl, r4	@ top_idx, list_idx.2019
	bcs	.L551	@,
	cmp	fp, #0	@ tmp231,
	beq	.L508	@,
	ldr	r0, [r7, #0]	@ temp.2007,* ivtmp.1973
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	bne	.L565	@,
.L530:
	add	sl, sl, #1	@ top_idx, top_idx,
	add	r7, r7, #4	@ ivtmp.1973, ivtmp.1973,
	cmp	sl, r4	@ top_idx, list_idx.2019
	bcc	.L508	@,
	b	.L551	@
.L507:
	add	r7, r7, #4	@ ivtmp.1973, ivtmp.1973,
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r0, [r7, #0]	@ temp.2007,* ivtmp.1973
	mov	r3, sl	@ tmp232, top_idx
	mov	fp, r7	@ tmp233, ivtmp.1973
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	bne	.L566	@,
.L533:
	add	sl, r3, #1	@ top_idx, tmp232,
	add	r7, fp, #4	@ ivtmp.1973, tmp233,
	cmp	sl, r4	@ top_idx, list_idx.2019
	bcs	.L551	@,
.L508:
	ldr	r0, [r7, #0]	@ temp.2007,* ivtmp.1973
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	beq	.L507	@,
	add	r0, r0, #504	@, temp.2007,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L507	@,
.L558:
	ldr	r3, [r9, #0]	@ tmp203,* list_size
	add	sl, sl, #1	@ top_idx, top_idx,
	ldr	r1, [sp, #12]	@, %sfp
	ldr	ip, [r7, #0]	@ tmp204,* ivtmp.1973
	add	r2, ip, #504	@ tmp205, tmp204,
	str	r2, [r1, r3, asl #2]	@ tmp205,
	ldr	r0, [r9, #0]	@ tmp206,* list_size
	add	lr, r0, #1	@ tmp207, tmp206,
	str	lr, [r9, #0]	@ tmp207,* list_size
	b	.L551	@
.L573:
	add	r0, r0, #504	@, D.38491,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L495	@,
.L557:
	ldr	r3, [r9, #0]	@ tmp169,* list_size
	add	sl, sl, #1	@ top_idx.2002, top_idx.2002,
	ldr	lr, [sp, #12]	@, %sfp
	ldr	r2, [r7, #0]	@ tmp170,* ivtmp.1968
	add	ip, r2, #504	@ tmp171, tmp170,
	str	ip, [lr, r3, asl #2]	@ tmp171,
	ldr	r1, [r9, #0]	@ tmp172,* list_size
	add	r0, r1, #1	@ tmp173, tmp172,
	str	r0, [r9, #0]	@ tmp173,* list_size
.L498:
	ldr	r0, [sp, #8]	@, %sfp
	cmp	r0, #0	@,
	beq	.L546	@,
	ldr	r0, [r6, r8, asl #2]	@ D.38508,* fs_list
	mvn	r7, r8	@ tmp220, bot_idx
	add	fp, r7, r4	@ tmp219, tmp220, list_idx.2019
	add	r7, r6, r8, asl #2	@, ivtmp.1963, fs_list, bot_idx,
	and	fp, fp, #1	@ tmp221, tmp219,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L567	@,
.L514:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r7, r7, #4	@ ivtmp.1963, ivtmp.1963,
	cmp	r8, r4	@ bot_idx, list_idx.2019
	bcs	.L546	@,
	cmp	fp, #0	@ tmp221,
	beq	.L500	@,
	ldr	r0, [r7, #0]	@ D.38508,* ivtmp.1963
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L568	@,
.L516:
	add	r8, r8, #1	@ bot_idx, bot_idx,
	add	r7, r7, #4	@ ivtmp.1963, ivtmp.1963,
	cmp	r8, r4	@ bot_idx, list_idx.2019
	bcc	.L500	@,
	b	.L546	@
.L499:
	add	r7, r7, #4	@ ivtmp.1963, ivtmp.1963,
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r0, [r7, #0]	@ D.38508,* ivtmp.1963
	mov	r3, r8	@ tmp222, bot_idx
	mov	fp, r7	@ tmp223, ivtmp.1963
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L569	@,
.L519:
	add	r8, r3, #1	@ bot_idx, tmp222,
	add	r7, fp, #4	@ ivtmp.1963, tmp223,
	cmp	r8, r4	@ bot_idx, list_idx.2019
	bcs	.L546	@,
.L500:
	ldr	r0, [r7, #0]	@ D.38508,* ivtmp.1963
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	beq	.L499	@,
	add	r0, r0, #544	@, D.38508,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L499	@,
.L556:
	ldr	ip, [r9, #0]	@ tmp178,* list_size
	add	r8, r8, #1	@ bot_idx, bot_idx,
	ldr	r0, [sp, #12]	@, %sfp
	ldr	r3, [r7, #0]	@ tmp179,* ivtmp.1963
	add	r1, r3, #544	@ tmp180, tmp179,
	str	r1, [r0, ip, asl #2]	@ tmp180,
	ldr	r2, [r9, #0]	@ tmp181,* list_size
	add	lr, r2, #1	@ tmp182, tmp181,
	str	lr, [r9, #0]	@ tmp182,* list_size
.L546:
	cmp	r8, r4	@ bot_idx, list_idx.2019
	movcs	r0, #0	@,
	movcc	r0, #1	@,
	cmp	sl, r4	@ top_idx.2002, list_idx.2019
	movcs	r3, #0	@, D.38518
	movcc	r3, #1	@, D.38518
	orrs	r2, r0, r3	@,, D.38518
	str	r0, [sp, #8]	@, %sfp
	beq	.L501	@,
	cmp	r3, #0	@ D.38518,
	beq	.L498	@,
	ldr	r0, [r6, sl, asl #2]	@ D.38491,* fs_list
	mvn	r7, sl	@ tmp225, top_idx.2002
	add	fp, r7, r4	@ tmp224, tmp225, list_idx.2019
	add	r7, r6, sl, asl #2	@, ivtmp.1968, fs_list, top_idx.2002,
	and	fp, fp, #1	@ tmp226, tmp224,
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	bne	.L570	@,
.L521:
	add	sl, sl, #1	@ top_idx.2002, top_idx.2002,
	add	r7, r7, #4	@ ivtmp.1968, ivtmp.1968,
	cmp	sl, r4	@ top_idx.2002, list_idx.2019
	bcs	.L498	@,
	cmp	fp, #0	@ tmp226,
	beq	.L497	@,
	ldr	r0, [r7, #0]	@ D.38491,* ivtmp.1968
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L571	@,
.L523:
	add	sl, sl, #1	@ top_idx.2002, top_idx.2002,
	add	r7, r7, #4	@ ivtmp.1968, ivtmp.1968,
	cmp	sl, r4	@ top_idx.2002, list_idx.2019
	bcc	.L497	@,
	b	.L498	@
.L495:
	add	r7, r7, #4	@ ivtmp.1968, ivtmp.1968,
	add	sl, sl, #1	@ top_idx.2002, top_idx.2002,
	ldr	r0, [r7, #0]	@ D.38491,* ivtmp.1968
	mov	r3, sl	@ tmp228, top_idx.2002
	mov	fp, r7	@ tmp227, ivtmp.1968
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	bne	.L572	@,
.L526:
	add	sl, r3, #1	@ top_idx.2002, tmp228,
	add	r7, fp, #4	@ ivtmp.1968, tmp227,
	cmp	sl, r4	@ top_idx.2002, list_idx.2019
	bcs	.L498	@,
.L497:
	ldr	r0, [r7, #0]	@ D.38491,* ivtmp.1968
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	bne	.L573	@,
	add	r7, r7, #4	@ ivtmp.1968, ivtmp.1968,
	add	sl, sl, #1	@ top_idx.2002, top_idx.2002,
	ldr	r0, [r7, #0]	@ D.38491,* ivtmp.1968
	mov	r3, sl	@ tmp228, top_idx.2002
	mov	fp, r7	@ tmp227, ivtmp.1968
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	beq	.L526	@,
.L572:
	add	r0, r0, #504	@, D.38491,
	str	sl, [sp, #4]	@ tmp3,
	blx	r5	@ is_ref
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L526	@,
	b	.L557	@
.L501:
	mov	r0, #0	@,
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L563:
	add	r0, r0, #544	@, temp.1993,
	str	r8, [sp, #4]	@ tmp3,
	blx	r5	@ is_ref
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L540	@,
	b	.L559	@
.L566:
	add	r0, r0, #504	@, temp.2007,
	str	sl, [sp, #4]	@ tmp3,
	blx	r5	@ is_ref
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L533	@,
	b	.L558	@
.L569:
	add	r0, r0, #544	@, D.38508,
	str	r8, [sp, #4]	@ tmp3,
	blx	r5	@ is_ref
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L519	@,
	b	.L556	@
.L561:
	add	r0, r0, #544	@, temp.1993,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L535	@,
	b	.L559	@
.L564:
	add	r0, r0, #504	@, temp.2007,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L528	@,
	b	.L558	@
.L562:
	add	r0, r0, #544	@, temp.1993,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L537	@,
	b	.L559	@
.L565:
	add	r0, r0, #504	@, temp.2007,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L530	@,
	b	.L558	@
.L567:
	add	r0, r0, #544	@, D.38508,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L514	@,
	b	.L556	@
.L570:
	add	r0, r0, #504	@, D.38491,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L521	@,
	b	.L557	@
.L571:
	add	r0, r0, #504	@, D.38491,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L523	@,
	b	.L557	@
.L568:
	add	r0, r0, #544	@, D.38508,
	blx	r5	@ is_ref
	cmp	r0, #0	@,
	beq	.L516	@,
	b	.L556	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist, .-MVC_GenPiclistfromFrmlist
	.align	2
	.global	MVC_GetBaseViewId
	.type	MVC_GetBaseViewId, %function
MVC_GetBaseViewId:
	.fnstart
.LFB1686:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	add	r3, r0, #17408	@ ivtmp.2051, pMvcCtx,
	mov	ip, #0	@ i,
	str	r4, [sp, #-4]!	@,
	.save {r4}
	add	r3, r3, #188	@ ivtmp.2051, ivtmp.2051,
	b	.L577	@
.L575:
	ldr	r3, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	ip, ip, #1	@ i, i,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r3, ip	@ tmp156, i
	beq	.L580	@,
	ldr	r1, [r4, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L583	@,
.L580:
	add	ip, r3, #1	@ i, tmp156,
	movw	r3, #:lower16:337528	@ ivtmp.2051,
	cmp	ip, #32	@ i,
	movt	r3, #:upper16:337528	@ ivtmp.2051,
	add	r3, r2, r3	@ ivtmp.2051, ivtmp.2051, ivtmp.2051
	beq	.L585	@,
.L577:
	movw	r1, #:lower16:333528	@ tmp144,
	movw	r2, #:lower16:337528	@ ivtmp.2051,
	movt	r1, #:upper16:333528	@ tmp144,
	movt	r2, #:upper16:337528	@ ivtmp.2051,
	add	r4, r3, #667648	@ tmp159, ivtmp.2051,
	add	r1, r3, r1	@ tmp144, ivtmp.2051, tmp144
	add	r2, r3, r2	@ ivtmp.2051, ivtmp.2051, ivtmp.2051
	ldr	r3, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r4, r4, #3408	@ tmp159, tmp159,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	beq	.L575	@,
	ldr	r3, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L575	@,
.L583:
	movw	r1, #:lower16:337528	@ tmp149,
	movt	r1, #:upper16:337528	@ tmp149,
	mla	r2, r1, ip, r0	@ tmp150, tmp149, i, pMvcCtx
	movw	ip, #17600	@ tmp147,
	ldr	r0, [r2, ip]	@ baseviewid, <variable>.view_id
.L576:
	ldmfd	sp!, {r4}
	bx	lr
.L585:
	mvn	r0, #0	@ baseviewid,
	b	.L576	@
	.fnend
	.size	MVC_GetBaseViewId, .-MVC_GetBaseViewId
	.align	2
	.global	MVC_GetVOIdx
	.type	MVC_GetVOIdx, %function
MVC_GetVOIdx:
	.fnstart
.LFB1687:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r1, #0	@ num_views
	mov	r3, r0	@ ref_view_id, ref_view_id
	beq	.L587	@,
	ldr	r0, [r0, #0]	@ tmp139,* ref_view_id
	cmp	r0, r2	@ tmp139, CurrViewId
	beq	.L587	@,
	tst	r1, #1	@ num_views,
	mov	r0, #0	@ i,
	bne	.L588	@,
	ldr	ip, [r3, #4]	@ tmp148,
	mov	r0, #1	@ i,
	cmp	ip, r2	@ tmp148, CurrViewId
	bxeq	lr	@
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcs	.L597	@,
.L590:
	ldr	ip, [r3, r0, asl #2]	@ tmp141,* ref_view_id
	cmp	ip, r2	@ tmp141, CurrViewId
	beq	.L598	@,
	add	r0, r0, #1	@ i, i,
	ldr	ip, [r3, r0, asl #2]	@ tmp150,* ref_view_id
	cmp	ip, r2	@ tmp150, CurrViewId
	beq	.L599	@,
.L588:
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcc	.L590	@,
.L597:
	bx	lr	@
.L598:
	bx	lr	@
.L599:
	bx	lr	@
.L587:
	mov	r0, #0	@ i,
	bx	lr	@
	.fnend
	.size	MVC_GetVOIdx, .-MVC_GetVOIdx
	.align	2
	.global	MVC_is_view_id_in_ref_view_list
	.type	MVC_is_view_id_in_ref_view_list, %function
MVC_is_view_id_in_ref_view_list:
	.fnstart
.LFB1688:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r2, #0	@ num_ref_views
	str	r4, [sp, #-4]!	@,
	.save {r4}
	beq	.L601	@,
	ldr	r3, [r1, #0]	@ tmp139,* ref_view_id
	cmp	r3, r0	@ tmp139, view_id
	beq	.L601	@,
	tst	r2, #1	@ num_ref_views,
	mov	ip, #0	@ i,
	bne	.L602	@,
	ldr	r4, [r1, #4]	@ tmp153,
	mov	ip, #1	@ i,
	mov	r3, ip	@ i.613, i
	cmp	r4, r0	@ tmp153, view_id
	bne	.L602	@,
.L603:
	cmp	r2, #0	@ num_ref_views,
	cmpne	r2, r3	@, num_ref_views, i.613
	movls	r0, #0	@,
	movhi	r0, #1	@,
	ldmfd	sp!, {r4}
	bx	lr
.L604:
	ldr	r4, [r1, r3, asl #2]	@ tmp141,* ref_view_id
	cmp	r4, r0	@ tmp141, view_id
	beq	.L603	@,
	ldr	r4, [r1, ip, asl #2]	@ tmp155,* ref_view_id
	mov	r3, ip	@ i.613, i
	cmp	r4, r0	@ tmp155, view_id
	beq	.L603	@,
.L602:
	add	r3, ip, #1	@ i.613, i,
	cmp	r2, r3	@ num_ref_views, i.613
	add	ip, r3, #1	@ i, i.613,
	bhi	.L604	@,
	b	.L603	@
.L601:
	mov	r3, #0	@ i.613,
	b	.L603	@
	.fnend
	.size	MVC_is_view_id_in_ref_view_list, .-MVC_is_view_id_in_ref_view_list
	.align	2
	.global	MVC_GenPiclistfromFrmlist_Interview
	.type	MVC_GenPiclistfromFrmlist_Interview, %function
MVC_GenPiclistfromFrmlist_Interview:
	.fnstart
.LFB1689:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r0, #1	@ currStrcture,
	stmfd	sp!, {r4, r5, r6, r7}	@,
	.save {r4, r5, r6, r7}
	ldr	ip, [sp, #16]	@ list_size, list_size
	beq	.L629	@,
	cmp	r0, #2	@ currStrcture,
	bne	.L616	@,
	cmp	r2, #0	@ list_idx,
	beq	.L616	@,
	ldr	r4, [ip, #0]	@ prephitmp.2134,* list_size
	add	r5, r1, #544	@ tmp146, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r6, r2, #1	@ tmp153, list_idx,
	and	r7, r6, #1	@ tmp155, tmp153,
	mov	r6, #1	@ i.2159,
	str	r5, [r3, r4, asl #2]	@ tmp146,* list
	add	r4, r1, #672	@ ivtmp.2154, fs_list,
	ldr	r5, [ip, #0]	@ tmp147,* list_size
	add	r5, r5, r6	@ prephitmp.2134, tmp147,
	str	r5, [ip, #0]	@ prephitmp.2134,* list_size
	bls	.L616	@,
	cmp	r7, #0	@ tmp155,
	beq	.L615	@,
	add	r4, r1, #1216	@ tmp180, fs_list,
	mov	r6, r0	@ i.2159, currStrcture
	str	r4, [r3, r5, asl #2]	@ tmp180,* list
	cmp	r2, r0	@ list_idx, i.2159
	ldr	r0, [ip, #0]	@ tmp181,* list_size
	add	r4, r1, #1344	@ ivtmp.2154, fs_list,
	add	r5, r0, #1	@ prephitmp.2134, tmp181,
	str	r5, [ip, #0]	@ prephitmp.2134,* list_size
	bls	.L616	@,
.L615:
	add	r1, r4, #544	@ tmp171, ivtmp.2154,
	str	r1, [r3, r5, asl #2]	@ tmp171,* list
	ldr	r0, [ip, #0]	@ tmp172,* list_size
	add	r6, r6, #2	@ i.2159, i.2159,
	add	r5, r4, #1216	@ tmp176, ivtmp.2154,
	cmp	r2, r6	@ list_idx, i.2159
	add	r1, r0, #1	@ prephitmp.2134, tmp172,
	str	r1, [ip, #0]	@ prephitmp.2134,* list_size
	add	r4, r4, #1344	@ ivtmp.2154, ivtmp.2154,
	str	r5, [r3, r1, asl #2]	@ tmp176,* list
	ldr	r0, [ip, #0]	@ tmp177,* list_size
	add	r5, r0, #1	@ prephitmp.2134, tmp177,
	str	r5, [ip, #0]	@ prephitmp.2134,* list_size
	bhi	.L615	@,
.L616:
	ldmfd	sp!, {r4, r5, r6, r7}
	bx	lr
.L629:
	cmp	r2, #0	@ list_idx,
	beq	.L616	@,
	ldr	r4, [ip, #0]	@ prephitmp.2160,* list_size
	add	r5, r1, #504	@ tmp144, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r6, r2, #1	@ tmp148, list_idx,
	and	r6, r6, #1	@ tmp150, tmp148,
	str	r5, [r3, r4, asl #2]	@ tmp144,* list
	add	r4, r1, #672	@ ivtmp.2150, fs_list,
	ldr	r5, [ip, #0]	@ tmp145,* list_size
	add	r5, r5, #1	@ prephitmp.2160, tmp145,
	str	r5, [ip, #0]	@ prephitmp.2160,* list_size
	bls	.L616	@,
	cmp	r6, #0	@ tmp150,
	beq	.L614	@,
	add	r4, r4, #504	@ tmp178, ivtmp.2150,
	mov	r0, #2	@ i,
	str	r4, [r3, r5, asl #2]	@ tmp178,* list
	cmp	r2, r0	@ list_idx, i
	ldr	r5, [ip, #0]	@ tmp179,* list_size
	add	r4, r1, #1344	@ ivtmp.2150, fs_list,
	add	r5, r5, #1	@ prephitmp.2160, tmp179,
	str	r5, [ip, #0]	@ prephitmp.2160,* list_size
	bls	.L616	@,
.L614:
	add	r1, r4, #504	@ tmp161, ivtmp.2150,
	str	r1, [r3, r5, asl #2]	@ tmp161,* list
	ldr	r5, [ip, #0]	@ tmp162,* list_size
	add	r1, r4, #1168	@ tmp166, ivtmp.2150,
	add	r0, r0, #2	@ i, i,
	add	r1, r1, #8	@ tmp166, tmp166,
	add	r5, r5, #1	@ prephitmp.2160, tmp162,
	cmp	r2, r0	@ list_idx, i
	str	r5, [ip, #0]	@ prephitmp.2160,* list_size
	add	r4, r4, #1344	@ ivtmp.2150, ivtmp.2150,
	str	r1, [r3, r5, asl #2]	@ tmp166,* list
	ldr	r1, [ip, #0]	@ tmp167,* list_size
	add	r5, r1, #1	@ prephitmp.2160, tmp167,
	str	r5, [ip, #0]	@ prephitmp.2160,* list_size
	bhi	.L614	@,
	b	.L616	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist_Interview, .-MVC_GenPiclistfromFrmlist_Interview
	.align	2
	.global	MVC_FindNearestPOCPicId
	.type	MVC_FindNearestPOCPicId, %function
MVC_FindNearestPOCPicId:
	.fnstart
.LFB1693:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r1, #:lower16:11168616	@ tmp143,
	movt	r1, #:upper16:11168616	@ tmp143,
	stmfd	sp!, {r4, r5, r6, r7, r8}	@,
	.save {r4, r5, r6, r7, r8}
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	r6, #0	@ nearest_pic_id,
	beq	.L632	@,
	movw	r2, #:lower16:11168612	@ tmp146,
	movt	r2, #:upper16:11168612	@ tmp146,
	movw	ip, #:lower16:11196660	@ tmp145,
	movt	ip, #:upper16:11196660	@ tmp145,
	ldr	r5, [r0, r2]	@ D.38973, <variable>.DPB.size
	ldr	r4, [r0, ip]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r5, #0	@ D.38973,
	moveq	r6, r5	@ nearest_pic_id, D.38973
	beq	.L632	@,
	movw	r1, #:lower16:11168420	@ tmp148,
	movt	r1, #:upper16:11168420	@ tmp148,
	add	r3, r0, r1	@ tmp148, pMvcCtx, tmp148
	mov	r5, r5, asl #2	@ D.46366, D.38973,
	sub	r6, r5, #4	@ tmp157, D.46366,
	mvn	ip, #-2147483648	@ nearest_poc_diff,
	ldr	r3, [r3, #0]	@ D.38965, <variable>.DPB.fs
	ubfx	r1, r6, #2, #1	@ tmp158, tmp157,,
	mov	r6, #0	@ nearest_pic_id,
	cmp	r3, r6	@ D.38965,
	beq	.L638	@,
	ldr	r2, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp171, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp171,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp171
	cmn	r2, #-2147483647	@ new_poc_diff,
	ldrlt	r6, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L638:
	mov	r3, #4	@ ivtmp.2189,
	cmp	r3, r5	@ ivtmp.2189, D.46366
	beq	.L632	@,
	cmp	r1, #0	@ tmp158,
	beq	.L635	@,
	movw	r2, #:lower16:11168424	@ tmp175,
	movt	r2, #:upper16:11168424	@ tmp175,
	add	r1, r0, r2	@ tmp175, pMvcCtx, tmp175
	ldr	r2, [r1, #0]	@ D.38965, <variable>.DPB.fs
	cmp	r2, #0	@ D.38965,
	beq	.L640	@,
	ldr	r1, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, r4	@ tmp178, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp178,
	rsblt	r1, r1, #0	@ new_poc_diff, tmp178
	cmp	r1, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r1	@ nearest_poc_diff, new_poc_diff
.L640:
	add	r3, r3, #4	@ ivtmp.2189, ivtmp.2189,
	cmp	r3, r5	@ ivtmp.2189, D.46366
	beq	.L632	@,
.L635:
	movw	r2, #:lower16:11168420	@ tmp163,
	movt	r2, #:upper16:11168420	@ tmp163,
	add	r8, r0, r3	@ tmp161, pMvcCtx, ivtmp.2189
	add	r1, r3, #4	@ tmp159, ivtmp.2189,
	mov	r3, r2	@ tmp168, tmp163
	add	r2, r8, r2	@ tmp163, tmp161, tmp163
	add	r7, r0, r1	@ tmp166, pMvcCtx, tmp159
	ldr	r2, [r2, #0]	@ D.38965, <variable>.DPB.fs
	add	r3, r7, r3	@ tmp168, tmp166, tmp168
	cmp	r2, #0	@ D.38965,
	beq	.L634	@,
	ldr	r7, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r7, r7, r4	@ tmp150, <variable>.poc, curr_poc
	cmp	r7, #0	@ tmp150,
	rsblt	r7, r7, #0	@ new_poc_diff, tmp150
	cmp	r7, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r7	@ nearest_poc_diff, new_poc_diff
.L634:
	ldr	r3, [r3, #0]	@ D.38965, <variable>.DPB.fs
	cmp	r3, #0	@ D.38965,
	beq	.L643	@,
	ldr	r2, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp181, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp181,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp181
	cmp	r2, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L643:
	add	r3, r1, #4	@ ivtmp.2189, tmp159,
	cmp	r3, r5	@ ivtmp.2189, D.46366
	bne	.L635	@,
.L632:
	mov	r0, r6	@, nearest_pic_id
	ldmfd	sp!, {r4, r5, r6, r7, r8}
	bx	lr
	.fnend
	.size	MVC_FindNearestPOCPicId, .-MVC_FindNearestPOCPicId
	.align	2
	.global	MVC_FindMinRefIdx
	.type	MVC_FindMinRefIdx, %function
MVC_FindMinRefIdx:
	.fnstart
.LFB1694:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r1, #:lower16:11162624	@ tmp154,
	movt	r1, #:upper16:11162624	@ tmp154,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp}
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r9, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L661	@,
	movw	r2, #:lower16:11196171	@ tmp156,
	movt	r2, #:upper16:11196171	@ tmp156,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r0, #0	@ <variable>.CurrPic.structure,
	bne	.L690	@,
	movw	ip, #:lower16:11162668	@ tmp160,
	movt	ip, #:upper16:11162668	@ tmp160,
	add	fp, r9, #11141120	@ ivtmp.2232, pMvcCtx,
	movw	r6, #:lower16:11168896	@ ivtmp.2240,
	add	r8, fp, #27904	@ ivtmp.2232, ivtmp.2232,
	movt	r6, #:upper16:11168896	@ ivtmp.2240,
	ldr	fp, [r9, ip]	@ D.39006, <variable>.CurrSlice.listXsize
	add	r6, r9, r6	@ ivtmp.2240, pMvcCtx, ivtmp.2240
	mov	sl, ip	@ tmp180, tmp160
.L652:
	cmp	fp, #0	@ D.39006,
	beq	.L656	@,
	ldr	r2, [r8, #0]	@ tmp205, <variable>.pListX
	mov	r1, #32	@ minrefidx,
	ldr	r7, [r9, sl]	@ temp.2258, <variable>.CurrSlice.listXsize
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	ip, r7, #1	@ tmp188, temp.2258,
	and	ip, ip, #1	@ tmp190, tmp188,
	ldr	r2, [r3, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r2, r0	@ <variable>.apc_idc, i
	beq	.L691	@,
.L664:
	mov	r2, #1	@ j,
	cmp	r7, r2	@ temp.2258, j
	add	r3, r8, #4	@ ivtmp.2232, ivtmp.2232,
	bls	.L684	@,
	cmp	ip, #0	@ tmp190,
	beq	.L654	@,
	ldr	ip, [r8, #4]	@ tmp226, <variable>.pListX
	ldr	ip, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	ip, r0	@ <variable>.apc_idc, i
	beq	.L692	@,
.L666:
	add	r2, r2, #1	@ j, j,
	add	r3, r3, #4	@ ivtmp.2232, ivtmp.2232,
	cmp	r7, r2	@ temp.2258, j
	bhi	.L654	@,
	b	.L684	@
.L653:
	ldr	r3, [r3, #4]	@ tmp200, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	beq	.L693	@,
.L669:
	add	r2, ip, #1	@ j, tmp191,
	add	r3, r4, #4	@ ivtmp.2232, tmp192,
	cmp	r7, r2	@ temp.2258, j
	bls	.L684	@,
.L654:
	ldr	r5, [r3, #0]	@ tmp162, <variable>.pListX
	add	ip, r2, #1	@ tmp191, j,
	add	r4, r3, #4	@ tmp192, ivtmp.2232,
	ldr	r5, [r5, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [r5, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r5, r0	@ <variable>.apc_idc, i
	bne	.L653	@,
	ldr	r3, [r3, #4]	@ tmp200, <variable>.pListX
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	bne	.L669	@,
.L693:
	add	r2, ip, #1	@ j, tmp191,
	cmp	r1, ip	@ minrefidx, tmp191
	movcs	r1, ip	@ minrefidx, tmp191
	cmp	r7, r2	@ temp.2258, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.2232, tmp192,
	bhi	.L654	@,
.L684:
	cmp	r1, #31	@ minrefidx,
	bls	.L655	@,
.L656:
	mov	r1, #0	@,
	str	r1, [r6, #0]	@, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@, <variable>.APC.RefIdx
.L655:
	add	r0, r0, #1	@ i, i,
	add	r6, r6, #8	@ ivtmp.2240, ivtmp.2240,
	cmp	r0, #16	@ i,
	bne	.L652	@,
.L661:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	bx	lr
.L690:
	movw	r0, #:lower16:11162668	@ tmp158,
	movt	r0, #:upper16:11162668	@ tmp158,
	movw	r8, #:lower16:11168896	@ ivtmp.2254,
	add	sl, r9, #11141120	@ ivtmp.2246, pMvcCtx,
	movt	r8, #:upper16:11168896	@ ivtmp.2254,
	ldr	fp, [r9, r0]	@ temp.2260, <variable>.CurrSlice.listXsize
	add	r8, r9, r8	@ ivtmp.2254, pMvcCtx, ivtmp.2254
	add	sl, sl, #27904	@ ivtmp.2246, ivtmp.2246,
	mov	ip, #0	@ i.2265,
.L651:
	cmp	fp, #0	@ temp.2260,
	beq	.L660	@,
	ldr	r3, [sl, #0]	@ temp.2261, <variable>.pListX
	movw	r2, #:lower16:11162668	@,
	movt	r2, #:upper16:11162668	@,
	mov	r6, #32	@ minrefidx.2257,
	ldr	r0, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r9, r2]	@ temp.2259, <variable>.CurrSlice.listXsize
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [r0, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	sub	r1, r7, #1	@ tmp193, temp.2259,
	and	r1, r1, #1	@ tmp195, tmp193,
	mov	r3, r3, asl #1	@ tmp224, <variable>.apc_idc,
	cmp	r2, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp225, tmp224
	cmp	r3, ip	@ tmp225, i.2265
	beq	.L694	@,
.L671:
	mov	r2, #1	@ j.2264,
	cmp	r7, r2	@ temp.2259, j.2264
	add	r3, sl, #4	@ ivtmp.2246, ivtmp.2246,
	bls	.L685	@,
	cmp	r1, #0	@ tmp195,
	beq	.L658	@,
	ldr	r1, [sl, #4]	@ temp.2261, <variable>.pListX
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r0, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r1, [r4, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r1, r1, asl r2	@ tmp234, <variable>.apc_idc,
	cmp	r0, #2	@ <variable>.structure,
	orreq	r1, r1, #1	@,, tmp235, tmp234
	cmp	r1, ip	@ tmp235, i.2265
	beq	.L695	@,
.L673:
	add	r2, r2, #1	@ j.2264, j.2264,
	add	r3, r3, #4	@ ivtmp.2246, ivtmp.2246,
	cmp	r7, r2	@ temp.2259, j.2264
	bhi	.L658	@,
	b	.L685	@
.L657:
	ldr	r3, [r3, #4]	@ temp.2261, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [r1, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp215, <variable>.apc_idc,
	cmp	r2, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp216, tmp215
	cmp	r3, ip	@ tmp216, i.2265
	beq	.L696	@,
	add	r2, r0, #1	@ j.2264, tmp196,
	add	r3, r4, #4	@ ivtmp.2246, tmp197,
	cmp	r7, r2	@ temp.2259, j.2264
	bls	.L685	@,
.L658:
	ldr	r1, [r3, #0]	@ temp.2261, <variable>.pListX
	add	r0, r2, #1	@ tmp196, j.2264,
	add	r4, r3, #4	@ tmp197, ivtmp.2246,
	ldr	r5, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r5, [r5, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r5, r5, asl #1	@ tmp173, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	movne	r1, r5	@, tmp175, tmp173
	orreq	r1, r5, #1	@,, tmp175, tmp173
	cmp	r1, ip	@ tmp175, i.2265
	bne	.L657	@,
	cmp	r6, r2	@ minrefidx.2257, j.2264
	movcs	r6, r2	@ minrefidx.2257, j.2264
	str	r6, [r8, #0]	@ minrefidx.2257, <variable>.APC.RefIdx
	b	.L657	@
.L696:
	add	r2, r0, #1	@ j.2264, tmp196,
	cmp	r6, r0	@ minrefidx.2257, tmp196
	movcs	r6, r0	@ minrefidx.2257, tmp196
	cmp	r7, r2	@ temp.2259, j.2264
	str	r6, [r8, #0]	@ minrefidx.2257, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.2246, tmp197,
	bhi	.L658	@,
.L685:
	cmp	r6, #31	@ minrefidx.2257,
	bls	.L659	@,
.L660:
	mov	r0, #0	@,
	str	r0, [r8, #0]	@, <variable>.APC.RefIdx
.L659:
	add	ip, ip, #1	@ i.2265, i.2265,
	add	r8, r8, #4	@ ivtmp.2254, ivtmp.2254,
	cmp	ip, #32	@ i.2265,
	bne	.L651	@,
	b	.L661	@
.L694:
	mov	r6, #0	@ minrefidx.2257,
	str	r6, [r8, #0]	@ minrefidx.2257, <variable>.APC.RefIdx
	b	.L671	@
.L695:
	cmp	r6, r2	@ minrefidx.2257, j.2264
	movcs	r6, r2	@ minrefidx.2257, j.2264
	str	r6, [r8, #0]	@ minrefidx.2257, <variable>.APC.RefIdx
	b	.L673	@
.L691:
	mov	r1, #0	@ minrefidx,
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L664	@
.L692:
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L666	@
	.fnend
	.size	MVC_FindMinRefIdx, .-MVC_FindMinRefIdx
	.align	2
	.global	MVC_NoPicOut
	.type	MVC_NoPicOut, %function
MVC_NoPicOut:
	.fnstart
.LFB1696:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11197996	@ tmp167,
	movt	r3, #:upper16:11197996	@ tmp167,
	stmfd	sp!, {r4, r5}	@,
	.save {r4, r5}
	ldr	r5, [r0, r3]	@ D.39057, <variable>.TotalFsNum
	cmp	r5, #0	@ D.39057,
	beq	.L698	@,
	movw	r4, #:lower16:11169900	@ ivtmp.2297,
	movt	r4, #:upper16:11169900	@ ivtmp.2297,
	add	r3, r0, r4	@ ivtmp.2297, pMvcCtx, ivtmp.2297
	sub	r1, r5, #1	@ tmp185, D.39057,
	and	r4, r1, #1	@ tmp187, tmp185,
	mov	ip, #0	@ tmp179,
	ldr	r2, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, #1	@ <variable>.is_displayed,
	beq	.L711	@,
	ldrb	r1, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #1	@ <variable>.is_in_dpb,
	beq	.L711	@,
.L712:
	mov	r1, #1	@ i,
	cmp	r1, r5	@ i, D.39057
	add	r3, r3, #672	@ ivtmp.2297, ivtmp.2297,
	bcs	.L698	@,
	cmp	r4, #0	@ tmp187,
	beq	.L701	@,
	ldr	r2, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, r1	@ <variable>.is_displayed,
	beq	.L714	@,
	ldrb	r2, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #1	@ <variable>.is_in_dpb,
	beq	.L714	@,
	add	r1, r1, #1	@ i, i,
	add	r3, r3, #672	@ ivtmp.2297, ivtmp.2297,
	cmp	r1, r5	@ i, D.39057
	bcc	.L701	@,
.L698:
	movw	r2, #:lower16:11198000	@ tmp175,
	movt	r2, #:upper16:11198000	@ tmp175,
	ldr	ip, [r0, r2]	@ D.39058, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.39058,
	beq	.L704	@,
	movw	r1, #:lower16:11197924	@ ivtmp.2292,
	movt	r1, #:upper16:11197924	@ ivtmp.2292,
	add	r3, r0, r1	@ ivtmp.2292, pMvcCtx, ivtmp.2292
	mov	r1, #1	@ i.2303,
	cmp	r1, ip	@ i.2303, D.39058
	sub	r0, ip, #1	@ tmp180, D.39058,
	and	r2, r0, r1	@ tmp182, tmp180,
	mov	r0, #0	@ tmp178,
	str	r0, [r3], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	bcs	.L704	@,
	cmp	r2, #0	@ tmp182,
	beq	.L703	@,
	mov	r1, #2	@ i.2303,
	cmp	r1, ip	@ i.2303, D.39058
	str	r0, [r3], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	bcs	.L704	@,
.L703:
	add	r1, r1, #2	@ i.2303, i.2303,
	mov	r2, r3	@ tmp184, ivtmp.2292
	cmp	r1, ip	@ i.2303, D.39058
	str	r0, [r2], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	str	r0, [r3, #4]	@ tmp178, <variable>.PmvStoreUsedFlag
	add	r3, r2, #4	@ ivtmp.2292, tmp184,
	bcc	.L703	@,
.L704:
	ldmfd	sp!, {r4, r5}
	bx	lr
.L726:
	ldrb	r4, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r4, #1	@ <variable>.is_in_dpb,
	beq	.L699	@,
	ldr	r3, [r3, #672]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	beq	.L718	@,
.L724:
	ldrb	r3, [r2, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r3, #1	@ <variable>.is_in_dpb,
	beq	.L718	@,
.L719:
	add	r1, r1, #1	@ i, tmp189,
	add	r3, r2, #672	@ ivtmp.2297, tmp188,
	cmp	r1, r5	@ i, D.39057
	bcs	.L698	@,
.L701:
	ldr	r4, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	add	r1, r1, #1	@ tmp189, i,
	add	r2, r3, #672	@ tmp188, ivtmp.2297,
	cmp	r4, #1	@ <variable>.is_displayed,
	bne	.L726	@,
.L699:
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	ldr	r3, [r3, #672]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	bne	.L724	@,
.L718:
	strb	ip, [r2, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r2, #-610]	@ tmp179, <variable>.is_reference
	b	.L719	@
.L714:
	add	r1, r1, #1	@ i, i,
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	cmp	r1, r5	@ i, D.39057
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	add	r3, r3, #672	@ ivtmp.2297, ivtmp.2297,
	bcc	.L701	@,
	b	.L698	@
.L711:
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	b	.L712	@
	.fnend
	.size	MVC_NoPicOut, .-MVC_NoPicOut
	.align	2
	.global	mvc_wait_vo
	.type	mvc_wait_vo, %function
mvc_wait_vo:
	.fnstart
.LFB1699:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	bx	lr	@
	.fnend
	.size	mvc_wait_vo, .-mvc_wait_vo
	.align	2
	.global	MVC_RoundLog2
	.type	MVC_RoundLog2, %function
MVC_RoundLog2:
	.fnstart
.LFB1700:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	mul	r0, r0, r0	@ iValue_square, iValue, iValue
	mov	r3, #0	@ iRet,
	mov	r2, #1	@ tmp140,
.L730:
	add	r3, r3, #1	@ iRet, iRet,
	cmp	r0, r2, asl r3	@ iValue_square, tmp140,
	bge	.L730	@,
	mov	r0, r3, asr #1	@, iRet,
	bx	lr	@
	.fnend
	.size	MVC_RoundLog2, .-MVC_RoundLog2
	.global	__aeabi_uidiv
	.global	__aeabi_uidivmod
	.align	2
	.global	MVC_DecPOC
	.type	MVC_DecPOC, %function
MVC_DecPOC:
	.fnstart
.LFB1702:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11152036	@ tmp172,
	movt	r3, #:upper16:11152036	@ tmp172,
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	ldr	r5, [r0, r3]	@ sps, <variable>.pCurrSPS
	movw	ip, #:lower16:11162627	@ tmp169,
	movt	ip, #:upper16:11162627	@ tmp169,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r1, #1	@ tmp175,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r3, [r5, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r5, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	r2, #0	@, tmp171
	moveq	r2, #1	@, tmp171
	cmp	r3, r1	@ <variable>.pic_order_cnt_type,
	ldr	ip, [r5, #2904]	@ D.39287, <variable>.log2_max_pic_order_cnt_lsb_minus4
	add	r0, r0, #4	@ tmp173, <variable>.log2_max_frame_num_minus4,
	mov	r0, r1, asl r0	@ MaxFrameNum, tmp175,
	beq	.L736	@,
	bcs	.L789	@,
	cmp	r2, #0	@ tmp171,
	add	r0, ip, #4	@ tmp177, D.39287,
	mov	r1, r1, asl r0	@ MaxPicOrderCntLsb, tmp175,
	bne	.L790	@,
	movw	ip, #:lower16:11161504	@ tmp183,
	movt	ip, #:upper16:11161504	@ tmp183,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r0, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L740	@,
	movw	r3, #:lower16:11161488	@ tmp186,
	movt	r3, #:upper16:11161488	@ tmp186,
	movw	r5, #:lower16:11161492	@ tmp185,
	movt	r5, #:upper16:11161492	@ tmp185,
	ldr	ip, [r4, r3]	@ prephitmp.2390, <variable>.CurrPOC.PrevPicOrderCntMsb
	ldr	r3, [r4, r5]	@ prephitmp.2388, <variable>.CurrPOC.PrevPicOrderCntLsb
	mov	r5, ip	@ prephitmp.2392, prephitmp.2390
.L741:
	movw	r2, #:lower16:11161480	@ tmp197,
	movt	r2, #:upper16:11161480	@ tmp197,
	ldr	r0, [r4, r2]	@ D.39310, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	r0, r3	@ D.39310, prephitmp.2388
	bcs	.L743	@,
	rsb	r2, r0, r3	@ tmp198, D.39310, prephitmp.2388
	cmp	r2, r1, lsr #1	@ tmp198, MaxPicOrderCntLsb,
	bcc	.L743	@,
	add	r1, r5, r1	@ D.39319, prephitmp.2392, MaxPicOrderCntLsb
	movw	r3, #:lower16:11161496	@ tmp201,
	movt	r3, #:upper16:11161496	@ tmp201,
	mov	r2, r1	@ prephitmp.2458, D.39319
	str	r1, [r4, r3]	@ D.39319, <variable>.CurrPOC.PicOrderCntMsb
.L746:
	movw	r3, #:lower16:11162625	@ tmp207,
	movt	r3, #:upper16:11162625	@ tmp207,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L748	@,
.L793:
	movw	r5, #:lower16:11161480	@ tmp209,
	movt	r5, #:upper16:11161480	@ tmp209,
	movw	r3, #:lower16:11161484	@ tmp212,
	movt	r3, #:upper16:11161484	@ tmp212,
	ldr	r1, [r4, r5]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movw	ip, #:lower16:11161516	@ tmp214,
	ldr	r6, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r5, #:lower16:11161512	@ tmp211,
	add	r2, r2, r1	@ D.39333, prephitmp.2458, <variable>.CurrPOC.pic_order_cnt_lsb
	movt	r5, #:upper16:11161512	@ tmp211,
	movt	ip, #:upper16:11161516	@ tmp214,
	movw	r0, #:lower16:11161520	@ tmp215,
	movw	r3, #:lower16:11161524	@ tmp216,
	movt	r0, #:upper16:11161520	@ tmp215,
	movt	r3, #:upper16:11161524	@ tmp216,
	add	r6, r2, r6	@ D.39335, D.39333, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	cmp	r6, r2	@ D.39335, D.39333
	movlt	r1, r6	@ prephitmp.2383, D.39335
	movge	r1, r2	@ prephitmp.2383, D.39333
	str	r2, [r4, r5]	@ D.39333, <variable>.CurrPOC.toppoc
	str	r6, [r4, ip]	@ D.39335, <variable>.CurrPOC.bottompoc
	str	r1, [r4, r0]	@ prephitmp.2383,
	str	r1, [r4, r3]	@ prephitmp.2383, <variable>.CurrPOC.ThisPOC
.L749:
	movw	r2, #:lower16:11161544	@ tmp228,
	movt	r2, #:upper16:11161544	@ tmp228,
	movw	r3, #:lower16:11161540	@ tmp229,
	movt	r3, #:upper16:11161540	@ tmp229,
	ldr	r0, [r4, r2]	@ D.39345, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11161520	@ tmp227,
	movt	r2, #:upper16:11161520	@ tmp227,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	str	r1, [r4, r2]	@ prephitmp.2383, <variable>.CurrPOC.framepoc
	movw	r2, #:lower16:11162656	@ tmp232,
	movt	r2, #:upper16:11162656	@ tmp232,
	cmp	r0, ip	@ D.39345, <variable>.CurrPOC.PreviousFrameNum
	strne	r0, [r4, r3]	@ D.39345, <variable>.CurrPOC.PreviousFrameNum
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	ldmeqfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	movw	r2, #:lower16:11161480	@ tmp235,
	movw	r3, #:lower16:11161496	@ tmp238,
	movt	r2, #:upper16:11161480	@ tmp235,
	movt	r3, #:upper16:11161496	@ tmp238,
	movw	ip, #:lower16:11161492	@ tmp234,
	movt	ip, #:upper16:11161492	@ tmp234,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb, <variable>.CurrPOC.PicOrderCntMsb
	movw	r3, #:lower16:11161488	@ tmp237,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movt	r3, #:upper16:11161488	@ tmp237,
	str	r0, [r4, ip]	@ <variable>.CurrPOC.pic_order_cnt_lsb,
	str	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L789:
	cmp	r3, #2	@ <variable>.pic_order_cnt_type,
	ldmnefd	sp!, {r4, r5, r6, r7, r8, pc}	@
	cmp	r2, #0	@ tmp171,
	bne	.L791	@,
	movw	r1, #:lower16:11161504	@ tmp346,
	movt	r1, #:upper16:11161504	@ tmp346,
	ldr	r3, [r4, r1]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r3, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L772	@,
	movw	r3, #:lower16:11161540	@ tmp349,
	movw	r2, #:lower16:11161544	@ tmp350,
	movt	r3, #:upper16:11161540	@ tmp349,
	movt	r2, #:upper16:11161544	@ tmp350,
	movw	ip, #:lower16:11161552	@ tmp348,
	movt	ip, #:upper16:11161552	@ tmp348,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	ldr	r2, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	cmp	r1, r2	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.frame_num
	ldr	r1, [r4, ip]	@ prephitmp.2378, <variable>.CurrPOC.PrevFrameNumOffset
	bls	.L774	@,
	movw	r2, #:lower16:11161548	@ tmp357,
	movt	r2, #:upper16:11161548	@ tmp357,
	add	r1, r1, r0	@ prephitmp.2378, prephitmp.2378, MaxFrameNum
	str	r1, [r4, r2]	@ prephitmp.2378, <variable>.CurrPOC.FrameNumOffset
.L775:
	movw	r3, #:lower16:11162656	@ tmp362,
	movt	r3, #:upper16:11162656	@ tmp362,
	movw	r2, #:lower16:11161544	@ tmp359,
	movt	r2, #:upper16:11161544	@ tmp359,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r3, #:lower16:11161536	@ tmp361,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r3, #:upper16:11161536	@ tmp361,
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movw	r0, #:lower16:11162625	@ tmp367,
	movt	r0, #:upper16:11162625	@ tmp367,
	add	r2, r1, ip	@ temp.2448, prephitmp.2378, <variable>.CurrPOC.frame_num
	str	r2, [r4, r3]	@ temp.2448, <variable>.CurrPOC.AbsFrameNum
	movw	ip, #:lower16:11161524	@ tmp365,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	mov	r2, r2, asl #1	@ tmp364, temp.2448,
	subeq	r2, r2, #1	@ prephitmp.2450, tmp364,
	movt	ip, #:upper16:11161524	@ tmp365,
	cmp	r1, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [r4, ip]	@ prephitmp.2450, <variable>.CurrPOC.ThisPOC
	bne	.L778	@,
	movw	r0, #:lower16:11161520	@ tmp369,
	movw	ip, #:lower16:11161516	@ tmp370,
	movt	r0, #:upper16:11161520	@ tmp369,
	movt	ip, #:upper16:11161516	@ tmp370,
	movw	r1, #:lower16:11161512	@ tmp371,
	movt	r1, #:upper16:11161512	@ tmp371,
	str	r2, [r4, r0]	@ prephitmp.2450, <variable>.CurrPOC.framepoc
	str	r2, [r4, r1]	@ prephitmp.2450,
	str	r2, [r4, ip]	@ prephitmp.2450,
.L771:
	movw	ip, #:lower16:11161544	@ tmp379,
	movw	r1, #:lower16:11161548	@ tmp382,
	movt	ip, #:upper16:11161544	@ tmp379,
	movt	r1, #:upper16:11161548	@ tmp382,
	movw	r2, #:lower16:11161540	@ tmp378,
	movw	r3, #:lower16:11161552	@ tmp381,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r2, #:upper16:11161540	@ tmp378,
	ldr	ip, [r4, r1]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r3, #:upper16:11161552	@ tmp381,
	str	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num,
	str	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L736:
	cmp	r2, #0	@ tmp171,
	bne	.L792	@,
	movw	r1, #:lower16:11161504	@ tmp242,
	movt	r1, #:upper16:11161504	@ tmp242,
	ldr	r6, [r4, r1]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r6, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L754	@,
	movw	ip, #:lower16:11161552	@ tmp244,
	movw	r0, #:lower16:11161540	@ tmp246,
	movt	ip, #:upper16:11161552	@ tmp244,
	movt	r0, #:upper16:11161540	@ tmp246,
	mov	r1, r2	@ prephitmp.2382, tmp171
	str	r2, [r4, ip]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
.L755:
	movw	r3, #:lower16:11161548	@ tmp257,
	movt	r3, #:upper16:11161548	@ tmp257,
	str	r1, [r4, r3]	@ prephitmp.2382, <variable>.CurrPOC.FrameNumOffset
.L753:
	ldr	r7, [r5, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r7, #0	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle,
	movweq	r2, #:lower16:11161536	@ tmp265,
	movteq	r2, #:upper16:11161536	@ tmp265,
	streq	r7, [r4, r2]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.CurrPOC.AbsFrameNum
	beq	.L758	@,
	movw	r0, #:lower16:11161544	@ tmp260,
	movw	ip, #:lower16:11161548	@ tmp261,
	movt	r0, #:upper16:11161544	@ tmp260,
	movt	ip, #:upper16:11161548	@ tmp261,
	movw	r6, #:lower16:11161536	@ tmp259,
	movt	r6, #:upper16:11161536	@ tmp259,
	ldr	r1, [r4, r0]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	add	r2, r1, r2	@ tmp264, <variable>.CurrPOC.frame_num, <variable>.CurrPOC.FrameNumOffset
	str	r2, [r4, r6]	@ tmp264, <variable>.CurrPOC.AbsFrameNum
.L758:
	movw	r7, #:lower16:11162656	@ tmp267,
	movt	r7, #:upper16:11162656	@ tmp267,
	ldr	r3, [r4, r7]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L759	@,
	movw	r6, #:lower16:11161536	@ tmp269,
	movt	r6, #:upper16:11161536	@ tmp269,
	ldr	r2, [r4, r6]	@ D.39371, <variable>.CurrPOC.AbsFrameNum
	cmp	r2, #0	@ D.39371,
	subne	r2, r2, #1	@ tmp271, D.39371,
	strne	r2, [r4, r6]	@ tmp271, <variable>.CurrPOC.AbsFrameNum
.L759:
	movw	ip, #:lower16:11161568	@ tmp272,
	movt	ip, #:upper16:11161568	@ tmp272,
	mov	r3, #0	@ tmp273,
	str	r3, [r4, ip]	@ tmp273, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2453, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r3	@ temp.2453,
	ble	.L760	@,
	add	r2, r5, #2912	@ ivtmp.2412, sps,
	add	r0, r2, #8	@ ivtmp.2412, ivtmp.2412,
	mov	r2, r3	@ i, prephitmp.2379
.L761:
	ldr	r1, [r0], #4	@ tmp275, <variable>.offset_for_ref_frame
	add	r2, r2, #1	@ i, i,
	add	r3, r3, r1	@ prephitmp.2379, prephitmp.2379, tmp275
	str	r3, [r4, ip]	@ prephitmp.2379, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2453, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r2	@ temp.2453, i
	bgt	.L761	@,
.L760:
	movw	ip, #:lower16:11161536	@ tmp277,
	movt	ip, #:upper16:11161536	@ tmp277,
	ldr	r7, [r4, ip]	@ temp.2427, <variable>.CurrPOC.AbsFrameNum
	cmp	r7, #0	@ temp.2427,
	beq	.L762	@,
	sub	r7, r7, #1	@ tmp278, temp.2427,
	mov	r0, r7	@, tmp278
	bl	__aeabi_uidiv	@
	movw	r2, #:lower16:11161560	@ tmp282,
	movt	r2, #:upper16:11161560	@ tmp282,
	mov	r6, r0	@ tmp281,
	mov	r0, r7	@, tmp278
	str	r6, [r4, r2]	@ tmp281, <variable>.CurrPOC.PicOrderCntCycleCnt
	ldr	r1, [r5, #2916]	@, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bl	__aeabi_uidivmod	@
	movw	r3, #:lower16:11161568	@ tmp292,
	movt	r3, #:upper16:11161568	@ tmp292,
	movw	r0, #:lower16:11161556	@ tmp291,
	movw	ip, #:lower16:11161564	@ tmp294,
	movt	r0, #:upper16:11161556	@ tmp291,
	ldr	r2, [r4, r3]	@ <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	movt	ip, #:upper16:11161564	@ tmp294,
	mul	r6, r2, r6	@ prephitmp.2431, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, tmp281
	str	r6, [r4, ip]	@ prephitmp.2431, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r1, #0	@ D.39386,
	str	r1, [r4, r0]	@ D.39386, <variable>.CurrPOC.FrameNumInPicOrderCntCycle
	blt	.L763	@,
	add	r3, r5, #2912	@ tmp295, sps,
	cmp	r1, #1	@ D.39386,
	and	r8, r1, #1	@ tmp403, D.39386,
	mov	r0, #1	@ i.2433,
	ldr	r7, [r3, #8]	@ tmp296, <variable>.offset_for_ref_frame
	add	r2, r3, #12	@ ivtmp.2407, tmp295,
	add	r6, r6, r7	@ prephitmp.2431, prephitmp.2431, tmp296
	str	r6, [r4, ip]	@ prephitmp.2431, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L763	@,
	cmp	r8, #0	@ tmp403,
	beq	.L764	@,
	ldr	r7, [r2, #0]	@ tmp415, <variable>.offset_for_ref_frame
	mov	r0, #2	@ i.2433,
	cmp	r1, r0	@ D.39386, i.2433
	add	r2, r3, #16	@ ivtmp.2407, tmp295,
	add	r6, r6, r7	@ prephitmp.2431, prephitmp.2431, tmp415
	str	r6, [r4, ip]	@ prephitmp.2431, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L763	@,
.L764:
	mov	r3, r2	@ tmp404, ivtmp.2407
	add	r0, r0, #2	@ i.2433, i.2433,
	ldr	r7, [r3], #4	@ tmp408, <variable>.offset_for_ref_frame
	cmp	r1, r0	@ D.39386, i.2433
	add	lr, r6, r7	@ prephitmp.2431, prephitmp.2431, tmp408
	str	lr, [r4, ip]	@ prephitmp.2431, <variable>.CurrPOC.ExpectedPicOrderCnt
	ldr	r7, [r2, #4]	@ tmp413, <variable>.offset_for_ref_frame
	add	r2, r3, #4	@ ivtmp.2407, tmp404,
	add	r6, lr, r7	@ prephitmp.2431, prephitmp.2431, tmp413
	str	r6, [r4, ip]	@ prephitmp.2431, <variable>.CurrPOC.ExpectedPicOrderCnt
	bge	.L764	@,
.L763:
	movw	r1, #:lower16:11162656	@ tmp300,
	movt	r1, #:upper16:11162656	@ tmp300,
	movw	r0, #:lower16:11162625	@ tmp305,
	movt	r0, #:upper16:11162625	@ tmp305,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movwne	r3, #:lower16:11161564	@ tmp302,
	ldreq	r2, [r5, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	movweq	r3, #:lower16:11161564	@ tmp304,
	movtne	r3, #:upper16:11161564	@ tmp302,
	movteq	r3, #:upper16:11161564	@ tmp304,
	addeq	r6, r6, r2	@ prephitmp.2435, prephitmp.2431, <variable>.offset_for_non_ref_pic
	ldrne	r6, [r4, r3]	@ prephitmp.2435, <variable>.CurrPOC.ExpectedPicOrderCnt
	streq	r6, [r4, r3]	@ prephitmp.2435, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L767	@,
	movw	r1, #:lower16:11161528	@ tmp307,
	movt	r1, #:upper16:11161528	@ tmp307,
	movw	r2, #:lower16:11161512	@ tmp309,
	movw	r3, #:lower16:11161532	@ tmp310,
	ldr	r0, [r4, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161512	@ tmp309,
	movt	r3, #:upper16:11161532	@ tmp310,
	movw	r1, #:lower16:11161516	@ tmp314,
	add	r6, r6, r0	@ D.39400, prephitmp.2435, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ D.39400, <variable>.CurrPOC.toppoc
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r1, #:upper16:11161516	@ tmp314,
	ldr	r0, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11161520	@ tmp315,
	movw	r3, #:lower16:11161524	@ tmp316,
	movt	r2, #:upper16:11161520	@ tmp315,
	add	r0, ip, r0	@ tmp311, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	movt	r3, #:upper16:11161524	@ tmp316,
	add	ip, r0, r6	@ D.39404, tmp311, D.39400
	str	ip, [r4, r1]	@ D.39404, <variable>.CurrPOC.bottompoc
	cmp	ip, r6	@ D.39404, D.39400
	movlt	r6, ip	@ prephitmp.2440, D.39404
	movge	r6, r6	@ prephitmp.2440, D.39400
	str	r6, [r4, r2]	@ prephitmp.2440,
	str	r6, [r4, r3]	@ prephitmp.2440, <variable>.CurrPOC.ThisPOC
.L768:
	movw	r2, #:lower16:11161544	@ tmp331,
	movw	r3, #:lower16:11161548	@ tmp334,
	movt	r2, #:upper16:11161544	@ tmp331,
	movt	r3, #:upper16:11161548	@ tmp334,
	movw	r1, #:lower16:11161520	@ tmp329,
	movt	r1, #:upper16:11161520	@ tmp329,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11161552	@ tmp333,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r2, #:upper16:11161552	@ tmp333,
	movw	r3, #:lower16:11161540	@ tmp330,
	movt	r3, #:upper16:11161540	@ tmp330,
	str	r6, [r4, r1]	@ prephitmp.2440, <variable>.CurrPOC.framepoc
	str	ip, [r4, r2]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	str	r0, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L792:
	movw	r7, #:lower16:11161548	@ tmp240,
	movt	r7, #:upper16:11161548	@ tmp240,
	mov	r2, #0	@ tmp241,
	str	r2, [r4, r7]	@ tmp241, <variable>.CurrPOC.FrameNumOffset
	b	.L753	@
.L791:
	movw	r5, #:lower16:11161548	@ tmp336,
	movw	r0, #:lower16:11161516	@ tmp338,
	movt	r5, #:upper16:11161548	@ tmp336,
	movt	r0, #:upper16:11161516	@ tmp338,
	movw	r1, #:lower16:11161512	@ tmp340,
	movw	r2, #:lower16:11161520	@ tmp342,
	movt	r1, #:upper16:11161512	@ tmp340,
	movt	r2, #:upper16:11161520	@ tmp342,
	movw	ip, #:lower16:11161524	@ tmp344,
	movt	ip, #:upper16:11161524	@ tmp344,
	mov	r3, #0	@ tmp337,
	str	r3, [r4, r5]	@ tmp337, <variable>.CurrPOC.FrameNumOffset
	str	r3, [r4, ip]	@ tmp337, <variable>.CurrPOC.ThisPOC
	str	r3, [r4, r0]	@ tmp337, <variable>.CurrPOC.bottompoc
	str	r3, [r4, r1]	@ tmp337, <variable>.CurrPOC.toppoc
	str	r3, [r4, r2]	@ tmp337, <variable>.CurrPOC.framepoc
	b	.L771	@
.L790:
	movw	r2, #:lower16:11161488	@ tmp179,
	movw	r3, #:lower16:11161492	@ tmp181,
	movt	r2, #:upper16:11161488	@ tmp179,
	movt	r3, #:upper16:11161492	@ tmp181,
	mov	ip, #0	@ tmp180,
	str	ip, [r4, r2]	@ tmp180, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	ip, [r4, r3]	@ tmp180, <variable>.CurrPOC.PrevPicOrderCntLsb
.L739:
	movw	r0, #:lower16:11161480	@ tmp384,
	movt	r0, #:upper16:11161480	@ tmp384,
	movw	r3, #:lower16:11161488	@ tmp385,
	movt	r3, #:upper16:11161488	@ tmp385,
	ldr	r0, [r4, r0]	@ D.39310, <variable>.CurrPOC.pic_order_cnt_lsb
	mov	r2, #0	@ prephitmp.2458,
	ldr	ip, [r4, r3]	@ prephitmp.2390, <variable>.CurrPOC.PrevPicOrderCntMsb
	mov	r3, r2	@ prephitmp.2388, prephitmp.2458
.L745:
	cmp	r3, r0	@ prephitmp.2388, D.39310
	bcs	.L747	@,
	rsb	r3, r3, r0	@ tmp203, prephitmp.2388, D.39310
	cmp	r3, r1, lsr #1	@ tmp203, MaxPicOrderCntLsb,
	bls	.L747	@,
	rsb	ip, r1, r2	@ D.39326, MaxPicOrderCntLsb, prephitmp.2458
	movw	r3, #:lower16:11161496	@ tmp205,
	movt	r3, #:upper16:11161496	@ tmp205,
	mov	r2, ip	@ prephitmp.2458, D.39326
	str	ip, [r4, r3]	@ D.39326, <variable>.CurrPOC.PicOrderCntMsb
	b	.L746	@
.L747:
	movw	r1, #:lower16:11161496	@ tmp206,
	movw	r3, #:lower16:11162625	@ tmp207,
	movt	r1, #:upper16:11161496	@ tmp206,
	movt	r3, #:upper16:11162625	@ tmp207,
	str	ip, [r4, r1]	@ prephitmp.2390, <variable>.CurrPOC.PicOrderCntMsb
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L793	@,
.L748:
	movw	r1, #:lower16:11162626	@ tmp217,
	movt	r1, #:upper16:11162626	@ tmp217,
	movw	r3, #:lower16:11161480	@ tmp219,
	movt	r3, #:upper16:11161480	@ tmp219,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movw	ip, #:lower16:11161524	@ tmp226,
	movt	ip, #:upper16:11161524	@ tmp226,
	add	r1, r2, r1	@ prephitmp.2383, prephitmp.2458, <variable>.CurrPOC.pic_order_cnt_lsb
	movweq	r0, #:lower16:11161512	@ tmp221,
	movwne	r0, #:lower16:11161516	@ tmp225,
	movteq	r0, #:upper16:11161512	@ tmp221,
	movtne	r0, #:upper16:11161516	@ tmp225,
	str	r1, [r4, r0]	@ prephitmp.2383,
	str	r1, [r4, ip]	@ prephitmp.2383, <variable>.CurrPOC.ThisPOC
	b	.L749	@
.L762:
	movw	r1, #:lower16:11161564	@ tmp298,
	movt	r1, #:upper16:11161564	@ tmp298,
	mov	r6, r7	@ prephitmp.2431, temp.2427
	str	r7, [r4, r1]	@ temp.2427, <variable>.CurrPOC.ExpectedPicOrderCnt
	b	.L763	@
.L767:
	movw	r3, #:lower16:11162626	@ tmp317,
	movt	r3, #:upper16:11162626	@ tmp317,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	bne	.L769	@,
	movw	ip, #:lower16:11161528	@ tmp319,
	movt	ip, #:upper16:11161528	@ tmp319,
	movw	r2, #:lower16:11161512	@ tmp321,
	movw	r0, #:lower16:11161524	@ tmp322,
	ldr	r1, [r4, ip]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161512	@ tmp321,
	movt	r0, #:upper16:11161524	@ tmp322,
	add	r6, r6, r1	@ prephitmp.2440, prephitmp.2435, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ prephitmp.2440,
	str	r6, [r4, r0]	@ prephitmp.2440, <variable>.CurrPOC.ThisPOC
	b	.L768	@
.L743:
	movw	r2, #:lower16:11161488	@ tmp202,
	movt	r2, #:upper16:11161488	@ tmp202,
	ldr	r2, [r4, r2]	@ prephitmp.2458, <variable>.CurrPOC.PrevPicOrderCntMsb
	b	.L745	@
.L740:
	movw	ip, #:lower16:11161508	@ tmp187,
	movt	ip, #:upper16:11161508	@ tmp187,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.last_pic_bottom_field
	cmp	r0, #0	@ <variable>.CurrPOC.last_pic_bottom_field,
	beq	.L742	@,
	movw	r0, #:lower16:11161488	@ tmp189,
	movw	r3, #:lower16:11161492	@ tmp191,
	movt	r0, #:upper16:11161488	@ tmp189,
	movt	r3, #:upper16:11161492	@ tmp191,
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r2, [r4, r3]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L739	@
.L769:
	movw	r3, #:lower16:11161528	@ tmp323,
	movt	r3, #:upper16:11161528	@ tmp323,
	ldr	ip, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11161516	@ tmp327,
	ldr	r0, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161516	@ tmp327,
	movw	r3, #:lower16:11161524	@ tmp328,
	movt	r3, #:upper16:11161524	@ tmp328,
	add	r1, r0, ip	@ tmp324, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	add	r6, r1, r6	@ prephitmp.2440, tmp324, prephitmp.2435
	str	r6, [r4, r2]	@ prephitmp.2440,
	str	r6, [r4, r3]	@ prephitmp.2440, <variable>.CurrPOC.ThisPOC
	b	.L768	@
.L754:
	movw	r2, #:lower16:11161544	@ tmp248,
	movw	r7, #:lower16:11161540	@ tmp249,
	movt	r2, #:upper16:11161544	@ tmp248,
	movt	r7, #:upper16:11161540	@ tmp249,
	ldr	r2, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r3, [r4, r7]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	cmp	r2, r3	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	bcs	.L756	@,
	movw	ip, #:lower16:11161552	@ tmp253,
	movt	ip, #:upper16:11161552	@ tmp253,
	movw	r1, #:lower16:11161548	@ tmp252,
	movt	r1, #:upper16:11161548	@ tmp252,
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.PrevFrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	add	r6, r0, r2	@ tmp255, MaxFrameNum, <variable>.CurrPOC.PrevFrameNumOffset
	str	r6, [r4, r1]	@ tmp255, <variable>.CurrPOC.FrameNumOffset
	b	.L753	@
.L778:
	movw	r1, #:lower16:11162626	@ tmp372,
	movt	r1, #:upper16:11162626	@ tmp372,
	movw	ip, #:lower16:11161520	@ tmp374,
	movt	ip, #:upper16:11161520	@ tmp374,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	str	r2, [r4, ip]	@ prephitmp.2450,
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movweq	r3, #:lower16:11161512	@ tmp375,
	movwne	r3, #:lower16:11161516	@ tmp377,
	movteq	r3, #:upper16:11161512	@ tmp375,
	movtne	r3, #:upper16:11161516	@ tmp377,
	str	r2, [r4, r3]	@ prephitmp.2450,
	b	.L771	@
.L772:
	movw	ip, #:lower16:11161540	@ tmp353,
	movw	r0, #:lower16:11161552	@ tmp355,
	movt	ip, #:upper16:11161540	@ tmp353,
	movt	r0, #:upper16:11161552	@ tmp355,
	mov	r1, r2	@ prephitmp.2378, tmp171
	str	r2, [r4, ip]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
.L774:
	movw	r3, #:lower16:11161548	@ tmp358,
	movt	r3, #:upper16:11161548	@ tmp358,
	str	r1, [r4, r3]	@ prephitmp.2378, <variable>.CurrPOC.FrameNumOffset
	b	.L775	@
.L742:
	movw	ip, #:lower16:11161512	@ tmp195,
	movt	ip, #:upper16:11161512	@ tmp195,
	movw	r6, #:lower16:11161488	@ tmp193,
	movw	r2, #:lower16:11161492	@ tmp196,
	ldr	r3, [r4, ip]	@ prephitmp.2388, <variable>.CurrPOC.toppoc
	movt	r6, #:upper16:11161488	@ tmp193,
	movt	r2, #:upper16:11161492	@ tmp196,
	mov	r5, r0	@ prephitmp.2392, <variable>.CurrPOC.last_pic_bottom_field
	mov	ip, r0	@ prephitmp.2390, prephitmp.2392
	str	r0, [r4, r6]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r3, [r4, r2]	@ prephitmp.2388, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L741	@
.L756:
	movw	r0, #:lower16:11161552	@ tmp256,
	movt	r0, #:upper16:11161552	@ tmp256,
	ldr	r1, [r4, r0]	@ prephitmp.2382, <variable>.CurrPOC.PrevFrameNumOffset
	b	.L755	@
	.fnend
	.size	MVC_DecPOC, .-MVC_DecPOC
	.align	2
	.global	MVC_CalcPicNum
	.type	MVC_CalcPicNum, %function
MVC_CalcPicNum:
	.fnstart
.LFB1703:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8, sl}	@,
	.save {r4, r5, r6, r7, r8, sl}
	movw	r4, #:lower16:11152036	@ tmp158,
	movt	r4, #:upper16:11152036	@ tmp158,
	movw	r2, #:lower16:11196171	@ tmp162,
	movt	r2, #:upper16:11196171	@ tmp162,
	ldr	r3, [r0, r4]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ D.39457, <variable>.CurrPic.structure
	ldr	r1, [r3, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, #0	@ D.39457,
	mov	r3, #1	@ tmp161,
	add	r6, r1, #4	@ tmp159, <variable>.log2_max_frame_num_minus4,
	mov	r6, r3, asl r6	@ MaxFrameNum, tmp161,
	beq	.L795	@,
	movw	r7, #:lower16:11168620	@ tmp165,
	movt	r7, #:upper16:11168620	@ tmp165,
	cmp	r2, #2	@ D.39457,
	movne	r4, #0	@, add_bottom
	moveq	r4, #1	@, add_bottom
	cmp	r2, r3	@ D.39457,
	movne	r5, #0	@, add_top
	moveq	r5, #1	@, add_top
	ldr	ip, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L797	@,
	movw	r8, #:lower16:11168484	@ ivtmp.2527,
	movt	r8, #:upper16:11168484	@ ivtmp.2527,
	add	r3, r0, r8	@ ivtmp.2527, pMvcCtx, ivtmp.2527
	movw	r8, #:lower16:11196648	@ tmp236,
	movt	r8, #:upper16:11196648	@ tmp236,
	mov	r2, #0	@ i,
.L810:
	ldr	r1, [r3, #0]	@ temp.2535, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #0	@ <variable>.is_reference,
	beq	.L806	@,
	ldr	ip, [r1, #588]	@ temp.2537, <variable>.frame_num
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	ip, sl	@ temp.2537, <variable>.CurrPic.frame_num
	rsbhi	ip, r6, ip	@ tmp194, MaxFrameNum, temp.2537
	str	ip, [r1, #592]	@ temp.2537, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ prephitmp.2494, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2498, <variable>.is_reference
	tst	ip, #1	@ prephitmp.2498,
	beq	.L809	@,
	ldr	sl, [r1, #504]	@ tmp198,
	bic	sl, sl, #-16777216	@ tmp196, tmp198,
	bic	sl, sl, #255	@ tmp196, tmp196,
	cmp	sl, #65536	@ tmp196,
	ldreq	ip, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	ip, r5, ip, asl #1	@, tmp201, add_top, <variable>.frame_num_wrap,
	streq	ip, [r1, #516]	@ tmp201, <variable>.top_field.pic_num
	ldreq	r1, [r3, #0]	@ prephitmp.2494, <variable>.DPB.fs_ref
	ldreqb	ip, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2498, <variable>.is_reference
.L809:
	tst	ip, #2	@ prephitmp.2498,
	beq	.L806	@,
	ldr	ip, [r1, #544]	@ tmp205,
	bic	ip, ip, #-16777216	@ tmp203, tmp205,
	bic	ip, ip, #255	@ tmp203, tmp203,
	cmp	ip, #65536	@ tmp203,
	ldreq	ip, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	ip, r4, ip, asl #1	@, tmp208, add_bottom, <variable>.frame_num_wrap,
	streq	ip, [r1, #556]	@ tmp208, <variable>.bottom_field.pic_num
.L806:
	ldr	r1, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2527, ivtmp.2527,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L810	@,
.L797:
	movw	r6, #:lower16:11168624	@ tmp211,
	movt	r6, #:upper16:11168624	@ tmp211,
	ldr	r3, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	beq	.L814	@,
	movw	r2, #:lower16:11168548	@ ivtmp.2522,
	movt	r2, #:upper16:11168548	@ ivtmp.2522,
	add	r3, r0, r2	@ ivtmp.2522, pMvcCtx, ivtmp.2522
	mov	r2, #0	@ i.2539,
.L813:
	ldr	ip, [r3, #0]	@ prephitmp.2487, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2539, i.2539,
	ldrb	r1, [ip, #2]	@ zero_extendqisi2	@ temp.2549, <variable>.is_reference
	cmp	r1, #0	@ temp.2549,
	beq	.L811	@,
	tst	r1, #1	@ prephitmp.2491,
	beq	.L812	@,
	ldr	r7, [ip, #504]	@ tmp217,
	bic	r7, r7, #-16777216	@ tmp215, tmp217,
	bic	r7, r7, #255	@ tmp215, tmp215,
	cmp	r7, #256	@ tmp215,
	ldreq	r1, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r5, r1, asl #1	@, tmp220, add_top, <variable>.long_term_frame_idx,
	streq	r1, [ip, #512]	@ tmp220, <variable>.top_field.long_term_pic_num
	ldreq	ip, [r3, #0]	@ prephitmp.2487, <variable>.DPB.fs_ltref
	ldreqb	r1, [ip, #2]	@ zero_extendqisi2	@ prephitmp.2491, <variable>.is_reference
.L812:
	tst	r1, #2	@ prephitmp.2491,
	beq	.L811	@,
	ldr	r1, [ip, #544]	@ tmp224,
	bic	r1, r1, #-16777216	@ tmp222, tmp224,
	bic	r1, r1, #255	@ tmp222, tmp222,
	cmp	r1, #256	@ tmp222,
	ldreq	r1, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r4, r1, asl #1	@, tmp227, add_bottom, <variable>.long_term_frame_idx,
	streq	r1, [ip, #552]	@ tmp227, <variable>.bottom_field.long_term_pic_num
.L811:
	ldr	ip, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.2522, ivtmp.2522,
	cmp	ip, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2539
	bhi	.L813	@,
.L814:
	ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
	bx	lr
.L795:
	movw	r4, #:lower16:11168620	@ tmp167,
	movt	r4, #:upper16:11168620	@ tmp167,
	ldr	r1, [r0, r4]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L798	@,
	movw	r5, #:lower16:11168484	@ ivtmp.2517,
	movt	r5, #:upper16:11168484	@ ivtmp.2517,
	add	r3, r0, r5	@ ivtmp.2517, pMvcCtx, ivtmp.2517
	movw	r5, #:lower16:11196648	@ tmp233,
	movt	r5, #:upper16:11196648	@ tmp233,
	b	.L802	@
.L799:
	ldr	r1, [r0, r4]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i.2532, i.2532,
	add	r3, r3, #4	@ ivtmp.2517, ivtmp.2517,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2532
	bls	.L798	@,
.L802:
	ldr	r1, [r3, #0]	@ D.39461, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L799	@,
	ldr	ip, [r1, #464]	@ tmp173,
	bic	ip, ip, #-16777216	@ tmp171, tmp173,
	bic	ip, ip, #255	@ tmp171, tmp171,
	cmp	ip, #65536	@ tmp171,
	bne	.L799	@,
	ldr	ip, [r1, #588]	@ D.39469, <variable>.frame_num
	add	r2, r2, #1	@ i.2532, i.2532,
	ldr	r7, [r0, r5]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	ip, r7	@ D.39469, <variable>.CurrPic.frame_num
	rsb	r7, r6, ip	@ tmp176, MaxFrameNum, D.39469
	strls	ip, [r1, #592]	@ D.39469, <variable>.frame_num_wrap
	strhi	r7, [r1, #592]	@ tmp176, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ temp.2531, <variable>.DPB.fs_ref
	add	r3, r3, #4	@ ivtmp.2517, ivtmp.2517,
	ldr	ip, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	str	ip, [r1, #476]	@ <variable>.frame_num_wrap, <variable>.frame.pic_num
	ldr	r1, [r0, r4]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2532
	bhi	.L802	@,
.L798:
	movw	r4, #:lower16:11168624	@ tmp180,
	movt	r4, #:upper16:11168624	@ tmp180,
	ldr	r3, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	beq	.L814	@,
	movw	r2, #:lower16:11168548	@ ivtmp.2512,
	movt	r2, #:upper16:11168548	@ ivtmp.2512,
	add	r3, r0, r2	@ ivtmp.2512, pMvcCtx, ivtmp.2512
	mov	r2, #0	@ i.2533,
	b	.L805	@
.L804:
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2533
	bls	.L814	@,
.L805:
	ldr	r1, [r3, #0]	@ D.39479, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2533, i.2533,
	add	r3, r3, #4	@ ivtmp.2512, ivtmp.2512,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L804	@,
	ldr	ip, [r1, #464]	@ tmp186,
	bic	ip, ip, #-16777216	@ tmp184, tmp186,
	bic	ip, ip, #255	@ tmp184, tmp184,
	cmp	ip, #256	@ tmp184,
	ldreq	ip, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r1, #472]	@ <variable>.long_term_frame_idx, <variable>.frame.long_term_pic_num
	b	.L804	@
	.fnend
	.size	MVC_CalcPicNum, .-MVC_CalcPicNum
	.align	2
	.global	MVC_IsOutDPB
	.type	MVC_IsOutDPB, %function
MVC_IsOutDPB:
	.fnstart
.LFB1704:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r1, #0	@ pFrameStore
	str	r4, [sp, #-4]!	@,
	.save {r4}
	beq	.L820	@,
	movw	r3, #:lower16:11168612	@ tmp141,
	movt	r3, #:upper16:11168612	@ tmp141,
	ldr	r4, [r0, r3]	@ D.39558, <variable>.DPB.size
	cmp	r4, #0	@ D.39558,
	beq	.L820	@,
	movw	ip, #:lower16:11168420	@ ivtmp.2580,
	movt	ip, #:upper16:11168420	@ ivtmp.2580,
	add	r3, r0, ip	@ ivtmp.2580, pMvcCtx, ivtmp.2580
	sub	r2, r4, #1	@ tmp144, D.39558,
	and	r0, r2, #1	@ tmp146, tmp144,
	ldr	r2, [r3, #0]	@ D.39553, <variable>.DPB.fs
	cmp	r2, #0	@ D.39553,
	beq	.L826	@,
	cmp	r1, r2	@ pFrameStore, D.39553
	beq	.L836	@,
.L826:
	mov	r2, #1	@ i,
	cmp	r4, r2	@ D.39558, i
	add	r3, r3, #4	@ ivtmp.2580, ivtmp.2580,
	bls	.L820	@,
	cmp	r0, #0	@ tmp146,
	beq	.L823	@,
	ldr	r0, [r3, #0]	@ D.39553, <variable>.DPB.fs
	cmp	r0, #0	@ D.39553,
	beq	.L828	@,
	cmp	r1, r0	@ pFrameStore, D.39553
	beq	.L836	@,
.L828:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2580, ivtmp.2580,
	cmp	r4, r2	@ D.39558, i
	bls	.L820	@,
.L823:
	ldr	r0, [r3, #0]	@ D.39553, <variable>.DPB.fs
	add	r2, r2, #1	@ tmp147, i,
	add	ip, r3, #4	@ tmp148, ivtmp.2580,
	cmp	r0, #0	@ D.39553,
	beq	.L821	@,
	cmp	r1, r0	@ pFrameStore, D.39553
	beq	.L836	@,
.L821:
	ldr	r3, [r3, #4]	@ D.39553, <variable>.DPB.fs
	cmp	r3, #0	@ D.39553,
	beq	.L831	@,
	cmp	r1, r3	@ pFrameStore, D.39553
	beq	.L836	@,
.L831:
	add	r2, r2, #1	@ i, tmp147,
	add	r3, ip, #4	@ ivtmp.2580, tmp148,
	cmp	r4, r2	@ D.39558, i
	bhi	.L823	@,
.L820:
	mov	r0, #1	@ D.39551,
.L822:
	ldmfd	sp!, {r4}
	bx	lr
.L836:
	mov	r0, #0	@ D.39551,
	b	.L822	@
	.fnend
	.size	MVC_IsOutDPB, .-MVC_IsOutDPB
	.align	2
	.global	mvc_combine_scalinglist
	.type	mvc_combine_scalinglist, %function
mvc_combine_scalinglist:
	.fnstart
.LFB1707:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r2, #0	@ sizeOfScalingList
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}	@,
	.save {r4, r5, r6, r7, r8, r9, sl}
	ble	.L842	@,
	movw	r7, #:lower16:.LANCHOR0	@ tmp155,
	movt	r7, #:upper16:.LANCHOR0	@ tmp155,
	cmp	r2, #16	@ sizeOfScalingList,
	add	r6, r7, #16	@ tmp156, tmp155,
	sub	r8, r2, #1	@ tmp158, sizeOfScalingList,
	mov	r5, #255	@ tmp157,
	and	r8, r8, #1	@ tmp160, tmp158,
	ldrneb	r3, [r6, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	beq	.L858	@,
.L854:
	and	r9, r3, #252	@ tmp167, scani,
	and	r4, r3, #3	@ tmp169, scani,
	add	ip, r1, r9	@ D.39827, scalingList, tmp167
	ldrb	r9, [r0, r3, asl #2]	@ zero_extendqisi2	@ tmp177,* scalingList_Org
	mov	r4, r4, asl #3	@ D.39830, tmp169,
	mov	r3, #1	@ i,
	ldr	sl, [ip, #0]	@ tmp174,* D.39827
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	sl, sl, r5, asl r4	@ tmp175, tmp174, tmp157,
	orr	r4, sl, r9, asl r4	@, tmp179, tmp175, tmp177,
	str	r4, [ip, #0]	@ tmp179,* D.39827
	beq	.L842	@,
	cmp	r8, #0	@ tmp160,
	beq	.L841	@,
	cmp	r2, #16	@ sizeOfScalingList,
	ldrneb	ip, [r6, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	ip, [r7, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	add	r3, r3, #1	@ i, i,
	cmp	r3, r2	@ i, sizeOfScalingList
	and	sl, ip, #252	@ tmp183, scani,
	and	r8, ip, #3	@ tmp185, scani,
	add	r4, r1, sl	@ D.39827, scalingList, tmp183
	ldrb	sl, [r0, ip, asl #2]	@ zero_extendqisi2	@ tmp193,* scalingList_Org
	mov	ip, r8, asl #3	@ D.39830, tmp185,
	ldr	r8, [r4, #0]	@ tmp190,* D.39827
	bic	r8, r8, r5, asl ip	@ tmp191, tmp190, tmp157,
	orr	ip, r8, sl, asl ip	@, tmp195, tmp191, tmp193,
	str	ip, [r4, #0]	@ tmp195,* D.39827
	bne	.L841	@,
	b	.L842	@
.L857:
	mov	r4, ip, lsr #2	@ tmp198, scani,
	and	r8, ip, #3	@ tmp201, scani,
	ldrb	sl, [r0, ip, asl #2]	@ zero_extendqisi2	@ tmp209,* scalingList_Org
	add	r3, r3, #1	@ i, tmp161,
	mov	ip, r8, asl #3	@ D.39830, tmp201,
	ldr	r8, [r1, r4, asl #2]	@ tmp206,* scalingList
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	r8, r8, r5, asl ip	@ tmp207, tmp206, tmp157,
	orr	ip, r8, sl, asl ip	@, tmp211, tmp207, tmp209,
	str	ip, [r1, r4, asl #2]	@ tmp211,* scalingList
	beq	.L842	@,
.L841:
	cmp	r2, #16	@ sizeOfScalingList,
	ldreqb	ip, [r7, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	ldrneb	ip, [r6, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	cmp	r2, #16	@ sizeOfScalingList,
	add	r3, r3, #1	@ tmp161, i,
	and	r8, ip, #3	@ tmp145, scani,
	mov	r4, ip, lsr #2	@ tmp143, scani,
	ldrb	sl, [r0, ip, asl #2]	@ zero_extendqisi2	@ tmp151,* scalingList_Org
	mov	ip, r8, asl #3	@ D.39830, tmp145,
	ldr	r8, [r1, r4, asl #2]	@ tmp150,* scalingList
	bic	r8, r8, r5, asl ip	@ tmp149, tmp150, tmp157,
	orr	ip, r8, sl, asl ip	@, tmp154, tmp149, tmp151,
	str	ip, [r1, r4, asl #2]	@ tmp154,* scalingList
	ldrneb	ip, [r6, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	ip, [r7, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L857	@
.L842:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	bx	lr
.L858:
	ldrb	r3, [r7, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L854	@
	.fnend
	.size	mvc_combine_scalinglist, .-mvc_combine_scalinglist
	.align	2
	.global	MVC_UpdatePicQpInf
	.type	MVC_UpdatePicQpInf, %function
MVC_UpdatePicQpInf:
	.fnstart
.LFB1712:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldr	r2, [r1, #32]	@ <variable>.MaxQp, <variable>.MaxQp
	ldr	r3, [r1, #36]	@ <variable>.MinQp, <variable>.MinQp
	cmp	r2, r0	@ <variable>.MaxQp, SlcQp
	strge	r2, [r1, #32]	@, <variable>.MaxQp, <variable>.MaxQp
	strlt	r0, [r1, #32]	@, SlcQp, <variable>.MaxQp
	cmp	r3, r0	@ <variable>.MinQp, SlcQp
	strle	r3, [r1, #36]	@, <variable>.MinQp, <variable>.MinQp
	strgt	r0, [r1, #36]	@, SlcQp, <variable>.MinQp
	bx	lr	@
	.fnend
	.size	MVC_UpdatePicQpInf, .-MVC_UpdatePicQpInf
	.align	2
	.global	MVC_StopPicNum
	.type	MVC_StopPicNum, %function
MVC_StopPicNum:
	.fnstart
.LFB1714:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	bx	lr	@
	.fnend
	.size	MVC_StopPicNum, .-MVC_StopPicNum
	.align	2
	.global	MVC_GetPicStreamSize
	.type	MVC_GetPicStreamSize, %function
MVC_GetPicStreamSize:
	.fnstart
.LFB1716:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11199172	@ tmp138,
	movt	r3, #:upper16:11199172	@ tmp138,
	ldr	r3, [r0, r3]	@ pMVCSliceParam, <variable>.DecPicPara.pFirstSlice
	cmp	r3, #0	@ pMVCSliceParam,
	moveq	r0, r3	@ TotalSize, pMVCSliceParam
	bxeq	lr	@
	mov	r0, #0	@ TotalSize,
.L866:
	ldr	r2, [r3, #12]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r1, [r3, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r3, #4056]	@ pMVCSliceParam, <variable>.pNextSlice
	add	ip, r1, r2	@ tmp139, <variable>.valid_bitlen, <variable>.valid_bitlen
	add	r2, ip, #7	@ tmp142, tmp139,
	cmp	r3, #0	@ pMVCSliceParam,
	add	r0, r0, r2, lsr #3	@, TotalSize, TotalSize, tmp142,
	bne	.L866	@,
	bx	lr	@
	.fnend
	.size	MVC_GetPicStreamSize, .-MVC_GetPicStreamSize
	.align	2
	.global	MVC_ExitSlice
	.type	MVC_ExitSlice, %function
MVC_ExitSlice:
	.fnstart
.LFB1727:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8}	@,
	.save {r4, r5, r6, r7, r8}
	movw	r2, #:lower16:11152036	@ tmp136,
	movw	r5, #:lower16:11162632	@ tmp138,
	movt	r2, #:upper16:11152036	@ tmp136,
	movt	r5, #:upper16:11162632	@ tmp138,
	movw	r1, #:lower16:11162625	@ tmp149,
	ldr	r4, [r0, r2]	@ sps, <variable>.pCurrSPS
	movt	r1, #:upper16:11162625	@ tmp149,
	ldr	r6, [r0, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r7, #:lower16:11164312	@ tmp137,
	movw	r3, #:lower16:11162676	@ tmp143,
	movt	r7, #:upper16:11164312	@ tmp137,
	movt	r3, #:upper16:11162676	@ tmp143,
	movw	r8, #:lower16:11162644	@ tmp146,
	movt	r8, #:upper16:11162644	@ tmp146,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	str	r6, [r0, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	ip, #:lower16:11164308	@ tmp140,
	ldr	r7, [r0, r3]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movt	ip, #:upper16:11164308	@ tmp140,
	ldr	r6, [r0, r8]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movw	r1, #:lower16:11164344	@ tmp142,
	ldr	r8, [r4, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movt	r1, #:upper16:11164344	@ tmp142,
	movw	r2, #:lower16:11164320	@ tmp145,
	movw	r3, #:lower16:11164304	@ tmp148,
	movt	r2, #:upper16:11164320	@ tmp145,
	movt	r3, #:upper16:11164304	@ tmp148,
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r8, [r0, ip]	@ <variable>.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	str	r7, [r0, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	str	r6, [r0, r2]	@ <variable>.CurrSlice.frame_num, <variable>.PrevSlice.frame_num
	strb	r5, [r0, r3]	@ <variable>.CurrSlice.field_pic_flag, <variable>.PrevSlice.field_pic_flag
	beq	.L870	@,
	movw	r1, #:lower16:11162626	@ tmp155,
	movt	r1, #:upper16:11162626	@ tmp155,
	movw	r3, #:lower16:11164305	@ tmp154,
	movt	r3, #:upper16:11164305	@ tmp154,
	ldrb	ip, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	strb	ip, [r0, r3]	@ <variable>.CurrSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
.L870:
	movw	r2, #:lower16:11162627	@ tmp162,
	movt	r2, #:upper16:11162627	@ tmp162,
	movw	r3, #:lower16:11162656	@ tmp159,
	movt	r3, #:upper16:11162656	@ tmp159,
	ldrb	r1, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r2, #:lower16:11164316	@ tmp158,
	ldr	ip, [r0, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movt	r2, #:upper16:11164316	@ tmp158,
	movw	r3, #:lower16:11164306	@ tmp161,
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	movt	r3, #:upper16:11164306	@ tmp161,
	str	ip, [r0, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevSlice.nal_ref_idc
	strb	r1, [r0, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.PrevSlice.nal_unit_type
	beq	.L876	@,
.L871:
	ldr	r3, [r4, #2900]	@ prephitmp.2716, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ prephitmp.2716,
	bne	.L872	@,
	movw	r1, #:lower16:11161480	@ tmp171,
	movw	r3, #:lower16:11161484	@ tmp174,
	movt	r1, #:upper16:11161480	@ tmp171,
	movt	r3, #:upper16:11161484	@ tmp174,
	movw	r2, #:lower16:11164328	@ tmp170,
	movt	r2, #:upper16:11164328	@ tmp170,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r3, #:lower16:11164332	@ tmp173,
	movt	r3, #:upper16:11164332	@ tmp173,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.PrevSlice.pic_oder_cnt_lsb
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r3, [r4, #2900]	@ prephitmp.2716, <variable>.pic_order_cnt_type
.L872:
	cmp	r3, #1	@ prephitmp.2716,
	beq	.L877	@,
.L873:
	movw	ip, #:lower16:11164276	@ tmp182,
	movt	ip, #:upper16:11164276	@ tmp182,
	ldr	r2, [r0, ip]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L874	@,
	movw	r4, #:lower16:11164280	@ tmp185,
	movw	ip, #:lower16:11164288	@ tmp188,
	movt	r4, #:upper16:11164280	@ tmp185,
	movt	ip, #:upper16:11164288	@ tmp188,
	movw	r3, #:lower16:11164292	@ tmp191,
	movt	r3, #:upper16:11164292	@ tmp191,
	ldr	r5, [r0, r4]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r1, #:lower16:11164348	@ tmp184,
	ldr	r4, [r0, ip]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r1, #:upper16:11164348	@ tmp184,
	ldr	ip, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	r2, #:lower16:11164352	@ tmp187,
	movw	r3, #:lower16:11164356	@ tmp190,
	movt	r2, #:upper16:11164352	@ tmp187,
	movt	r3, #:upper16:11164356	@ tmp190,
	str	r5, [r0, r1]	@ <variable>.CurrSlice.view_id, <variable>.PrevSlice.view_id
	str	r4, [r0, r2]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	str	ip, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
.L874:
	movw	r1, #:lower16:11199476	@ tmp193,
	movt	r1, #:upper16:11199476	@ tmp193,
	ldr	r3, [r0, r1]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r2, r3, #1	@ tmp196, <variable>.TotalSlice,
	str	r2, [r0, r1]	@ tmp196, <variable>.TotalSlice
	ldmfd	sp!, {r4, r5, r6, r7, r8}
	bx	lr
.L877:
	movw	r1, #:lower16:11161528	@ tmp177,
	movw	r3, #:lower16:11161532	@ tmp180,
	movt	r1, #:upper16:11161528	@ tmp177,
	movt	r3, #:upper16:11161532	@ tmp180,
	movw	r2, #:lower16:11164336	@ tmp176,
	movt	r2, #:upper16:11164336	@ tmp176,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r3, #:lower16:11164340	@ tmp179,
	movt	r3, #:upper16:11164340	@ tmp179,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	b	.L873	@
.L876:
	movw	r3, #:lower16:11162664	@ tmp168,
	movt	r3, #:upper16:11162664	@ tmp168,
	movw	ip, #:lower16:11164324	@ tmp167,
	movt	ip, #:upper16:11164324	@ tmp167,
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	str	r1, [r0, ip]	@ <variable>.CurrSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	b	.L871	@
	.fnend
	.size	MVC_ExitSlice, .-MVC_ExitSlice
	.align	2
	.global	MVC_PicTypeStatistic
	.type	MVC_PicTypeStatistic, %function
MVC_PicTypeStatistic:
	.fnstart
.LFB1728:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11162624	@ tmp134,
	movt	r3, #:upper16:11162624	@ tmp134,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L881	@,
	bcs	.L886	@,
	movw	ip, #:lower16:11196692	@ tmp140,
	movt	ip, #:upper16:11196692	@ tmp140,
	ldr	r2, [r0, ip]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r2, #2	@ <variable>.CurrPic.pic_type,
	movne	r2, #1	@ tmp143,
	strne	r2, [r0, ip]	@ tmp143, <variable>.CurrPic.pic_type
.L884:
	movw	r3, #:lower16:11196696	@ tmp150,
	movt	r3, #:upper16:11196696	@ tmp150,
	mov	r1, #0	@ tmp151,
	str	r1, [r0, r3]	@ tmp151, <variable>.CurrPic.is_idr_pic
	bx	lr	@
.L886:
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bxne	lr	@
	movw	r3, #:lower16:11162627	@ tmp146,
	movt	r3, #:upper16:11162627	@ tmp146,
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L884	@,
	movw	ip, #:lower16:11196696	@ tmp148,
	movt	ip, #:upper16:11196696	@ tmp148,
	mov	r2, #1	@ tmp149,
	str	r2, [r0, ip]	@ tmp149, <variable>.CurrPic.is_idr_pic
	bx	lr	@
.L881:
	movw	r3, #:lower16:11196692	@ tmp136,
	movw	ip, #:lower16:11196696	@ tmp138,
	movt	r3, #:upper16:11196692	@ tmp136,
	movt	ip, #:upper16:11196696	@ tmp138,
	mov	r1, #2	@ tmp137,
	mov	r2, #0	@ tmp139,
	str	r1, [r0, r3]	@ tmp137, <variable>.CurrPic.pic_type
	str	r2, [r0, ip]	@ tmp139, <variable>.CurrPic.is_idr_pic
	bx	lr	@
	.fnend
	.size	MVC_PicTypeStatistic, .-MVC_PicTypeStatistic
	.align	2
	.global	MVC_FreeMvcExtMem
	.type	MVC_FreeMvcExtMem, %function
MVC_FreeMvcExtMem:
	.fnstart
.LFB1740:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	mov	r0, #0	@,
	bx	lr	@
	.fnend
	.size	MVC_FreeMvcExtMem, .-MVC_FreeMvcExtMem
	.align	2
	.global	MVC_FreeMvcVuiExtMem
	.type	MVC_FreeMvcVuiExtMem, %function
MVC_FreeMvcVuiExtMem:
	.fnstart
.LFB1741:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	mov	r0, #0	@,
	bx	lr	@
	.fnend
	.size	MVC_FreeMvcVuiExtMem, .-MVC_FreeMvcVuiExtMem
	.align	2
	.global	MVC_PassBytes
	.type	MVC_PassBytes, %function
MVC_PassBytes:
	.fnstart
.LFB1745:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5}	@,
	.save {r4, r5}
	ldr	r3, [r0, #368]	@ D.43226, <variable>.pCurrNal
	cmp	r3, #0	@ D.43226,
	cmpne	r1, #0	@, len,
	bne	.L898	@,
.L892:
	mvn	r0, #0	@ D.43232,
.L894:
	ldmfd	sp!, {r4, r5}
	bx	lr
.L898:
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.43233, <variable>.nal_used_segment
	rsb	ip, r2, r2, asl #3	@, tmp154, D.43233, D.43233,
	add	ip, r3, ip, asl #2	@, tmp156, D.43226, tmp154,
	ldr	ip, [ip, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	ip, #0	@ <variable>.streamBuffer,
	beq	.L892	@,
	ldr	ip, [r3, #64]	@ D.43240, <variable>.nal_segment
	cmp	ip, #2	@ D.43240,
	bhi	.L892	@,
	cmp	r2, #1	@ D.43233,
	bhi	.L892	@,
	cmp	ip, r2	@ D.43240, segment_idx
	bls	.L892	@,
	mov	r4, r1, asl #3	@ len.2827, len,
	mov	r5, #28	@ tmp184,
.L896:
	mla	r3, r5, r2, r3	@ tmp161, tmp184, segment_idx, D.43226
	add	r2, r2, #1	@ segment_idx, segment_idx,
	add	ip, r3, #16	@ tmp162, tmp161,
	ldr	r1, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [ip, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r1, r1, asl #3	@ D.43248, <variable>.bitstream_length,
	add	r3, r4, r3	@ D.43246, len.2827, <variable>.bitsoffset
	cmp	r3, r1	@ D.43246, D.43248
	rsb	r4, r1, r3	@ len.2827, D.43248, D.43246
	bls	.L899	@,
	str	r1, [ip, #4]	@ D.43248, <variable>.bitsoffset
	ldr	r3, [r0, #368]	@ temp.2828, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r1, ip, #1	@ tmp180, <variable>.nal_used_segment,
	strb	r1, [r3, #0]	@ tmp180, <variable>.nal_used_segment
	ldr	r3, [r0, #368]	@ D.43226, <variable>.pCurrNal
	ldr	ip, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	ip, r2	@ <variable>.nal_segment, segment_idx
	bhi	.L896	@,
	mov	r0, #0	@ D.43232,
	b	.L894	@
.L899:
	str	r3, [ip, #4]	@ D.43246, <variable>.bitsoffset
	mov	r0, #1	@ D.43232,
	b	.L894	@
	.fnend
	.size	MVC_PassBytes, .-MVC_PassBytes
	.align	2
	.global	MVC_GetBytes
	.type	MVC_GetBytes, %function
MVC_GetBytes:
	.fnstart
.LFB1746:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	cmp	r1, #0	@ pdes
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}	@,
	.save {r4, r5, r6, r7, r8, r9, sl}
	bne	.L909	@,
.L901:
	mvn	r0, #0	@ D.43274,
.L903:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	bx	lr
.L909:
	ldr	r3, [r0, #368]	@ D.43270, <variable>.pCurrNal
	cmp	r3, #0	@ D.43270,
	cmpne	r2, #0	@, len,
	movne	ip, #0	@, tmp158
	moveq	ip, #1	@, tmp158
	beq	.L901	@,
	ldrb	r4, [r3, #0]	@ zero_extendqisi2	@ D.43275, <variable>.nal_used_segment
	rsb	r5, r4, r4, asl #3	@, tmp161, D.43275, D.43275,
	add	r5, r3, r5, asl #2	@, tmp163, D.43270, tmp161,
	ldr	r5, [r5, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r5, #0	@ <variable>.streamBuffer,
	beq	.L901	@,
	ldr	r5, [r3, #64]	@ D.43282, <variable>.nal_segment
	cmp	r5, #2	@ D.43282,
	bhi	.L901	@,
	cmp	r4, #1	@ D.43275,
	bhi	.L901	@,
	cmp	r5, r4	@ D.43282, segment_idx
	bls	.L901	@,
	mov	r6, #28	@ tmp202,
.L906:
	mul	r7, r6, r4	@ tmp165, tmp202, segment_idx
	mov	r5, #0	@ ivtmp.2858,
	add	r3, r7, r3	@ tmp167, tmp165, D.43270
	ldr	r9, [r3, #20]	@, <variable>.bitsoffset
	mov	r8, r7	@ tmp201, tmp165
	ldr	sl, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r7, r9, #7	@ tmp173,,
	ldr	r3, [r3, #4]	@ D.43287, <variable>.streamBuffer
	add	sl, r3, sl	@ end_byte, D.43287, <variable>.bitstream_length
	add	r3, r3, r7, lsr #3	@, byte_pos, D.43287, tmp173,
.L902:
	add	r9, r5, r3	@ D.47068, ivtmp.2858, byte_pos
	add	r7, r5, r1	@ D.47066, ivtmp.2858, pdes
	cmp	sl, r9	@ end_byte, D.47068
	bls	.L910	@,
	ldrb	r7, [r3, r5]	@ zero_extendqisi2	@ tmp180,* ivtmp.2858
	add	ip, ip, #1	@ cnt, cnt,
	cmp	r2, ip	@ len, cnt
	strb	r7, [r1, r5]	@ tmp180,* ivtmp.2858
	add	r5, r5, #1	@ ivtmp.2858, ivtmp.2858,
	ldr	r9, [r0, #368]	@ temp.2876, <variable>.pCurrNal
	add	r7, r8, r9	@ tmp185, tmp201, temp.2876
	add	r7, r7, #16	@ tmp186, tmp185,
	ldr	r9, [r7, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r9, r9, #8	@ tmp193, <variable>.bitsoffset,
	str	r9, [r7, #4]	@ tmp193, <variable>.bitsoffset
	bhi	.L902	@,
	mov	r0, r2	@ D.43274, len
	b	.L903	@
.L910:
	ldr	r3, [r0, #368]	@ temp.2878, <variable>.pCurrNal
	add	r4, r4, #1	@ segment_idx, segment_idx,
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r1, r1, #1	@ tmp196, <variable>.nal_used_segment,
	strb	r1, [r3, #0]	@ tmp196, <variable>.nal_used_segment
	ldr	r3, [r0, #368]	@ D.43270, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r4	@ <variable>.nal_segment, segment_idx
	movhi	r1, r7	@ pdes, D.47066
	bhi	.L906	@
.L905:
	mov	r0, ip	@ D.43274, cnt
	b	.L903	@
	.fnend
	.size	MVC_GetBytes, .-MVC_GetBytes
	.align	2
	.global	MVC_InitOldSlice
	.type	MVC_InitOldSlice, %function
MVC_InitOldSlice:
	.fnstart
.LFB1750:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp}
	movw	r8, #:lower16:11155236	@ tmp161,
	movt	r8, #:upper16:11155236	@ tmp161,
	movw	r9, #:lower16:11164312	@ tmp160,
	movw	r7, #:lower16:11164320	@ tmp162,
	movt	r9, #:upper16:11164312	@ tmp160,
	ldr	fp, [r0, r8]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movt	r7, #:upper16:11164320	@ tmp162,
	movw	r3, #:lower16:11164304	@ tmp164,
	movw	r6, #:lower16:11164305	@ tmp165,
	movt	r3, #:upper16:11164304	@ tmp164,
	movt	r6, #:upper16:11164305	@ tmp165,
	movw	r5, #:lower16:11164316	@ tmp166,
	movw	r4, #:lower16:11164306	@ tmp167,
	movt	r5, #:upper16:11164316	@ tmp166,
	movt	r4, #:upper16:11164306	@ tmp167,
	movw	ip, #:lower16:11164328	@ tmp168,
	movw	r1, #:lower16:11164332	@ tmp169,
	movt	ip, #:upper16:11164328	@ tmp168,
	movt	r1, #:upper16:11164332	@ tmp169,
	movw	sl, #:lower16:11164336	@ tmp170,
	movw	r8, #:lower16:11164340	@ tmp171,
	movt	sl, #:upper16:11164336	@ tmp170,
	movt	r8, #:upper16:11164340	@ tmp171,
	movw	r2, #:lower16:11164344	@ tmp172,
	movt	r2, #:upper16:11164344	@ tmp172,
	str	fp, [r0, r9]	@ <variable>.MaxPpsNum, <variable>.PrevSlice.pic_parameter_set_id
	mov	r9, #0	@ tmp140,
	str	r9, [r0, sl]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movw	sl, #:lower16:88888	@ tmp163,
	str	r9, [r0, r8]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movt	sl, #:upper16:88888	@ tmp163,
	strb	r9, [r0, r3]	@ tmp140, <variable>.PrevSlice.field_pic_flag
	str	sl, [r0, r7]	@ tmp163, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp143,
	strb	r7, [r0, r6]	@ tmp143, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp146,
	str	r6, [r0, r5]	@ tmp146, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp148,
	strb	r5, [r0, r4]	@ tmp148, <variable>.PrevSlice.nal_unit_type
	mov	r4, #3	@ tmp151,
	str	r4, [r0, ip]	@ tmp151, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	ip, #0	@ tmp153,
	str	ip, [r0, r1]	@ tmp153, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r1, #262144	@ tmp159,
	str	r1, [r0, r2]	@ tmp159, <variable>.PrevSlice.first_mb_in_slice
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
	bx	lr
	.fnend
	.size	MVC_InitOldSlice, .-MVC_InitOldSlice
	.align	2
	.global	MVC_FindNaluArraySlot
	.type	MVC_FindNaluArraySlot, %function
MVC_FindNaluArraySlot:
	.fnstart
.LFB1758:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r2, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r2, r0, #96	@ ivtmp.2936, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L915	@,
	b	.L914	@
.L924:
	ldrb	ip, [r2, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r2, r2, #192	@ ivtmp.2936, ivtmp.2936,
	cmp	ip, #0	@ <variable>.is_valid,
	beq	.L914	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L916	@,
.L915:
	ldrb	r1, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L924	@,
.L914:
	cmp	r3, #136	@ Pos,
	bhi	.L916	@,
	add	r1, r3, r3, asl #1	@, tmp155, Pos, Pos,
	mov	r2, #1	@ tmp159,
	add	r0, r0, r1, asl #5	@, tmp157, pMvcCtx, tmp155,
	strb	r2, [r0, #377]	@ tmp159, <variable>.is_valid
	mov	r0, r3	@, D.44146
	bx	lr	@
.L916:
	mvn	r3, #0	@ D.44146,
	mov	r0, r3	@, D.44146
	bx	lr	@
	.fnend
	.size	MVC_FindNaluArraySlot, .-MVC_FindNaluArraySlot
	.align	2
	.global	MVC_HaveSliceToDec
	.type	MVC_HaveSliceToDec, %function
MVC_HaveSliceToDec:
	.fnstart
.LFB1760:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r1, #:lower16:11199444	@ tmp136,
	movt	r1, #:upper16:11199444	@ tmp136,
	ldr	r3, [r0, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #0	@ <variable>.SliceParaNum,
	mvneq	r0, #0	@,,
	movne	r0, #0	@,,
	bx	lr	@
	.fnend
	.size	MVC_HaveSliceToDec, .-MVC_HaveSliceToDec
	.global	__aeabi_idiv
	.align	2
	.global	MVC_GetDar
	.type	MVC_GetDar, %function
MVC_GetDar:
	.fnstart
.LFB1737:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	cmp	r0, #0	@ ar_idc
	mov	ip, r1	@ sar_width, sar_width
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	beq	.L930	@,
	subs	r1, r0, #255	@ D.42431, ar_idc,
	movne	r1, #1	@ D.42431
	cmp	r0, #255	@ ar_idc,
	cmpne	r0, #16	@, ar_idc,
	bgt	.L930	@,
	cmp	ip, #0	@ sar_width,
	cmpne	r2, #0	@, sar_height,
	beq	.L947	@,
.L931:
	cmp	r0, #1	@ ar_idc,
	moveq	r4, #5	@ final_dar,
	beq	.L933	@,
	cmp	r1, #0	@ D.42431,
	beq	.L934	@,
	movw	r2, #:lower16:.LANCHOR0	@ tmp162,
	movt	r2, #:upper16:.LANCHOR0	@ tmp162,
	add	r1, r2, r0, asl #3	@, tmp171, tmp162, ar_idc,
	ldr	r2, [r1, #84]	@ sar_height, MVC_SarTable
	ldr	ip, [r1, #80]	@ sar_width, MVC_SarTable
.L934:
	ldr	r0, [sp, #8]	@ img_height, img_height
	mov	lr, r3, asl #10	@ tmp174, img_width,
	mul	r1, r0, r2	@, img_height, sar_height
	mul	r0, ip, lr	@, sar_width, tmp174
	bl	__aeabi_idiv	@
	sub	r1, r0, #2400	@ iftmp.762, dar,
	sub	r3, r0, #2256	@ iftmp.763, dar,
	sub	ip, r1, #6	@ iftmp.762, iftmp.762,
	sub	r3, r3, #7	@ iftmp.763, iftmp.763,
	cmp	ip, #0	@ iftmp.762,
	rsblt	ip, r0, #2400	@ tmp181, dar,
	addlt	ip, ip, #6	@ iftmp.762, tmp181,
	cmp	r3, #0	@ iftmp.763,
	rsblt	r1, r0, #2256	@ tmp183, dar,
	addlt	r1, r1, #7	@ iftmp.2987, tmp183,
	movge	r1, r3	@ iftmp.2987, iftmp.763
	cmp	ip, r1	@ iftmp.762, iftmp.2987
	movlt	r4, #4	@ final_dar,
	blt	.L933	@,
	cmp	r3, #0	@ iftmp.763,
	sub	r2, r0, #1808	@ iftmp.2986, dar,
	rsblt	r3, r0, #2256	@ tmp184, dar,
	sub	r2, r2, #12	@ iftmp.2986, iftmp.2986,
	addlt	r3, r3, #7	@ iftmp.763, tmp184,
	cmp	r2, #0	@ iftmp.2986,
	rsblt	r1, r0, #1808	@ tmp186, dar,
	addlt	r1, r1, #12	@ iftmp.765, tmp186,
	movge	r1, r2	@ iftmp.765, iftmp.2986
	cmp	r3, r1	@ iftmp.763, iftmp.765
	movlt	r4, #3	@ final_dar,
	blt	.L933	@,
	cmp	r2, #0	@ iftmp.2986,
	sub	r4, r0, #1360	@ iftmp.767, dar,
	sub	r4, r4, #5	@ iftmp.767, iftmp.767,
	rsblt	r2, r0, #1808	@ tmp187, dar,
	addlt	r2, r2, #12	@ iftmp.2986, tmp187,
	cmp	r4, #0	@ iftmp.767,
	rsblt	r4, r0, #1360	@ tmp189, dar,
	addlt	r4, r4, #5	@ iftmp.767, tmp189,
	cmp	r2, r4	@ iftmp.2986, iftmp.767
	movlt	r4, #2	@ final_dar,
	movge	r4, #1	@ final_dar,
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, final_dar
	ldmfd	sp!, {r4, pc}	@
.L947:
	cmp	r0, #255	@ ar_idc,
	bne	.L931	@,
.L930:
	mov	r4, #0	@ final_dar,
.L933:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, final_dar
	ldmfd	sp!, {r4, pc}	@
	.fnend
	.size	MVC_GetDar, .-MVC_GetDar
	.align	2
	.global	MVC_SPSEqual
	.type	MVC_SPSEqual, %function
MVC_SPSEqual:
	.fnstart
.LFB1736:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	cmp	r0, #0	@ pSPS1
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #12
	sub	sp, sp, #12	@,,
	beq	.L980	@,
	cmp	r1, #0	@ pSPS2,
	beq	.L980	@,
	ldr	r6, [r0, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldr	r4, [r1, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldrb	r7, [r0, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r5, [r0, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	cmp	r6, r4	@ <variable>.profile_idc, <variable>.profile_idc
	cmpeq	r7, r3	@, <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	ldrb	r4, [r0, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	ldrb	r7, [r1, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	ip, #0	@, equal.3084
	moveq	ip, #1	@, equal.3084
	ldr	r6, [r1, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r5, r2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	movne	r2, #0	@, equal.3085
	andeq	r2, ip, #1	@,, equal.3085, equal.3084
	ldr	r5, [r0, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r4, r7	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	r3, #0	@, equal.3086
	andeq	r3, r2, #1	@,, equal.3086, equal.3085
	ldr	r4, [r0, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r7, [r1, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r5, r6	@ <variable>.level_idc, <variable>.level_idc
	movne	ip, #0	@, equal.3087
	andeq	ip, r3, #1	@,, equal.3087, equal.3086
	ldrb	r3, [r0, #27]	@ zero_extendqisi2	@ D.42323, <variable>.seq_scaling_matrix_present_flag
	ldrb	r6, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r4, r7	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movne	r2, #0	@, equal.3088
	andeq	r2, ip, #1	@,, equal.3088, equal.3087
	cmp	r6, r3	@ <variable>.seq_scaling_matrix_present_flag, D.42323
	movne	r6, #0	@, equal
	andeq	r6, r2, #1	@,, equal, equal.3088
	cmp	r3, #0	@ D.42323,
	beq	.L952	@,
	mov	r9, r0	@ ivtmp.3048, pSPS1
	mov	fp, r1	@ ivtmp.3050, pSPS2
	mov	r8, #0	@ i,
	str	r0, [sp, #0]	@ pSPS1, %sfp
	mov	sl, r1	@ pSPS2, pSPS2
	b	.L956	@
.L982:
	mov	r3, r8, asl #6	@ tmp285, i,
	ldr	r4, [r9, #760]	@ tmp229, <variable>.ScalingList4x4
	ldr	r7, [fp, #760]	@ tmp230, <variable>.ScalingList4x4
	add	r2, r3, sl	@, tmp285, pSPS2
	str	r2, [sp, #4]	@, %sfp
	add	r3, r3, r1	@ tmp286, tmp285,
	ldr	r0, [r9, #756]	@ tmp233, <variable>.ScalingList4x4
	ldr	r1, [fp, #756]	@ tmp234, <variable>.ScalingList4x4
	ldr	r5, [fp, #764]	@ tmp238, <variable>.ScalingList4x4
	cmp	r4, r7	@ tmp229, tmp230
	cmpeq	r0, r1	@, tmp233, tmp234
	ldr	r2, [r9, #764]	@ tmp237, <variable>.ScalingList4x4
	ldr	r4, [r9, #768]	@ tmp241, <variable>.ScalingList4x4
	ldr	r7, [fp, #768]	@ tmp242, <variable>.ScalingList4x4
	movne	ip, #0	@, equal.3105
	moveq	ip, #1	@, equal.3105
	ldr	r1, [fp, #772]	@ tmp246, <variable>.ScalingList4x4
	cmp	r2, r5	@ tmp237, tmp238
	movne	r2, #0	@, equal.3109
	andeq	r2, ip, #1	@,, equal.3109, equal.3105
	ldr	r5, [r9, #772]	@ tmp245, <variable>.ScalingList4x4
	cmp	r4, r7	@ tmp241, tmp242
	movne	r0, #0	@, equal.3113
	andeq	r0, r2, #1	@,, equal.3113, equal.3109
	ldr	r7, [r9, #776]	@ tmp249, <variable>.ScalingList4x4
	ldr	r2, [fp, #776]	@ tmp250, <variable>.ScalingList4x4
	cmp	r5, r1	@ tmp245, tmp246
	movne	ip, #0	@, equal.3117
	andeq	ip, r0, #1	@,, equal.3117, equal.3113
	ldr	r5, [r9, #780]	@ tmp253, <variable>.ScalingList4x4
	ldr	r1, [fp, #780]	@ tmp254, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp249, tmp250
	movne	r4, #0	@, equal.3121
	andeq	r4, ip, #1	@,, equal.3121, equal.3117
	ldr	r7, [r9, #784]	@ tmp257, <variable>.ScalingList4x4
	ldr	r2, [fp, #784]	@ tmp258, <variable>.ScalingList4x4
	cmp	r5, r1	@ tmp253, tmp254
	movne	r0, #0	@, equal.3125
	andeq	r0, r4, #1	@,, equal.3125, equal.3121
	ldr	r5, [r9, #788]	@ tmp261, <variable>.ScalingList4x4
	ldr	r1, [fp, #788]	@ tmp262, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp257, tmp258
	movne	ip, #0	@, equal.3129
	andeq	ip, r0, #1	@,, equal.3129, equal.3125
	ldr	r7, [r9, #792]	@ tmp265, <variable>.ScalingList4x4
	ldr	r2, [fp, #792]	@ tmp266, <variable>.ScalingList4x4
	cmp	r5, r1	@ tmp261, tmp262
	movne	r4, #0	@, equal.3133
	andeq	r4, ip, #1	@,, equal.3133, equal.3129
	ldr	r5, [r9, #796]	@ tmp269, <variable>.ScalingList4x4
	ldr	r1, [fp, #796]	@ tmp270, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp265, tmp266
	movne	r0, #0	@, equal.3137
	andeq	r0, r4, #1	@,, equal.3137, equal.3133
	ldr	r7, [r9, #800]	@ tmp273, <variable>.ScalingList4x4
	ldr	r2, [fp, #800]	@ tmp274, <variable>.ScalingList4x4
	cmp	r5, r1	@ tmp269, tmp270
	movne	ip, #0	@, equal.3141
	andeq	ip, r0, #1	@,, equal.3141, equal.3137
	ldr	r0, [r9, #804]	@ tmp277, <variable>.ScalingList4x4
	ldr	r5, [fp, #804]	@ tmp278, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp273, tmp274
	movne	r4, #0	@, equal.3145
	andeq	r4, ip, #1	@,, equal.3145, equal.3141
	ldr	r7, [fp, #808]	@ tmp282, <variable>.ScalingList4x4
	cmp	r0, r5	@ tmp277, tmp278
	movne	r1, #0	@, equal.3149
	andeq	r1, r4, #1	@,, equal.3149, equal.3145
	ldr	r5, [sp, #4]	@, %sfp
	ldr	ip, [r9, #808]	@ tmp281, <variable>.ScalingList4x4
	ldr	r0, [r3, #752]	@ tmp293, <variable>.ScalingList4x4
	cmp	ip, r7	@ tmp281, tmp282
	movne	r2, #0	@, equal.3153
	andeq	r2, r1, #1	@,, equal.3153, equal.3149
	ldr	r4, [r5, #752]	@ tmp294, <variable>.ScalingList4x4
	and	r6, r6, r2	@ equal.3157, equal, equal.3153
	ldr	r1, [r9, #812]	@ tmp297, <variable>.ScalingList4x4
	ldr	r7, [fp, #812]	@ tmp298, <variable>.ScalingList4x4
	cmp	r0, r4	@ tmp293, tmp294
	movne	r3, #0	@, equal.3161
	andeq	r3, r6, #1	@,, equal.3161, equal.3157
	cmp	r1, r7	@ tmp297, tmp298
	movne	r6, #0	@, equal
	andeq	r6, r3, #1	@,, equal, equal.3161
.L953:
	add	r8, r8, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3048, ivtmp.3048,
	cmp	r8, #8	@ i,
	add	fp, fp, #64	@ ivtmp.3050, ivtmp.3050,
	beq	.L981	@,
.L956:
	ldr	r1, [sp, #0]	@, %sfp
	add	r5, sl, r8	@ tmp223, pSPS2, i
	add	ip, r1, r8	@ tmp222,, i
	ldrb	r2, [r5, #6]	@ zero_extendqisi2	@ D.42329, <variable>.seq_scaling_list_present_flag
	ldrb	r0, [ip, #6]	@ zero_extendqisi2	@ D.42329, <variable>.seq_scaling_list_present_flag
	cmp	r0, r2	@ D.42329, D.42329
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r0, #0	@ D.42329,
	beq	.L953	@,
	cmp	r8, #5	@ i,
	bls	.L982	@,
	mov	r4, r8, asl #8	@ tmp300, i,
	ldr	r0, [sp, #0]	@, %sfp
	ldr	r7, [sp, #0]	@, %sfp
	sub	r1, r4, #400	@ tmp301, tmp300,
	add	r2, r0, r1	@ ivtmp.3032,, tmp301
	add	r3, sl, r1	@ ivtmp.3035, pSPS2, tmp301
	ldr	r5, [sl, r1]	@ tmp306, <variable>.ScalingList8x8
	add	r0, r2, #8	@ ivtmp.3032, ivtmp.3032,
	ldr	r4, [r7, r1]	@ tmp305, <variable>.ScalingList8x8
	add	r1, r3, #8	@ ivtmp.3035, ivtmp.3035,
	ldr	r7, [r2, #4]	@ tmp434, <variable>.ScalingList8x8
	mov	ip, #2	@ j,
	ldr	r3, [r3, #4]	@ tmp435, <variable>.ScalingList8x8
	cmp	r4, r5	@ tmp305, tmp306
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r7, r3	@ tmp434, tmp435
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
.L955:
	mov	r2, r0	@ tmp402, ivtmp.3032
	mov	r3, r1	@ tmp400, ivtmp.3035
	ldr	r7, [r2], #4	@ tmp406, <variable>.ScalingList8x8
	add	ip, ip, #2	@ j, j,
	ldr	r5, [r3], #4	@ tmp407, <variable>.ScalingList8x8
	ldr	r4, [r0, #4]	@ tmp413, <variable>.ScalingList8x8
	add	r0, r2, #4	@ ivtmp.3032, tmp402,
	ldr	r2, [r1, #4]	@ tmp414, <variable>.ScalingList8x8
	cmp	r7, r5	@ tmp406, tmp407
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	add	r1, r3, #4	@ ivtmp.3035, tmp400,
	cmp	r4, r2	@ tmp413, tmp414
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	ip, #64	@ j,
	bne	.L955	@,
	add	r8, r8, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3048, ivtmp.3048,
	cmp	r8, #8	@ i,
	add	fp, fp, #64	@ ivtmp.3050, ivtmp.3050,
	bne	.L956	@,
.L981:
	ldr	r0, [sp, #0]	@ pSPS1, %sfp
	mov	r1, sl	@ pSPS2, pSPS2
.L952:
	ldr	r3, [r0, #2900]	@ D.42348, <variable>.pic_order_cnt_type
	ldr	r4, [r1, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r5, [r0, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	ldr	r7, [r1, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r3, r4	@ D.42348, <variable>.pic_order_cnt_type
	cmpeq	r5, r7	@, <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movne	ip, #0	@, equal.3089
	moveq	ip, #1	@, equal.3089
	cmp	r3, #0	@ D.42348,
	and	r6, ip, r6	@ equal.3080, equal.3089, equal
	bne	.L983	@,
	ldr	r2, [r0, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	ldr	r3, [r1, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	cmp	r2, r3	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	movne	r6, #0	@, equal.3080
	andeq	r6, r6, #1	@,, equal.3080, equal.3080
.L957:
	ldrb	r3, [r1, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r5, [r0, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r2, [r1, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r7, [r0, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	ip, [r1, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	cmp	r7, r3	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	cmpeq	r5, r2	@, <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r4, [r0, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r5, [r0, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r2, [r1, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r3, #0	@, equal.3093
	moveq	r3, #1	@, equal.3093
	cmp	r4, ip	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movne	r4, #0	@, equal.3094
	andeq	r4, r3, #1	@,, equal.3094, equal.3093
	ldrb	r3, [r0, #20]	@ zero_extendqisi2	@ D.42381, <variable>.frame_mbs_only_flag
	ldrb	ip, [r1, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r5, r2	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r2, #0	@, equal.3095
	andeq	r2, r4, #1	@,, equal.3095, equal.3094
	cmp	ip, r3	@ <variable>.frame_mbs_only_flag, D.42381
	movne	r2, #0	@, equal.3096
	andeq	r2, r2, #1	@,, equal.3096, equal.3095
	cmp	r3, #0	@ D.42381,
	and	r6, r2, r6	@ equal.3081, equal.3096, equal.3080
	bne	.L961	@,
	ldrb	r4, [r0, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	ldrb	ip, [r1, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	cmp	r4, ip	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movne	r6, #0	@, equal.3081
	andeq	r6, r6, #1	@,, equal.3081, equal.3081
.L961:
	ldrb	r3, [r0, #23]	@ zero_extendqisi2	@ D.42392, <variable>.frame_cropping_flag
	ldrb	r2, [r0, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldrb	r4, [r1, #23]	@ zero_extendqisi2	@ <variable>.frame_cropping_flag, <variable>.frame_cropping_flag
	ldrb	ip, [r1, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	cmp	r4, r3	@ <variable>.frame_cropping_flag, D.42392
	cmpeq	r2, ip	@, <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	movne	r2, #0	@, equal.3097
	moveq	r2, #1	@, equal.3097
	cmp	r3, #0	@ D.42392,
	and	r3, r2, r6	@ equal.3082, equal.3097, equal.3081
	beq	.L962	@,
	ldr	r5, [r1, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r4, [r0, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r2, [r1, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r7, [r0, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r6, [r0, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	cmp	r7, r5	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	cmpeq	r4, r2	@, <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	ip, [r1, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r4, [r0, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	ldr	r2, [r1, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r5, #0	@, equal.3098
	moveq	r5, #1	@, equal.3098
	cmp	r6, ip	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	movne	ip, #0	@, equal.3099
	andeq	ip, r5, #1	@,, equal.3099, equal.3098
	cmp	r4, r2	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r2, #0	@, equal.3100
	andeq	r2, ip, #1	@,, equal.3100, equal.3099
	and	r3, r3, r2	@ equal.3082, equal.3082, equal.3100
.L962:
	ldrb	r0, [r0, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	ldrb	ip, [r1, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r0, ip	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	movne	r3, #0	@, tmp390
	andeq	r3, r3, #1	@,, tmp390, equal.3082
	cmp	r3, #0	@ tmp390,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L950:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L983:
	cmp	r3, #1	@ D.42348,
	bne	.L957	@,
	ldr	r5, [r0, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldr	r7, [r1, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldrb	r8, [r1, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldrb	r2, [r0, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r4, [r0, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	cmp	r5, r7	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	cmpeq	r2, r8	@, <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r3, [r1, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	ldr	r8, [r0, #2916]	@ D.42363, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	ldr	r7, [r1, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	ip, #0	@, equal.3090
	moveq	ip, #1	@, equal.3090
	cmp	r4, r3	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movne	r5, #0	@, equal.3091
	andeq	r5, ip, #1	@,, equal.3091, equal.3090
	cmp	r8, r7	@ D.42363, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	r5, #0	@, equal.3092
	andeq	r5, r5, #1	@,, equal.3092, equal.3091
	cmp	r8, #0	@ D.42363,
	and	r6, r6, r5	@ equal.3080, equal.3080, equal.3092
	beq	.L957	@,
	ldr	r4, [r0, #2920]	@ tmp337, <variable>.offset_for_ref_frame
	mov	r8, r8, asl #2	@ D.47227, D.42363,
	ldr	ip, [r1, #2920]	@ tmp338, <variable>.offset_for_ref_frame
	mov	r3, #4	@ ivtmp.3023,
	sub	r2, r8, #4	@ tmp395, D.47227,
	cmp	r4, ip	@ tmp337, tmp338
	movne	r6, #0	@, equal.3080
	andeq	r6, r6, #1	@,, equal.3080, equal.3080
	cmp	r3, r8	@ ivtmp.3023, D.47227
	ubfx	r2, r2, #2, #1	@ tmp396, tmp395,,
	beq	.L957	@,
	cmp	r2, #0	@ tmp396,
	beq	.L960	@,
	ldr	r2, [r0, #2924]	@ tmp431, <variable>.offset_for_ref_frame
	mov	r3, #8	@ ivtmp.3023,
	ldr	r7, [r1, #2924]	@ tmp432, <variable>.offset_for_ref_frame
	cmp	r2, r7	@ tmp431, tmp432
	movne	r6, #0	@, equal.3080
	andeq	r6, r6, #1	@,, equal.3080, equal.3080
	cmp	r3, r8	@ ivtmp.3023, D.47227
	beq	.L957	@,
.L960:
	add	r2, r3, #4	@ tmp397, ivtmp.3023,
	add	r4, r0, r3	@ tmp417, pSPS1, ivtmp.3023
	add	r3, r1, r3	@ tmp418, pSPS2, ivtmp.3023
	add	ip, r0, r2	@ tmp424, pSPS1, tmp397
	add	r7, r1, r2	@ tmp425, pSPS2, tmp397
	ldr	r5, [r4, #2920]	@ tmp419, <variable>.offset_for_ref_frame
	ldr	r4, [r3, #2920]	@ tmp420, <variable>.offset_for_ref_frame
	add	r3, r2, #4	@ ivtmp.3023, tmp397,
	ldr	ip, [ip, #2920]	@ tmp426, <variable>.offset_for_ref_frame
	ldr	r2, [r7, #2920]	@ tmp427, <variable>.offset_for_ref_frame
	cmp	r5, r4	@ tmp419, tmp420
	movne	r6, #0	@, equal.3080
	andeq	r6, r6, #1	@,, equal.3080, equal.3080
	cmp	ip, r2	@ tmp426, tmp427
	movne	r6, #0	@, equal.3080
	andeq	r6, r6, #1	@,, equal.3080, equal.3080
	cmp	r3, r8	@ ivtmp.3023, D.47227
	bne	.L960	@,
	b	.L957	@
.L980:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ ret,
	b	.L950	@
	.fnend
	.size	MVC_SPSEqual, .-MVC_SPSEqual
	.align	2
	.global	MVC_PPSEqual
	.type	MVC_PPSEqual, %function
MVC_PPSEqual:
	.fnstart
.LFB1734:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	cmp	r0, #0	@ pPPS1
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #20
	sub	sp, sp, #20	@,,
	beq	.L1005	@,
	cmp	r1, #0	@ pPPS2,
	beq	.L1005	@,
	ldr	r4, [r0, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	ip, [r1, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r3, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r6, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r2, [r1, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r4, ip	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmpeq	r6, r3	@, <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r5, [r0, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	ldrb	r4, [r0, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	ip, #0	@, equal.3251
	moveq	ip, #1	@, equal.3251
	cmp	r5, r2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	movne	r5, #0	@, equal.3252
	andeq	r5, ip, #1	@,, equal.3252, equal.3251
	ldr	ip, [r1, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldr	r2, [r0, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	cmp	r4, r3	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	r4, #0	@, equal.3253
	andeq	r4, r5, #1	@,, equal.3253, equal.3252
	ldr	r5, [r1, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	ldr	r3, [r0, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r2, ip	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movne	r2, #0	@, equal.3254
	andeq	r2, r4, #1	@,, equal.3254, equal.3253
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r3, r5	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movne	r3, #0	@, equal.3255
	andeq	r3, r2, #1	@,, equal.3255, equal.3254
	ldr	r2, [r1, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	ldr	r5, [r0, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	ip, r4	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	movne	ip, #0	@, equal.3256
	andeq	ip, r3, #1	@,, equal.3256, equal.3255
	ldr	r3, [r1, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	ldr	r4, [r0, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	cmp	r5, r2	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	movne	r5, #0	@, equal.3257
	andeq	r5, ip, #1	@,, equal.3257, equal.3256
	ldr	ip, [r1, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	ldr	r2, [r0, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	cmp	r4, r3	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	movne	r4, #0	@, equal.3258
	andeq	r4, r5, #1	@,, equal.3258, equal.3257
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r2, ip	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movne	r2, #0	@, equal.3259
	andeq	r2, r4, #1	@,, equal.3259, equal.3258
	ldrb	r4, [r1, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	ldrb	ip, [r0, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	cmp	r3, r5	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	movne	r3, #0	@, equal.3260
	andeq	r3, r2, #1	@,, equal.3260, equal.3259
	ldr	r2, [r0, #60]	@ D.42068, <variable>.transform_8x8_mode_flag
	ldr	r5, [r1, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	cmp	ip, r4	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	movne	ip, #0	@, equal.3261
	andeq	ip, r3, #1	@,, equal.3261, equal.3260
	ldrb	r3, [r0, #18]	@ zero_extendqisi2	@ D.42071, <variable>.pic_scaling_matrix_present_flag
	ldrb	r4, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r2, r5	@ D.42068, <variable>.transform_8x8_mode_flag
	movne	ip, #0	@, equal.3262
	andeq	ip, ip, #1	@,, equal.3262, equal.3261
	cmp	r4, r3	@ <variable>.pic_scaling_matrix_present_flag, D.42071
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3262
	cmp	r3, #0	@ D.42071,
	beq	.L988	@,
	mov	r3, r2, asl #1	@ tmp236, D.42068,
	adds	r2, r3, #6	@, tmp236,
	str	r2, [sp, #12]	@, %sfp
	beq	.L988	@,
	mov	fp, r0	@ ivtmp.3211, pPPS1
	mov	r8, r1	@ ivtmp.3309, pPPS2
	mov	r9, #0	@ i,
	mov	sl, r1	@ pPPS2, pPPS2
	stmia	sp, {r0, r1}	@ phole stm
	str	r0, [sp, #8]	@ pPPS1, %sfp
.L992:
	ldr	r3, [sp, #8]	@, %sfp
	add	r4, sl, r9	@ tmp238, pPPS2, i
	add	r2, r3, r9	@ tmp237,, i
	ldrb	r1, [r4, #5]	@ zero_extendqisi2	@ D.42077, <variable>.pic_scaling_list_present_flag
	ldrb	r0, [r2, #5]	@ zero_extendqisi2	@ D.42077, <variable>.pic_scaling_list_present_flag
	cmp	r0, r1	@ D.42077, D.42077
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r0, #0	@ D.42077,
	beq	.L1004	@,
	cmp	r9, #5	@ i,
	bhi	.L990	@,
	ldmia	sp, {r2, r4}	@ phole ldm
	ldr	r0, [r2, #1984]	@ D.42084, <variable>.UseDefaultScalingMatrix4x4Flag
	ldr	r1, [r4, #1984]	@ tmp244, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r0, r1	@ D.42084, tmp244
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r0, #0	@ D.42084,
	beq	.L1002	@,
.L1004:
	add	r9, r9, #1	@ i, i,
.L989:
	ldr	r3, [sp, #12]	@, %sfp
	add	fp, fp, #64	@ ivtmp.3211, ivtmp.3211,
	ldr	r4, [sp, #0]	@, %sfp
	add	r8, r8, #64	@ ivtmp.3309, ivtmp.3309,
	ldr	r0, [sp, #4]	@, %sfp
	cmp	r3, r9	@, i
	add	r4, r4, #4	@,,
	str	r4, [sp, #0]	@, %sfp
	add	r1, r0, #4	@,,
	str	r1, [sp, #4]	@, %sfp
	bhi	.L992	@,
	ldr	r0, [sp, #8]	@ pPPS1, %sfp
	mov	r1, sl	@ pPPS2, pPPS2
.L988:
	ldr	r2, [r0, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r0, [r1, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	cmp	r2, r0	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	movne	ip, #0	@, tmp327
	andeq	ip, ip, #1	@,, tmp327, equal
	cmp	ip, #0	@ tmp327,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L986:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L990:
	ldr	r0, [sp, #0]	@, %sfp
	sub	r2, r9, #6	@ D.42094, i,
	ldr	r1, [sp, #4]	@, %sfp
	ldr	r4, [r0, #1984]	@ D.42095, <variable>.UseDefaultScalingMatrix8x8Flag
	ldr	r3, [r1, #1984]	@ tmp313, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r4, r3	@ D.42095, tmp313
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #0	@ D.42095,
	bne	.L1004	@,
	mov	r2, r2, asl #8	@ tmp315, D.42094,
	ldr	r6, [sp, #8]	@, %sfp
	add	r7, r2, #448	@ tmp316, tmp315,
	add	r0, sl, r7	@ ivtmp.3201, pPPS2, tmp316
	add	r1, r6, r7	@ ivtmp.3198,, tmp316
.L991:
	mov	r2, r1	@ tmp331, ivtmp.3198
	mov	r3, r0	@ tmp332, ivtmp.3201
	ldr	r7, [r2], #4	@ tmp320, <variable>.ScalingList8x8
	add	r4, r4, #2	@ j, j,
	ldr	r6, [r3], #4	@ tmp321, <variable>.ScalingList8x8
	ldr	r5, [r1, #4]	@ tmp337, <variable>.ScalingList8x8
	add	r1, r2, #4	@ ivtmp.3198, tmp331,
	ldr	r2, [r0, #4]	@ tmp338, <variable>.ScalingList8x8
	cmp	r7, r6	@ tmp320, tmp321
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	add	r0, r3, #4	@ ivtmp.3201, tmp332,
	cmp	r5, r2	@ tmp337, tmp338
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #64	@ j,
	bne	.L991	@,
	b	.L1004	@
.L1002:
	ldr	r0, [fp, #72]	@ tmp247, <variable>.ScalingList4x4
	add	r9, r9, #1	@ i, i,
	ldr	r6, [r8, #72]	@ tmp248, <variable>.ScalingList4x4
	ldr	r2, [fp, #68]	@ tmp251, <variable>.ScalingList4x4
	ldr	r5, [r8, #68]	@ tmp252, <variable>.ScalingList4x4
	ldr	r4, [fp, #76]	@ tmp255, <variable>.ScalingList4x4
	cmp	r0, r6	@ tmp247, tmp248
	cmpeq	r2, r5	@, tmp251, tmp252
	ldr	r7, [r8, #76]	@ tmp256, <variable>.ScalingList4x4
	ldr	r1, [r8, #80]	@ tmp260, <variable>.ScalingList4x4
	ldr	r6, [fp, #80]	@ tmp259, <variable>.ScalingList4x4
	movne	r3, #0	@, equal.3267
	moveq	r3, #1	@, equal.3267
	ldr	r0, [r8, #84]	@ tmp264, <variable>.ScalingList4x4
	cmp	r4, r7	@ tmp255, tmp256
	movne	r3, #0	@, equal.3271
	andeq	r3, r3, #1	@,, equal.3271, equal.3267
	ldr	r4, [fp, #84]	@ tmp263, <variable>.ScalingList4x4
	cmp	r6, r1	@ tmp259, tmp260
	movne	r5, #0	@, equal.3275
	andeq	r5, r3, #1	@,, equal.3275, equal.3271
	ldr	r1, [fp, #88]	@ tmp267, <variable>.ScalingList4x4
	ldr	r3, [r8, #88]	@ tmp268, <variable>.ScalingList4x4
	cmp	r4, r0	@ tmp263, tmp264
	movne	r2, #0	@, equal.3279
	andeq	r2, r5, #1	@,, equal.3279, equal.3275
	ldr	r4, [fp, #92]	@ tmp271, <variable>.ScalingList4x4
	ldr	r5, [r8, #92]	@ tmp272, <variable>.ScalingList4x4
	cmp	r1, r3	@ tmp267, tmp268
	movne	r3, #0	@, equal.3283
	andeq	r3, r2, #1	@,, equal.3283, equal.3279
	ldr	r0, [fp, #96]	@ tmp275, <variable>.ScalingList4x4
	ldr	r2, [r8, #96]	@ tmp276, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp271, tmp272
	movne	r3, #0	@, equal.3287
	andeq	r3, r3, #1	@,, equal.3287, equal.3283
	ldr	r1, [fp, #100]	@ tmp279, <variable>.ScalingList4x4
	ldr	r5, [r8, #100]	@ tmp280, <variable>.ScalingList4x4
	cmp	r0, r2	@ tmp275, tmp276
	movne	r2, #0	@, equal.3291
	andeq	r2, r3, #1	@,, equal.3291, equal.3287
	ldr	r4, [fp, #104]	@ tmp283, <variable>.ScalingList4x4
	ldr	r3, [r8, #104]	@ tmp284, <variable>.ScalingList4x4
	cmp	r1, r5	@ tmp279, tmp280
	movne	r2, #0	@, equal.3295
	andeq	r2, r2, #1	@,, equal.3295, equal.3291
	ldr	r0, [fp, #108]	@ tmp287, <variable>.ScalingList4x4
	ldr	r5, [r8, #108]	@ tmp288, <variable>.ScalingList4x4
	cmp	r4, r3	@ tmp283, tmp284
	movne	r3, #0	@, equal.3299
	andeq	r3, r2, #1	@,, equal.3299, equal.3295
	ldr	r1, [fp, #112]	@ tmp291, <variable>.ScalingList4x4
	ldr	r2, [r8, #112]	@ tmp292, <variable>.ScalingList4x4
	cmp	r0, r5	@ tmp287, tmp288
	movne	r3, #0	@, equal.3303
	andeq	r3, r3, #1	@,, equal.3303, equal.3299
	ldr	r4, [fp, #116]	@ tmp295, <variable>.ScalingList4x4
	ldr	r5, [r8, #116]	@ tmp296, <variable>.ScalingList4x4
	cmp	r1, r2	@ tmp291, tmp292
	movne	r2, #0	@, equal.3308
	andeq	r2, r3, #1	@,, equal.3308, equal.3303
	ldr	r0, [fp, #120]	@ tmp299, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp295, tmp296
	movne	r2, #0	@, equal.3313
	andeq	r2, r2, #1	@,, equal.3313, equal.3308
	ldr	r4, [sp, #8]	@, %sfp
	ldr	r3, [r8, #120]	@ tmp300, <variable>.ScalingList4x4
	ldr	r1, [r4, r9, asl #6]	@ tmp305, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp299, tmp300
	movne	r3, #0	@, equal.3317
	andeq	r3, r2, #1	@,, equal.3317, equal.3313
	ldr	r4, [sl, r9, asl #6]	@ tmp306, <variable>.ScalingList4x4
	and	ip, ip, r3	@ equal.3321, equal, equal.3317
	ldr	r0, [fp, #124]	@ tmp309, <variable>.ScalingList4x4
	ldr	r3, [r8, #124]	@ tmp310, <variable>.ScalingList4x4
	cmp	r1, r4	@ tmp305, tmp306
	movne	ip, #0	@, equal.3325
	andeq	ip, ip, #1	@,, equal.3325, equal.3321
	cmp	r0, r3	@ tmp309, tmp310
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3325
	b	.L989	@
.L1005:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ ret,
	b	.L986	@
	.fnend
	.size	MVC_PPSEqual, .-MVC_PPSEqual
	.align	2
	.global	MVC_CalcStreamBits
	.type	MVC_CalcStreamBits, %function
MVC_CalcStreamBits:
	.fnstart
.LFB1729:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11159240	@ tmp165,
	movt	r1, #:upper16:11159240	@ tmp165,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #0	@ <variable>.CurrPPS.entropy_coding_mode_flag,
	beq	.L1007	@,
	ldr	lr, [r0, #368]	@ D.41586, <variable>.pCurrNal
	ldr	r1, [lr, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r3, r1, #7	@ tmp167, <variable>.nal_bitoffset,
	bic	ip, r3, #7	@ tmp169, tmp167,
	str	ip, [lr, #60]	@ tmp169, <variable>.nal_bitoffset
	ldr	r0, [r0, #368]	@ temp.3366, <variable>.pCurrNal
	ldr	r5, [r0, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	sub	r2, r5, #1	@ tmp171, <variable>.nal_trail_zero_bit_num,
	str	r2, [r0, #68]	@ tmp171, <variable>.nal_trail_zero_bit_num
.L1007:
	ldr	r2, [r4, #368]	@ temp.3405, <variable>.pCurrNal
	ldrb	r5, [r2, #0]	@ zero_extendqisi2	@ D.41595, <variable>.nal_used_segment
	cmp	r5, #0	@ D.41595,
	beq	.L1009	@,
	rsb	ip, r5, r5, asl #3	@, tmp174, D.41595, D.41595,
	mov	r3, #28	@ ivtmp.3364,
	ldr	r5, [r2, #8]	@ code_len_byte, <variable>.bitstream_length
	mov	r1, ip, asl #2	@ D.47578, tmp174,
	cmp	r3, r1	@ ivtmp.3364, D.47578
	sub	r0, r1, #28	@ tmp401, D.47578,
	ubfx	r0, r0, #2, #1	@ tmp405, tmp401,,
	beq	.L1009	@,
	cmp	r0, #0	@ tmp405,
	beq	.L1010	@,
	ldr	ip, [r2, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r3, #56	@ ivtmp.3364,
	cmp	r3, r1	@ ivtmp.3364, D.47578
	add	r5, r5, ip	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	beq	.L1009	@,
.L1010:
	add	lr, r2, r3	@ tmp410, temp.3405, ivtmp.3364
	add	r3, r3, #56	@ ivtmp.3364, ivtmp.3364,
	cmp	r3, r1	@ ivtmp.3364, D.47578
	ldr	ip, [lr, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	lr, [lr, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r5, r5, ip	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	add	r5, r5, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bne	.L1010	@,
.L1009:
	bl	vfmw_dprint_nothing	@
	ldr	r0, [r4, #368]	@ temp.3368, <variable>.pCurrNal
	ldrb	r1, [r0, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	ip, [r0, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r2, r1, r1, asl #3	@, tmp182, <variable>.nal_used_segment, <variable>.nal_used_segment,
	and	r1, ip, #7	@ tmp187, <variable>.nal_bitoffset,
	add	r3, r0, r2, asl #2	@, tmp184, temp.3368, tmp182,
	str	r1, [r3, #20]	@ tmp187, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3370, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3373, <variable>.nal_used_segment
	ldr	r1, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r0, ip, ip, asl #3	@, tmp191, temp.3373, temp.3373,
	add	ip, r3, r0, asl #2	@, tmp193, temp.3370, tmp191,
	ldr	r2, [ip, #12]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	add	r0, r2, r1, lsr #3	@, tmp204, <variable>.stream_phy_addr, <variable>.nal_bitoffset,
	rsb	r1, r5, r0	@ tmp206, code_len_byte, tmp204
	str	r1, [ip, #24]	@ tmp206, <variable>.bytespos
	ldr	r0, [r4, #368]	@ temp.3374, <variable>.pCurrNal
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.3376, <variable>.nal_used_segment
	ldr	r1, [r0, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r2, r3, r3, asl #3	@, tmp210, temp.3376, temp.3376,
	add	r3, r0, r2, asl #2	@, tmp212, temp.3374, tmp210,
	ldr	ip, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r5, r5, ip	@ tmp219, code_len_byte, <variable>.bitstream_length
	rsb	r2, r1, r5, asl #3	@, tmp223, <variable>.nal_bitoffset, tmp219,
	str	r2, [r3, #16]	@ tmp223, <variable>.valid_bitlen
	b	.L1036	@
.L1038:
	rsb	lr, r2, r1	@ tmp236, temp.3402, tmp391
	add	r1, r3, lr, asl #2	@, tmp238, temp.3400, tmp236,
	add	r3, r1, #16	@ tmp239, tmp238,
	ldr	ip, [r3, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r2, ip, #8	@ tmp248, <variable>.bitsoffset,
	str	r2, [r3, #4]	@ tmp248, <variable>.bitsoffset
	ldr	r5, [r4, #368]	@ temp.3379, <variable>.pCurrNal
	ldrb	r0, [r5, #0]	@ zero_extendqisi2	@ temp.3381, <variable>.nal_used_segment
	rsb	lr, r0, r0, asl #3	@, tmp252, temp.3381, temp.3381,
	add	r1, r5, lr, asl #2	@, tmp254, temp.3379, tmp252,
	add	r3, r1, #16	@ tmp255, tmp254,
	ldr	ip, [r3, #8]	@ <variable>.bytespos, <variable>.bytespos
	sub	r2, ip, #1	@ tmp264, <variable>.bytespos,
	str	r2, [r3, #8]	@ tmp264, <variable>.bytespos
.L1036:
	ldr	r3, [r4, #368]	@ temp.3400, <variable>.pCurrNal
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ temp.3402, <variable>.nal_used_segment
	mov	r1, r2, asl #3	@ tmp391, temp.3402,
	rsb	r0, r2, r1	@ tmp227, temp.3402, tmp391
	add	r5, r3, r0, asl #2	@, tmp229, temp.3400, tmp227,
	ldr	lr, [r5, #24]	@ <variable>.bytespos, <variable>.bytespos
	tst	lr, #3	@ <variable>.bytespos,
	bne	.L1038	@,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, #368]	@ temp.3383, <variable>.pCurrNal
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	r2, [r3, #64]	@ temp.3392, <variable>.nal_segment
	add	r5, r5, #1	@ i, <variable>.nal_used_segment,
	cmp	r5, r2	@ i, temp.3392
	bcs	.L1013	@,
	mov	r6, #0	@ tmp398,
.L1023:
	rsb	r2, r5, r5, asl #3	@, tmp278, i, i,
	mov	r2, r2, asl #2	@ tmp279, tmp278,
	add	r1, r2, r3	@ tmp280, tmp279, temp.3383
	add	ip, r1, #16	@ tmp281, tmp280,
	str	r6, [ip, #4]	@ tmp398, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3387, <variable>.pCurrNal
	add	r0, r2, r3	@ tmp288, tmp279, temp.3387
	ldr	lr, [r0, #12]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	lr, [r0, #24]	@ <variable>.stream_phy_addr, <variable>.bytespos
	ldr	r1, [r4, #368]	@ temp.3388, <variable>.pCurrNal
	add	r3, r2, r1	@ tmp303, tmp279, temp.3388
	ldr	ip, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r0, ip, asl #3	@ tmp311, <variable>.bitstream_length,
	str	r0, [r3, #16]	@ tmp311, <variable>.valid_bitlen
	b	.L1037	@
.L1039:
	add	lr, r2, r3	@ tmp326, tmp397, temp.3367
	add	r3, lr, #16	@ tmp327, tmp326,
	ldr	r1, [r3, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	ip, r1, #8	@ tmp336, <variable>.bitsoffset,
	str	ip, [r3, #4]	@ tmp336, <variable>.bitsoffset
	ldr	r0, [r4, #368]	@ temp.3390, <variable>.pCurrNal
	add	lr, r2, r0	@ tmp342, tmp397, temp.3390
	add	r3, lr, #16	@ tmp343, tmp342,
	ldr	r1, [r3, #8]	@ <variable>.bytespos, <variable>.bytespos
	sub	ip, r1, #1	@ tmp352, <variable>.bytespos,
	str	ip, [r3, #8]	@ tmp352, <variable>.bytespos
.L1037:
	ldr	r3, [r4, #368]	@ temp.3367, <variable>.pCurrNal
	add	r0, r2, r3	@ tmp317, tmp279, temp.3367
	ldr	lr, [r0, #24]	@ <variable>.bytespos, <variable>.bytespos
	tst	lr, #3	@ <variable>.bytespos,
	bne	.L1039	@,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, #368]	@ temp.3383, <variable>.pCurrNal
	add	r5, r5, #1	@ i, i,
	ldr	r2, [r3, #64]	@ temp.3392, <variable>.nal_segment
	cmp	r2, r5	@ temp.3392, i
	bhi	.L1023	@,
.L1013:
	sub	r2, r2, #1	@ D.41620, temp.3392,
	cmp	r2, #1	@ D.41620,
	bhi	.L1040	@,
	rsb	lr, r2, r2, asl #3	@, tmp365, D.41620, D.41620,
	ldr	r1, [r3, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r3, r3, lr, asl #2	@, tmp367, temp.3383, tmp365,
	add	r0, r3, #8	@ tmp368, tmp367,
	ldr	ip, [r0, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	rsb	r2, r1, ip	@ tmp378, <variable>.nal_trail_zero_bit_num, <variable>.valid_bitlen
	str	r2, [r0, #8]	@ tmp378, <variable>.valid_bitlen
	ldr	r2, [r4, #368]	@ temp.3394, <variable>.pCurrNal
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ i.3386, <variable>.nal_used_segment
	ldr	r1, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i.3386
	ldmlsfd	sp!, {r4, r5, r6, pc}	@
	movw	ip, #:lower16:11196720	@ tmp395,
	movt	ip, #:upper16:11196720	@ tmp395,
.L1022:
	rsb	r0, r3, r3, asl #3	@, tmp383, i.3386, i.3386,
	ldr	r5, [r4, ip]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	add	r3, r3, #1	@ i.3386, i.3386,
	add	lr, r2, r0, asl #2	@, tmp385, temp.3394, tmp383,
	ldr	r0, [lr, #24]	@ temp.3397, <variable>.bytespos
	cmp	r0, r5	@ temp.3397, <variable>.CurrPic.stream_base_addr
	strcc	r0, [r4, ip]	@ temp.3397, <variable>.CurrPic.stream_base_addr
	ldrcc	r1, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i.3386
	bhi	.L1022	@,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1040:
	ldmfd	sp!, {r4, r5, r6, lr}	@
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_CalcStreamBits, .-MVC_CalcStreamBits
	.align	2
	.global	MVC_IsNewPic
	.type	MVC_IsNewPic, %function
MVC_IsNewPic:
	.fnstart
.LFB1720:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	movw	sl, #:lower16:11152036	@ tmp154,
	movt	sl, #:upper16:11152036	@ tmp154,
	movw	r7, #:lower16:11164308	@ tmp155,
	movw	r6, #:lower16:11164312	@ tmp160,
	movt	r7, #:upper16:11164308	@ tmp155,
	ldr	r5, [r0, sl]	@ D.40884, <variable>.pCurrSPS
	movt	r6, #:upper16:11164312	@ tmp160,
	movw	r8, #:lower16:11162632	@ tmp161,
	movt	r8, #:upper16:11162632	@ tmp161,
	ldr	sl, [r0, r7]	@ <variable>.PrevSlice.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	movw	ip, #:lower16:11164320	@ tmp166,
	ldr	r7, [r0, r6]	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movt	ip, #:upper16:11164320	@ tmp166,
	ldr	r6, [r0, r8]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r1, #:lower16:11162644	@ tmp167,
	ldr	r8, [r5, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movt	r1, #:upper16:11162644	@ tmp167,
	movw	r2, #:lower16:11164304	@ tmp172,
	movw	r3, #:lower16:11162625	@ tmp173,
	movt	r2, #:upper16:11164304	@ tmp172,
	movt	r3, #:upper16:11162625	@ tmp173,
	cmp	r7, r6	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmpeq	sl, r8	@, <variable>.PrevSlice.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r4, [r0, ip]	@ <variable>.PrevSlice.frame_num, <variable>.PrevSlice.frame_num
	ldr	lr, [r0, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ D.40890, <variable>.PrevSlice.field_pic_flag
	moveq	ip, #0	@, result.3432
	movne	ip, #1	@, result.3432
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ D.40891, <variable>.CurrSlice.field_pic_flag
	cmp	r4, lr	@ <variable>.PrevSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	r1, ip	@, result.3433, result.3432
	orrne	r1, ip, #1	@,, result.3433, result.3432
	cmp	r2, r3	@ D.40890, D.40891
	orrne	r1, r1, #1	@,, result, result.3433
	cmp	r2, #0	@ D.40890,
	beq	.L1042	@,
	cmp	r3, #0	@ D.40891,
	bne	.L1052	@,
.L1042:
	movw	r4, #:lower16:11164316	@ tmp182,
	movw	ip, #:lower16:11162656	@ tmp183,
	movt	r4, #:upper16:11164316	@ tmp182,
	movt	ip, #:upper16:11162656	@ tmp183,
	ldr	r2, [r0, r4]	@ D.40904, <variable>.PrevSlice.nal_ref_idc
	ldr	r4, [r0, ip]	@ D.40905, <variable>.CurrSlice.nal_ref_idc
	cmp	r2, r4	@ D.40904, D.40905
	moveq	r4, #0	@ prephitmp.3420,
	beq	.L1044	@,
	cmp	r2, #0	@ D.40904,
	moveq	r4, #1	@ prephitmp.3420,
	bne	.L1053	@,
.L1044:
	movw	r2, #:lower16:11164306	@ tmp186,
	movw	r3, #:lower16:11162627	@ tmp187,
	movt	r2, #:upper16:11164306	@ tmp186,
	movt	r3, #:upper16:11162627	@ tmp187,
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ D.40909, <variable>.PrevSlice.nal_unit_type
	ldrb	lr, [r0, r3]	@ zero_extendqisi2	@ D.40910, <variable>.CurrSlice.nal_unit_type
	cmp	r2, lr	@ D.40909, D.40910
	orrne	r1, r1, #1	@,, result.3434, result
	cmp	lr, #5	@ D.40910,
	orr	r4, r1, r4	@ result.3431, result.3434, prephitmp.3420
	beq	.L1054	@,
.L1046:
	ldr	r3, [r5, #2900]	@ D.40919, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ D.40919,
	bne	.L1047	@,
	movw	ip, #:lower16:11164332	@ tmp196,
	movw	r1, #:lower16:11161484	@ tmp197,
	movw	r2, #:lower16:11164328	@ tmp202,
	movw	r3, #:lower16:11161480	@ tmp203,
	movt	ip, #:upper16:11164332	@ tmp196,
	movt	r1, #:upper16:11161484	@ tmp197,
	movt	r2, #:upper16:11164328	@ tmp202,
	movt	r3, #:upper16:11161480	@ tmp203,
.L1051:
	ldr	lr, [r0, ip]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	ldr	r1, [r0, r2]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	r2, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	cmp	r1, r2	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	cmpeq	lr, ip	@, <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	moveq	r2, #0	@, result.3436
	movne	r2, #1	@, result.3436
	orr	r4, r4, r2	@ result.3431, result.3431, result.3436
.L1048:
	movw	r1, #:lower16:11164276	@ tmp220,
	movt	r1, #:upper16:11164276	@ tmp220,
	ldr	r3, [r0, r1]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r3, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1049	@,
	movw	r5, #:lower16:11164352	@ tmp222,
	movw	lr, #:lower16:11164288	@ tmp223,
	movt	r5, #:upper16:11164352	@ tmp222,
	movt	lr, #:upper16:11164288	@ tmp223,
	movw	ip, #:lower16:11164348	@ tmp228,
	movw	r1, #:lower16:11164280	@ tmp229,
	movt	ip, #:upper16:11164348	@ tmp228,
	movt	r1, #:upper16:11164280	@ tmp229,
	ldr	r7, [r0, r5]	@ <variable>.PrevSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	movw	r2, #:lower16:11164356	@ tmp234,
	ldr	r6, [r0, lr]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r2, #:upper16:11164356	@ tmp234,
	ldr	lr, [r0, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r3, #:lower16:11164292	@ tmp235,
	ldr	r5, [r0, ip]	@ <variable>.PrevSlice.view_id, <variable>.PrevSlice.view_id
	movt	r3, #:upper16:11164292	@ tmp235,
	ldr	ip, [r0, r2]	@ <variable>.PrevSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
	cmp	r5, lr	@ <variable>.PrevSlice.view_id, <variable>.CurrSlice.view_id
	cmpeq	r7, r6	@, <variable>.PrevSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	r2, #0	@, result.3437
	movne	r2, #1	@, result.3437
	cmp	ip, r1	@ <variable>.PrevSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	lr, r2	@, result.3438, result.3437
	orrne	lr, r2, #1	@,, result.3438, result.3437
	orr	r4, r4, lr	@ result.3431, result.3431, result.3438
.L1049:
	movw	r2, #:lower16:11162676	@ tmp240,
	movt	r2, #:upper16:11162676	@ tmp240,
	ldr	r3, [r0, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r3, #0	@ <variable>.CurrSlice.first_mb_in_slice,
	orreq	r4, r4, #1	@,, result.3439, result.3431
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, result.3439
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L1047:
	cmp	r3, #1	@ D.40919,
	bne	.L1048	@,
	movw	ip, #:lower16:11164340	@ tmp208,
	movw	r1, #:lower16:11161532	@ tmp209,
	movw	r2, #:lower16:11164336	@ tmp214,
	movw	r3, #:lower16:11161528	@ tmp215,
	movt	ip, #:upper16:11164340	@ tmp208,
	movt	r1, #:upper16:11161532	@ tmp209,
	movt	r2, #:upper16:11164336	@ tmp214,
	movt	r3, #:upper16:11161528	@ tmp215,
	b	.L1051	@
.L1053:
	rsbs	r4, r4, #1	@ prephitmp.3420, D.40905
	movcc	r4, #0	@ prephitmp.3420
	b	.L1044	@
.L1052:
	movw	r2, #:lower16:11164305	@ tmp176,
	movw	r3, #:lower16:11162626	@ tmp177,
	movt	r2, #:upper16:11164305	@ tmp176,
	movt	r3, #:upper16:11162626	@ tmp177,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.PrevSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
	ldrb	lr, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, lr	@ <variable>.PrevSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	orrne	r1, r1, #1	@,, result, result
	b	.L1042	@
.L1054:
	cmp	r2, #5	@ D.40909,
	bne	.L1046	@,
	movw	r3, #:lower16:11164324	@ tmp190,
	movw	lr, #:lower16:11162664	@ tmp191,
	movt	r3, #:upper16:11164324	@ tmp190,
	movt	lr, #:upper16:11162664	@ tmp191,
	ldr	r1, [r0, r3]	@ <variable>.PrevSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	ldr	ip, [r0, lr]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	cmp	r1, ip	@ <variable>.PrevSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	orrne	r4, r4, #1	@,, result.3431, result.3431
	b	.L1046	@
	.fnend
	.size	MVC_IsNewPic, .-MVC_IsNewPic
	.align	2
	.global	MVC_PPSSPSCheckTmpId
	.type	MVC_PPSSPSCheckTmpId, %function
MVC_PPSSPSCheckTmpId:
	.fnstart
.LFB1719:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, lr}	@,
	.save {r3, r4, r5, lr}
	mov	r5, r1	@ tmp_pic_parameter_set_id, tmp_pic_parameter_set_id
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	vfmw_dprint_nothing	@
	movw	r2, #:lower16:11155244	@ tmp139,
	movt	r2, #:upper16:11155244	@ tmp139,
	mov	r1, #2240	@ tmp141,
	ldr	r0, [r4, r2]	@ <variable>.PPS, <variable>.PPS
	mla	r1, r1, r5, r0	@ pPPS, tmp141, tmp_pic_parameter_set_id, <variable>.PPS
	ldrb	r3, [r1, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L1061	@,
	movw	r3, #:lower16:11155232	@ tmp144,
	movt	r3, #:upper16:11155232	@ tmp144,
	ldr	r2, [r1, #28]	@ D.40862, <variable>.seq_parameter_set_id
	ldr	lr, [r4, r3]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, lr, #1	@ tmp145, <variable>.MaxSpsNum,
	cmp	r2, ip	@ D.40862, tmp145
	bhi	.L1061	@,
	movw	r1, #:lower16:11164272	@ tmp147,
	movt	r1, #:upper16:11164272	@ tmp147,
	ldr	r5, [r4, r1]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmn	r5, #1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1062	@,
.L1059:
	mov	r0, #0	@ D.40861,
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1062:
	movw	r3, #:lower16:11155240	@ tmp150,
	movt	r3, #:upper16:11155240	@ tmp150,
	movw	ip, #3992	@ tmp152,
	ldr	lr, [r4, r3]	@ <variable>.SPS, <variable>.SPS
	mla	r2, ip, r2, lr	@ tmp153, tmp152, D.40862, <variable>.SPS
	ldrb	r0, [r2, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #0	@ <variable>.is_valid,
	bne	.L1059	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@ D.40861, <variable>.CurrSlice.svc_extension_flag
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1061:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.40861,
	ldmfd	sp!, {r3, r4, r5, pc}	@
	.fnend
	.size	MVC_PPSSPSCheckTmpId, .-MVC_PPSSPSCheckTmpId
	.align	2
	.global	MVC_PPSSPSCheck
	.type	MVC_PPSSPSCheck, %function
MVC_PPSSPSCheck:
	.fnstart
.LFB1718:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, lr}	@,
	.save {r3, r4, r5, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	vfmw_dprint_nothing	@
	movw	r3, #:lower16:11155244	@ tmp140,
	movw	ip, #:lower16:11162632	@ tmp141,
	movt	r3, #:upper16:11155244	@ tmp140,
	movt	ip, #:upper16:11162632	@ tmp141,
	mov	r2, #2240	@ tmp144,
	ldr	r1, [r4, r3]	@ <variable>.PPS, <variable>.PPS
	ldr	r0, [r4, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mla	r2, r2, r0, r1	@ pPPS, tmp144, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	ldrb	r3, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L1068	@,
	movw	lr, #:lower16:11164272	@ tmp147,
	movt	lr, #:upper16:11164272	@ tmp147,
	ldr	r5, [r4, lr]	@ D.40831, <variable>.CurrSlice.svc_extension_flag
	cmn	r5, #1	@ D.40831,
	beq	.L1071	@,
	cmp	r5, #0	@ D.40831,
	bne	.L1068	@,
	ldr	r0, [r2, #28]	@ temp.3486, <variable>.seq_parameter_set_id
	movw	r1, #:lower16:337528	@ tmp155,
	movt	r1, #:upper16:337528	@ tmp155,
	mul	lr, r1, r0	@ tmp154, tmp155, temp.3486
	add	r0, lr, r4	@ tmp161, tmp154, pMvcCtx
	add	ip, lr, #13568	@ tmp156, tmp154,
	add	r3, r0, #348160	@ tmp162, tmp161,
	add	r1, ip, #32	@ tmp156, tmp156,
	add	lr, r3, #2960	@ tmp162, tmp162,
	add	ip, r4, r1	@ pSPS, pMvcCtx, tmp156
	ldr	r1, [lr, #4]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	beq	.L1068	@,
	add	r1, r0, #13568	@ tmp168, tmp161,
	add	lr, r1, #56	@ tmp168, tmp168,
	ldrb	r3, [lr, #1]	@ zero_extendqisi2	@ <variable>.sps.is_valid, <variable>.sps.is_valid
	cmp	r3, #0	@ <variable>.sps.is_valid,
	beq	.L1068	@,
.L1067:
	movw	lr, #:lower16:11152044	@ tmp170,
	movw	r3, #:lower16:11152040	@ tmp171,
	movt	lr, #:upper16:11152044	@ tmp170,
	movt	r3, #:upper16:11152040	@ tmp171,
	mov	r0, #0	@ D.40830,
	str	r2, [r4, lr]	@ pPPS, <variable>.pPPS
	str	ip, [r4, r3]	@ pSPS, <variable>.pSPS
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1071:
	movw	ip, #:lower16:11155240	@ tmp148,
	movt	ip, #:upper16:11155240	@ tmp148,
	ldr	lr, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r0, #3992	@ tmp151,
	ldr	r3, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	mla	ip, r0, lr, r3	@ pSPS, tmp151, <variable>.seq_parameter_set_id, <variable>.SPS
	ldrb	r1, [ip, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L1067	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@ D.40830, D.40831
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1068:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.40830,
	ldmfd	sp!, {r3, r4, r5, pc}	@
	.fnend
	.size	MVC_PPSSPSCheck, .-MVC_PPSSPSCheck
	.align	2
	.global	MVC_WriteCurrPicYUV
	.type	MVC_WriteCurrPicYUV, %function
MVC_WriteCurrPicYUV:
	.fnstart
.LFB1710:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	bl	vfmw_dprint_nothing	@
	ldmfd	sp!, {r4, lr}	@
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_WriteCurrPicYUV, .-MVC_WriteCurrPicYUV
	.align	2
	.global	MVC_GetReRangeFlag
	.type	MVC_GetReRangeFlag, %function
MVC_GetReRangeFlag:
	.fnstart
.LFB1701:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11164272	@ tmp157,
	movt	r3, #:upper16:11164272	@ tmp157,
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movw	ip, #:lower16:11155244	@ tmp151,
	movw	r6, #:lower16:11162632	@ tmp152,
	movt	ip, #:upper16:11155244	@ tmp151,
	movt	r6, #:upper16:11162632	@ tmp152,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r3]	@ D.39180, <variable>.CurrSlice.svc_extension_flag
	.pad #8
	sub	sp, sp, #8	@,,
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r6, r1	@ p_dpb_changed, p_dpb_changed
	ldr	r0, [r0, ip]	@ <variable>.PPS, <variable>.PPS
	cmn	r3, #1	@ D.39180,
	mov	r1, #2240	@ tmp155,
	mla	r0, r1, r2, r0	@ pPPS, tmp155, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L1092	@,
	cmp	r3, #0	@ D.39180,
	bne	.L1077	@,
	movw	ip, #:lower16:11152048	@ tmp163,
	movt	ip, #:upper16:11152048	@ tmp163,
	ldr	r2, [r4, ip]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r2, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L1093	@,
	movw	r3, #:lower16:10814504	@ tmp170,
	movt	r3, #:upper16:10814504	@ tmp170,
	ldr	r2, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, r3]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	ip, r2	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r5, #:lower16:10814508	@ pSPS,
	movteq	r5, #:upper16:10814508	@ pSPS,
	addeq	r5, r4, r5	@ pSPS, pMvcCtx, pSPS
	bne	.L1077	@,
.L1076:
	ldrb	r3, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movw	r1, #13564	@ tmp175,
	ldr	ip, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movw	r0, #13560	@ tmp174,
	rsb	r2, r3, #2	@ tmp178, <variable>.frame_mbs_only_flag,
	ldr	r7, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r0, [r4, r0]	@ oldw, <variable>.CurWidthInMb
	mla	r2, ip, r2, r2	@ newh, <variable>.pic_height_in_map_units_minus1, tmp178, tmp178
	ldr	ip, [r4, r1]	@ oldh, <variable>.CurHeightInMb
	add	r1, r7, #1	@ neww, <variable>.pic_width_in_mbs_minus1,
	cmp	r1, r0	@ neww, oldw
	cmpeq	r2, ip	@, newh, oldh
	moveq	r7, #0	@, tmp187
	movne	r7, #1	@, tmp187
	beq	.L1094	@,
.L1081:
	movw	r3, #:lower16:g_event_report	@ tmp192,
	movt	r3, #:upper16:g_event_report	@ tmp192,
	ldr	r3, [r3, #0]	@ g_event_report.637, g_event_report
	cmp	r3, #0	@ g_event_report.637,
	beq	.L1090	@,
	movw	lr, #:lower16:11199520	@ tmp201,
	movt	lr, #:upper16:11199520	@ tmp201,
	mov	r0, r0, asl #4	@ tmp194, oldw,
	strh	r0, [sp, #0]	@ movhi	@ tmp194, para
	mov	r0, ip, asl #4	@ tmp196, oldh,
	mov	ip, r1, asl #4	@ tmp198, neww,
	strh	r0, [sp, #2]	@ movhi	@ tmp196, para
	mov	r1, r2, asl #4	@ tmp200, newh,
	strh	ip, [sp, #4]	@ movhi	@ tmp198, para
	mov	r2, sp	@,
	strh	r1, [sp, #6]	@ movhi	@ tmp200, para
	mov	r1, #2	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.637
.L1090:
	movw	r3, #:lower16:11164276	@ tmp204,
	movt	r3, #:upper16:11164276	@ tmp204,
	mov	r0, #1	@ ReRangeFlg,
	ldr	r2, [r4, r3]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1095	@,
.L1084:
	ldr	r1, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	sub	r2, r1, #1	@ dpb_size.3574, <variable>.dpb_size_plus1,
.L1087:
	movw	r3, #:lower16:11152052	@ tmp212,
	movt	r3, #:upper16:11152052	@ tmp212,
	ldr	r1, [r4, r3]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	cmp	r1, r2	@ <variable>.CurrDPBSize, dpb_size.3574
	moveq	ip, r0	@, tmp216, ReRangeFlg
	orrne	ip, r0, #1	@,, tmp216, ReRangeFlg
	str	ip, [r6, #0]	@ tmp216,* p_dpb_changed
	str	r2, [r4, r3]	@ dpb_size.3574, <variable>.CurrDPBSize
.L1080:
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
.L1094:
	movw	r3, #:lower16:11168612	@ tmp188,
	movt	r3, #:upper16:11168612	@ tmp188,
	ldr	r8, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	ldr	r3, [r4, r3]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r3, r3, #1	@ tmp189, <variable>.DPB.size,
	cmp	r8, r3	@ <variable>.dpb_size_plus1, tmp189
	movls	r0, r7	@ ReRangeFlg, tmp187
	bhi	.L1081	@,
	movw	r3, #:lower16:11164276	@ tmp204,
	movt	r3, #:upper16:11164276	@ tmp204,
	ldr	r2, [r4, r3]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L1084	@,
.L1095:
	mov	r3, #0	@ ivtmp.3572,
	movw	ip, #:lower16:10800896	@ tmp222,
	movt	ip, #:upper16:10800896	@ tmp222,
	mov	r1, r3	@ dpb_size, ivtmp.3572
.L1086:
	add	r2, r4, r3	@ tmp206, pMvcCtx, ivtmp.3572
	add	r3, r3, #335872	@ ivtmp.3572, ivtmp.3572,
	add	r2, r2, #17408	@ tmp208, tmp206,
	add	r3, r3, #1648	@ ivtmp.3572, ivtmp.3572,
	add	r3, r3, #8	@ ivtmp.3572, ivtmp.3572,
	ldr	r2, [r2, #164]	@ D.39232, <variable>.sps.dpb_size_plus1
	cmp	r2, r1	@ D.39232, dpb_size
	subhi	r1, r2, #1	@ dpb_size, D.39232,
	cmp	r3, ip	@ ivtmp.3572, tmp222
	bne	.L1086	@,
	add	ip, r1, #1	@ D.39236, dpb_size,
	mov	r2, ip, asl #1	@ dpb_size.3577, D.39236,
	cmp	r2, #16	@ dpb_size.3577,
	movcs	r2, #16	@ dpb_size.3574,
	b	.L1087	@
.L1092:
	movw	r1, #:lower16:11155240	@ tmp158,
	movt	r1, #:upper16:11155240	@ tmp158,
	ldr	r7, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r5, #3992	@ tmp161,
	ldr	r0, [r4, r1]	@ <variable>.SPS, <variable>.SPS
	mla	r5, r5, r7, r0	@ pSPS, tmp161, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L1076	@
.L1093:
	ldr	r1, [r0, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r0, #:lower16:337528	@ tmp166,
	movt	r0, #:upper16:337528	@ tmp166,
	mul	r7, r1, r0	@ tmp165, <variable>.seq_parameter_set_id, tmp166
	add	r5, r7, #13568	@ tmp168, tmp165,
	add	r3, r5, #32	@ tmp168, tmp168,
	add	r5, r4, r3	@ pSPS, pMvcCtx, tmp168
	b	.L1076	@
.L1077:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ ReRangeFlg,
	b	.L1080	@
	.fnend
	.size	MVC_GetReRangeFlag, .-MVC_GetReRangeFlag
	.align	2
	.global	MVC_DumpList
	.type	MVC_DumpList, %function
MVC_DumpList:
	.fnstart
.LFB1692:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:g_PrintEnable	@ tmp137,
	movt	r1, #:upper16:g_PrintEnable	@ tmp137,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #8192	@ g_PrintEnable,
	ldmeqfd	sp!, {r4, r5, r6, pc}	@
	movw	r5, #:lower16:11162668	@ ivtmp.3611,
	movt	r5, #:upper16:11162668	@ ivtmp.3611,
	add	r5, r0, r5	@ ivtmp.3611, pMvcCtx, ivtmp.3611
	mov	r6, #0	@ j,
.L1098:
	ldr	r2, [r5, #0]	@ tmp142, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ tmp142,
	movne	r4, #0	@ i,
	beq	.L1101	@,
.L1099:
	bl	vfmw_dprint_nothing	@
	ldr	r0, [r5, #0]	@ tmp141, <variable>.CurrSlice.listXsize
	add	r4, r4, #1	@ i, i,
	cmp	r0, r4	@ tmp141, i
	bhi	.L1099	@,
.L1101:
	add	r6, r6, #1	@ j, j,
	add	r5, r5, #4	@ ivtmp.3611, ivtmp.3611,
	cmp	r6, #2	@ j,
	bne	.L1098	@,
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	MVC_DumpList, .-MVC_DumpList
	.align	2
	.global	MVC_DumpDPB
	.type	MVC_DumpDPB, %function
MVC_DumpDPB:
	.fnstart
.LFB1656:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:g_PrintEnable	@ tmp136,
	movt	r1, #:upper16:g_PrintEnable	@ tmp136,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	tst	r3, #16384	@ g_PrintEnable,
	ldmeqfd	sp!, {r4, r5, r6, pc}	@
	movw	r6, #:lower16:11168616	@ tmp139,
	movt	r6, #:upper16:11168616	@ tmp139,
	ldr	r0, [r0, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	beq	.L1106	@,
	mov	r4, #0	@ i,
.L1107:
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r5, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r4, r4, #1	@ i, i,
	cmp	r2, r4	@ <variable>.DPB.used_size, i
	bhi	.L1107	@,
.L1106:
	movw	r6, #:lower16:11168620	@ tmp143,
	movt	r6, #:upper16:11168620	@ tmp143,
	bl	vfmw_dprint_nothing	@
	ldr	ip, [r5, r6]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1108	@,
	mov	r4, #0	@ i.3643,
.L1109:
	bl	vfmw_dprint_nothing	@
	add	r4, r4, #1	@ i.3643, i.3643,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r5, r6]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, r4	@ <variable>.DPB.ref_frames_in_buffer, i.3643
	bhi	.L1109	@,
.L1108:
	ldmfd	sp!, {r4, r5, r6, lr}	@
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_DumpDPB, .-MVC_DumpDPB
	.align	2
	.global	MVC_IsRefListWrong
	.type	MVC_IsRefListWrong, %function
MVC_IsRefListWrong:
	.fnstart
.LFB1761:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movw	r8, #:lower16:11162668	@ tmp143,
	movt	r8, #:upper16:11162668	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1114	@,
	add	r5, r0, #11141120	@ ivtmp.3684, pMvcCtx,
	movw	r7, #:lower16:11199520	@ tmp170,
	add	r5, r5, #27904	@ ivtmp.3684, ivtmp.3684,
	movt	r7, #:upper16:11199520	@ tmp170,
	mov	r6, #0	@ i,
	b	.L1116	@
.L1123:
	ldr	ip, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	ip, #0	@ <variable>.pstDecodeFs,
	beq	.L1115	@,
	ldr	r3, [r4, r8]	@ D.44257, <variable>.CurrSlice.listXsize
	cmp	r3, r6	@ D.44257, i
	bls	.L1122	@,
.L1116:
	ldr	r1, [r5, #0]	@ tmp148, <variable>.pListX
	add	r6, r6, #1	@ i, i,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3684, ivtmp.3684,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	bne	.L1123	@,
.L1115:
	mvn	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L1114:
	mov	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L1122:
	cmp	r3, #0	@ D.44257,
	beq	.L1114	@,
	movw	r8, #:lower16:11162672	@ tmp153,
	movt	r8, #:upper16:11162672	@ tmp153,
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1114	@,
	movw	r6, #:lower16:11169156	@ ivtmp.3679,
	movt	r6, #:upper16:11169156	@ ivtmp.3679,
	add	r5, r4, r6	@ ivtmp.3679, pMvcCtx, ivtmp.3679
	movw	r7, #:lower16:11199520	@ tmp168,
	mov	r6, #0	@ i.3692,
	movt	r7, #:upper16:11199520	@ tmp168,
	b	.L1117	@
.L1124:
	ldr	r2, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r2, #0	@ <variable>.pstDecodeFs,
	beq	.L1115	@,
	ldr	r1, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r6	@ <variable>.CurrSlice.listXsize, i.3692
	bls	.L1114	@,
.L1117:
	ldr	r3, [r5, #0]	@ tmp158, <variable>.pListX
	add	r6, r6, #1	@ i.3692, i.3692,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3679, ivtmp.3679,
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.3690
	bne	.L1124	@,
	b	.L1115	@
	.fnend
	.size	MVC_IsRefListWrong, .-MVC_IsRefListWrong
	.align	2
	.global	MVC_WriteSliceMsg
	.type	MVC_WriteSliceMsg, %function
MVC_WriteSliceMsg:
	.fnstart
.LFB1713:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11199444	@ tmp196,
	movt	r3, #:upper16:11199444	@ tmp196,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldr	sl, [r0, r3]	@, <variable>.SliceParaNum
	.pad #20
	sub	sp, sp, #20	@,,
	movw	r4, #:lower16:11155228	@ tmp201,
	movt	r4, #:upper16:11155228	@ tmp201,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	str	sl, [sp, #8]	@, %sfp
	movw	r6, #:lower16:11199440	@ tmp198,
	ldr	ip, [sp, #8]	@, %sfp
	movt	r6, #:upper16:11199440	@ tmp198,
	ldr	r8, [r5, r4]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movw	r0, #4060	@ tmp200,
	ldr	r1, [sp, #8]	@, %sfp
	sub	r7, r8, #1	@ tmp202, <variable>.MaxSliceNum,
	cmp	ip, r7	@, tmp202
	add	r2, r1, #1	@ D.40459,,
	mul	r4, r0, ip	@ tmp199, tmp200,
	ldr	ip, [r5, r6]	@ D.40460, <variable>.DecSlicePara
	str	r2, [r5, r3]	@ D.40459, <variable>.SliceParaNum
	movcs	r3, #0	@ tmp207,
	mlacc	r2, r0, r2, ip	@ tmp206, tmp200, D.40459, D.40460
	add	r7, ip, r4	@ pCurrSlicePara, D.40460, tmp199
	strcs	r3, [r7, #4056]	@ tmp207, <variable>.pNextSlice
	strcc	r2, [r7, #4056]	@ tmp206, <variable>.pNextSlice
	ldr	r1, [r5, #368]	@ D.40471, <variable>.pCurrNal
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ i.3895, <variable>.nal_used_segment
	ldr	r0, [r1, #64]	@ i.4041, <variable>.nal_segment
	cmp	r3, #1	@ i.3895,
	cmpls	r3, r0	@, i.3895, i.4041
	bcs	.L1128	@,
	add	r2, r3, #4	@ tmp215, i.3895,
	add	r2, r7, r2, asl #2	@, ivtmp.3887, pCurrSlicePara, tmp215,
.L1129:
	rsb	r0, r3, r3, asl #3	@, tmp220, i.3895, i.3895,
	add	r3, r3, #1	@ i.3895, i.3895,
	mov	r8, r0, asl #2	@ tmp221, tmp220,
	add	r1, r8, r1	@ tmp222, tmp221, D.40471
	ldr	r6, [r1, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	r6, [r2, #0]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	sl, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r1, r8, sl	@ tmp231, tmp221, <variable>.pCurrNal
	ldr	r6, [r1, #16]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	str	r6, [r2, #-8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	cmp	r3, #1	@ i.3895,
	movhi	r6, #0	@, tmp249
	movls	r6, #1	@, tmp249
	ldr	sl, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r0, r8, sl	@ tmp240, tmp221, <variable>.pCurrNal
	ldr	r1, [r0, #24]	@ <variable>.bytespos, <variable>.bytespos
	str	r1, [r2, #8]	@ <variable>.bytespos, <variable>.bytespos
	add	r2, r2, #4	@ ivtmp.3887, ivtmp.3887,
	ldr	r1, [r5, #368]	@ D.40471, <variable>.pCurrNal
	ldr	r0, [r1, #64]	@ i.4041, <variable>.nal_segment
	cmp	r0, r3	@ i.4041, i.3895
	movls	r6, #0	@, tmp249,
	cmp	r6, #0	@ tmp249,
	bne	.L1129	@,
.L1128:
	cmp	r0, #1	@ i.4041,
	bhi	.L1130	@,
	add	r3, r0, #4	@ tmp250, i.4041,
	add	r1, r7, #24	@ D.48120, pCurrSlicePara,
	mov	r2, #0	@ tmp603,
	add	r8, r7, r3, asl #2	@, ivtmp.3880, pCurrSlicePara, tmp250,
	add	r3, r8, #4	@ ivtmp.3880, ivtmp.3880,
	rsb	r6, r8, r1	@ tmp616, ivtmp.3880, D.48120
	cmp	r3, r1	@ ivtmp.3880, D.48120
	sub	sl, r6, #4	@ tmp617, tmp616,
	ubfx	r6, sl, #2, #1	@ tmp618, tmp617,,
	str	r2, [r8, #0]	@ tmp603, <variable>.bitsoffset
	str	r2, [r8, #-8]	@ tmp603, <variable>.valid_bitlen
	str	r2, [r8, #8]	@ tmp603, <variable>.bytespos
	beq	.L1130	@,
	cmp	r6, #0	@ tmp618,
	beq	.L1131	@,
	str	r2, [r3, #0]	@ tmp603, <variable>.bitsoffset
	str	r2, [r3, #-8]	@ tmp603, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp603, <variable>.bytespos
	add	r3, r3, #4	@ ivtmp.3880, ivtmp.3880,
	cmp	r3, r1	@ ivtmp.3880, D.48120
	beq	.L1130	@,
.L1131:
	add	r0, r3, #4	@ tmp619, ivtmp.3880,
	str	r2, [r3, #-8]	@ tmp603, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp603, <variable>.bytespos
	str	r2, [r3, #4]	@ tmp603, <variable>.bitsoffset
	str	r2, [r3, #0]	@ tmp603, <variable>.bitsoffset
	add	r3, r0, #4	@ ivtmp.3880, tmp619,
	cmp	r3, r1	@ ivtmp.3880, D.48120
	str	r2, [r0, #-8]	@ tmp603, <variable>.valid_bitlen
	str	r2, [r0, #8]	@ tmp603, <variable>.bytespos
	bne	.L1131	@,
.L1130:
	movw	r0, #:lower16:11196177	@ tmp255,
	movt	r0, #:upper16:11196177	@ tmp255,
	movw	r6, #:lower16:11159288	@ tmp258,
	movw	sl, #:lower16:11164236	@ tmp259,
	ldrb	r1, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	movt	r6, #:upper16:11159288	@ tmp258,
	movt	sl, #:upper16:11164236	@ tmp259,
	ldr	r3, [sp, #8]	@, %sfp
	strb	r1, [r7, #1]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	cmp	r3, #0	@,
	ldr	r2, [r5, r6]	@ <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrPPS.pic_init_qp_minus26
	ldr	r8, [r5, sl]	@ <variable>.CurrSlice.slice_qp_delta, <variable>.CurrSlice.slice_qp_delta
	add	r1, r2, r8	@ tmp260, <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrSlice.slice_qp_delta
	add	r3, r1, #26	@ D.40485, tmp260,
	str	r3, [r7, #32]	@ D.40485, <variable>.SliceQPy
	bne	.L1132	@,
	movw	r2, #:lower16:11196640	@ tmp264,
	movt	r2, #:upper16:11196640	@ tmp264,
	ldr	r6, [r5, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [r6, #496]	@ D.40485, <variable>.frame.MaxQp
	ldr	sl, [r5, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r8, [r7, #32]	@ <variable>.SliceQPy, <variable>.SliceQPy
	str	r8, [sl, #500]	@ <variable>.SliceQPy, <variable>.frame.MinQp
.L1133:
	movw	r8, #:lower16:11164232	@ tmp273,
	movt	r8, #:upper16:11164232	@ tmp273,
	movw	r6, #:lower16:11162684	@ tmp275,
	movt	r6, #:upper16:11162684	@ tmp275,
	ldr	r1, [r5, r8]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.CurrSlice.cabac_init_idc
	movw	r2, #:lower16:11162680	@ tmp277,
	movt	r2, #:upper16:11162680	@ tmp277,
	movw	r3, #:lower16:11162624	@ tmp279,
	movt	r3, #:upper16:11162624	@ tmp279,
	movw	r8, #:lower16:11162676	@ tmp282,
	str	r1, [r7, #36]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.cabac_init_idc
	movt	r8, #:upper16:11162676	@ tmp282,
	ldr	sl, [r5, r6]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	movw	r6, #:lower16:11162630	@ tmp284,
	movt	r6, #:upper16:11162630	@ tmp284,
	movw	r0, #:lower16:11152036	@ tmp288,
	movt	r0, #:upper16:11152036	@ tmp288,
	movw	r1, #:lower16:11162668	@ tmp291,
	str	sl, [r7, #40]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movt	r1, #:upper16:11162668	@ tmp291,
	ldr	sl, [r5, r2]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	r2, #:lower16:11162672	@ tmp293,
	movt	r2, #:upper16:11162672	@ tmp293,
	str	sl, [r7, #44]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldrb	sl, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	strb	sl, [ip, r4]	@ <variable>.CurrSlice.slice_type, <variable>.slice_type
	ldr	ip, [r5, r8]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	str	ip, [r7, #48]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.first_mb_in_slice
	ldrb	ip, [r5, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	strb	ip, [r7, #2]	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.direct_spatial_mv_pred_flag
	ldr	ip, [r5, r0]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r0, [ip, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	strb	r0, [r7, #3]	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldr	r1, [r5, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r1, [r7, #52]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldr	ip, [r5, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	ip, [r7, #56]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldrb	r3, [r5, r3]	@ zero_extendqisi2	@ temp.3902, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ temp.3902,
	beq	.L1217	@,
	cmp	r3, #0	@ temp.3902,
	movweq	r3, #:lower16:11159242	@ tmp299,
	movteq	r3, #:upper16:11159242	@ tmp299,
	movne	r3, #0	@ tmp302,
	ldreqb	r3, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_pred_flag, <variable>.CurrPPS.weighted_pred_flag
	strb	r3, [r7, #4]	@ tmp302, <variable>.weight_flag
.L1135:
	movw	r2, #:lower16:11159292	@ tmp304,
	movt	r2, #:upper16:11159292	@ tmp304,
	movw	r3, #:lower16:11159296	@ tmp306,
	movt	r3, #:upper16:11159296	@ tmp306,
	ldr	ip, [r5, r2]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.CurrPPS.chroma_qp_index_offset
	movw	r0, #:lower16:11164244	@ tmp308,
	movt	r0, #:upper16:11164244	@ tmp308,
	movw	r1, #:lower16:11164248	@ tmp310,
	movt	r1, #:upper16:11164248	@ tmp310,
	movw	r2, #:lower16:11164240	@ tmp312,
	str	ip, [r7, #60]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movt	r2, #:upper16:11164240	@ tmp312,
	ldr	ip, [r5, r3]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.CurrPPS.second_chroma_qp_index_offset
	movw	r3, #:lower16:11162624	@ tmp314,
	movt	r3, #:upper16:11162624	@ tmp314,
	str	ip, [r7, #64]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r0, [r5, r0]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r7, #68]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.slice_alpha_c0_offset_div2
	ldr	r1, [r5, r1]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r7, #72]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.slice_beta_offset_div2
	ldr	r2, [r5, r2]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r2, [r7, #76]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.disable_deblocking_filter_idc
	ldrb	ip, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1137	@,
	movw	r1, #:lower16:11162668	@ tmp316,
	movt	r1, #:upper16:11162668	@ tmp316,
	ldr	r4, [r5, r1]	@ temp.4059, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4059,
	beq	.L1138	@,
	movw	ip, #:lower16:11169024	@ tmp318,
	movt	ip, #:upper16:11169024	@ tmp318,
	ldr	r3, [r5, ip]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4036, <variable>.frame_store
	ldrb	r0, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r0, #0	@ <variable>.non_existing,
	beq	.L1139	@,
	tst	r4, #1	@ temp.4059,
	movw	r1, #:lower16:11169028	@ ivtmp.3874,
	movt	r1, #:upper16:11169028	@ ivtmp.3874,
	mov	r0, #0	@ i.3905,
	add	r2, r5, r1	@ ivtmp.3874, pMvcCtx, ivtmp.3874
	bne	.L1141	@,
	ldr	r3, [r2], #4	@ tmp638, <variable>.pListX
	mov	r0, #1	@ i.3905,
	ldr	r3, [r3, #4]	@ temp.4036, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	bne	.L1141	@,
.L1139:
	movw	lr, #:lower16:11199520	@ tmp322,
	movt	lr, #:upper16:11199520	@ tmp322,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1216	@,
	ldr	r2, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r4, [r2, #4]	@, <variable>.PhyFsID
	str	r4, [sp, #4]	@, %sfp
	b	.L1143	@
.L1144:
	ldr	r3, [r1], #4	@ tmp320, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4036, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1139	@,
	ldr	r3, [r2, #4]	@ tmp640, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3874, tmp613,
	ldr	r3, [r3, #4]	@ temp.4036, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1139	@,
.L1141:
	add	ip, r0, #1	@ tmp614, i.3905,
	mov	r1, r2	@ tmp613, ivtmp.3874
	cmp	ip, r4	@ tmp614, temp.4059
	add	r0, ip, #1	@ i.3905, tmp614,
	bcc	.L1144	@,
.L1138:
	mov	r0, #0	@,
	str	r0, [sp, #4]	@, %sfp
.L1143:
	movw	r3, #:lower16:11162672	@ tmp327,
	movt	r3, #:upper16:11162672	@ tmp327,
	ldr	r4, [r5, r3]	@ temp.3908, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.3908,
	beq	.L1145	@,
	movw	ip, #:lower16:11169156	@ tmp329,
	movt	ip, #:upper16:11169156	@ tmp329,
	ldr	r1, [r5, ip]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r1, #4]	@ temp.4037, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L1146	@,
	tst	r4, #1	@ temp.3908,
	movw	r2, #:lower16:11169160	@ ivtmp.3869,
	movt	r2, #:upper16:11169160	@ ivtmp.3869,
	mov	r0, #0	@ i.3912,
	add	r2, r5, r2	@ ivtmp.3869, pMvcCtx, ivtmp.3869
	bne	.L1148	@,
	ldr	r3, [r2], #4	@ tmp634, <variable>.pListX
	mov	r0, #1	@ i.3912,
	ldr	r3, [r3, #4]	@ temp.4037, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	bne	.L1148	@,
	b	.L1146	@
.L1151:
	ldr	r3, [r1], #4	@ tmp331, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4037, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1146	@,
	ldr	ip, [r2, #4]	@ tmp636, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3869, tmp608,
	ldr	r3, [ip, #4]	@ temp.4037, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	beq	.L1146	@,
.L1148:
	add	ip, r0, #1	@ tmp609, i.3912,
	mov	r1, r2	@ tmp608, ivtmp.3869
	cmp	r4, ip	@ temp.3908, tmp609
	add	r0, ip, #1	@ i.3912, tmp609,
	bhi	.L1151	@,
.L1145:
	mov	r0, #0	@,
	str	r0, [sp, #12]	@, %sfp
.L1150:
	movw	r1, #:lower16:11196171	@ tmp338,
	movt	r1, #:upper16:11196171	@ tmp338,
	ldrb	r8, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r8, #0	@ <variable>.CurrPic.structure,
	beq	.L1152	@,
	movw	r9, #:lower16:11162668	@ tmp340,
	movt	r9, #:upper16:11162668	@ tmp340,
	ldr	r3, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1154	@,
	add	r8, r5, #11141120	@ ivtmp.3849, pMvcCtx,
	movw	sl, #:lower16:11199520	@ tmp600,
	add	r4, r8, #27904	@ ivtmp.3849, ivtmp.3849,
	movt	sl, #:upper16:11199520	@ tmp600,
	mov	r6, r7	@ ivtmp.3854, pCurrSlicePara
	mov	r8, #0	@ i.4001,
	b	.L1170	@
.L1168:
	strb	r3, [r6, #1630]	@ temp.3995, <variable>.btm_structure
	add	r8, r8, #1	@ i.4001, i.4001,
	ldr	r3, [r4, #0]	@ tmp472, <variable>.pListX
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #1631]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r1, [r4, #0]	@ tmp475, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3849, ivtmp.3849,
	ldr	lr, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #1656]	@ <variable>.poc, <variable>.btm_poc
	add	r6, r6, #36	@ ivtmp.3854, ivtmp.3854,
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, r8	@ <variable>.CurrSlice.listXsize, i.4001
	bls	.L1154	@,
.L1170:
	ldr	r1, [r4, #0]	@ tmp436, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	ip, [r4, #0]	@ tmp439, <variable>.pListX
	ldr	r2, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r3, [r6, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r4, #0]	@ tmp442, <variable>.pListX
	ldr	ip, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r2, [r6, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r3, [r4, #0]	@ tmp446, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [sp, #4]	@ ExistImgIdc_0.3893, %sfp
	beq	.L1166	@,
	cmp	r0, #0	@ pstLogicFs.3972,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0.3893, <variable>.PhyFsID
.L1166:
	str	r0, [r6, #1640]	@ ExistImgIdc_0.3893, <variable>.img_idc
	ldr	r1, [r4, #0]	@ tmp450, <variable>.pListX
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [lr, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	ip, [r6, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r2, [r4, #0]	@ tmp453, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r3, #600]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1632]	@ <variable>.poc, <variable>.poc
	ldr	r1, [r4, #0]	@ tmp456, <variable>.pListX
	ldrb	lr, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #1624]	@ <variable>.structure, <variable>.list_structure
	ldr	ip, [r4, #0]	@ tmp459, <variable>.pListX
	ldr	r2, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r3, [r6, #1626]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp463, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.3995, <variable>.structure
	cmp	r3, #1	@ temp.3995,
	bne	.L1168	@,
	strb	r3, [r6, #1628]	@ temp.3995, <variable>.top_structure
	add	r8, r8, #1	@ i.4001, i.4001,
	ldr	ip, [r4, #0]	@ tmp466, <variable>.pListX
	ldrb	r2, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r2, [r6, #1629]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r3, [r4, #0]	@ tmp469, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3849, ivtmp.3849,
	ldr	r0, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1652]	@ <variable>.poc, <variable>.top_poc
	add	r6, r6, #36	@ ivtmp.3854, ivtmp.3854,
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, r8	@ <variable>.CurrSlice.listXsize, i.4001
	bhi	.L1170	@,
.L1154:
	movw	ip, #:lower16:11162624	@ tmp479,
	movt	ip, #:upper16:11162624	@ tmp479,
	ldrb	r4, [r5, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1218	@,
.L1160:
	mov	r1, #0	@ ivtmp.3787,
.L1177:
	add	ip, r5, r1	@ tmp531, pMvcCtx, ivtmp.3787
	movw	r4, #:lower16:11168896	@ tmp532,
	movt	r4, #:upper16:11168896	@ tmp532,
	add	r0, r1, #4	@ tmp604, ivtmp.3787,
	add	r2, ip, r4	@ tmp532, tmp531, tmp532
	movw	r3, #:lower16:11168896	@ tmp632,
	add	r4, r5, r0	@ tmp630, pMvcCtx, tmp604
	movt	r3, #:upper16:11168896	@ tmp632,
	ldr	ip, [r2, #0]	@ tmp534, <variable>.APC.RefIdx
	add	r3, r4, r3	@ tmp632, tmp630, tmp632
	add	r2, r7, r1	@ tmp530, pCurrSlicePara, ivtmp.3787
	add	r1, r0, #4	@ ivtmp.3787, tmp604,
	cmp	r1, #128	@ ivtmp.3787,
	add	r0, r7, r0	@ tmp629, pCurrSlicePara, tmp604
	str	ip, [r2, #3928]	@ tmp534, <variable>.Apc2RefIdx
	ldr	r3, [r3, #0]	@ tmp633, <variable>.APC.RefIdx
	str	r3, [r0, #3928]	@ tmp633, <variable>.Apc2RefIdx
	bne	.L1177	@,
	movw	r0, #:lower16:11159242	@ tmp535,
	movt	r0, #:upper16:11159242	@ tmp535,
	movw	ip, #:lower16:11159284	@ tmp538,
	movt	ip, #:upper16:11159284	@ tmp538,
	ldrb	r1, [r5, r0]	@ zero_extendqisi2	@ temp.4046, <variable>.CurrPPS.weighted_pred_flag
	movw	r2, #:lower16:11198332	@ tmp536,
	ldr	r0, [r5, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	movt	r2, #:upper16:11198332	@ tmp536,
	movw	r3, #:lower16:11198336	@ tmp537,
	cmp	r1, #0	@ temp.4046,
	movt	r3, #:upper16:11198336	@ tmp537,
	str	r1, [r5, r2]	@ temp.4046, <variable>.DecPicPara.weighted_pred_flag
	str	r0, [r5, r3]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.DecPicPara.weighted_bipred_idc
	beq	.L1178	@,
	movw	r1, #:lower16:11162624	@ tmp540,
	movt	r1, #:upper16:11162624	@ tmp540,
	ldrb	r3, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1178	@,
.L1179:
	movw	r0, #:lower16:11162688	@ tmp546,
	movt	r0, #:upper16:11162688	@ tmp546,
	movw	r2, #:lower16:11162692	@ tmp548,
	movt	r2, #:upper16:11162692	@ tmp548,
	ldr	r1, [r5, r0]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.CurrSlice.luma_log2_weight_denom
	movw	r4, #:lower16:11162696	@ ivtmp.3766,
	movt	r4, #:upper16:11162696	@ ivtmp.3766,
	mov	r0, r7	@ ivtmp.4058, pCurrSlicePara
	add	r3, r5, r4	@ ivtmp.3766, pMvcCtx, ivtmp.3766
	movw	r4, #:lower16:11162680	@ tmp587,
	str	r1, [r7, #80]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.luma_log2_weight_denom
	movt	r4, #:upper16:11162680	@ tmp587,
	ldr	ip, [r5, r2]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	mov	r1, #0	@ i,
	mov	r2, r7	@ ivtmp.3770, ivtmp.4058
	str	ip, [r7, #84]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.chroma_log2_weight_denom
.L1180:
	ldr	ip, [r3, #0]	@ tmp551, <variable>.CurrSlice.wp_weight_l0_y
	add	r1, r1, #1	@ i, i,
	str	ip, [r2, #88]	@ tmp551, <variable>.wp_weight_l0_y
	ldr	ip, [r3, #128]	@ tmp552, <variable>.CurrSlice.wp_weight_l0_u
	str	ip, [r2, #216]	@ tmp552, <variable>.wp_weight_l0_u
	ldr	ip, [r3, #256]	@ tmp553, <variable>.CurrSlice.wp_weight_l0_v
	str	ip, [r2, #344]	@ tmp553, <variable>.wp_weight_l0_v
	ldr	ip, [r3, #768]	@ tmp554, <variable>.CurrSlice.wp_offset_l0_y
	str	ip, [r2, #856]	@ tmp554, <variable>.wp_offset_l0_y
	ldr	ip, [r3, #896]	@ tmp555, <variable>.CurrSlice.wp_offset_l0_u
	str	ip, [r2, #984]	@ tmp555, <variable>.wp_offset_l0_u
	ldr	ip, [r3, #1024]	@ tmp556, <variable>.CurrSlice.wp_offset_l0_v
	add	r3, r3, #4	@ ivtmp.3766, ivtmp.3766,
	str	ip, [r2, #1112]	@ tmp556, <variable>.wp_offset_l0_v
	add	r2, r2, #4	@ ivtmp.3770, ivtmp.3770,
	ldr	ip, [r5, r4]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	ip, r1	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcs	.L1180	@,
	movw	r2, #:lower16:11162624	@ tmp559,
	movt	r2, #:upper16:11162624	@ tmp559,
	ldrb	r3, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1219	@,
.L1137:
	ldr	r0, [sp, #8]	@, %sfp
	movw	r1, #:lower16:2799344	@ tmp570,
	movt	r1, #:upper16:2799344	@ tmp570,
	ldr	ip, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r2, r0, r1	@ tmp570,, tmp570
	mov	r0, #0	@ tmp577,
	add	r3, r5, r2, asl #2	@, tmp574, pMvcCtx, tmp570,
	str	ip, [r3, #4]	@ <variable>.pCurrNal, <variable>.pSliceNal
	str	r0, [r5, #368]	@ tmp577, <variable>.pCurrNal
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1132:
	movw	sl, #:lower16:11196640	@ tmp268,
	movt	sl, #:upper16:11196640	@ tmp268,
	ldr	r8, [r5, sl]	@ temp.3900, <variable>.CurrPic.frame_store
	ldr	r0, [r8, #496]	@ <variable>.frame.MaxQp, <variable>.frame.MaxQp
	ldr	r1, [r8, #500]	@ <variable>.frame.MinQp, <variable>.frame.MinQp
	cmp	r0, r3	@ <variable>.frame.MaxQp, D.40485
	strge	r0, [r8, #496]	@, <variable>.frame.MaxQp, <variable>.frame.MaxQp
	strlt	r3, [r8, #496]	@, D.40485, <variable>.frame.MaxQp
	cmp	r1, r3	@ <variable>.frame.MinQp, D.40485
	strle	r1, [r8, #500]	@, <variable>.frame.MinQp, <variable>.frame.MinQp
	strgt	r3, [r8, #500]	@, D.40485, <variable>.frame.MinQp
	b	.L1133	@
.L1178:
	movw	ip, #:lower16:11159284	@ tmp542,
	movt	ip, #:upper16:11159284	@ tmp542,
	ldr	r2, [r5, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	cmp	r2, #1	@ <variable>.CurrPPS.weighted_bipred_idc,
	bne	.L1137	@,
	movw	r3, #:lower16:11162624	@ tmp544,
	movt	r3, #:upper16:11162624	@ tmp544,
	ldrb	r0, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1137	@,
	b	.L1179	@
.L1152:
	movw	fp, #:lower16:11162668	@ tmp342,
	movt	fp, #:upper16:11162668	@ tmp342,
	ldr	r4, [r5, fp]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1155	@,
	add	r9, r5, #11141120	@ ivtmp.3811, pMvcCtx,
	movw	sl, #:lower16:11199520	@ tmp593,
	movt	sl, #:upper16:11199520	@ tmp593,
	add	r6, r9, #27904	@ ivtmp.3811, ivtmp.3811,
	mov	r4, r7	@ ivtmp.3816, pCurrSlicePara
	mov	r9, r8	@ tmp595, i.3903
.L1159:
	ldr	r2, [r6, #0]	@ tmp347, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r3, [r6, #0]	@ tmp350, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r4, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r6, #0]	@ tmp353, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r1, [r4, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r6, #0]	@ tmp357, <variable>.pListX
	ldr	r2, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [sp, #4]	@ ExistImgIdc_0.3891, %sfp
	beq	.L1157	@,
	cmp	r0, #0	@ pstLogicFs.3917,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0.3891, <variable>.PhyFsID
.L1157:
	str	r0, [r4, #1640]	@ ExistImgIdc_0.3891, <variable>.img_idc
	add	r8, r8, #1	@ i.3903, i.3903,
	ldr	ip, [r6, #0]	@ tmp361, <variable>.pListX
	ldr	r0, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r0, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r2, [r4, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	lr, [r6, #0]	@ tmp364, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r3, #600]	@ <variable>.poc, <variable>.poc
	str	r1, [r4, #1632]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r6, #0]	@ tmp367, <variable>.pListX
	ldrb	r0, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r4, #1627]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r2, [r6, #0]	@ tmp370, <variable>.pListX
	ldrb	lr, [r2, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r4, #1626]	@ <variable>.structure, <variable>.frame_structure
	ldr	r3, [r6, #0]	@ tmp373, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1648]	@ <variable>.frame.poc, <variable>.frame_poc
	ldr	r0, [r6, #0]	@ tmp376, <variable>.pListX
	ldr	r2, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r2, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	lr, [r4, #1652]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	r3, [r6], #4	@ tmp379, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	r9, [r4, #1624]	@ tmp595, <variable>.list_structure
	str	ip, [r4, #1656]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3816, ivtmp.3816,
	ldr	r0, [r5, fp]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.3903
	bhi	.L1159	@,
.L1155:
	movw	r1, #:lower16:11162624	@ tmp386,
	movt	r1, #:upper16:11162624	@ tmp386,
	ldrb	r4, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1160	@,
	movw	fp, #:lower16:11162672	@ tmp388,
	movt	fp, #:upper16:11162672	@ tmp388,
	ldr	r3, [r5, fp]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1160	@,
	add	sl, r7, #1632	@ ivtmp.3800, pCurrSlicePara,
	movw	r6, #:lower16:11169156	@ ivtmp.3793,
	movt	r6, #:upper16:11169156	@ ivtmp.3793,
	add	r4, sl, #8	@ ivtmp.3800, ivtmp.3800,
	mov	r8, #0	@ i.3966,
	movw	sl, #:lower16:11199520	@ tmp589,
	add	r6, r5, r6	@ ivtmp.3793, pMvcCtx, ivtmp.3793
	movt	sl, #:upper16:11199520	@ tmp589,
	mov	r9, r8	@ tmp591, i.3966
.L1164:
	ldr	r2, [r6, #0]	@ tmp394, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r3, [r6, #0]	@ tmp397, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r4, #1148]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r6, #0]	@ tmp400, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r1, [r4, #1137]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r6, #0]	@ tmp404, <variable>.pListX
	ldr	r2, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [sp, #12]	@ ExistImgIdc_1.3892, %sfp
	beq	.L1162	@,
	cmp	r0, #0	@ pstLogicFs.3944,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1.3892, <variable>.PhyFsID
.L1162:
	str	r0, [r4, #0]	@ ExistImgIdc_1.3892, <variable>.img_idc
	add	r8, r8, #1	@ i.3966, i.3966,
	ldr	ip, [r6, #0]	@ tmp408, <variable>.pListX
	ldr	r0, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r0, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r2, [r4, #1156]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	lr, [r6, #0]	@ tmp411, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r3, #600]	@ <variable>.poc, <variable>.poc
	str	r1, [r4, #1144]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r6, #0]	@ tmp414, <variable>.pListX
	ldrb	r0, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r4, #1139]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r2, [r6, #0]	@ tmp417, <variable>.pListX
	ldrb	lr, [r2, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r4, #1138]	@ <variable>.structure, <variable>.frame_structure
	ldr	r3, [r6, #0]	@ tmp420, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1160]	@ <variable>.frame.poc, <variable>.frame_poc
	ldr	r0, [r6, #0]	@ tmp423, <variable>.pListX
	ldr	r2, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r2, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	lr, [r4, #1164]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	r3, [r6], #4	@ tmp426, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r1, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	r9, [r4, #1136]	@ tmp591, <variable>.list_structure
	str	ip, [r4, #1168]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3800, ivtmp.3800,
	ldr	r0, [r5, fp]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.3966
	bhi	.L1164	@,
	b	.L1160	@
.L1146:
	movw	lr, #:lower16:11199520	@ tmp333,
	movt	lr, #:upper16:11199520	@ tmp333,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.3909
	beq	.L1216	@,
	ldr	r4, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r8, [r4, #4]	@, <variable>.PhyFsID
	str	r8, [sp, #12]	@, %sfp
	b	.L1150	@
.L1217:
	movw	r0, #:lower16:11159284	@ tmp296,
	movt	r0, #:upper16:11159284	@ tmp296,
	ldr	r3, [r5, r0]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	strb	r3, [r7, #4]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.weight_flag
	b	.L1135	@
.L1218:
	movw	r9, #:lower16:11162672	@ tmp481,
	movt	r9, #:upper16:11162672	@ tmp481,
	ldr	r1, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1160	@,
	add	sl, r7, #2800	@ ivtmp.3838, pCurrSlicePara,
	movw	r6, #:lower16:11169156	@ ivtmp.3829,
	movt	r6, #:upper16:11169156	@ ivtmp.3829,
	mov	r8, #0	@ i.3997,
	add	r4, r5, r6	@ ivtmp.3829, pMvcCtx, ivtmp.3829
	add	r6, sl, #4	@ ivtmp.3838, ivtmp.3838,
	movw	sl, #:lower16:11199520	@ tmp597,
	movt	sl, #:upper16:11199520	@ tmp597,
	b	.L1176	@
.L1174:
	strb	r3, [r6, #-22]	@ temp.4035, <variable>.btm_structure
	ldr	r2, [r4, #0]	@ tmp523, <variable>.pListX
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #-21]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r3, [r4, #0]	@ tmp526, <variable>.pListX
	ldr	lr, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #4]	@ <variable>.poc, <variable>.btm_poc
.L1175:
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r8, r8, #1	@ i.3997, i.3997,
	add	r4, r4, #4	@ ivtmp.3829, ivtmp.3829,
	add	r6, r6, #36	@ ivtmp.3838, ivtmp.3838,
	cmp	ip, r8	@ <variable>.CurrSlice.listXsize, i.3997
	bls	.L1160	@,
.L1176:
	ldr	r3, [r4, #0]	@ tmp487, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r1, [r4, #0]	@ tmp490, <variable>.pListX
	ldr	ip, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [ip, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r2, [r6, #-16]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, #0]	@ tmp493, <variable>.pListX
	ldr	r1, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r6, #-27]	@ <variable>.is_used, <variable>.is_used
	ldr	r2, [r4, #0]	@ tmp497, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	ldreq	r0, [sp, #12]	@ ExistImgIdc_1.3894, %sfp
	beq	.L1172	@,
	cmp	r0, #0	@ pstLogicFs.4012,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1.3894, <variable>.PhyFsID
.L1172:
	str	r0, [r6, #-12]	@ ExistImgIdc_1.3894, <variable>.img_idc
	ldr	r3, [r4, #0]	@ tmp501, <variable>.pListX
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r1, [r6, #-8]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r4, #0]	@ tmp504, <variable>.pListX
	ldr	r2, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r2, #600]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #-20]	@ <variable>.poc, <variable>.poc
	ldr	r3, [r4, #0]	@ tmp507, <variable>.pListX
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #-28]	@ <variable>.structure, <variable>.list_structure
	ldr	r1, [r4, #0]	@ tmp510, <variable>.pListX
	ldr	ip, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [ip, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r2, [r6, #-26]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp514, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.4035, <variable>.structure
	cmp	r3, #1	@ temp.4035,
	bne	.L1174	@,
	strb	r3, [r6, #-24]	@ temp.4035, <variable>.top_structure
	ldr	r1, [r4, #0]	@ tmp517, <variable>.pListX
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r6, #-23]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r2, [r4, #0]	@ tmp520, <variable>.pListX
	ldr	r0, [r2, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #0]	@ <variable>.poc, <variable>.top_poc
	b	.L1175	@
.L1219:
	movw	r1, #:lower16:11163080	@ ivtmp.3749,
	movt	r1, #:upper16:11163080	@ ivtmp.3749,
	movw	ip, #:lower16:11162684	@ tmp586,
	add	r3, r5, r1	@ ivtmp.3749, pMvcCtx, ivtmp.3749
	movt	ip, #:upper16:11162684	@ tmp586,
	mov	r2, #0	@ i.3898,
.L1181:
	ldr	r1, [r3, #0]	@ tmp562, <variable>.CurrSlice.wp_weight_l1_y
	add	r2, r2, #1	@ i.3898, i.3898,
	str	r1, [r0, #472]	@ tmp562, <variable>.wp_weight_l1_y
	ldr	r1, [r3, #128]	@ tmp563, <variable>.CurrSlice.wp_weight_l1_u
	str	r1, [r0, #600]	@ tmp563, <variable>.wp_weight_l1_u
	ldr	r1, [r3, #256]	@ tmp564, <variable>.CurrSlice.wp_weight_l1_v
	str	r1, [r0, #728]	@ tmp564, <variable>.wp_weight_l1_v
	ldr	r1, [r3, #768]	@ tmp565, <variable>.CurrSlice.wp_offset_l1_y
	str	r1, [r0, #1240]	@ tmp565, <variable>.wp_offset_l1_y
	ldr	r1, [r3, #896]	@ tmp566, <variable>.CurrSlice.wp_offset_l1_u
	str	r1, [r0, #1368]	@ tmp566, <variable>.wp_offset_l1_u
	ldr	r1, [r3, #1024]	@ tmp567, <variable>.CurrSlice.wp_offset_l1_v
	add	r3, r3, #4	@ ivtmp.3749, ivtmp.3749,
	str	r1, [r0, #1496]	@ tmp567, <variable>.wp_offset_l1_v
	add	r0, r0, #4	@ ivtmp.4058, ivtmp.4058,
	ldr	r1, [r5, ip]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r1, r2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.3898
	bcs	.L1181	@,
	b	.L1137	@
.L1216:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_WriteSliceMsg, .-MVC_WriteSliceMsg
	.align	2
	.global	MVC_GetAPC
	.type	MVC_GetAPC, %function
MVC_GetAPC:
	.fnstart
.LFB1650:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	subs	r5, r1, #0	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L1231	@,
	cmp	r2, #1	@ structure,
	beq	.L1224	@,
	cmp	r2, #2	@ structure,
	beq	.L1245	@,
	ldr	r7, [r5, #520]	@ toppoc, <variable>.top_field.poc
	ldr	r8, [r5, #560]	@ bottompoc, <variable>.bottom_field.poc
.L1226:
	movw	r3, #:lower16:11168888	@ tmp147,
	movt	r3, #:upper16:11168888	@ tmp147,
	ldr	r0, [r4, r3]	@ D.36775, <variable>.APC.size
	cmp	r0, #0	@ D.36775,
	beq	.L1227	@,
	movw	r1, #:lower16:11168632	@ tmp148,
	movt	r1, #:upper16:11168632	@ tmp148,
	ldr	r6, [r4, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	cmp	r6, #0	@ <variable>.APC.is_used,
	beq	.L1229	@,
	tst	r0, #1	@ D.36775,
	movw	ip, #:lower16:11168636	@ ivtmp.4091,
	movt	ip, #:upper16:11168636	@ ivtmp.4091,
	mov	r6, #0	@ i,
	add	r3, r4, ip	@ ivtmp.4091, pMvcCtx, ivtmp.4091
	bne	.L1230	@,
	ldr	r1, [r3], #4	@ D.36756, <variable>.APC.is_used
	mov	r6, #1	@ i,
	cmp	r1, #0	@ D.36756,
	bne	.L1230	@,
	b	.L1229	@
.L1234:
	ldr	ip, [r2], #4	@ D.36756, <variable>.APC.is_used
	cmp	ip, #0	@ D.36756,
	beq	.L1229	@,
	ldr	ip, [r3, #4]	@ D.36756, <variable>.APC.is_used
	add	r6, r6, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.4091, tmp174,
	cmp	ip, #0	@ D.36756,
	beq	.L1229	@,
.L1230:
	add	r6, r6, #1	@ i, i,
	mov	r2, r3	@ tmp174, ivtmp.4091
	cmp	r6, r0	@ i, D.36775
	bcc	.L1234	@,
.L1227:
	mvn	r0, #0	@ D.36754,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L1245:
	ldr	r7, [r5, #560]	@ toppoc, <variable>.bottom_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1226	@
.L1229:
	movw	r2, #:lower16:11199520	@ tmp150,
	movt	r2, #:upper16:11199520	@ tmp150,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1231	@,
	ldr	lr, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	lr, #0	@ <variable>.pstDecodeFs,
	beq	.L1231	@,
	movw	r2, #:lower16:2792158	@ tmp154,
	movt	r2, #:upper16:2792158	@ tmp154,
	add	r3, r6, r2	@ tmp154, i, tmp154
	mov	lr, #1	@ tmp156,
	movw	r1, #:lower16:11168892	@ tmp165,
	movt	r1, #:upper16:11168892	@ tmp165,
	str	lr, [r4, r3, asl #2]	@ tmp156, <variable>.APC.is_used
	movw	r2, #:lower16:2792174	@ tmp157,
	ldr	ip, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movt	r2, #:upper16:2792174	@ tmp157,
	ldr	r0, [r4, r1]	@ D.36771, <variable>.APC.used_size
	movw	lr, #:lower16:2792190	@ tmp161,
	movw	r3, #:lower16:2792206	@ tmp163,
	movt	lr, #:upper16:2792190	@ tmp161,
	ldr	ip, [ip, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movt	r3, #:upper16:2792206	@ tmp163,
	cmp	r0, #15	@ D.36771,
	add	r1, r6, lr	@ tmp161, i, tmp161
	add	r2, r6, r2	@ tmp157, i, tmp157
	add	lr, r6, r3	@ tmp163, i, tmp163
	movw	r3, #:lower16:11168892	@ tmp166,
	movt	r3, #:upper16:11168892	@ tmp166,
	movhi	r0, #16	@ iftmp.484,
	addls	r0, r0, #1	@ iftmp.484, D.36771,
	str	r7, [r4, r1, asl #2]	@ toppoc, <variable>.APC.poc
	str	r0, [r4, r3]	@ iftmp.484, <variable>.APC.used_size
	str	ip, [r4, r2, asl #2]	@ <variable>.PhyFsID, <variable>.APC.idc
	str	r8, [r4, lr, asl #2]	@ bottompoc, <variable>.APC.poc
	bl	vfmw_dprint_nothing	@
	str	r6, [r5, #632]	@ i, <variable>.apc_idc
	mov	r0, #0	@ D.36754,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L1224:
	ldr	r7, [r5, #520]	@ toppoc, <variable>.top_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1226	@
.L1231:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.36754,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	.fnend
	.size	MVC_GetAPC, .-MVC_GetAPC
	.align	2
	.global	MVC_ExchangePts
	.type	MVC_ExchangePts, %function
MVC_ExchangePts:
	.fnstart
.LFB1643:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldrd	r2, [r1, #16]	@ <variable>.fs_image.PTS, pFrameStore,
	mov	fp, r1	@ pFrameStore, pFrameStore
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	mvn	r1, #0	@,
	mvn	r0, #0	@ tmp144,
	cmp	r3, r1	@ <variable>.fs_image.PTS, tmp144
	cmpeq	r2, r0	@ <variable>.fs_image.PTS, tmp144
	.pad #20
	sub	sp, sp, #20	@,,
	beq	.L1252	@,
	movw	sl, #:lower16:11168612	@ tmp145,
	movt	sl, #:upper16:11168612	@ tmp145,
	ldr	r3, [r8, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L1252	@,
	movw	r4, #:lower16:11168420	@ ivtmp.4123,
	movt	r4, #:upper16:11168420	@ ivtmp.4123,
	movw	r9, #:lower16:11199520	@ tmp173,
	add	r4, r8, r4	@ ivtmp.4123, pMvcCtx, ivtmp.4123
	movt	r9, #:upper16:11199520	@ tmp173,
	mvn	r6, #1	@ MinPts.4129,
	mvn	r7, #0	@ MinPts.4129,
	mov	r5, #0	@ i,
	mvn	r0, #0	@,
	str	r0, [sp, #12]	@, %sfp
.L1251:
	ldr	r3, [r4, #0]	@ D.36403, <variable>.DPB.fs
	cmp	r3, #0	@ D.36403,
	beq	.L1248	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r8, r9]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1248	@,
	ldrsb	r1, [r0, #1]	@ D.36411, <variable>.s32DispState
	cmp	r1, #3	@ D.36411,
	cmpne	r1, #0	@, D.36411,
	beq	.L1248	@,
	ldr	r3, [r4, #0]	@ tmp160, <variable>.DPB.fs
	ldrd	r2, [r3, #16]	@ MinPts, tmp160,
	cmp	r3, r7	@ MinPts, MinPts.4129
	cmpeq	r2, r6	@ MinPts, MinPts.4129
	strcc	r5, [sp, #12]	@ i, %sfp
	bcc	.L1249	@,
.L1248:
	mov	r2, r6	@ MinPts, MinPts.4129
	mov	r3, r7	@ MinPts, MinPts.4129
.L1249:
	ldr	ip, [r8, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r5, r5, #1	@ i, i,
	mov	r6, r2	@ MinPts.4129, MinPts
	mov	r7, r3	@ MinPts.4129, MinPts
	cmp	r5, ip	@ i, <variable>.DPB.size
	add	r4, r4, #4	@ ivtmp.4123, ivtmp.4123,
	bcc	.L1251	@,
	ldr	r0, [sp, #12]	@, %sfp
	cmn	r0, #1	@,
	beq	.L1252	@,
	ldrd	r0, [fp, #16]	@ <variable>.fs_image.PTS, pFrameStore,
	cmp	r3, r1	@ MinPts, <variable>.fs_image.PTS
	cmpeq	r2, r0	@ MinPts, <variable>.fs_image.PTS
	bcc	.L1253	@,
.L1252:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1253:
	str	r2, [sp, #8]	@,
	str	r3, [sp, #4]	@,
	bl	vfmw_dprint_nothing	@
	ldr	r0, [sp, #12]	@, %sfp
	movw	ip, #:lower16:2792104	@ tmp164,
	movt	ip, #:upper16:2792104	@ tmp164,
	ldrd	r4, [fp, #16]	@ <variable>.fs_image.PTS, pFrameStore,
	add	r1, r0, ip	@ tmp164,, tmp164
	add	r3, r8, r1, asl #2	@, tmp169, pMvcCtx, tmp164,
	ldr	r2, [r3, #4]	@ tmp166, <variable>.DPB.fs
	strd	r4, [r2, #16]	@ <variable>.fs_image.PTS, tmp166,
	ldr	r2, [sp, #8]	@,
	ldr	r3, [sp, #4]	@,
	strd	r2, [fp, #16]	@ MinPts, pFrameStore,
	b	.L1252	@
	.fnend
	.size	MVC_ExchangePts, .-MVC_ExchangePts
	.align	2
	.global	MVC_CheckFrameStore
	.type	MVC_CheckFrameStore, %function
MVC_CheckFrameStore:
	.fnstart
.LFB1642:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, lr}	@,
	.save {r3, r4, r5, lr}
	movw	r3, #:lower16:11198012	@ tmp140,
	movt	r3, #:upper16:11198012	@ tmp140,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r2, [r0, r3]	@ <variable>.IDRFound, <variable>.IDRFound
	cmp	r2, #0	@ <variable>.IDRFound,
	beq	.L1274	@,
.L1255:
	movw	r3, #:lower16:11199520	@ tmp145,
	movt	r3, #:upper16:11199520	@ tmp145,
	ldr	r1, [r4, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, r3]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1258	@,
	ldrsb	r1, [r0, #1]	@ D.36347, <variable>.s32DispState
	cmp	r1, #3	@ D.36347,
	cmpne	r1, #0	@, D.36347,
	beq	.L1258	@,
	ldrb	r1, [r4, #1]	@ zero_extendqisi2	@ D.36361, <variable>.is_used
	cmp	r1, #0	@ D.36361,
	beq	.L1273	@,
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #1	@ <variable>.non_existing,
	beq	.L1273	@,
	ldr	ip, [r4, #0]	@ tmp162,* pFrameStore
	movw	r3, #:lower16:50332416	@ tmp163,
	movt	r3, #:upper16:50332416	@ tmp163,
	bic	r2, ip, #16711680	@ tmp160, tmp162,
	bic	lr, r2, #255	@ tmp160, tmp160,
	cmp	lr, r3	@ tmp160, tmp163
	beq	.L1273	@,
	cmp	r1, #1	@ D.36361,
	beq	.L1275	@,
	cmp	r1, #2	@ D.36361,
	beq	.L1276	@,
.L1265:
	ldr	ip, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #188]	@ <variable>.stDispImg.error_level, <variable>.stDispImg.error_level
	ldr	r3, [ip, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	r2, r3	@ <variable>.stDispImg.error_level, <variable>.s32OutErrThr
	movls	r0, #0	@ D.36341,
	ldmlsfd	sp!, {r3, r4, r5, pc}	@
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.36341,
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1276:
	ldrb	lr, [r4, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	tst	lr, #2	@ <variable>.mode_skip_flag,
	beq	.L1265	@,
	bl	vfmw_dprint_nothing	@
	b	.L1271	@
.L1258:
	bl	vfmw_dprint_nothing	@
	ldr	r0, [r4, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	moveq	r0, #2	@ tmp158,
	streq	r0, [r4, #608]	@ tmp158, <variable>.eFoState
	mvn	r0, #2	@ D.36341,
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1275:
	ldrb	r1, [r4, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	tst	r1, #1	@ <variable>.mode_skip_flag,
	beq	.L1265	@,
.L1273:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.36341,
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1274:
	ldr	r2, [r1, #636]	@ <variable>.as_first_out, <variable>.as_first_out
	cmp	r2, #1	@ <variable>.as_first_out,
	beq	.L1256	@,
.L1271:
	mvn	r0, #0	@ D.36341,
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L1256:
	str	r2, [r0, r3]	@ <variable>.as_first_out, <variable>.IDRFound
	b	.L1255	@
	.fnend
	.size	MVC_CheckFrameStore, .-MVC_CheckFrameStore
	.align	2
	.global	MVC_GetMinPOC
	.type	MVC_GetMinPOC, %function
MVC_GetMinPOC:
	.fnstart
.LFB1622:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r5, #:lower16:11168612	@ tmp151,
	movt	r5, #:upper16:11168612	@ tmp151,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	ip, #:lower16:11168616	@ tmp152,
	movt	ip, #:upper16:11168616	@ tmp152,
	mvn	r8, #0	@ tmp149,
	mov	sl, r3	@ pos, pos
	str	r8, [r3, #0]	@ tmp149,* pos
	mvn	r0, #-2147483648	@ tmp150,
	str	r0, [r2, #0]	@ tmp150,* poc
	mov	r6, r2	@ poc, poc
	ldr	r3, [r4, r5]	@ D.35656, <variable>.DPB.size
	.pad #12
	sub	sp, sp, #12	@,,
	ldr	r2, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r8, r1	@ CurrViewId, CurrViewId
	cmp	r2, r3	@ <variable>.DPB.used_size, D.35656
	strhi	r3, [r4, ip]	@ D.35656, <variable>.DPB.used_size
	cmp	r3, #0	@ D.35656,
	beq	.L1279	@,
	movw	r5, #:lower16:11168420	@ ivtmp.4183,
	movt	r5, #:upper16:11168420	@ ivtmp.4183,
	movw	fp, #:lower16:11199520	@ tmp180,
	movw	r9, #:lower16:11168612	@ tmp181,
	mvn	r1, #0	@,
	add	r5, r4, r5	@ ivtmp.4183, pMvcCtx, ivtmp.4183
	movt	fp, #:upper16:11199520	@ tmp180,
	movt	r9, #:upper16:11168612	@ tmp181,
	str	r1, [sp, #4]	@, %sfp
	mov	r7, #0	@ i,
	b	.L1283	@
.L1281:
	ldr	r3, [r5, #0]	@ temp.4191, <variable>.DPB.fs
	ldr	lr, [r6, #0]	@ tmp167,* poc
	ldr	r2, [r3, #600]	@ temp.4192, <variable>.poc
	cmp	lr, r2	@ tmp167, temp.4192
	ble	.L1280	@,
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #0	@ <variable>.is_in_dpb,
	beq	.L1280	@,
	ldrb	lr, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r1, lr, #1	@ tmp171, <variable>.s32DispState,
	uxtb	r0, r1	@ tmp172, tmp171
	cmp	r0, #1	@ tmp172,
	bls	.L1286	@,
.L1280:
	ldr	r2, [r4, r9]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r7, r7, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.4183, ivtmp.4183,
	cmp	r2, r7	@ <variable>.DPB.size, i
	bls	.L1279	@,
.L1283:
	ldr	r3, [r5, #0]	@ D.35660, <variable>.DPB.fs
	cmp	r3, #0	@ D.35660,
	beq	.L1280	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L1280	@,
	cmn	r8, #1	@ CurrViewId,
	bne	.L1281	@,
	ldr	r3, [r5, #0]	@ temp.4187, <variable>.DPB.fs
	ldrb	lr, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	beq	.L1280	@,
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r2, r1, #1	@ tmp162, <variable>.s32DispState,
	uxtb	ip, r2	@ tmp163, tmp162
	cmp	ip, #1	@ tmp163,
	bhi	.L1280	@,
	ldr	r1, [r6, #0]	@ D.35678,* poc
	ldr	r2, [r3, #600]	@ D.35679, <variable>.poc
	cmp	r1, r2	@ D.35678, D.35679
	bgt	.L1287	@,
	bne	.L1280	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	lr, [sp, #4]	@, %sfp
	cmp	ip, lr	@ <variable>.view_id,
	bge	.L1280	@,
	str	r1, [r6, #0]	@ D.35678,* poc
	str	r7, [sl, #0]	@ i,* pos
	ldr	r1, [r5, #0]	@ tmp166, <variable>.DPB.fs
	ldr	r2, [r1, #644]	@, <variable>.view_id
	str	r2, [sp, #4]	@, %sfp
	b	.L1280	@
.L1279:
	ldr	r0, [sl, #0]	@,* pos
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1286:
	ldr	r3, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r3	@ CurrViewId, <variable>.view_id
	streq	r2, [r6, #0]	@ temp.4192,* poc
	streq	r7, [sl, #0]	@ i,* pos
	b	.L1280	@
.L1287:
	str	r2, [r6, #0]	@ D.35679,* poc
	str	r7, [sl, #0]	@ i,* pos
	ldr	r0, [r5, #0]	@ tmp164, <variable>.DPB.fs
	ldr	r3, [r0, #644]	@, <variable>.view_id
	str	r3, [sp, #4]	@, %sfp
	b	.L1280	@
	.fnend
	.size	MVC_GetMinPOC, .-MVC_GetMinPOC
	.align	2
	.global	MVC_DEC_RecycleImage
	.type	MVC_DEC_RecycleImage, %function
MVC_DEC_RecycleImage:
	.fnstart
.LFB1765:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	movw	r5, #:lower16:11199520	@ tmp143,
	movt	r5, #:upper16:11199520	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ PicID, PicID
	bl	vfmw_dprint_nothing	@
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, r6	@, PicID
	bl	FSP_GetLogicFs	@
	subs	r7, r0, #0	@ pstLogicFs,
	bne	.L1296	@,
.L1289:
	mvn	r0, #0	@ D.44576,
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
.L1296:
	ldrsb	r3, [r7, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #0	@ <variable>.s32DispState,
	beq	.L1289	@,
	ldr	r1, [r7, #200]	@ D.44578, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ D.44578,
	beq	.L1290	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp148,
	str	r0, [r7, #200]	@ tmp148, <variable>.stDispImg.p_usrdat
.L1290:
	ldr	r1, [r7, #204]	@ temp.4229, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4229,
	beq	.L1291	@,
	movw	r2, #:lower16:11199520	@ tmp149,
	movt	r2, #:upper16:11199520	@ tmp149,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp151,
	str	r1, [r7, #204]	@ tmp151, <variable>.stDispImg.p_usrdat
.L1291:
	ldr	r1, [r7, #208]	@ temp.4231, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4231,
	beq	.L1292	@,
	movw	lr, #:lower16:11199520	@ tmp152,
	movt	lr, #:upper16:11199520	@ tmp152,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	ip, #0	@ tmp154,
	str	ip, [r7, #208]	@ tmp154, <variable>.stDispImg.p_usrdat
.L1292:
	ldr	r1, [r7, #212]	@ temp.4225, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4225,
	beq	.L1293	@,
	movw	r2, #:lower16:11199520	@ tmp155,
	movt	r2, #:upper16:11199520	@ tmp155,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp157,
	str	r3, [r7, #212]	@ tmp157, <variable>.stDispImg.p_usrdat
.L1293:
	movw	ip, #:lower16:11199520	@ tmp158,
	movt	ip, #:upper16:11199520	@ tmp158,
	mov	r1, r6	@, PicID
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.44576,
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
	.fnend
	.size	MVC_DEC_RecycleImage, .-MVC_DEC_RecycleImage
	.align	2
	.global	mvc_u_1
	.type	mvc_u_1, %function
mvc_u_1:
	.fnstart
.LFB1614:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	add	r1, r0, #13504	@, pMvcCtx,
	stmfd	sp!, {r3, r4, r5, lr}	@,
	.save {r3, r4, r5, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r0, r1, #24	@,,
	mov	r1, #1	@,
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ D.35525, <variable>.pCurrNal
	mov	r5, r0	@ INFO,
	ldr	r0, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r2, r0, #1	@ tmp141, <variable>.nal_bitoffset,
	str	r2, [r3, #60]	@ tmp141, <variable>.nal_bitoffset
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@, INFO
	ldmfd	sp!, {r3, r4, r5, pc}	@
	.fnend
	.size	mvc_u_1, .-mvc_u_1
	.align	2
	.global	mvc_u_v
	.type	mvc_u_v, %function
mvc_u_v:
	.fnstart
.LFB1613:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r0, r0, #13504	@, pMvcCtx,
	mov	r5, r1	@ LenInBits, LenInBits
	add	r0, r0, #24	@,,
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ D.35514, <variable>.pCurrNal
	ldr	r2, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, r2, r5	@ tmp142, <variable>.nal_bitoffset, LenInBits
	str	r5, [r3, #60]	@ tmp142, <variable>.nal_bitoffset
	mov	r6, r0	@ INFO,
	bl	vfmw_dprint_nothing	@
	mov	r0, r6	@, INFO
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	mvc_u_v, .-mvc_u_v
	.align	2
	.global	MVC_DecPicTimingSEI
	.type	MVC_DecPicTimingSEI, %function
MVC_DecPicTimingSEI:
	.fnstart
.LFB1748:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11155240	@ tmp150,
	movw	ip, #:lower16:11155992	@ tmp151,
	movt	r3, #:upper16:11155240	@ tmp150,
	movt	ip, #:upper16:11155992	@ tmp151,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r4, [r0, r3]	@ pSPS, <variable>.SPS
	movw	r1, #3992	@ tmp154,
	ldr	r0, [r0, ip]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mla	r3, r1, r0, r4	@ pSPS.4309, tmp154, <variable>.CurrSPS.seq_parameter_set_id, pSPS
	ldrb	r2, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	movne	r4, r3	@ pSPS, pSPS.4309
	bne	.L1307	@,
	movw	r2, #:lower16:11155232	@ tmp156,
	movt	r2, #:upper16:11155232	@ tmp156,
	ldr	ip, [r5, r2]	@ D.43369, <variable>.MaxSpsNum
	cmp	ip, #0	@ D.43369,
	ble	.L1303	@,
	ldrb	r1, [r4, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L1304	@,
	tst	ip, #1	@ D.43369,
	add	r3, r4, #3984	@ ivtmp.4305, pSPS,
	add	r3, r3, #8	@ ivtmp.4305, ivtmp.4305,
	bne	.L1306	@,
	ldrb	r0, [r3, #25]	@ zero_extendqisi2	@ D.43366, <variable>.is_valid
	mov	r4, r3	@ pSPS, ivtmp.4305
	add	r3, r3, #3984	@ ivtmp.4305, ivtmp.4305,
	mov	r1, #1	@ i,
	cmp	r0, #0	@ D.43366,
	add	r3, r3, #8	@ ivtmp.4305, ivtmp.4305,
	beq	.L1306	@,
	b	.L1304	@
.L1308:
	ldrb	r0, [r4, #25]	@ zero_extendqisi2	@ D.43366, <variable>.is_valid
	add	r2, r2, #8	@ tmp179, tmp158,
	cmp	r0, #0	@ D.43366,
	bne	.L1304	@,
	mov	r4, r2	@ pSPS, tmp179
	ldrb	r2, [r2, #25]	@ zero_extendqisi2	@ D.43366, <variable>.is_valid
	cmp	r2, #0	@ D.43366,
	bne	.L1304	@,
.L1306:
	add	r0, r1, #1	@ tmp180, i,
	add	r2, r3, #3984	@ tmp158, pSPS,
	cmp	ip, r0	@ D.43369, tmp180
	mov	r4, r3	@ pSPS, ivtmp.4305
	add	r1, r0, #1	@ i, tmp180,
	add	r3, r2, #4000	@ ivtmp.4305, tmp158,
	bgt	.L1308	@,
.L1303:
	bl	vfmw_dprint_nothing	@
	mvn	r3, #0	@ D.43372,
.L1309:
	mov	r0, r3	@, D.43372
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1304:
	cmp	r4, #0	@ pSPS,
	beq	.L1303	@,
.L1307:
	ldrb	r1, [r4, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r1, #0	@ <variable>.vui_parameters_present_flag,
	beq	.L1310	@,
	ldrb	ip, [r4, #35]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag, <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag
	cmp	ip, #0	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag,
	beq	.L1325	@,
	ldr	lr, [r4, #388]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r6, [r4, #392]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, lr, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r6, #1	@ dpb_output_len, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1,
.L1313:
	mov	r0, r5	@, pMvcCtx
	movw	r2, #:lower16:.LC0	@,
	movt	r2, #:upper16:.LC0	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168412	@ tmp168,
	movt	ip, #:upper16:11168412	@ tmp168,
	mov	r1, r6	@, dpb_output_len
	movw	r2, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC1	@,
	str	r0, [r5, ip]	@, <variable>.PicTimingSEI.cpb_removal_delay
	mov	r0, r5	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:11168416	@ tmp170,
	movt	r1, #:upper16:11168416	@ tmp170,
	str	r0, [r5, r1]	@, <variable>.PicTimingSEI.dpb_output_delay
.L1310:
	ldrb	r3, [r4, #39]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.pic_struct_present_flag, <variable>.vui_seq_parameters.pic_struct_present_flag
	cmp	r3, #0	@ <variable>.vui_seq_parameters.pic_struct_present_flag,
	beq	.L1309	@,
	mov	r0, r5	@, pMvcCtx
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r2, #:upper16:.LC2	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:11168408	@ tmp173,
	movt	r2, #:upper16:11168408	@ tmp173,
	mov	r3, #0	@ D.43372,
	strb	r0, [r5, r2]	@, <variable>.PicTimingSEI.pic_struct
	mov	r0, r3	@, D.43372
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1325:
	ldrb	r2, [r4, #38]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag, <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag,
	beq	.L1310	@,
	ldr	r0, [r4, #700]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r3, [r4, #704]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, r0, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r3, #1	@ dpb_output_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1,
	b	.L1313	@
	.fnend
	.size	MVC_DecPicTimingSEI, .-MVC_DecPicTimingSEI
	.align	2
	.global	MVC_GetBackPicFromVOQueue
	.type	MVC_GetBackPicFromVOQueue, %function
MVC_GetBackPicFromVOQueue:
	.fnstart
.LFB1698:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	movw	r3, #:lower16:11199520	@ tmp144,
	movt	r3, #:upper16:11199520	@ tmp144,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L1344	@,
.L1327:
	movw	sl, #:lower16:11197996	@ tmp147,
	movt	sl, #:upper16:11197996	@ tmp147,
	ldr	r0, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r0, #0	@ <variable>.TotalFsNum,
	beq	.L1328	@,
	movw	r4, #:lower16:11169289	@ ivtmp.4345,
	movt	r4, #:upper16:11169289	@ ivtmp.4345,
	mov	r7, #0	@ i,
	movw	r8, #:lower16:11199520	@ tmp175,
	add	r4, r6, r4	@ ivtmp.4345, pMvcCtx, ivtmp.4345
	movt	r8, #:upper16:11199520	@ tmp175,
	mov	r5, r7	@ tmp174, i
.L1333:
	ldr	r1, [r4, #199]	@ D.39138, <variable>.fs_image.p_usrdat
	add	r7, r7, #1	@ i, i,
	strb	r5, [r4, #0]	@ tmp174, <variable>.is_used
	cmp	r1, #0	@ D.39138,
	strb	r5, [r4, #1]	@ tmp174, <variable>.is_reference
	beq	.L1329	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #199]	@ tmp174, <variable>.fs_image.p_usrdat
.L1329:
	ldr	r1, [r4, #203]	@ temp.4358, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4358,
	beq	.L1330	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #203]	@ tmp174, <variable>.fs_image.p_usrdat
.L1330:
	ldr	r1, [r4, #207]	@ temp.4360, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4360,
	beq	.L1331	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #207]	@ tmp174, <variable>.fs_image.p_usrdat
.L1331:
	ldr	r1, [r4, #211]	@ temp.4353, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4353,
	beq	.L1332	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #211]	@ tmp174, <variable>.fs_image.p_usrdat
.L1332:
	ldr	r1, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r4, r4, #672	@ ivtmp.4345, ivtmp.4345,
	cmp	r1, r7	@ <variable>.TotalFsNum, i
	bhi	.L1333	@,
.L1328:
	movw	r2, #:lower16:11198000	@ tmp168,
	movt	r2, #:upper16:11198000	@ tmp168,
	ldr	ip, [r6, r2]	@ D.39142, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.39142,
	ldmeqfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	movw	r3, #:lower16:11197924	@ ivtmp.4340,
	movt	r3, #:upper16:11197924	@ ivtmp.4340,
	add	r2, r6, r3	@ ivtmp.4340, pMvcCtx, ivtmp.4340
	mov	r1, #1	@ i.4355,
	cmp	r1, ip	@ i.4355, D.39142
	sub	lr, ip, #1	@ tmp177, D.39142,
	mov	r0, #0	@ tmp173,
	and	r3, lr, r1	@ tmp179, tmp177,
	str	r0, [r2], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	cmp	r3, #0	@ tmp179,
	beq	.L1335	@,
	mov	r1, #2	@ i.4355,
	cmp	r1, ip	@ i.4355, D.39142
	str	r0, [r2], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L1335:
	add	r1, r1, #2	@ i.4355, i.4355,
	mov	lr, r2	@ tmp180, ivtmp.4340
	cmp	r1, ip	@ i.4355, D.39142
	str	r0, [lr], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	str	r0, [r2, #4]	@ tmp173, <variable>.PmvStoreUsedFlag
	add	r2, lr, #4	@ ivtmp.4340, tmp180,
	bcc	.L1335	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L1344:
	add	r0, r6, #8	@, pMvcCtx,
	bl	ResetVoQueue	@
	b	.L1327	@
	.fnend
	.size	MVC_GetBackPicFromVOQueue, .-MVC_GetBackPicFromVOQueue
	.align	2
	.global	MVC_ReleaseNAL
	.type	MVC_ReleaseNAL, %function
MVC_ReleaseNAL:
	.fnstart
.LFB1663:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	subs	r4, r1, #0	@ pNalu, pNalu
	mov	r6, r0	@ ChanID, ChanID
	beq	.L1350	@,
	ldr	r3, [r4, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r5, #0	@ tmp135,
	strb	r5, [r4, #1]	@ tmp135, <variable>.is_valid
	cmp	r3, r5	@ <variable>.streamBuffer,
	strb	r5, [r4, #3]	@ tmp135, <variable>.nal_integ
	beq	.L1347	@,
	ldr	r1, [r4, #28]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	bl	vfmw_dprint_nothing	@
	str	r5, [r4, #8]	@ tmp135, <variable>.bitstream_length
	str	r5, [r4, #4]	@ tmp135, <variable>.streamBuffer
	str	r5, [r4, #20]	@ tmp135, <variable>.bitsoffset
.L1347:
	ldr	r0, [r4, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L1348	@,
	ldr	r1, [r4, #56]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	bl	vfmw_dprint_nothing	@
	mov	r1, #0	@ tmp146,
	str	r1, [r4, #36]	@ tmp146, <variable>.bitstream_length
	str	r1, [r4, #32]	@ tmp146, <variable>.streamBuffer
	str	r1, [r4, #48]	@ tmp146, <variable>.bitsoffset
.L1348:
	mov	r2, #0	@ tmp149,
	str	r2, [r4, #64]	@ tmp149, <variable>.nal_segment
	strb	r2, [r4, #0]	@ tmp149, <variable>.nal_used_segment
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1350:
	ldmfd	sp!, {r4, r5, r6, lr}	@
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_ReleaseNAL, .-MVC_ReleaseNAL
	.align	2
	.global	MVC_ClearAllSlice
	.type	MVC_ClearAllSlice, %function
MVC_ClearAllSlice:
	.fnstart
.LFB1618:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	movw	r4, #:lower16:11197380	@ ivtmp.4423,
	movw	sl, #:lower16:11197924	@ D.48673,
	movt	r4, #:upper16:11197380	@ ivtmp.4423,
	movt	sl, #:upper16:11197924	@ D.48673,
	movw	r7, #:lower16:11199520	@ tmp148,
	add	r4, r0, r4	@ ivtmp.4423, pMvcCtx, ivtmp.4423
	add	sl, r0, sl	@ D.48673, pMvcCtx, D.48673
	movt	r7, #:upper16:11199520	@ tmp148,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r8, #0	@ tmp149,
.L1353:
	ldr	r1, [r4, #0]	@ D.35567, <variable>.pSliceNal
	add	r5, r4, #4	@ tmp150, ivtmp.4423,
	cmp	r1, #0	@ D.35567,
	beq	.L1352	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r8, [r4, #0]	@ tmp149, <variable>.pSliceNal
.L1352:
	ldr	r1, [r4, #4]	@ D.35567, <variable>.pSliceNal
	cmp	r1, #0	@ D.35567,
	beq	.L1356	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r8, [r4, #4]	@ tmp149, <variable>.pSliceNal
.L1356:
	add	r4, r5, #4	@ ivtmp.4423, tmp150,
	cmp	r4, sl	@ ivtmp.4423, D.48673
	bne	.L1353	@,
	movw	r2, #:lower16:11199444	@ tmp143,
	movw	r3, #:lower16:11199504	@ tmp145,
	movt	r2, #:upper16:11199444	@ tmp143,
	movt	r3, #:upper16:11199504	@ tmp145,
	mov	r0, #0	@ tmp144,
	str	r0, [r6, r2]	@ tmp144, <variable>.SliceParaNum
	str	r0, [r6, r3]	@ tmp144, <variable>.MaxBytesReceived
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	.fnend
	.size	MVC_ClearAllSlice, .-MVC_ClearAllSlice
	.align	2
	.global	MVC_ClearCurrPic
	.type	MVC_ClearCurrPic, %function
MVC_ClearCurrPic:
	.fnstart
.LFB1619:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	sl, #:lower16:11155236	@ tmp163,
	movt	sl, #:upper16:11155236	@ tmp163,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	.pad #12
	sub	sp, sp, #12	@,,
	movw	r7, #:lower16:11164320	@ tmp164,
	bl	MVC_ClearAllSlice	@
	ldr	r9, [r4, sl]	@, <variable>.MaxPpsNum
	movw	r0, #:lower16:11164312	@ tmp162,
	movt	r0, #:upper16:11164312	@ tmp162,
	movt	r7, #:upper16:11164320	@ tmp164,
	movw	sl, #:lower16:11164304	@ tmp166,
	str	r9, [r4, r0]	@, <variable>.PrevSlice.pic_parameter_set_id
	movt	sl, #:upper16:11164304	@ tmp166,
	movw	r6, #:lower16:11164305	@ tmp167,
	movw	r5, #:lower16:11164316	@ tmp168,
	movt	r6, #:upper16:11164305	@ tmp167,
	movt	r5, #:upper16:11164316	@ tmp168,
	movw	ip, #:lower16:11164306	@ tmp169,
	movw	r1, #:lower16:11164328	@ tmp170,
	movt	ip, #:upper16:11164306	@ tmp169,
	movt	r1, #:upper16:11164328	@ tmp170,
	movw	r2, #:lower16:11164332	@,
	movw	r8, #:lower16:11164336	@ tmp172,
	movt	r2, #:upper16:11164332	@,
	movt	r8, #:upper16:11164336	@ tmp172,
	movw	fp, #:lower16:11164340	@ tmp173,
	movw	r9, #:lower16:11164344	@ tmp174,
	movt	fp, #:upper16:11164340	@ tmp173,
	movt	r9, #:upper16:11164344	@ tmp174,
	mov	r3, #0	@ tmp141,
	str	r3, [r4, r8]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	mov	r0, r3	@, tmp141
	movw	r8, #:lower16:88888	@ tmp165,
	strb	r3, [r4, sl]	@ tmp141, <variable>.PrevSlice.field_pic_flag
	movt	r8, #:upper16:88888	@ tmp165,
	str	r3, [r4, fp]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	str	r8, [r4, r7]	@ tmp165, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp144,
	strb	r7, [r4, r6]	@ tmp144, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp147,
	str	r6, [r4, r5]	@ tmp147, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp149,
	strb	r5, [r4, ip]	@ tmp149, <variable>.PrevSlice.nal_unit_type
	mov	ip, #3	@ tmp152,
	str	ip, [r4, r1]	@ tmp152, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	r1, #0	@ tmp154,
	str	r1, [r4, r2]	@ tmp154, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r2, #262144	@ tmp160,
	str	r2, [r4, r9]	@ tmp160, <variable>.PrevSlice.first_mb_in_slice
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	.fnend
	.size	MVC_ClearCurrPic, .-MVC_ClearCurrPic
	.align	2
	.global	MVC_ClearAllNal
	.type	MVC_ClearAllNal, %function
MVC_ClearAllNal:
	.fnstart
.LFB1616:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	ldrb	r3, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	movw	r7, #:lower16:11199520	@ tmp147,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #1	@ <variable>.is_valid,
	movt	r7, #:upper16:11199520	@ tmp147,
	beq	.L1374	@,
.L1367:
	mov	r3, #1	@ i,
	add	r2, r6, #96	@ ivtmp.4481, pMvcCtx,
	b	.L1364	@
.L1363:
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	beq	.L1375	@,
.L1369:
	add	r3, r5, #1	@ i, tmp148,
	add	r2, r4, #96	@ ivtmp.4481, tmp149,
	cmp	r3, #137	@ i,
	beq	.L1376	@,
.L1364:
	add	r4, r2, #96	@ tmp149, ivtmp.4481,
	ldrb	r2, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r5, r3, #1	@ tmp148, i,
	cmp	r2, #1	@ <variable>.is_valid,
	bne	.L1363	@,
	add	ip, r3, r3, asl #1	@, tmp142, i, i,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	r1, r6, ip, asl #5	@, tmp144, pMvcCtx, tmp142,
	add	r1, r1, #376	@, tmp144,
	bl	MVC_ReleaseNAL	@
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	bne	.L1369	@,
.L1375:
	add	r3, r5, r5, asl #1	@, tmp166, tmp148, tmp148,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	lr, r6, r3, asl #5	@, tmp168, pMvcCtx, tmp166,
	add	r1, lr, #376	@, tmp168,
	bl	MVC_ReleaseNAL	@
	add	r3, r5, #1	@ i, tmp148,
	cmp	r3, #137	@ i,
	add	r2, r4, #96	@ ivtmp.4481, tmp149,
	bne	.L1364	@,
.L1376:
	mov	r0, #0	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
.L1374:
	ldr	r0, [r0, r7]	@, <variable>.ChanID
	add	r1, r6, #376	@, pMvcCtx,
	bl	MVC_ReleaseNAL	@
	b	.L1367	@
	.fnend
	.size	MVC_ClearAllNal, .-MVC_ClearAllNal
	.align	2
	.global	MVC_DEC_Destroy
	.type	MVC_DEC_Destroy, %function
MVC_DEC_Destroy:
	.fnstart
.LFB1763:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r6	@, pMvcCtx
	movw	r8, #:lower16:11198024	@ tmp149,
	bl	MVC_ClearAllNal	@
	movw	r0, #:lower16:11199456	@ tmp145,
	movt	r0, #:upper16:11199456	@ tmp145,
	movt	r8, #:upper16:11198024	@ tmp149,
	ldr	r2, [r6, r0]	@ <variable>.MutexHold, <variable>.MutexHold
	ldr	r3, [r6, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r2, #1	@ <variable>.MutexHold,
	moveq	r2, #0	@ tmp148,
	streq	r2, [r6, r0]	@ tmp148, <variable>.MutexHold
	cmp	r3, #0	@ <variable>.TotalUsrDatNum,
	beq	.L1379	@,
	movw	r4, #:lower16:11198028	@ ivtmp.4525,
	movt	r4, #:upper16:11198028	@ ivtmp.4525,
	mov	r5, #0	@ i,
	movw	r7, #:lower16:11199520	@ tmp174,
	add	r4, r6, r4	@ ivtmp.4525, pMvcCtx, ivtmp.4525
	movt	r7, #:upper16:11199520	@ tmp174,
	mov	sl, r5	@ tmp175, i
.L1381:
	ldr	r1, [r4, #0]	@ D.44430, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i, i,
	cmp	r1, #0	@ D.44430,
	beq	.L1380	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	sl, [r4, #0]	@ tmp175, <variable>.pUsrDatArray
.L1380:
	ldr	r1, [r6, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.4525, ivtmp.4525,
	cmp	r1, r5	@ <variable>.TotalUsrDatNum, i
	bhi	.L1381	@,
.L1379:
	movw	r5, #:lower16:11169488	@ ivtmp.4517,
	movw	sl, #:lower16:11196368	@ D.48773,
	movt	r5, #:upper16:11169488	@ ivtmp.4517,
	movt	sl, #:upper16:11196368	@ D.48773,
	movw	r7, #:lower16:11199520	@ tmp172,
	add	r4, r6, r5	@ ivtmp.4517, pMvcCtx, ivtmp.4517
	add	sl, r6, sl	@ D.48773, pMvcCtx, D.48773
	movt	r7, #:upper16:11199520	@ tmp172,
	mov	r8, #0	@ tmp173,
.L1382:
	ldr	r1, [r4, #0]	@ temp.4529, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4529,
	beq	.L1384	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp173, <variable>.fs_image.p_usrdat
.L1384:
	ldr	r1, [r4, #4]	@ temp.4532, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4532,
	beq	.L1385	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #4]	@ tmp173, <variable>.fs_image.p_usrdat
.L1385:
	ldr	r1, [r4, #8]	@ temp.4534, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4534,
	beq	.L1386	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #8]	@ tmp173, <variable>.fs_image.p_usrdat
.L1386:
	ldr	r1, [r4, #12]	@ D.44436, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.44436,
	beq	.L1388	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #12]	@ tmp173, <variable>.fs_image.p_usrdat
.L1388:
	ldr	r1, [r4, #672]	@ temp.4529, <variable>.fs_image.p_usrdat
	add	r5, r4, #672	@ tmp177, ivtmp.4517,
	cmp	r1, #0	@ temp.4529,
	beq	.L1392	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #672]	@ tmp173, <variable>.fs_image.p_usrdat
.L1392:
	ldr	r1, [r5, #4]	@ temp.4532, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4532,
	beq	.L1393	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #4]	@ tmp173, <variable>.fs_image.p_usrdat
.L1393:
	ldr	r1, [r5, #8]	@ temp.4534, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4534,
	beq	.L1394	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #8]	@ tmp173, <variable>.fs_image.p_usrdat
.L1394:
	ldr	r1, [r5, #12]	@ D.44436, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.44436,
	beq	.L1398	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #12]	@ tmp173, <variable>.fs_image.p_usrdat
.L1398:
	add	r4, r5, #672	@ ivtmp.4517, tmp177,
	cmp	r4, sl	@ ivtmp.4517, D.48773
	bne	.L1382	@,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@
	b	vfmw_dprint_nothing	@
	.fnend
	.size	MVC_DEC_Destroy, .-MVC_DEC_Destroy
	.align	2
	.global	MVC_ClearCurrNal
	.type	MVC_ClearCurrNal, %function
MVC_ClearCurrNal:
	.fnstart
.LFB1615:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	ldr	r1, [r0, #368]	@ D.35532, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ D.35532,
	beq	.L1400	@,
	movw	r2, #:lower16:11199520	@ tmp136,
	movt	r2, #:upper16:11199520	@ tmp136,
	ldr	r0, [r0, r2]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	mov	r3, #0	@ tmp138,
	str	r3, [r4, #368]	@ tmp138, <variable>.pCurrNal
.L1400:
	mov	r0, #0	@,
	ldmfd	sp!, {r4, pc}	@
	.fnend
	.size	MVC_ClearCurrNal, .-MVC_ClearCurrNal
	.align	2
	.global	MVC_ClearCurrSlice
	.type	MVC_ClearCurrSlice, %function
MVC_ClearCurrSlice:
	.fnstart
.LFB1617:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	movw	r3, #:lower16:11199476	@ tmp140,
	movt	r3, #:upper16:11199476	@ tmp140,
	mov	r0, #0	@,
	ldr	r1, [r4, r3]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r2, r1, #1	@ tmp138, <variable>.TotalSlice,
	str	r2, [r4, r3]	@ tmp138, <variable>.TotalSlice
	ldmfd	sp!, {r4, pc}	@
	.fnend
	.size	MVC_ClearCurrSlice, .-MVC_ClearCurrSlice
	.align	2
	.global	MVC_RepairList
	.type	MVC_RepairList, %function
MVC_RepairList:
	.fnstart
.LFB1665:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:11162624	@ tmp157,
	movt	r2, #:upper16:11162624	@ tmp157,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1407	@,
	movcc	r8, #1	@ i_list_cnt,
	bcs	.L1443	@,
.L1410:
	movw	r6, #:lower16:11162668	@ ivtmp.4631,
	add	r7, r3, #11141120	@ ivtmp.4634, pMvcCtx,
	movt	r6, #:upper16:11162668	@ ivtmp.4631,
	mov	r5, #0	@ i_list,
	movw	sl, #:lower16:11196640	@ tmp193,
	add	r6, r3, r6	@ ivtmp.4631, pMvcCtx, ivtmp.4631
	add	r7, r7, #27904	@ ivtmp.4634, ivtmp.4634,
	movt	sl, #:upper16:11196640	@ tmp193,
	mov	r9, r5	@ pRepairPic.4642, i_list
	mov	fp, #1	@ tmp192,
.L1424:
	ldr	r4, [r6, #0]	@ temp.4637, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4637,
	beq	.L1411	@,
	ldr	r1, [r7, #0]	@ pRepairPic.4643, <variable>.pListX
	cmp	r1, #0	@ pRepairPic.4643,
	movne	ip, r1	@ pRepairPic, pRepairPic.4643
	bne	.L1413	@,
	add	r2, r5, r5, asl #5	@, tmp161, i_list, i_list,
	tst	r4, #1	@ temp.4637,
	mov	r0, r1	@ i, pRepairPic.4643
	mov	ip, r2, asl #2	@ tmp162, tmp161,
	add	r2, ip, #11141120	@ tmp163, tmp162,
	add	ip, r2, #27904	@ tmp163, tmp163,
	add	r2, r3, ip	@ ivtmp.4628, pMvcCtx, tmp163
	bne	.L1414	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	mov	r0, #1	@ i,
	cmp	ip, #0	@ pRepairPic,
	beq	.L1414	@,
	b	.L1413	@
.L1416:
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1413	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1413	@,
.L1414:
	add	r0, r0, #1	@ tmp204, i,
	cmp	r4, r0	@ temp.4637, tmp204
	add	r0, r0, #1	@ i, tmp204,
	bhi	.L1416	@,
	mov	ip, r9	@ pRepairPic, pRepairPic.4642
	mov	r2, #1	@ prephitmp.4598,
.L1415:
	cmp	ip, #0	@ pRepairPic,
	orreq	r2, r2, #1	@,, tmp169, prephitmp.4598
	cmp	r2, #0	@ tmp169,
	beq	.L1417	@,
	ldr	r2, [r3, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1441	@,
	ldr	r9, [r3, sl]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	ip, r9, #464	@ pRepairPic, <variable>.CurrPic.frame_store,
.L1417:
	add	r0, r5, r5, asl #5	@, tmp176, i_list, i_list,
	movw	r2, #:lower16:11169028	@ tmp178,
	tst	r4, #1	@ temp.4637,
	movt	r2, #:upper16:11169028	@ tmp178,
	mov	r9, r0, asl #2	@ tmp177, tmp176,
	mov	r0, #0	@ i.4638,
	add	r2, r9, r2	@ tmp178, tmp177, tmp178
	add	r2, r3, r2	@ ivtmp.4616, pMvcCtx, tmp178
	bne	.L1421	@,
	cmp	r1, #0	@ pRepairPic.4643,
	mov	r0, #1	@ i.4638,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4637, i.4638
	add	r2, r2, #4	@ ivtmp.4616, ivtmp.4616,
	ldrhi	r1, [r2, #-4]	@ pRepairPic.4643, <variable>.pListX
	bhi	.L1421	@,
	b	.L1420	@
.L1430:
	mov	r2, r1	@ ivtmp.4616, tmp200
	add	r0, r0, #1	@ i.4638, tmp199,
	ldr	r1, [r2], #4	@ pRepairPic.4643, <variable>.pListX
.L1421:
	add	r0, r0, #1	@ tmp199, i.4638,
	cmp	r1, #0	@ pRepairPic.4643,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4637, tmp199
	add	r1, r2, #4	@ tmp200, ivtmp.4616,
	bls	.L1420	@,
	ldr	r2, [r1, #-4]	@ pRepairPic.4643, <variable>.pListX
	cmp	r2, #0	@ pRepairPic.4643,
	streq	ip, [r1, #-4]	@ pRepairPic, <variable>.pListX
	b	.L1430	@
.L1411:
	ldr	ip, [r3, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1441	@,
	ldr	r2, [r3, sl]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, r9	@ pRepairPic, pRepairPic.4642
	str	fp, [r6, #0]	@ tmp192, <variable>.CurrSlice.listXsize
	add	r0, r2, #464	@ tmp185, <variable>.CurrPic.frame_store,
	str	r0, [r7, #0]	@ tmp185, <variable>.pListX
.L1420:
	add	r5, r5, #1	@ i_list, i_list,
	add	r6, r6, #4	@ ivtmp.4631, ivtmp.4631,
	cmp	r5, r8	@ i_list, i_list_cnt
	add	r7, r7, #132	@ ivtmp.4634, ivtmp.4634,
	bcs	.L1408	@,
	mov	r9, ip	@ pRepairPic.4642, pRepairPic
	b	.L1424	@
.L1413:
	mov	r2, #0	@ prephitmp.4598,
	b	.L1415	@
.L1443:
	cmp	r2, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1408	@,
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.37838,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L1408:
	mov	r0, #0	@ D.37838,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L1441:
	mov	r0, r3	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.37838,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L1407:
	mov	r8, #2	@ i_list_cnt,
	b	.L1410	@
	.fnend
	.size	MVC_RepairList, .-MVC_RepairList
	.align	2
	.global	MVC_CombinePacket
	.type	MVC_CombinePacket, %function
MVC_CombinePacket:
	.fnstart
.LFB1756:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r3, [r0, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, #4096	@ <variable>.bitstream_length,
	ldmcsfd	sp!, {r4, r5, r6, pc}	@
	bl	vfmw_dprint_nothing	@
	mov	r5, #0	@ tmp154,
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, #368]	@ temp.4669, <variable>.pCurrNal
	ldr	r3, [r2, #8]	@ temp.4670, <variable>.bitstream_length
	ldr	r6, [r2, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	ldr	r1, [r2, #4]	@, <variable>.streamBuffer
	rsb	r0, r3, r6	@, temp.4670, <variable>.streamBuffer
	mov	r2, r3	@, temp.4670
	bl	memcpy	@
	ldr	ip, [r4, #368]	@ temp.4671, <variable>.pCurrNal
	ldr	r0, [ip, #56]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r6, [ip, #28]	@ StreamId, <variable>.StreamID
	str	r0, [ip, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r1, #20]	@ tmp154, <variable>.bitsoffset
	ldr	ip, [r4, #368]	@ temp.4673, <variable>.pCurrNal
	ldr	r2, [ip, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [ip, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	rsb	r0, r2, r3	@ tmp158, <variable>.bitstream_length, <variable>.streamBuffer
	str	r0, [ip, #4]	@ tmp158, <variable>.streamBuffer
	ldr	ip, [r4, #368]	@ temp.4678, <variable>.pCurrNal
	ldr	r3, [ip, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r1, [ip, #40]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	rsb	r2, r3, r1	@ tmp161, <variable>.bitstream_length, <variable>.stream_phy_addr
	str	r2, [ip, #12]	@ tmp161, <variable>.stream_phy_addr
	ldr	ip, [r4, #368]	@ temp.4680, <variable>.pCurrNal
	ldr	r0, [ip, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [ip, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, r0, r3	@ tmp164, <variable>.bitstream_length, <variable>.bitstream_length
	str	r2, [ip, #8]	@ tmp164, <variable>.bitstream_length
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r0, #1	@ tmp166,
	str	r0, [r1, #64]	@ tmp166, <variable>.nal_segment
	bl	vfmw_dprint_nothing	@
	movw	r3, #:lower16:11199520	@ tmp167,
	movt	r3, #:upper16:11199520	@ tmp167,
	mov	r1, r6	@, StreamId
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [ip, #32]	@ tmp154, <variable>.streamBuffer
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r2, #48]	@ tmp154, <variable>.bitsoffset
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r1, #36]	@ tmp154, <variable>.bitstream_length
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	MVC_CombinePacket, .-MVC_CombinePacket
	.align	2
	.global	MVC_FindZeroBitsInSeg
	.type	MVC_FindZeroBitsInSeg, %function
MVC_FindZeroBitsInSeg:
	.fnstart
.LFB1754:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ands	r3, r1, #63	@ tmp154, len,
	add	r2, r1, #63	@ tmp157, len,
	mov	fp, r1	@ len, len
	movne	r3, #1	@, tmp154,
	cmp	r1, #0	@ len,
	mov	sl, r0	@ ptr, ptr
	movge	r2, r1	@ len, len
	add	r8, r3, r2, asr #6	@, nRound, tmp154, len,
	cmp	r8, #0	@ nRound,
	movle	r4, #0	@ zero_byte,
	ble	.L1449	@,
	movw	r5, #:lower16:.LANCHOR1	@ tmp192,
	movt	r5, #:upper16:.LANCHOR1	@ tmp192,
	mov	r7, r1	@ ivtmp.4737, len
	mov	r4, #0	@ zero_byte,
	mov	r9, r5	@ tmp193, tmp192
.L1453:
	cmp	r7, #64	@ ivtmp.4737,
	movlt	r6, r7	@ ThisRoundSize.866, ivtmp.4737
	movge	r6, #64	@ ThisRoundSize.866,
	movw	r0, #:lower16:.LANCHOR1	@,
	rsb	ip, r6, r7	@ tmp160, ThisRoundSize.866, ivtmp.4737
	movt	r0, #:upper16:.LANCHOR1	@,
	mov	r2, r6	@, ThisRoundSize.866
	sub	r6, r6, #1	@ tmp167, ThisRoundSize.866,
	add	r1, sl, ip	@, ptr, tmp160
	bl	memcpy	@
	ldrb	r1, [r5, r6]	@ zero_extendqisi2	@ tmp168,
	add	r3, r5, r6	@ pLastByte, tmp192, tmp167
	cmp	r1, #0	@ tmp168,
	bne	.L1449	@,
	cmp	r3, r9	@ pLastByte, tmp193
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1450	@,
	ldrb	r1, [r3, #-1]	@ zero_extendqisi2	@ tmp171,
	rsb	r2, r3, r5	@ tmp195, pLastByte, tmp192
	cmp	r1, #0	@ tmp171,
	mvn	lr, r2	@ tmp194, tmp195
	and	r2, lr, #1	@ tmp196, tmp194,
	bne	.L1449	@,
	sub	r3, r3, #1	@ ivtmp.4726, pLastByte,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4726, tmp192
	beq	.L1450	@,
	cmp	r2, #0	@ tmp196,
	beq	.L1451	@,
	ldrb	r1, [r3, #-1]	@ zero_extendqisi2	@ tmp203,
	cmp	r1, #0	@ tmp203,
	bne	.L1449	@,
	sub	r3, r3, #1	@ ivtmp.4726, ivtmp.4726,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4726, tmp192
	bne	.L1451	@,
	b	.L1450	@
.L1452:
	ldrb	ip, [r2, #-1]	@ zero_extendqisi2	@ tmp201,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	ip, #0	@ tmp201,
	bne	.L1449	@,
	cmp	r3, r5	@ ivtmp.4726, tmp192
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1450	@,
.L1451:
	ldrb	lr, [r3, #-1]	@ zero_extendqisi2	@ tmp202,
	sub	r2, r3, #1	@ tmp198, ivtmp.4726,
	sub	r3, r2, #1	@ ivtmp.4726, tmp198,
	cmp	lr, #0	@ tmp202,
	beq	.L1452	@,
.L1449:
	cmp	r4, fp	@ zero_byte, len
	bge	.L1471	@,
.L1454:
	sub	r2, fp, #1	@ tmp173, len,
	rsb	r3, r4, r2	@ tmp172, zero_byte, tmp173
	ldrb	r3, [sl, r3]	@ zero_extendqisi2	@ Byte,
	tst	r3, #1	@ Byte,
	bne	.L1471	@,
	mov	r3, r3, lsr #1	@ Byte.4741, Byte,
	tst	r3, #1	@ Byte.4741,
	movne	r0, #1	@ zero_bit,
	bne	.L1455	@,
	mov	r3, r3, lsr #1	@ Byte.4744, Byte.4741,
	tst	r3, #1	@ Byte.4744,
	movne	r0, #2	@ zero_bit,
	bne	.L1455	@,
	mov	r3, r3, lsr #1	@ Byte.4747, Byte.4744,
	tst	r3, #1	@ Byte.4747,
	movne	r0, #3	@ zero_bit,
	bne	.L1455	@,
	mov	r3, r3, lsr #1	@ Byte.4750, Byte.4747,
	tst	r3, #1	@ Byte.4750,
	movne	r0, #4	@ zero_bit,
	bne	.L1455	@,
	mov	r3, r3, lsr #1	@ Byte.4753, Byte.4750,
	tst	r3, #1	@ Byte.4753,
	movne	r0, #5	@ zero_bit,
	bne	.L1455	@,
	mov	r3, r3, lsr #1	@ Byte.4756, Byte.4753,
	tst	r3, #1	@ Byte.4756,
	movne	r0, #6	@ zero_bit,
	bne	.L1455	@,
	movs	r3, r3, lsr #1	@, Byte.4756,
	movne	r0, #7	@, zero_bit,
	moveq	r0, #8	@, zero_bit,
.L1455:
	add	r0, r0, r4, asl #3	@,, zero_bit, zero_byte,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L1450:
	sub	r8, r8, #1	@ r, r,
	sub	r7, r7, #64	@ ivtmp.4737, ivtmp.4737,
	cmp	r8, #0	@ r,
	bgt	.L1453	@,
	cmp	r4, fp	@ zero_byte, len
	blt	.L1454	@,
.L1471:
	mov	r0, #0	@ zero_bit,
	add	r0, r0, r4, asl #3	@,, zero_bit, zero_byte,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
	.fnend
	.size	MVC_FindZeroBitsInSeg, .-MVC_FindZeroBitsInSeg
	.align	2
	.global	MVC_FindTrailZeros
	.type	MVC_FindTrailZeros, %function
MVC_FindTrailZeros:
	.fnstart
.LFB1755:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	ldr	r3, [r0, #368]	@ prephitmp.4784, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r2, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r2, #1	@ <variable>.nal_segment,
	bls	.L1473	@,
	ldr	r1, [r3, #36]	@, <variable>.bitstream_length
	ldr	r0, [r3, #32]	@, <variable>.streamBuffer
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4784, <variable>.pCurrNal
	ldr	r1, [r3, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r1, asl #3	@ zero_bit, <variable>.bitstream_length,
	bcs	.L1478	@,
	cmn	r0, #1	@ zero_bit,
	beq	.L1473	@,
.L1475:
	add	r0, r0, #1	@ tmp152, zero_bit,
	str	r0, [r3, #68]	@ tmp152, <variable>.nal_trail_zero_bit_num
	ldr	r3, [r4, #368]	@ temp.4799, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bls	.L1476	@,
	ldr	ip, [r3, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	cmp	r2, ip, asl #3	@ <variable>.nal_trail_zero_bit_num, <variable>.bitstream_length,
	bcc	.L1476	@,
	movw	lr, #:lower16:11199520	@ tmp157,
	movt	lr, #:upper16:11199520	@ tmp157,
	ldr	r1, [r3, #56]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp161,
	mov	r0, #1	@ tmp163,
	str	r3, [r2, #32]	@ tmp161, <variable>.streamBuffer
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [ip, #64]	@ tmp163, <variable>.nal_segment
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r3, [r1, #68]	@ tmp161, <variable>.nal_trail_zero_bit_num
.L1476:
	mov	r0, #0	@,
	ldmfd	sp!, {r4, pc}	@
.L1478:
	movw	lr, #:lower16:11199520	@ tmp143,
	movt	lr, #:upper16:11199520	@ tmp143,
	ldr	r1, [r3, #56]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #0	@ tmp147,
	mov	r0, #1	@ tmp149,
	str	ip, [r2, #32]	@ tmp147, <variable>.streamBuffer
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [r3, #64]	@ tmp149, <variable>.nal_segment
	ldr	r3, [r4, #368]	@ prephitmp.4784, <variable>.pCurrNal
.L1473:
	ldmib	r3, {r0, r1}	@ phole ldm
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4784, <variable>.pCurrNal
	b	.L1475	@
	.fnend
	.size	MVC_FindTrailZeros, .-MVC_FindTrailZeros
	.align	2
	.global	mvc_assign_quant_params
	.type	mvc_assign_quant_params, %function
mvc_assign_quant_params:
	.fnstart
.LFB1708:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	cmp	r0, #0	@
	.pad #44
	sub	sp, sp, #44	@,,
	mov	r8, r1	@ pPPS, pPPS
	str	r0, [sp, #20]	@, %sfp
	beq	.L1502	@,
	cmp	r1, #0	@ pPPS,
	beq	.L1502	@,
	ldrb	r3, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r3, #0	@ <variable>.pic_scaling_matrix_present_flag,
	beq	.L1483	@,
	ldr	r9, [sp, #20]	@, %sfp
	add	r7, r1, #2016	@, pPPS,
	add	r5, r1, #2064	@, pPPS,
	str	r7, [sp, #24]	@, %sfp
	add	r6, r9, #2672	@,,
	add	r7, r1, #1728	@ ivtmp.4839, pPPS,
	str	r6, [sp, #28]	@, %sfp
	mov	r6, r1	@ ivtmp.4838, pPPS
	ldr	r1, [sp, #20]	@, %sfp
	mov	sl, r7	@ ivtmp.4860, ivtmp.4839
	ldr	r9, [sp, #24]	@ ivtmp.4847, %sfp
	ldr	r4, [sp, #20]	@, %sfp
	add	ip, r1, #2384	@ ivtmp.4842,,
	str	r5, [sp, #32]	@, %sfp
	mov	r5, #1	@ ivtmp.4835,
	add	r2, r4, #2720	@,,
	str	r8, [sp, #16]	@ pPPS, %sfp
	mov	fp, r9	@ ivtmp.4859, ivtmp.4847
	mov	r4, #0	@ ivtmp.4834,
	mov	r8, ip	@ ivtmp.4842, ivtmp.4842
	str	r2, [sp, #36]	@, %sfp
	str	r7, [sp, #4]	@ ivtmp.4858, %sfp
.L1484:
	cmp	r4, #5	@ ivtmp.4834,
	bhi	.L1485	@,
	ldr	r2, [sp, #16]	@, %sfp
	add	r1, r2, r4	@ tmp158,, ivtmp.4834
	ldrsb	ip, [r1, #5]	@ tmp159, <variable>.pic_scaling_list_present_flag
	cmp	ip, #0	@ tmp159,
	bne	.L1486	@,
	cmp	r4, #0	@ ivtmp.4834,
	bne	.L1487	@,
	ldr	r0, [sp, #20]	@, %sfp
	ldrb	r3, [r0, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r3, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1488	@,
	movw	ip, #:lower16:.LANCHOR2	@,
	movt	ip, #:upper16:.LANCHOR2	@,
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [sp, #24]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1489	@
.L1485:
	ldr	ip, [sp, #16]	@, %sfp
	add	r1, ip, r4	@ tmp189,, ivtmp.4834
	ldrsb	r0, [r1, #5]	@ tmp190, <variable>.pic_scaling_list_present_flag
	cmp	r0, #0	@ tmp190,
	bne	.L1495	@,
	ldr	r2, [sp, #20]	@, %sfp
	ldrb	lr, [r2, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1496	@,
	ldr	r3, .L1504	@,
	cmp	r4, #6	@ ivtmp.4834,
	ldr	r1, .L1504+4	@,
	mov	r0, sl	@, ivtmp.4860
	mov	r2, #64	@,
	moveq	r1, r3	@,
	bl	memcpy	@
.L1490:
	cmp	r5, #7	@ ivtmp.4835,
	bhi	.L1483	@,
.L1489:
	ldr	r0, [sp, #4]	@, %sfp
	add	r4, r4, #1	@ ivtmp.4834, ivtmp.4834,
	add	r5, r5, #1	@ ivtmp.4835, ivtmp.4835,
	add	r6, r6, #4	@ ivtmp.4838, ivtmp.4838,
	add	r3, r0, #64	@,,
	add	r8, r8, #64	@ ivtmp.4842, ivtmp.4842,
	str	r3, [sp, #4]	@, %sfp
	add	r7, r7, #64	@ ivtmp.4839, ivtmp.4839,
	add	r9, r9, #16	@ ivtmp.4847, ivtmp.4847,
	add	fp, fp, #16	@ ivtmp.4859, ivtmp.4859,
	add	sl, sl, #64	@ ivtmp.4860, ivtmp.4860,
	b	.L1484	@
.L1486:
	ldr	r2, [r6, #1984]	@ tmp182, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r2, #0	@ tmp182,
	beq	.L1490	@,
	cmp	r4, #2	@ ivtmp.4834,
	movw	r3, #:lower16:.LANCHOR2	@,
	movt	r3, #:upper16:.LANCHOR2	@,
	ldr	r1, .L1504+8	@,
	mov	r0, fp	@, ivtmp.4859
	mov	r2, #16	@,
	movls	r1, r3	@,
	bl	memcpy	@
	cmp	r5, #7	@ ivtmp.4835,
	bls	.L1489	@,
.L1483:
	mov	r0, #0	@ D.39851,
.L1481:
	add	sp, sp, #44	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1495:
	ldr	r0, [r6, #1984]	@ tmp202, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r0, #0	@ tmp202,
	beq	.L1490	@,
	ldr	ip, .L1504	@,
	cmp	r4, #6	@ ivtmp.4834,
	ldr	r1, .L1504+4	@,
	mov	r0, r7	@, ivtmp.4839
	mov	r2, #64	@,
	moveq	r1, ip	@,
	bl	memcpy	@
	b	.L1490	@
.L1487:
	cmp	r4, #3	@ ivtmp.4834,
	beq	.L1503	@,
	mov	r0, r9	@, ivtmp.4847
	sub	r1, r9, #16	@, ivtmp.4847,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L1490	@
.L1488:
	ldr	ip, [sp, #28]	@, %sfp
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [sp, #24]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1490	@
.L1503:
	ldr	r1, [sp, #20]	@, %sfp
	ldrb	lr, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1492	@,
	ldr	r0, [sp, #32]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, .L1504+8	@,
	bl	memcpy	@
	b	.L1489	@
.L1496:
	ldr	r0, [sp, #4]	@, %sfp
	mov	r1, r8	@, ivtmp.4842
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L1490	@
.L1492:
	ldr	r0, [sp, #32]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, [sp, #36]	@, %sfp
	bl	memcpy	@
	b	.L1490	@
.L1502:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.39851,
	b	.L1481	@
.L1505:
	.align	2
.L1504:
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.word	.LANCHOR2+16
	.fnend
	.size	mvc_assign_quant_params, .-mvc_assign_quant_params
	.align	2
	.global	mvc_append_interview_list
	.type	mvc_append_interview_list, %function
mvc_append_interview_list:
	.fnstart
.LFB1690:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	ip, #:lower16:10818504	@ tmp159,
	movt	ip, #:upper16:10818504	@ tmp159,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	ip, [r4, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	.pad #28
	sub	sp, sp, #28	@,,
	movw	r0, #:lower16:11164280	@ tmp161,
	movt	r0, #:upper16:11164280	@ tmp161,
	str	r2, [sp, #20]	@ list, %sfp
	adds	r2, ip, #1	@ D.38629, <variable>.CurrSUBSPS.num_views_minus1,
	str	r3, [sp, #16]	@ listXsize, %sfp
	ldr	r5, [r4, r0]	@ D.38630, <variable>.CurrSlice.view_id
	beq	.L1507	@,
	movw	r7, #:lower16:10818508	@ tmp162,
	movt	r7, #:upper16:10818508	@ tmp162,
	ldr	r3, [r4, r7]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r5, r3	@ D.38630, <variable>.CurrSUBSPS.view_id
	beq	.L1507	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r8, #:lower16:10818512	@ ivtmp.4909,
	movt	r8, #:upper16:10818512	@ ivtmp.4909,
	mov	ip, #0	@ i,
	add	r3, r4, r8	@ ivtmp.4909, pMvcCtx, ivtmp.4909
	beq	.L1508	@,
	ldr	r7, [r3], #4	@ D.44879, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ i,
	mov	r8, ip	@ i.611, i
	cmp	r5, r7	@ D.38630, D.44879
	bne	.L1508	@,
.L1509:
	movw	r3, #:lower16:11164288	@ tmp165,
	movt	r3, #:upper16:11164288	@ tmp165,
	add	sl, r8, r1, asl #1	@, tmp168, i.611, listidx,
	movw	r7, #:lower16:11196171	@ tmp193,
	ldr	ip, [r4, r3]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r7, #:upper16:11196171	@ tmp193,
	movw	r1, #:lower16:11168612	@ tmp196,
	movt	r1, #:upper16:11168612	@ tmp196,
	cmp	ip, #0	@ <variable>.CurrSlice.anchor_pic_flag,
	ldr	r3, [r4, r1]	@ D.38646, <variable>.DPB.size
	movwne	r2, #:lower16:2704628	@ tmp169,
	movweq	r2, #:lower16:2704636	@ tmp182,
	movtne	r2, #:upper16:2704628	@ tmp169,
	movteq	r2, #:upper16:2704636	@ tmp182,
	addne	r2, sl, r2	@ tmp169, tmp168, tmp169
	addeq	r2, sl, r2	@ tmp182, tmp181, tmp182
	movwne	ip, #:lower16:10818532	@ tmp175,
	movweq	ip, #:lower16:10818564	@ tmp188,
	movtne	ip, #:upper16:10818532	@ tmp175,
	movteq	ip, #:upper16:10818564	@ tmp188,
	add	r5, r4, r2, asl #2	@, tmp186, pMvcCtx, tmp182,
	ldrb	r2, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r0, r4, ip	@ tmp188, pMvcCtx, tmp188
	add	r8, r0, sl, asl #2	@, ref_view_id, tmp188, tmp181,
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, fld_idx
	moveq	r2, #1	@, fld_idx
	ldr	sl, [r5, #4]	@ num_ref_views,
	subs	r5, r3, #1	@ i, D.38646,
	bmi	.L1525	@,
	movw	r9, #:lower16:2792104	@ tmp197,
	movt	r9, #:upper16:2792104	@ tmp197,
	add	ip, r3, r9	@ tmp197, D.38646, tmp197
	add	r0, r2, #164	@ tmp257, fld_idx,
	movw	r9, #:lower16:11196660	@ tmp259,
	movw	fp, #:lower16:11198000	@,
	add	r6, r4, ip, asl #2	@, tmp200, pMvcCtx, tmp197,
	movt	fp, #:upper16:11198000	@,
	mov	r1, r0, asl #2	@, tmp257,
	str	fp, [sp, #12]	@, %sfp
	movw	r2, #:lower16:11196640	@,
	movw	fp, #:lower16:11196169	@ tmp263,
	movt	r2, #:upper16:11196640	@,
	movt	r9, #:upper16:11196660	@ tmp259,
	str	r1, [sp, #4]	@, %sfp
	add	r6, r6, #4	@ ivtmp.4905, tmp200,
	movt	fp, #:upper16:11196169	@ tmp263,
	str	r2, [sp, #8]	@, %sfp
	b	.L1524	@
.L1542:
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #3	@ <variable>.is_used,
	ldreq	r3, [r1, #484]	@ poc, <variable>.frame.MVC_DecPOC
	bne	.L1514	@,
.L1516:
	ldr	ip, [sp, #4]	@, %sfp
	add	r0, ip, r1	@ tmp225,, D.38649
	ldr	r2, [r0, #4]	@ tmp227, <variable>.inter_view_flag
	cmp	r2, #0	@ tmp227,
	beq	.L1514	@,
	ldr	r2, [r4, r9]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	cmp	r2, r3	@ <variable>.CurrPic.thispoc, poc
	beq	.L1541	@,
.L1514:
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.4905, ivtmp.4905,
	bmi	.L1525	@,
.L1524:
	ldr	r1, [r6, #-4]	@ D.38649, <variable>.DPB.fs
	cmp	r1, #0	@ D.38649,
	beq	.L1514	@,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ temp.4916, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.4916,
	beq	.L1542	@,
	cmp	r3, #1	@ temp.4916,
	beq	.L1543	@,
	cmp	r3, #2	@ temp.4916,
	bne	.L1514	@,
	ldrb	ip, [r4, fp]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #0	@ <variable>.CurrPic.field_pair_flag,
	ubfx	r3, r3, #1, #1	@ pic_avail.4912, <variable>.is_used,,
	beq	.L1519	@,
	ldr	r0, [sp, #8]	@, %sfp
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r1, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	r2, [ip, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r0, r2	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail.4912
	andeq	r3, r3, #1	@,, pic_avail.4912, pic_avail.4912
.L1519:
	cmp	r3, #0	@ pic_avail.4912,
	beq	.L1514	@,
	ldr	r3, [r1, #564]	@ poc, <variable>.bottom_field.MVC_DecPOC
	b	.L1516	@
.L1510:
	ldr	r6, [r0], #4	@ D.44879, <variable>.CurrSUBSPS.view_id
	cmp	r5, r6	@ D.38630, D.44879
	beq	.L1509	@,
	ldr	r6, [r3, #4]	@ D.44879, <variable>.CurrSUBSPS.view_id
	mov	r8, ip	@ i.611, i
	add	r3, r0, #4	@ ivtmp.4909, tmp272,
	cmp	r5, r6	@ D.38630, D.44879
	beq	.L1509	@,
.L1508:
	add	r8, ip, #1	@ i.611, i,
	mov	r0, r3	@ tmp272, ivtmp.4909
	cmp	r2, r8	@ D.38629, i.611
	add	ip, r8, #1	@ i, i.611,
	bhi	.L1510	@,
	b	.L1509	@
.L1543:
	ldrb	r2, [r4, fp]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	and	r3, r3, #1	@ pic_avail, <variable>.is_used,
	beq	.L1518	@,
	ldr	r0, [sp, #8]	@, %sfp
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r1, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	ip, [r2, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r0, ip	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail
	andeq	r3, r3, #1	@,, pic_avail, pic_avail
.L1518:
	cmp	r3, #0	@ pic_avail,
	ldrne	r3, [r1, #524]	@ poc, <variable>.top_field.MVC_DecPOC
	bne	.L1516	@,
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.4905, ivtmp.4905,
	bpl	.L1524	@,
.L1525:
	add	sp, sp, #28	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1541:
	cmp	sl, #0	@ num_ref_views,
	ldr	r0, [r1, #644]	@ D.38693, <variable>.view_id
	beq	.L1514	@,
	ldr	r3, [r8, #0]	@ tmp230,* ref_view_id
	cmp	r0, r3	@ D.38693, tmp230
	moveq	r3, #0	@ i.613,
	beq	.L1521	@,
	tst	sl, #1	@ num_ref_views,
	mov	r2, #0	@ i,
	bne	.L1522	@,
	mov	r2, #1	@ i,
	cmp	sl, r2	@ num_ref_views, i
	mov	r3, r2	@ i.613, i
	bls	.L1521	@,
	ldr	ip, [r8, #4]	@ tmp278,
	cmp	r0, ip	@ D.38693, tmp278
	bne	.L1522	@,
	b	.L1521	@
.L1523:
	ldr	ip, [r8, r3, asl #2]	@ tmp232,* ref_view_id
	cmp	r0, ip	@ D.38693, tmp232
	beq	.L1521	@,
	ldr	ip, [r8, r2, asl #2]	@ tmp280,* ref_view_id
	mov	r3, r2	@ i.613, i
	cmp	r0, ip	@ D.38693, tmp280
	beq	.L1521	@,
.L1522:
	add	r3, r2, #1	@ i.613, i,
	cmp	sl, r3	@ num_ref_views, i.613
	add	r2, r3, #1	@ i, i.613,
	bhi	.L1523	@,
.L1521:
	cmp	sl, r3	@ num_ref_views, i.613
	bls	.L1514	@,
	ldr	r0, [sp, #16]	@, %sfp
	mov	r2, #672	@,
	ldr	r3, [sp, #20]	@, %sfp
	ldr	lr, [r0, #0]	@ tmp237,
	mla	r0, r2, lr, r3	@,, tmp237,
	bl	memcpy	@
	ldr	r2, [sp, #16]	@, %sfp
	ldr	r1, [sp, #20]	@, %sfp
	mov	r0, #672	@,
	ldr	ip, [r2, #0]	@ tmp245,
	mla	r3, r0, ip, r1	@ D.38701,, tmp245,
	str	r3, [r3, #468]	@ D.38701, <variable>.frame.frame_store
	str	r3, [r3, #548]	@ D.38701, <variable>.bottom_field.frame_store
	str	r3, [r3, #508]	@ D.38701, <variable>.top_field.frame_store
	ldr	r3, [r2, #0]	@ tmp247,
	ldr	ip, [sp, #12]	@, %sfp
	mla	r3, r0, r3, r1	@ tmp250,, tmp247,
	ldr	r2, [r4, ip]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	sub	r1, r2, #1	@ tmp253, <variable>.TotalPmvNum,
	str	r1, [r3, #628]	@ tmp253, <variable>.pmv_address_idc
	ldr	r0, [sp, #16]	@, %sfp
	ldr	r3, [r0, #0]	@ temp.4926,
	cmp	r3, sl	@ temp.4926, num_ref_views
	beq	.L1525	@,
	add	r1, r3, #1	@ tmp254, temp.4926,
	str	r1, [r0, #0]	@ tmp254,
	b	.L1514	@
.L1507:
	mov	r8, #0	@ i.611,
	b	.L1509	@
	.fnend
	.size	mvc_append_interview_list, .-mvc_append_interview_list
	.align	2
	.global	MVC_IsNewPicNal
	.type	MVC_IsNewPicNal, %function
MVC_IsNewPicNal:
	.fnstart
.LFB1752:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ tmp140,
	mov	r4, r0	@ pNewPicDetector, pNewPicDetector
	add	r1, r1, #3	@ pu8.4952, pu8,
	and	r0, r2, #31	@ tmp141, tmp140,
	sub	r3, r0, #1	@ tmp142, tmp141,
	cmp	r3, #7	@ tmp142,
	ldrls	pc, [pc, r3, asl #2]	@ tmp142
	b	.L1545	@
.L1548:
	.word	.L1546
	.word	.L1545
	.word	.L1545
	.word	.L1545
	.word	.L1546
	.word	.L1545
	.word	.L1547
	.word	.L1547
.L1547:
	ldr	r0, [r4, #0]	@ tmp157,* pNewPicDetector
	mov	r3, #1	@ tmp158,
	str	r3, [r4, #0]	@ tmp158,* pNewPicDetector
	cmp	r0, #0	@ tmp157,
	mvnne	r0, #0	@, ret,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1546:
	ldr	r5, [r4, #0]	@ tmp143,* pNewPicDetector
	cmp	r5, #0	@ tmp143,
	beq	.L1555	@,
.L1550:
	mvn	r0, #0	@ ret,
.L1551:
	mov	r1, #0	@ tmp156,
	str	r1, [r4, #0]	@ tmp156,* pNewPicDetector
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1545:
	mvn	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1555:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ tmp146,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ tmp144,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ tmp151,
	ldrb	lr, [r1, #4]	@ zero_extendqisi2	@ tmp149,
	mov	r3, r2, asl #16	@ tmp147, tmp146,
	orr	r1, r3, r0, asl #8	@, tmp148, tmp147, tmp144,
	orr	r6, r1, lr	@ tmp150, tmp148, tmp149
	orr	r6, r6, ip, asl #24	@, tmpbits, tmp150, tmp151,
	mov	r0, r6	@, tmpbits
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	bhi	.L1550	@,
	mov	ip, r0, asl #1	@ tmp153, zeros,
	rsb	r0, ip, #31	@ tmp154, tmp153,
	mov	r6, r6, lsr r0	@ tmp155, tmpbits,
	cmp	r6, #1	@ tmp155,
	moveq	r0, r5	@ ret, tmp143
	bne	.L1550	@,
	b	.L1551	@
	.fnend
	.size	MVC_IsNewPicNal, .-MVC_IsNewPicNal
	.align	2
	.global	MVC_WritePicMsg
	.type	MVC_WritePicMsg, %function
MVC_WritePicMsg:
	.fnstart
.LFB1711:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #20
	sub	sp, sp, #20	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	vfmw_dprint_nothing	@
	movw	r3, #:lower16:11196192	@ tmp163,
	movt	r3, #:upper16:11196192	@ tmp163,
	movw	r0, #:lower16:11196356	@ tmp169,
	movt	r0, #:upper16:11196356	@ tmp169,
	ldrd	r6, [r4, r3]	@, pMvcCtx, tmp163
	movw	sl, #:lower16:11199440	@ tmp166,
	movw	r9, #:lower16:11196171	@ tmp175,
	movt	sl, #:upper16:11199440	@ tmp166,
	movt	r9, #:upper16:11196171	@ tmp175,
	movw	fp, #:lower16:11152036	@ tmp180,
	strd	r6, [sp, #8]	@,,
	movt	fp, #:upper16:11152036	@ tmp180,
	ldr	r1, [r4, r0]	@, <variable>.CurrPic.fs_image.image_stride
	movw	r2, #:lower16:11196656	@ tmp172,
	ldr	r3, [r4, fp]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r2, #:upper16:11196656	@ tmp172,
	ldr	fp, [r4, sl]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	movw	r5, #:lower16:11199444	@ tmp160,
	str	r1, [sp, #4]	@, %sfp
	movt	r5, #:upper16:11199444	@ tmp160,
	ldrb	r8, [r4, r9]	@ zero_extendqisi2	@, <variable>.CurrPic.structure
	movw	r7, #:lower16:11198056	@ tmp162,
	ldr	sl, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movt	r7, #:upper16:11198056	@ tmp162,
	movw	r6, #:lower16:11199172	@ tmp165,
	movt	r6, #:upper16:11199172	@ tmp165,
	str	r8, [sp, #0]	@, %sfp
	movw	lr, #:lower16:11198960	@ tmp168,
	ldrd	r8, [sp, #8]	@,,
	movt	lr, #:upper16:11198960	@ tmp168,
	str	fp, [r4, r6]	@ <variable>.DecSlicePara, <variable>.DecPicPara.pFirstSlice
	movw	ip, #:lower16:11198064	@ tmp171,
	movt	ip, #:upper16:11198064	@ tmp171,
	movw	r0, #:lower16:11198048	@ tmp174,
	strd	r8, [r4, r7]	@, pMvcCtx, tmp162
	mov	r7, #0	@ tmp161,
	str	r7, [r4, r5]	@ tmp161, <variable>.SliceParaNum
	movt	r0, #:upper16:11198048	@ tmp174,
	ldr	r7, [sp, #4]	@, %sfp
	movw	r1, #:lower16:11196708	@ tmp183,
	str	sl, [r4, ip]	@ <variable>.CurrPic.nal_ref_idc, <variable>.DecPicPara.nal_ref_idc
	movt	r1, #:upper16:11196708	@ tmp183,
	movw	r2, #:lower16:11196712	@ tmp186,
	movt	r2, #:upper16:11196712	@ tmp186,
	str	r7, [r4, lr]	@, <variable>.DecPicPara.imgstride
	movw	r6, #:lower16:11155268	@ tmp194,
	ldr	r5, [sp, #0]	@, %sfp
	movt	r6, #:upper16:11155268	@ tmp194,
	ldr	r8, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movw	r9, #:lower16:11159300	@ tmp198,
	ldr	r7, [r4, r2]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.CurrPic.frame_height_in_mb
	movt	r9, #:upper16:11159300	@ tmp198,
	strb	r5, [r4, r0]	@, <variable>.DecPicPara.pic_structure
	movw	r0, #:lower16:11159240	@ tmp201,
	ldrb	sl, [r3, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movt	r0, #:upper16:11159240	@ tmp201,
	movw	lr, #:lower16:11198080	@ tmp178,
	movw	ip, #:lower16:11198068	@ tmp182,
	movt	lr, #:upper16:11198080	@ tmp178,
	movt	ip, #:upper16:11198068	@ tmp182,
	movw	r2, #:lower16:11198072	@ tmp185,
	movt	r2, #:upper16:11198072	@ tmp185,
	ldr	r5, [r4, r9]	@ <variable>.CurrPPS.transform_8x8_mode_flag, <variable>.CurrPPS.transform_8x8_mode_flag
	movw	r1, #:lower16:11198076	@ tmp188,
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movt	r1, #:upper16:11198076	@ tmp188,
	ldrb	r9, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	movw	r0, #:lower16:11198051	@ tmp193,
	str	r8, [r4, ip]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.DecPicPara.pic_height_in_mb
	movt	r0, #:upper16:11198051	@ tmp193,
	str	r7, [r4, r2]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.DecPicPara.frame_height_in_mb
	movw	r8, #:lower16:11198084	@ tmp197,
	str	sl, [r4, lr]	@ <variable>.mb_adaptive_frame_field_flag, <variable>.DecPicPara.mb_adaptive_frame_field_flag
	movt	r8, #:upper16:11198084	@ tmp197,
	ldr	sl, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movw	lr, #:lower16:11198088	@ tmp200,
	movt	lr, #:upper16:11198088	@ tmp200,
	movw	r2, #:lower16:11161512	@ tmp215,
	movt	r2, #:upper16:11161512	@ tmp215,
	strb	r6, [r4, r0]	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.DecPicPara.frame_mbs_only_flag
	str	r5, [r4, r8]	@ <variable>.CurrPPS.transform_8x8_mode_flag, <variable>.DecPicPara.transform_8x8_mode_flag
	add	r8, sl, #1	@ tmp192, <variable>.pic_width_in_mbs_minus1,
	str	r9, [r4, lr]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.DecPicPara.entropy_coding_mode_flag
	movw	r7, #:lower16:11159244	@ tmp209,
	str	r8, [r4, r1]	@ tmp192, <variable>.DecPicPara.pic_width_in_mb
	movt	r7, #:upper16:11159244	@ tmp209,
	ldr	r3, [r3, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	movw	ip, #:lower16:11161524	@ tmp212,
	ldr	r6, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movt	ip, #:upper16:11161524	@ tmp212,
	movw	r5, #:lower16:11198049	@ tmp203,
	movw	r1, #:lower16:11161516	@ tmp218,
	movt	r5, #:upper16:11198049	@ tmp203,
	movt	r1, #:upper16:11161516	@ tmp218,
	movw	r2, #:lower16:11196640	@ tmp223,
	movt	r2, #:upper16:11196640	@ tmp223,
	ldrb	r8, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.CurrPPS.constrained_intra_pred_flag
	movw	lr, #:lower16:11198092	@ tmp208,
	ldr	r7, [r4, ip]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movt	lr, #:upper16:11198092	@ tmp208,
	strb	r3, [r4, r5]	@ <variable>.chroma_format_idc, <variable>.DecPicPara.chroma_format_idc
	movw	ip, #:lower16:11198096	@ tmp211,
	ldr	r1, [r4, r1]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	movt	ip, #:upper16:11198096	@ tmp211,
	ldr	r2, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11198100	@ tmp214,
	movw	r3, #:lower16:11198104	@ tmp217,
	movt	r0, #:upper16:11198100	@ tmp214,
	movt	r3, #:upper16:11198104	@ tmp217,
	movw	r5, #:lower16:11199520	@ tmp220,
	movt	r5, #:upper16:11199520	@ tmp220,
	str	r6, [r4, r0]	@ <variable>.CurrPOC.toppoc, <variable>.DecPicPara.TopPoc
	str	r8, [r4, lr]	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.DecPicPara.constrained_intra_pred_flag
	str	r7, [r4, ip]	@ <variable>.CurrPOC.ThisPOC, <variable>.DecPicPara.ThisPoc
	str	r1, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.DecPicPara.BottomPoc
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r6, r0, #0	@ pstLogicFs,
	beq	.L1559	@,
	ldr	ip, [r6, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	ip, #0	@ <variable>.pstDecodeFs,
	beq	.L1559	@,
	ldr	lr, [r6, #476]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	cmp	lr, #0	@ <variable>.pstDispOutFs,
	beq	.L1559	@,
	movw	sl, #:lower16:11198868	@,
	movw	r3, #:lower16:11198356	@,
	movt	sl, #:upper16:11198868	@,
	movt	r3, #:upper16:11198356	@,
	movw	lr, #:lower16:11198612	@,
	movt	lr, #:upper16:11198612	@,
	add	r1, r4, sl	@, pMvcCtx,
	add	r2, r4, r3	@, pMvcCtx,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	add	r3, r4, lr	@, pMvcCtx,
	bl	FSP_GetDecFsAddrTab	@
	ldr	r0, [r6, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movw	sl, #:lower16:11198340	@ tmp235,
	movt	sl, #:upper16:11198340	@ tmp235,
	movw	r1, #:lower16:11198952	@,
	movw	r2, #:lower16:11198872	@,
	ldr	ip, [r0, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movt	r1, #:upper16:11198952	@,
	movt	r2, #:upper16:11198872	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	add	r1, r4, r1	@, pMvcCtx,
	add	r2, r4, r2	@, pMvcCtx,
	str	ip, [r4, sl]	@ <variable>.PhyFsID, <variable>.DecPicPara.CurrPicImgIdc
	movw	sl, #:lower16:11198348	@ tmp244,
	bl	FSP_GetPmvAddrTab	@
	movw	r3, #:lower16:11196724	@ tmp245,
	movt	r3, #:upper16:11196724	@ tmp245,
	movt	sl, #:upper16:11198348	@ tmp244,
	movw	r1, #:lower16:11198956	@ tmp247,
	movw	r0, #:lower16:11168888	@ tmp253,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movt	r1, #:upper16:11198956	@ tmp247,
	movt	r0, #:upper16:11168888	@ tmp253,
	movw	r3, #:lower16:11198344	@ tmp249,
	movt	r3, #:upper16:11198344	@ tmp249,
	str	r2, [r4, sl]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.CurrPicPmvIdc
	movw	r2, #:lower16:11199164	@ tmp252,
	ldr	ip, [r6, #488]	@ <variable>.HalfPmvOffset, <variable>.HalfPmvOffset
	movt	r2, #:upper16:11199164	@ tmp252,
	ldr	sl, [r4, r0]	@ <variable>.APC.size, <variable>.APC.size
	str	ip, [r4, r1]	@ <variable>.HalfPmvOffset, <variable>.DecPicPara.half_pmvblk_offset
	cmp	sl, #0	@ <variable>.APC.size,
	ldr	r0, [r6, #476]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r1, [r0, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	sl, [r4, r2]	@ <variable>.APC.size, <variable>.DecPicPara.ApcSize
	str	r1, [r4, r3]	@ <variable>.PhyAddr, <variable>.DecPicPara.CurrPicImg2DAddr
	beq	.L1561	@,
	movw	r6, #:lower16:11168696	@ ivtmp.5060,
	movt	r6, #:upper16:11168696	@ ivtmp.5060,
	add	r2, r4, r6	@ ivtmp.5060, pMvcCtx, ivtmp.5060
	movw	r3, #:lower16:11198972	@ ivtmp.5063,
	movt	r3, #:upper16:11198972	@ ivtmp.5063,
	mov	ip, #1	@ i,
	ldr	r6, [r2, #0]	@ tmp258, <variable>.APC.idc
	add	lr, r4, r3	@ ivtmp.5063, pMvcCtx, ivtmp.5063
	ldr	r0, [r2, #64]	@ tmp259, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r1, [r2, #128]	@ tmp260, <variable>.APC.poc
	sub	r5, sl, #1	@ tmp349, <variable>.APC.size,
	str	r6, [lr, #0]	@ tmp258, <variable>.DecPicPara.Apc2Idc
	and	r5, r5, ip	@ tmp351, tmp349,
	str	r0, [lr, #64]	@ tmp259, <variable>.DecPicPara.Apc2Poc
	add	r2, r2, #4	@ ivtmp.5060, ivtmp.5060,
	str	r1, [lr, #128]	@ tmp260, <variable>.DecPicPara.Apc2Poc
	add	r3, lr, #4	@ ivtmp.5063, ivtmp.5063,
	bcs	.L1561	@,
	cmp	r5, #0	@ tmp351,
	beq	.L1562	@,
	ldr	r5, [r2, #0]	@ tmp427, <variable>.APC.idc
	mov	ip, #2	@ i,
	ldr	r1, [r2, #64]	@ tmp428, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	lr, [r2, #128]	@ tmp429, <variable>.APC.poc
	add	r2, r2, #4	@ ivtmp.5060, ivtmp.5060,
	str	r5, [r3, #0]	@ tmp427, <variable>.DecPicPara.Apc2Idc
	str	r1, [r3, #64]	@ tmp428, <variable>.DecPicPara.Apc2Poc
	str	lr, [r3, #128]	@ tmp429, <variable>.DecPicPara.Apc2Poc
	add	r3, r3, #4	@ ivtmp.5063, ivtmp.5063,
	bcs	.L1561	@,
.L1562:
	add	r0, r2, #4	@ tmp353, ivtmp.5060,
	ldmia	r2, {r6, r9}	@ phole ldm
	add	ip, ip, #2	@ i, i,
	ldr	r8, [r2, #64]	@ tmp359, <variable>.APC.poc
	add	r1, r3, #4	@ tmp354, ivtmp.5063,
	ldr	r7, [r2, #128]	@ tmp360, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r5, [r0, #64]	@ tmp365, <variable>.APC.poc
	add	r2, r0, #4	@ ivtmp.5060, tmp353,
	ldr	lr, [r0, #128]	@ tmp366, <variable>.APC.poc
	str	r8, [r3, #64]	@ tmp359, <variable>.DecPicPara.Apc2Poc
	str	r7, [r3, #128]	@ tmp360, <variable>.DecPicPara.Apc2Poc
	stmia	r3, {r6, r9}	@ phole stm
	add	r3, r1, #4	@ ivtmp.5063, tmp354,
	str	r5, [r1, #64]	@ tmp365, <variable>.DecPicPara.Apc2Poc
	str	lr, [r1, #128]	@ tmp366, <variable>.DecPicPara.Apc2Poc
	bcc	.L1562	@,
.L1561:
	movw	sl, #:lower16:11152036	@ tmp261,
	movt	sl, #:upper16:11152036	@ tmp261,
	ldr	r2, [r4, sl]	@ prephitmp.4977, <variable>.pCurrSPS
	ldrb	ip, [r2, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	ip, #0	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L1599	@,
	movw	r1, #:lower16:11159258	@ tmp280,
	movt	r1, #:upper16:11159258	@ tmp280,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.4975, <variable>.CurrPPS.pic_scaling_matrix_present_flag
.L1564:
	cmp	r3, #1	@ prephitmp.4975,
	beq	.L1600	@,
	ldr	r2, [r2, #2672]	@ tmp303, <variable>.qmatrix4x4
	movw	r1, #:lower16:11198108	@ ivtmp.5052,
	movt	r1, #:upper16:11198108	@ ivtmp.5052,
	movw	r5, #:lower16:11152036	@ tmp336,
	add	r1, r4, r1	@ ivtmp.5052, pMvcCtx, ivtmp.5052
	movt	r5, #:upper16:11152036	@ tmp336,
	mov	r3, #1	@ i.5082,
	ldr	r0, [r4, r5]	@ prephitmp.4977, <variable>.pCurrSPS
	str	r2, [r1], #4	@ tmp303, <variable>.DecPicPara.Qmatrix
	b	.L1572	@
.L1601:
	ldr	r0, [r4, r5]	@ prephitmp.4977, <variable>.pCurrSPS
	ldr	ip, [r0, ip, asl #2]	@ tmp417, <variable>.qmatrix4x4
	str	ip, [r1, #4]	@ tmp417, <variable>.DecPicPara.Qmatrix
	add	r1, r2, #4	@ ivtmp.5052, tmp348,
.L1572:
	add	sl, r3, #668	@ tmp406, i.5082,
	add	r3, r3, #1	@ tmp347, i.5082,
	cmp	r3, #24	@ tmp347,
	mov	r2, r1	@ tmp348, ivtmp.5052
	ldr	r0, [r0, sl, asl #2]	@ tmp407, <variable>.qmatrix4x4
	add	ip, r3, #668	@ tmp416, tmp347,
	add	r3, r3, #1	@ i.5082, tmp347,
	str	r0, [r2], #4	@ tmp407, <variable>.DecPicPara.Qmatrix
	bne	.L1601	@,
	movw	lr, #:lower16:11152036	@ tmp305,
	movt	lr, #:upper16:11152036	@ tmp305,
	movw	r5, #:lower16:11198204	@ ivtmp.5039,
	movt	r5, #:upper16:11198204	@ ivtmp.5039,
	ldr	r0, [r4, lr]	@ temp.5083, <variable>.pCurrSPS
	add	r1, r4, r5	@ ivtmp.5039, pMvcCtx, ivtmp.5039
	mov	r3, #0	@ i.5086,
.L1573:
	add	r5, r3, #692	@ tmp311, i.5086,
	add	r3, r3, #1	@ tmp345, i.5086,
	add	ip, r3, #692	@ tmp425, tmp345,
	mov	r2, r1	@ tmp346, ivtmp.5039
	ldr	r5, [r0, r5, asl #2]	@ tmp312, <variable>.qmatrix8x8
	add	r3, r3, #1	@ i.5086, tmp345,
	cmp	r3, #32	@ i.5086,
	str	r5, [r2], #4	@ tmp312, <variable>.DecPicPara.Qmatrix
	ldr	sl, [r0, ip, asl #2]	@ tmp426, <variable>.qmatrix8x8
	str	sl, [r1, #4]	@ tmp426, <variable>.DecPicPara.Qmatrix
	add	r1, r2, #4	@ ivtmp.5039, tmp346,
	bne	.L1573	@,
.L1567:
	movw	sl, #:lower16:11168888	@ tmp313,
	movt	sl, #:upper16:11168888	@ tmp313,
	ldr	r1, [r4, sl]	@ <variable>.APC.size, <variable>.APC.size
	cmp	r1, #0	@ <variable>.APC.size,
	beq	.L1574	@,
	movw	r8, #:lower16:11168696	@ ivtmp.4997,
	movt	r8, #:upper16:11168696	@ ivtmp.4997,
	movw	r7, #:lower16:11199304	@ ivtmp.5000,
	add	r6, r4, r8	@ ivtmp.4997, pMvcCtx, ivtmp.4997
	movt	r7, #:upper16:11199304	@ ivtmp.5000,
	movw	r8, #:lower16:11199520	@ tmp331,
	movt	r8, #:upper16:11199520	@ tmp331,
	add	r5, r4, r7	@ ivtmp.5000, pMvcCtx, ivtmp.5000
	mov	r7, #0	@ i.5091,
.L1575:
	ldr	r2, [r6, #0]	@, <variable>.APC.idc
	mov	r1, #0	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	add	r7, r7, #1	@ i.5091, i.5091,
	bl	FSP_GetStoreType	@
	ldr	ip, [r4, sl]	@ <variable>.APC.size, <variable>.APC.size
	ldr	r2, [r6], #4	@ tmp321, <variable>.APC.idc
	str	r2, [r5, #64]	@ tmp321, <variable>.DecPicPara.RefPicFsId
	subs	r0, r0, #0	@ tmp320,,
	movne	r0, #1	@ tmp320
	cmp	ip, r7	@ <variable>.APC.size, i.5091
	str	r0, [r5, #0]	@ tmp320, <variable>.DecPicPara.RefPicType
	add	r5, r5, #4	@ ivtmp.5000, ivtmp.5000,
	bhi	.L1575	@,
.L1574:
	mov	r0, #0	@ D.40358,
.L1558:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1599:
	movw	r3, #:lower16:11159258	@ tmp263,
	movt	r3, #:upper16:11159258	@ tmp263,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.4975, <variable>.CurrPPS.pic_scaling_matrix_present_flag
	cmp	r3, #0	@ prephitmp.4975,
	bne	.L1564	@,
	movw	r2, #:lower16:11198108	@ ivtmp.5015,
	movt	r2, #:upper16:11198108	@ ivtmp.5015,
	movw	r1, #:lower16:.LANCHOR2	@ tmp326,
	add	r0, r4, r2	@ ivtmp.5015, pMvcCtx, ivtmp.5015
	movt	r1, #:upper16:.LANCHOR2	@ tmp326,
.L1565:
	and	r5, r3, #3	@ tmp266, i.5074,
	add	r3, r3, #1	@ tmp339, i.5074,
	and	ip, r3, #3	@ tmp369, tmp339,
	mov	lr, r0	@ tmp340, ivtmp.5015
	add	r2, r1, r5, asl #2	@, tmp269, tmp326, tmp266,
	add	r3, r3, #1	@ i.5074, tmp339,
	add	ip, r1, ip, asl #2	@, tmp371, tmp326, tmp369,
	cmp	r3, #24	@ i.5074,
	ldr	sl, [r2, #352]	@ tmp271, MVC_quant_org
	str	sl, [lr], #4	@ tmp271, <variable>.DecPicPara.Qmatrix
	ldr	r5, [ip, #352]	@ tmp373, MVC_quant_org
	str	r5, [r0, #4]	@ tmp373, <variable>.DecPicPara.Qmatrix
	add	r0, lr, #4	@ ivtmp.5015, tmp340,
	bne	.L1565	@,
	movw	r0, #:lower16:11198204	@ ivtmp.5007,
	movt	r0, #:upper16:11198204	@ ivtmp.5007,
	add	r0, r4, r0	@ ivtmp.5007, pMvcCtx, ivtmp.5007
	mov	r3, #0	@ i.5075,
.L1566:
	and	sl, r3, #15	@ tmp274, i.5075,
	add	r3, r3, #1	@ tmp337, i.5075,
	and	ip, r3, #15	@ tmp376, tmp337,
	mov	lr, r0	@ tmp338, ivtmp.5007
	add	r5, r1, sl, asl #2	@, tmp277, tmp326, tmp274,
	add	r3, r3, #1	@ i.5075, tmp337,
	add	r2, r1, ip, asl #2	@, tmp378, tmp326, tmp376,
	cmp	r3, #32	@ i.5075,
	ldr	r5, [r5, #368]	@ tmp279, MVC_quant8_org
	str	r5, [lr], #4	@ tmp279, <variable>.DecPicPara.Qmatrix
	ldr	sl, [r2, #368]	@ tmp380, MVC_quant8_org
	str	sl, [r0, #4]	@ tmp380, <variable>.DecPicPara.Qmatrix
	add	r0, lr, #4	@ ivtmp.5007, tmp338,
	bne	.L1566	@,
	b	.L1567	@
.L1600:
	movw	r0, #:lower16:11198108	@ ivtmp.5031,
	movt	r0, #:upper16:11198108	@ ivtmp.5031,
	add	r0, r4, r0	@ ivtmp.5031, pMvcCtx, ivtmp.5031
	mov	r1, #0	@ i.5077,
.L1569:
	add	lr, r1, #1	@ tmp343, i.5077,
	movw	r2, #:lower16:2790314	@ tmp286,
	movt	r2, #:upper16:2790314	@ tmp286,
	add	sl, r1, r2	@ tmp286, i.5077, tmp286
	add	r3, lr, r2	@ tmp388, tmp343, tmp388
	add	r1, lr, #1	@ i.5077, tmp343,
	mov	lr, r0	@ tmp344, ivtmp.5031
	ldr	ip, [r4, sl, asl #2]	@ tmp288, <variable>.CurrPPS.qmatrix4x4
	cmp	r1, #24	@ i.5077,
	ldr	r2, [r4, r3, asl #2]	@ tmp389, <variable>.CurrPPS.qmatrix4x4
	str	ip, [lr], #4	@ tmp288, <variable>.DecPicPara.Qmatrix
	str	r2, [r0, #4]	@ tmp389, <variable>.DecPicPara.Qmatrix
	add	r0, lr, #4	@ ivtmp.5031, tmp344,
	bne	.L1569	@,
	movw	r1, #:lower16:11198204	@ ivtmp.5023,
	movt	r1, #:upper16:11198204	@ ivtmp.5023,
	add	r0, r4, r1	@ ivtmp.5023, pMvcCtx, ivtmp.5023
	mov	r1, #0	@ i.5079,
.L1570:
	add	ip, r1, #1	@ tmp341, i.5079,
	movw	lr, #:lower16:2790338	@ tmp294,
	movt	lr, #:upper16:2790338	@ tmp294,
	add	r3, ip, lr	@ tmp397, tmp341, tmp397
	add	r2, r1, lr	@ tmp294, i.5079, tmp294
	add	r1, ip, #1	@ i.5079, tmp341,
	ldr	sl, [r4, r3, asl #2]	@ tmp398, <variable>.CurrPPS.qmatrix8x8
	cmp	r1, #32	@ i.5079,
	ldr	lr, [r4, r2, asl #2]	@ tmp296, <variable>.CurrPPS.qmatrix8x8
	mov	r3, r0	@ tmp342, ivtmp.5023
	str	lr, [r3], #4	@ tmp296, <variable>.DecPicPara.Qmatrix
	str	sl, [r0, #4]	@ tmp398, <variable>.DecPicPara.Qmatrix
	add	r0, r3, #4	@ ivtmp.5023, tmp342,
	bne	.L1570	@,
	b	.L1567	@
.L1559:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.40358,
	b	.L1558	@
	.fnend
	.size	MVC_WritePicMsg, .-MVC_WritePicMsg
	.align	2
	.global	MVC_InitListX
	.type	MVC_InitListX, %function
MVC_InitListX:
	.fnstart
.LFB1691:
	@ args = 0, pretend = 0, frame = 200
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11162624	@ tmp237,
	movt	r1, #:upper16:11162624	@ tmp237,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r0, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	r2, #:lower16:11164300	@ tmp233,
	movw	r3, #:lower16:11164296	@ tmp235,
	movt	r2, #:upper16:11164300	@ tmp233,
	movt	r3, #:upper16:11164296	@ tmp235,
	cmp	r0, #0	@ <variable>.CurrSlice.slice_type,
	mov	r1, #0	@ tmp234,
	.pad #212
	sub	sp, sp, #212	@,,
	str	r1, [r4, r2]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	str	r1, [r4, r3]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	bne	.L1603	@,
	movw	r6, #:lower16:11196171	@ tmp239,
	movt	r6, #:upper16:11196171	@ tmp239,
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r5, r1	@ <variable>.CurrPic.structure,
	beq	.L1604	@,
	movw	lr, #:lower16:11168620	@ tmp241,
	movt	lr, #:upper16:11168620	@ tmp241,
	ldr	r5, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, r1	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1606	@,
	movw	r7, #:lower16:11168484	@ ivtmp.5188,
	movt	r7, #:upper16:11168484	@ ivtmp.5188,
	add	r3, r4, r7	@ ivtmp.5188, pMvcCtx, ivtmp.5188
	mov	r5, r0	@ list0idx.5258, <variable>.CurrSlice.slice_type
	mov	r2, r0	@ i.5267, list0idx.5258
.L1617:
	ldr	r6, [r3, #0]	@ temp.5265, <variable>.DPB.fs_ref
	add	r1, sp, #208	@,,
	add	ip, r1, r5, asl #2	@, tmp273,, list0idx.5258,
	add	r2, r2, #1	@ i.5267, i.5267,
	add	r3, r3, #4	@ ivtmp.5188, ivtmp.5188,
	ldrb	r0, [r6, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	strne	r6, [ip, #-64]	@ temp.5265, fs_list0
	ldr	r8, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	addne	r5, r5, #1	@ list0idx.5258, list0idx.5258,
	cmp	r8, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5267
	bhi	.L1617	@,
.L1606:
	add	r7, sp, #144	@ tmp277,,
	mov	r1, r5	@, list0idx.5258
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_frame_num_desc	@,
	mov	r0, r7	@, tmp277
	movt	r3, #:upper16:MVC_compare_fs_by_frame_num_desc	@,
	add	r8, r4, #11141120	@ D.38817, pMvcCtx,
	bl	qsort	@
	add	r8, r8, #27904	@ D.38817, D.38817,
	movw	r2, #:lower16:11196171	@ tmp283,
	movw	r3, #:lower16:11162668	@ tmp279,
	movt	r2, #:upper16:11196171	@ tmp283,
	movt	r3, #:upper16:11162668	@ tmp279,
	mov	r6, #0	@ tmp280,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r7	@, tmp277
	str	r6, [r4, r3]	@ tmp280, <variable>.CurrSlice.listXsize
	mov	r2, r5	@, list0idx.5258
	mov	r5, r3	@ D.38818, tmp279
	mov	r3, r8	@, D.38817
	add	r7, r4, r5	@ D.38818, pMvcCtx, D.38818
	str	r6, [sp, #4]	@ tmp280,
	str	r7, [sp, #0]	@ D.38818,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11168624	@ tmp287,
	movt	ip, #:upper16:11168624	@ tmp287,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	addeq	r6, sp, #16	@ tmp563,,
	beq	.L1619	@,
	mov	r2, r6	@ ivtmp.5182, tmp280
	add	r6, sp, #16	@ tmp563,,
	mov	r5, r2	@ listltidx, ivtmp.5182
.L1620:
	add	r0, r4, r2	@ tmp290, pMvcCtx, ivtmp.5182
	movw	lr, #:lower16:11168548	@ tmp291,
	movt	lr, #:upper16:11168548	@ tmp291,
	ldr	r1, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r0, lr	@ tmp291, tmp290, tmp291
	add	r5, r5, #1	@ listltidx, listltidx,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx
	ldr	lr, [r3, #0]	@ tmp293, <variable>.DPB.fs_ltref
	str	lr, [r6, r2]	@ tmp293, fs_listlt
	add	r2, r2, #4	@ ivtmp.5182, ivtmp.5182,
	bhi	.L1620	@,
.L1619:
	mov	r0, r6	@, tmp563
	mov	r1, r5	@, listltidx
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	movw	r0, #:lower16:11196171	@ tmp298,
	movt	r0, #:upper16:11196171	@ tmp298,
	mov	r1, r6	@, tmp563
	mov	r2, r5	@, listltidx
	mov	r3, r8	@, D.38817
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	ip, #1	@ tmp301,
	stmia	sp, {r7, ip}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
.L1615:
	movw	r1, #:lower16:11164272	@ tmp304,
	movt	r1, #:upper16:11164272	@ tmp304,
	movw	r3, #:lower16:11162672	@ tmp302,
	movt	r3, #:upper16:11162672	@ tmp302,
	ldr	r2, [r4, r1]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	mov	r1, #0	@ tmp303,
	str	r1, [r4, r3]	@ tmp303, <variable>.CurrSlice.listXsize
	cmp	r2, r1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1621	@,
	movw	lr, #:lower16:11162668	@ tmp306,
	movt	lr, #:upper16:11162668	@ tmp306,
	ldr	r0, [r4, lr]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
	cmp	r0, r1	@ prephitmp.5274,
	bne	.L1814	@,
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1808	@,
	movw	r5, #:lower16:11196171	@ tmp310,
	movt	r5, #:upper16:11196171	@ tmp310,
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ temp.5275, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.5275,
	bne	.L1625	@,
	movw	ip, #:lower16:11196640	@ tmp312,
	movt	ip, #:upper16:11196640	@ tmp312,
	movw	r3, #:lower16:11169024	@ tmp311,
	movt	r3, #:upper16:11169024	@ tmp311,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r1, lr, #464	@ tmp314, <variable>.CurrPic.frame_store,
	str	r1, [r4, r3]	@ tmp314, <variable>.pListX
.L1626:
	movw	r3, #:lower16:11162668	@ tmp323,
	movt	r3, #:upper16:11162668	@ tmp323,
	mov	r1, #1	@ tmp324,
	str	r1, [r4, r3]	@ tmp324, <variable>.CurrSlice.listXsize
	b	.L1628	@
.L1603:
	movw	sl, #:lower16:11196171	@ tmp325,
	movt	sl, #:upper16:11196171	@ tmp325,
	ldrb	r7, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r7, #0	@ <variable>.CurrPic.structure,
	beq	.L1630	@,
	movw	ip, #:lower16:11168620	@ tmp327,
	movt	ip, #:upper16:11168620	@ tmp327,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1632	@,
	movw	r9, #:lower16:11168484	@ ivtmp.5254,
	movt	r9, #:upper16:11168484	@ ivtmp.5254,
	movw	r7, #:lower16:11196660	@ tmp595,
	add	r3, r4, r9	@ ivtmp.5254, pMvcCtx, ivtmp.5254
	movt	r7, #:upper16:11196660	@ tmp595,
	mov	r5, r1	@ list0idx.5260, tmp234
	mov	r2, r1	@ i.5301, list0idx.5260
.L1651:
	ldr	r1, [r3, #0]	@ temp.5300, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.5301, i.5301,
	add	r3, r3, #4	@ ivtmp.5254, ivtmp.5254,
	ldrb	fp, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	fp, #0	@ <variable>.is_used,
	beq	.L1650	@,
	ldr	r6, [r1, #600]	@ <variable>.poc, <variable>.poc
	add	r0, sp, #208	@,,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	sl, r0, r5, asl #2	@, tmp401,, list0idx.5260,
	cmp	lr, r6	@ <variable>.CurrPic.thispoc, <variable>.poc
	strge	r1, [sl, #-64]	@ temp.5300, fs_list0
	addge	r5, r5, #1	@ list0idx.5260, list0idx.5260,
.L1650:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5301
	bhi	.L1651	@,
.L1632:
	add	r6, sp, #144	@ tmp573,,
	mov	r1, r5	@, list0idx.5260
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_desc	@,
	mov	r0, r6	@, tmp573
	movt	r3, #:upper16:MVC_compare_fs_by_poc_desc	@,
	bl	qsort	@
	movw	ip, #:lower16:11168620	@ tmp407,
	movt	ip, #:upper16:11168620	@ tmp407,
	ldr	r9, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r9, #0	@ <variable>.DPB.ref_frames_in_buffer,
	moveq	r7, r5	@ list0idx.5261, list0idx.5260
	beq	.L1653	@,
	movw	r7, #:lower16:11168484	@ ivtmp.5249,
	movw	sl, #:lower16:11196660	@ tmp593,
	movt	r7, #:upper16:11168484	@ ivtmp.5249,
	movt	sl, #:upper16:11196660	@ tmp593,
	add	r3, r4, r7	@ ivtmp.5249, pMvcCtx, ivtmp.5249
	mov	r2, #0	@ i.5307,
	mov	r7, r5	@ list0idx.5261, list0idx.5260
.L1655:
	ldr	r1, [r3, #0]	@ temp.5303, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.5307, i.5307,
	add	r3, r3, #4	@ ivtmp.5249, ivtmp.5249,
	ldrb	r9, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r9, #0	@ <variable>.is_used,
	beq	.L1654	@,
	ldr	fp, [r1, #600]	@ <variable>.poc, <variable>.poc
	add	r0, sp, #208	@,,
	ldr	lr, [r4, sl]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r8, r0, r7, asl #2	@, tmp416,, list0idx.5261,
	cmp	lr, fp	@ <variable>.CurrPic.thispoc, <variable>.poc
	strlt	r1, [r8, #-64]	@ temp.5303, fs_list0
	addlt	r7, r7, #1	@ list0idx.5261, list0idx.5261,
.L1654:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5307
	bhi	.L1655	@,
	rsb	r9, r5, r7	@ prephitmp.5128, list0idx.5260, list0idx.5261
.L1653:
	mov	sl, r5, asl #2	@ tmp576, list0idx.5260,
	mov	r1, r9	@, prephitmp.5128
	add	r0, r6, sl	@, tmp573, tmp576
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_poc_asc	@,
	bl	qsort	@
	cmp	r5, #0	@ list0idx.5260,
	addeq	r8, sp, #80	@ tmp569,,
	beq	.L1656	@,
	add	r8, sp, #80	@ tmp569,,
	ldr	ip, [r6, #0]	@ tmp426, fs_list0
	add	r9, r8, r9, asl #2	@, ivtmp.5246, tmp569, prephitmp.5128,
	cmp	sl, #4	@ tmp576,
	sub	r2, sl, #4	@ tmp668, tmp576,
	mov	r3, #4	@ ivtmp.5244,
	str	ip, [r9], #4	@ tmp426, fs_list1
	ubfx	r2, r2, #2, #1	@ tmp669, tmp668,,
	beq	.L1656	@,
	cmp	r2, #0	@ tmp669,
	beq	.L1657	@,
	ldr	fp, [r6, #4]	@ tmp897, fs_list0
	mov	r3, #8	@ ivtmp.5244,
	cmp	sl, r3	@ tmp576, ivtmp.5244
	str	fp, [r9], #4	@ tmp897, fs_list1
	beq	.L1656	@,
.L1657:
	add	r1, r3, #4	@ tmp670, ivtmp.5244,
	ldr	r0, [r6, r3]	@ tmp738, fs_list0
	add	r3, r1, #4	@ ivtmp.5244, tmp670,
	mov	fp, r9	@ tmp671, ivtmp.5246
	ldr	lr, [r6, r1]	@ tmp741, fs_list0
	cmp	sl, r3	@ tmp576, ivtmp.5244
	str	r0, [fp], #4	@ tmp738, fs_list1
	str	lr, [r9, #4]	@ tmp741, fs_list1
	add	r9, fp, #4	@ ivtmp.5246, tmp671,
	bne	.L1657	@,
.L1656:
	cmp	r5, r7	@ list0idx.5260, list0idx.5261
	bcs	.L1658	@,
	add	sl, r6, sl	@ ivtmp.5236, tmp573, tmp576
	add	lr, r6, r7, asl #2	@, D.49591, tmp573, list0idx.5261,
	rsb	r9, sl, lr	@ tmp661, ivtmp.5236, D.49591
	mov	r2, #4	@ ivtmp.5237,
	ldr	r5, [sl], #4	@ tmp432, fs_list0
	sub	r3, r9, #4	@ tmp662, tmp661,
	ubfx	r1, r3, #2, #1	@ tmp663, tmp662,,
	cmp	sl, lr	@ ivtmp.5236, D.49591
	str	r5, [r8, #0]	@ tmp432, fs_list1
	beq	.L1658	@,
	cmp	r1, #0	@ tmp663,
	beq	.L1659	@,
	ldr	r9, [sl], #4	@ tmp896, fs_list0
	mov	r2, #8	@ ivtmp.5237,
	cmp	sl, lr	@ ivtmp.5236, D.49591
	str	r9, [r8, #4]	@ tmp896, fs_list1
	beq	.L1658	@,
.L1659:
	mov	r1, sl	@ tmp664, ivtmp.5236
	ldr	r0, [sl, #4]	@ tmp747, fs_list0
	ldr	ip, [r1], #4	@ tmp744, fs_list0
	add	fp, r2, #4	@ tmp665, ivtmp.5237,
	add	sl, r1, #4	@ ivtmp.5236, tmp664,
	cmp	sl, lr	@ ivtmp.5236, D.49591
	str	ip, [r8, r2]	@ tmp744, fs_list1
	str	r0, [r8, fp]	@ tmp747, fs_list1
	add	r2, fp, #4	@ ivtmp.5237, tmp665,
	bne	.L1659	@,
.L1658:
	add	r3, r4, #11141120	@ temp.5314, pMvcCtx,
	movw	r5, #:lower16:11196171	@ tmp439,
	add	r9, r3, #27904	@ temp.5314, temp.5314,
	movt	r5, #:upper16:11196171	@ tmp439,
	movw	r2, #:lower16:11162668	@ tmp433,
	movw	lr, #:lower16:11162672	@ tmp435,
	movt	r2, #:upper16:11162668	@ tmp433,
	movt	lr, #:upper16:11162672	@ tmp435,
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp573
	mov	r3, r9	@, temp.5314
	mov	r6, #0	@ tmp434,
	movw	sl, #:lower16:11162668	@ temp.5315,
	str	r6, [r4, r2]	@ tmp434, <variable>.CurrSlice.listXsize
	movt	sl, #:upper16:11162668	@ temp.5315,
	str	r6, [r4, lr]	@ tmp434, <variable>.CurrSlice.listXsize
	mov	r2, r7	@, list0idx.5261
	add	sl, r4, sl	@ temp.5315, pMvcCtx, temp.5315
	str	r6, [sp, #4]	@ tmp434,
	str	sl, [sp, #0]	@ temp.5315,
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, r9, #132	@, temp.5314,
	mov	r1, r8	@, tmp569
	mov	r2, r7	@, list0idx.5261
	movw	r7, #:lower16:11162672	@ D.38886,
	movt	r7, #:upper16:11162672	@ D.38886,
	str	r3, [sp, #12]	@, %sfp
	add	r7, r4, r7	@ D.38886, pMvcCtx, D.38886
	str	r6, [sp, #4]	@ tmp434,
	str	r7, [sp, #0]	@ D.38886,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	r0, #:lower16:11168624	@ tmp448,
	movt	r0, #:upper16:11168624	@ tmp448,
	ldr	r5, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	addeq	r8, sp, #16	@ tmp748,,
	beq	.L1661	@,
	add	r8, sp, #16	@ tmp748,,
	mov	r5, r6	@ listltidx.5309, ivtmp.5229
.L1662:
	add	r1, r4, r6	@ tmp451, pMvcCtx, ivtmp.5229
	movw	r2, #:lower16:11168548	@ tmp452,
	movt	r2, #:upper16:11168548	@ tmp452,
	ldr	lr, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	ip, r1, r2	@ tmp452, tmp451, tmp452
	add	r5, r5, #1	@ listltidx.5309, listltidx.5309,
	cmp	lr, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx.5309
	ldr	fp, [ip, #0]	@ tmp454, <variable>.DPB.fs_ltref
	str	fp, [r8, r6]	@ tmp454, fs_listlt
	add	r6, r6, #4	@ ivtmp.5229, ivtmp.5229,
	bhi	.L1662	@,
.L1661:
	movw	r6, #:lower16:11196171	@ tmp459,
	movt	r6, #:upper16:11196171	@ tmp459,
	mov	r1, r5	@, listltidx.5309
	mov	r0, r8	@, tmp748
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	mov	fp, #1	@ tmp462,
	bl	qsort	@
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, listltidx.5309
	mov	r3, r9	@, temp.5314
	mov	r1, r8	@, tmp748
	stmia	sp, {sl, fp}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, listltidx.5309
	ldr	r3, [sp, #12]	@, %sfp
	mov	r1, r8	@, tmp748
	stmia	sp, {r7, fp}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11162668	@ tmp467,
	movw	r3, #:lower16:11162672	@ tmp468,
	movt	ip, #:upper16:11162668	@ tmp467,
	movt	r3, #:upper16:11162672	@ tmp468,
	ldr	r5, [r4, ip]	@ list0idx.5322, <variable>.CurrSlice.listXsize
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r5, r0	@ list0idx.5322, <variable>.CurrSlice.listXsize
	beq	.L1649	@,
.L1628:
	movw	r3, #:lower16:11164272	@ tmp473,
	movt	r3, #:upper16:11164272	@ tmp473,
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmp	r5, #0	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1621	@,
	movw	ip, #:lower16:11162624	@ tmp475,
	movw	lr, #:lower16:11162668	@ tmp476,
	movt	ip, #:upper16:11162624	@ tmp475,
	movt	lr, #:upper16:11162668	@ tmp476,
	ldrb	r5, [r4, ip]	@ zero_extendqisi2	@ prephitmp.5118, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, lr]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
.L1623:
	cmp	r5, #0	@ prephitmp.5118,
	bne	.L1673	@,
	cmp	r0, #0	@ prephitmp.5274,
	beq	.L1808	@,
.L1674:
	movw	r1, #:lower16:11162680	@ tmp526,
	movt	r1, #:upper16:11162680	@ tmp526,
	movw	lr, #:lower16:11162684	@ tmp530,
	movt	lr, #:upper16:11162684	@ tmp530,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	ip, #:lower16:11162668	@ tmp529,
	movw	r1, #:lower16:11162672	@ tmp532,
	movt	ip, #:upper16:11162668	@ tmp529,
	movt	r1, #:upper16:11162672	@ tmp532,
	add	r3, r3, #1	@ tmp527, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	ldr	r2, [r4, lr]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r0, r3	@ prephitmp.5274, tmp527
	movcc	r3, r0	@ i, prephitmp.5274
	str	r3, [r4, ip]	@ i, <variable>.CurrSlice.listXsize
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r2, r2, #1	@ prephitmp.5120, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r2, r0	@ prephitmp.5120, <variable>.CurrSlice.listXsize
	movcs	r2, r0	@ prephitmp.5120, <variable>.CurrSlice.listXsize
	cmp	r3, #32	@ i,
	str	r2, [r4, r1]	@ prephitmp.5120, <variable>.CurrSlice.listXsize
	bhi	.L1677	@,
.L1676:
	add	r2, r3, #2785280	@ tmp557, i,
	add	r1, r3, #1	@ i, i,
	add	ip, r2, #6976	@ tmp557, tmp557,
	cmp	r1, #32	@ i,
	mov	r0, #0	@ tmp579,
	and	r3, r3, #1	@ tmp603, i,
	add	r2, r4, ip, asl #2	@, ivtmp.5154, pMvcCtx, tmp557,
	str	r0, [r2], #4	@ tmp579, <variable>.pListX
	bhi	.L1803	@,
	cmp	r3, #0	@ tmp603,
	beq	.L1678	@,
	add	r1, r1, #1	@ i, i,
	str	r0, [r2], #4	@ tmp579, <variable>.pListX
	cmp	r1, #32	@ i,
	bhi	.L1803	@,
.L1678:
	add	r1, r1, #2	@ i, i,
	mov	ip, r2	@ tmp605, ivtmp.5154
	cmp	r1, #32	@ i,
	str	r0, [ip], #4	@ tmp579, <variable>.pListX
	str	r0, [r2, #4]	@ tmp579, <variable>.pListX
	add	r2, ip, #4	@ ivtmp.5154, tmp605,
	bls	.L1678	@,
.L1803:
	movw	r0, #:lower16:11162672	@ tmp536,
	movt	r0, #:upper16:11162672	@ tmp536,
	ldr	r2, [r4, r0]	@ prephitmp.5120, <variable>.CurrSlice.listXsize
.L1677:
	cmp	r2, #32	@ prephitmp.5120,
	bhi	.L1679	@,
	add	ip, r2, #2785280	@ tmp537, prephitmp.5120,
	movw	r1, #:lower16:11169156	@ D.49474,
	add	r3, ip, #6976	@ tmp537, tmp537,
	movt	r1, #:upper16:11169156	@ D.49474,
	add	r0, r4, r1	@ D.49474, pMvcCtx, D.49474
	mov	r1, #0	@ tmp578,
	add	r4, r4, r3, asl #2	@, ivtmp.5150, pMvcCtx, tmp537,
	add	r3, r4, #4	@ ivtmp.5150, ivtmp.5150,
	rsb	lr, r4, r0	@ tmp598, ivtmp.5150, D.49474
	cmp	r3, r0	@ ivtmp.5150, D.49474
	sub	r2, lr, #4	@ tmp599, tmp598,
	ubfx	r2, r2, #2, #1	@ tmp600, tmp599,,
	str	r1, [r4, #132]	@ tmp578, <variable>.pListX
	beq	.L1679	@,
	cmp	r2, #0	@ tmp600,
	beq	.L1680	@,
	str	r1, [r3, #132]	@ tmp578, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.5150, ivtmp.5150,
	cmp	r3, r0	@ ivtmp.5150, D.49474
	beq	.L1679	@,
.L1680:
	add	r2, r3, #4	@ tmp601, ivtmp.5150,
	str	r1, [r3, #132]	@ tmp578, <variable>.pListX
	add	r3, r2, #4	@ ivtmp.5150, tmp601,
	cmp	r3, r0	@ ivtmp.5150, D.49474
	str	r1, [r2, #132]	@ tmp578, <variable>.pListX
	bne	.L1680	@,
.L1679:
	mov	r0, #0	@ D.38840,
.L1629:
	add	sp, sp, #212	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1630:
	movw	r6, #:lower16:11168620	@ tmp329,
	movt	r6, #:upper16:11168620	@ tmp329,
	ldr	lr, [r4, r6]	@ temp.5356, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.5356,
	moveq	r7, lr	@ list0idx.5259, temp.5356
	beq	.L1634	@,
	movw	r0, #:lower16:11168484	@ ivtmp.5223,
	movt	r0, #:upper16:11168484	@ ivtmp.5223,
	add	r3, r4, r0	@ ivtmp.5223, pMvcCtx, ivtmp.5223
	sub	ip, lr, #1	@ tmp655, temp.5356,
	movw	r5, #:lower16:11196664	@ tmp590,
	and	r0, ip, #1	@ tmp657, tmp655,
	ldr	r2, [r3, #0]	@ temp.5279, <variable>.DPB.fs_ref
	movt	r5, #:upper16:11196664	@ tmp590,
	ldrb	r8, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r8, #3	@ <variable>.is_reference,
	beq	.L1815	@,
.L1761:
	mov	r2, #1	@ i.5282,
	cmp	r2, lr	@ i.5282, temp.5356
	add	r3, r3, #4	@ ivtmp.5223, ivtmp.5223,
	bcs	.L1634	@,
	cmp	r0, #0	@ tmp657,
	beq	.L1636	@,
	ldr	r1, [r3, #0]	@ temp.5279, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1816	@,
.L1763:
	add	r2, r2, #1	@ i.5282, i.5282,
	add	r3, r3, #4	@ ivtmp.5223, ivtmp.5223,
	cmp	r2, lr	@ i.5282, temp.5356
	bcc	.L1636	@,
.L1634:
	add	lr, r4, #11141120	@ temp.5283, pMvcCtx,
	mov	r2, #4	@,
	add	r8, lr, #27904	@ temp.5283, temp.5283,
	mov	r1, r7	@, list0idx.5259
	movw	r3, #:lower16:MVC_compare_pic_by_poc_desc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_poc_desc	@,
	mov	r0, r8	@, temp.5283
	bl	qsort	@
	movw	r2, #:lower16:11168620	@ tmp340,
	movt	r2, #:upper16:11168620	@ tmp340,
	ldr	sl, [r4, r2]	@ temp.5355, <variable>.DPB.ref_frames_in_buffer
	cmp	sl, #0	@ temp.5355,
	moveq	r5, r7	@ list0idx.5322, list0idx.5259
	beq	.L1638	@,
	movw	r3, #:lower16:11168484	@ ivtmp.5218,
	movt	r3, #:upper16:11168484	@ ivtmp.5218,
	add	r3, r4, r3	@ ivtmp.5218, pMvcCtx, ivtmp.5218
	sub	r5, sl, #1	@ tmp650, temp.5355,
	and	r0, r5, #1	@ tmp652, tmp650,
	movw	lr, #:lower16:11196664	@ tmp589,
	ldr	r2, [r3, #0]	@ temp.5284, <variable>.DPB.fs_ref
	movt	lr, #:upper16:11196664	@ tmp589,
	mov	r5, r7	@ list0idx.5322, list0idx.5259
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1817	@,
.L1754:
	mov	r2, #1	@ i.5289,
	cmp	r2, sl	@ i.5289, temp.5355
	add	r3, r3, #4	@ ivtmp.5218, ivtmp.5218,
	bcs	.L1807	@,
	cmp	r0, #0	@ tmp652,
	beq	.L1640	@,
	ldr	r1, [r3, #0]	@ temp.5284, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1818	@,
.L1756:
	add	r2, r2, #1	@ i.5289, i.5289,
	add	r3, r3, #4	@ ivtmp.5218, ivtmp.5218,
	cmp	r2, sl	@ i.5289, temp.5355
	bcc	.L1640	@,
.L1807:
	rsb	sl, r7, r5	@ prephitmp.5124, list0idx.5259, list0idx.5322
.L1638:
	mov	r6, r7, asl #2	@ D.38854, list0idx.5259,
	mov	r1, sl	@, prephitmp.5124
	add	r0, r8, r6	@, temp.5283, D.38854
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_poc_asc	@,
	bl	qsort	@
	cmp	r7, #0	@ list0idx.5259,
	beq	.L1641	@,
	add	r3, r4, #11141120	@ tmp355, pMvcCtx,
	add	ip, sl, #2785280	@ tmp351, prephitmp.5124,
	add	r2, r3, #27904	@ tmp355, tmp355,
	add	sl, ip, #6976	@ tmp351, tmp351,
	cmp	r6, #4	@ D.38854,
	sub	r0, r6, #4	@ tmp646, D.38854,
	ldr	lr, [r2, #0]	@ tmp357, <variable>.pListX
	add	sl, r4, sl, asl #2	@, ivtmp.5215, pMvcCtx, tmp351,
	ubfx	r2, r0, #2, #1	@ tmp647, tmp646,,
	mov	r3, #4	@ ivtmp.5212,
	add	r0, sl, #4	@ ivtmp.5215, ivtmp.5215,
	str	lr, [sl, #132]	@ tmp357, <variable>.pListX
	beq	.L1641	@,
	cmp	r2, #0	@ tmp647,
	beq	.L1642	@,
	movw	r2, #:lower16:11169028	@ tmp860,
	movt	r2, #:upper16:11169028	@ tmp860,
	add	lr, r4, r2	@ tmp860, pMvcCtx, tmp860
	mov	r3, #8	@ ivtmp.5212,
	cmp	r6, r3	@ D.38854, ivtmp.5212
	ldr	ip, [lr, #0]	@ tmp861, <variable>.pListX
	str	ip, [r0, #132]	@ tmp861, <variable>.pListX
	add	r0, r0, #4	@ ivtmp.5215, ivtmp.5215,
	beq	.L1641	@,
.L1642:
	add	r1, r4, r3	@ tmp706, pMvcCtx, ivtmp.5212
	add	r3, r3, #4	@ tmp648, ivtmp.5212,
	add	ip, r1, #11141120	@ tmp708, tmp706,
	add	r2, r4, r3	@ tmp712, pMvcCtx, tmp648
	add	r1, ip, #27904	@ tmp708, tmp708,
	add	lr, r2, #11141120	@ tmp714, tmp712,
	add	r2, lr, #27904	@ tmp714, tmp714,
	add	r3, r3, #4	@ ivtmp.5212, tmp648,
	ldr	ip, [r1, #0]	@ tmp709, <variable>.pListX
	cmp	r6, r3	@ D.38854, ivtmp.5212
	add	r1, r0, #4	@ tmp649, ivtmp.5215,
	str	ip, [r0, #132]	@ tmp709, <variable>.pListX
	add	r0, r1, #4	@ ivtmp.5215, tmp649,
	ldr	lr, [r2, #0]	@ tmp715, <variable>.pListX
	str	lr, [r1, #132]	@ tmp715, <variable>.pListX
	bne	.L1642	@,
.L1641:
	cmp	r7, r5	@ list0idx.5259, list0idx.5322
	bcs	.L1643	@,
	add	r2, r7, #2785280	@ tmp358, list0idx.5259,
	rsb	r7, r7, r5	@ tmp364, list0idx.5259, list0idx.5322
	add	r3, r2, #6976	@ tmp358, tmp358,
	movw	r0, #:lower16:11169156	@ tmp366,
	movt	r0, #:upper16:11169156	@ tmp366,
	mov	r7, r7, asl #2	@ D.49548, tmp364,
	add	ip, r4, r3, asl #2	@, ivtmp.5205, pMvcCtx, tmp358,
	add	r6, r4, r0	@ tmp366, pMvcCtx, tmp366
	mov	r1, #4	@ ivtmp.5206,
	cmp	r1, r7	@ ivtmp.5206, D.49548
	ldr	r0, [ip], #4	@ tmp368, <variable>.pListX
	sub	lr, r7, #4	@ tmp640, D.49548,
	ubfx	r2, lr, #2, #1	@ tmp641, tmp640,,
	str	r0, [r6, #0]	@ tmp368, <variable>.pListX
	beq	.L1643	@,
	cmp	r2, #0	@ tmp641,
	beq	.L1644	@,
	movw	r1, #:lower16:11169160	@ tmp856,
	ldr	r2, [ip], #4	@ tmp857, <variable>.pListX
	movt	r1, #:upper16:11169160	@ tmp856,
	add	r3, r4, r1	@ tmp856, pMvcCtx, tmp856
	mov	r1, #8	@ ivtmp.5206,
	cmp	r1, r7	@ ivtmp.5206, D.49548
	str	r2, [r3, #0]	@ tmp857, <variable>.pListX
	beq	.L1643	@,
.L1644:
	mov	r0, ip	@ tmp642, ivtmp.5205
	add	lr, r4, r1	@ tmp718, pMvcCtx, ivtmp.5206
	ldr	r6, [r0], #4	@ tmp721, <variable>.pListX
	movw	r2, #:lower16:11169156	@ tmp720,
	movt	r2, #:upper16:11169156	@ tmp720,
	add	r3, r1, #4	@ tmp643, ivtmp.5206,
	add	r2, lr, r2	@ tmp720, tmp718, tmp720
	add	r1, r3, #4	@ ivtmp.5206, tmp643,
	add	lr, r4, r3	@ tmp724, pMvcCtx, tmp643
	movw	r3, #:lower16:11169156	@ tmp726,
	str	r6, [r2, #0]	@ tmp721, <variable>.pListX
	movt	r3, #:upper16:11169156	@ tmp726,
	ldr	r6, [ip, #4]	@ tmp727, <variable>.pListX
	add	r3, lr, r3	@ tmp726, tmp724, tmp726
	cmp	r1, r7	@ ivtmp.5206, D.49548
	add	ip, r0, #4	@ ivtmp.5205, tmp642,
	str	r6, [r3, #0]	@ tmp727, <variable>.pListX
	bne	.L1644	@,
.L1643:
	movw	r3, #:lower16:11168624	@ tmp371,
	movt	r3, #:upper16:11168624	@ tmp371,
	movw	r6, #:lower16:11162672	@ tmp369,
	movw	ip, #:lower16:11162668	@ tmp370,
	ldr	r1, [r4, r3]	@ temp.5353, <variable>.DPB.ltref_frames_in_buffer
	movt	r6, #:upper16:11162672	@ tmp369,
	movt	ip, #:upper16:11162668	@ tmp370,
	cmp	r1, #0	@ temp.5353,
	str	r5, [r4, r6]	@ list0idx.5322, <variable>.CurrSlice.listXsize
	str	r5, [r4, ip]	@ list0idx.5322, <variable>.CurrSlice.listXsize
	moveq	r0, r5	@ list0idx, list0idx.5322
	beq	.L1646	@,
	movw	lr, #:lower16:11168548	@ ivtmp.5199,
	movt	lr, #:upper16:11168548	@ ivtmp.5199,
	add	r3, r4, lr	@ ivtmp.5199, pMvcCtx, ivtmp.5199
	sub	r2, r1, #1	@ tmp633, temp.5353,
	and	ip, r2, #1	@ tmp635, tmp633,
	ldr	r2, [r3, #0]	@ temp.5291, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1819	@,
.L1739:
	mov	r2, #1	@ i.5295,
	cmp	r2, r1	@ i.5295, temp.5353
	add	r3, r3, #4	@ ivtmp.5199, ivtmp.5199,
	bcs	.L1806	@,
	cmp	ip, #0	@ tmp635,
	beq	.L1648	@,
	ldr	r0, [r3, #0]	@ temp.5291, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #3	@ <variable>.is_used,
	beq	.L1820	@,
.L1741:
	add	r2, r2, #1	@ i.5295, i.5295,
	add	r3, r3, #4	@ ivtmp.5199, ivtmp.5199,
	cmp	r2, r1	@ i.5295, temp.5353
	bcc	.L1648	@,
.L1806:
	movw	r1, #:lower16:11162668	@ tmp382,
	movt	r1, #:upper16:11162668	@ tmp382,
	ldr	r0, [r4, r1]	@ list0idx, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.5359, list0idx, list0idx.5322
.L1646:
	movw	r6, #:lower16:11162668	@ tmp386,
	movt	r6, #:upper16:11162668	@ tmp386,
	add	r0, r8, r0, asl #2	@,, temp.5283, list0idx,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	ldr	r1, [r4, r6]	@ D.38809, <variable>.CurrSlice.listXsize
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	add	r0, r1, #33	@ tmp387, D.38809,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	rsb	r1, r1, r5	@, D.38809, list0idx.5322
	mla	r0, r0, r2, r8	@, tmp387,, temp.5283
	bl	qsort	@
	movw	ip, #:lower16:11162672	@ tmp392,
	movt	ip, #:upper16:11162672	@ tmp392,
	str	r5, [r4, ip]	@ list0idx.5322, <variable>.CurrSlice.listXsize
	str	r5, [r4, r6]	@ list0idx.5322, <variable>.CurrSlice.listXsize
.L1649:
	cmp	r5, #1	@ list0idx.5322,
	bls	.L1628	@,
	add	r0, r4, #11141120	@ ivtmp.5193, pMvcCtx,
	sub	r1, r5, #1	@ tmp628, list0idx.5322,
	add	r3, r0, #27904	@ ivtmp.5193, ivtmp.5193,
	and	r0, r1, #1	@ tmp630, tmp628,
	ldr	lr, [r3, #0]	@ tmp471, <variable>.pListX
	ldr	r2, [r3, #132]	@ tmp472, <variable>.pListX
	cmp	lr, r2	@ tmp471, tmp472
	bne	.L1628	@,
	mov	r2, #1	@ j,
	cmp	r2, r5	@ j, list0idx.5322
	add	r3, r3, #4	@ ivtmp.5193, ivtmp.5193,
	bcs	.L1805	@,
	cmp	r0, #0	@ tmp630,
	beq	.L1663	@,
	ldr	lr, [r3, #0]	@ tmp838, <variable>.pListX
	ldr	r2, [r3, #132]	@ tmp839, <variable>.pListX
	cmp	lr, r2	@ tmp838, tmp839
	bne	.L1628	@,
	mov	r2, #2	@ j,
	cmp	r2, r5	@ j, list0idx.5322
	add	r3, r3, #4	@ ivtmp.5193, ivtmp.5193,
	bcs	.L1805	@,
.L1663:
	ldr	ip, [r3, #0]	@ tmp750, <variable>.pListX
	add	r2, r2, #1	@ tmp631, j,
	ldr	lr, [r3, #132]	@ tmp751, <variable>.pListX
	add	r1, r3, #4	@ tmp632, ivtmp.5193,
	add	r2, r2, #1	@ j, tmp631,
	cmp	ip, lr	@ tmp750, tmp751
	bne	.L1628	@,
	ldr	r0, [r3, #4]	@ tmp755, <variable>.pListX
	add	r3, r1, #4	@ ivtmp.5193, tmp632,
	ldr	r1, [r1, #132]	@ tmp756, <variable>.pListX
	cmp	r0, r1	@ tmp755, tmp756
	bne	.L1628	@,
	cmp	r2, r5	@ j, list0idx.5322
	bcc	.L1663	@,
.L1805:
	movw	r3, #:lower16:11169156	@ tmp543,
	movw	lr, #:lower16:11169160	@ tmp545,
	movt	r3, #:upper16:11169156	@ tmp543,
	movt	lr, #:upper16:11169160	@ tmp545,
	ldr	r5, [r4, r3]	@ tmp_s, <variable>.pListX
	ldr	r0, [r4, lr]	@ <variable>.pListX, <variable>.pListX
	str	r0, [r4, r3]	@ <variable>.pListX, <variable>.pListX
	str	r5, [r4, lr]	@ tmp_s, <variable>.pListX
	b	.L1628	@
.L1604:
	movw	r0, #:lower16:11168620	@ tmp243,
	movt	r0, #:upper16:11168620	@ tmp243,
	ldr	lr, [r4, r0]	@ temp.5349, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.5349,
	moveq	r5, lr	@ list0idx.5326, temp.5349
	beq	.L1608	@,
	movw	r3, #:lower16:11168484	@ ivtmp.5176,
	movt	r3, #:upper16:11168484	@ ivtmp.5176,
	add	r3, r4, r3	@ ivtmp.5176, pMvcCtx, ivtmp.5176
	sub	r2, lr, #1	@ tmp623, temp.5349,
	and	r0, r2, #1	@ tmp625, tmp623,
	ldr	r2, [r3, #0]	@ D.38787, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1821	@,
.L1728:
	mov	r2, #1	@ i.5262,
	cmp	r2, lr	@ i.5262, temp.5349
	add	r3, r3, #4	@ ivtmp.5176, ivtmp.5176,
	bcs	.L1608	@,
	cmp	r0, #0	@ tmp625,
	beq	.L1610	@,
	ldr	r1, [r3, #0]	@ D.38787, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1822	@,
.L1730:
	add	r2, r2, #1	@ i.5262, i.5262,
	add	r3, r3, #4	@ ivtmp.5176, ivtmp.5176,
	cmp	r2, lr	@ i.5262, temp.5349
	bcc	.L1610	@,
.L1608:
	add	lr, r4, #11141120	@ D.38798, pMvcCtx,
	mov	r1, r5	@, list0idx.5326
	add	r6, lr, #27904	@ D.38798, D.38798,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_pic_num_desc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_pic_num_desc	@,
	mov	r0, r6	@, D.38798
	bl	qsort	@
	movw	r2, #:lower16:11168624	@ tmp255,
	movt	r2, #:upper16:11168624	@ tmp255,
	movw	r0, #:lower16:11162668	@ tmp254,
	movt	r0, #:upper16:11162668	@ tmp254,
	ldr	r1, [r4, r2]	@ temp.5348, <variable>.DPB.ltref_frames_in_buffer
	str	r5, [r4, r0]	@ list0idx.5326, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ temp.5348,
	moveq	r0, r5	@ list0idx.5257, list0idx.5326
	beq	.L1612	@,
	movw	r3, #:lower16:11168548	@ ivtmp.5171,
	movt	r3, #:upper16:11168548	@ ivtmp.5171,
	add	r3, r4, r3	@ ivtmp.5171, pMvcCtx, ivtmp.5171
	sub	r2, r1, #1	@ tmp618, temp.5348,
	and	ip, r2, #1	@ tmp620, tmp618,
	ldr	r2, [r3, #0]	@ D.38799, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1823	@,
.L1721:
	mov	r2, #1	@ i.5264,
	cmp	r2, r1	@ i.5264, temp.5348
	add	r3, r3, #4	@ ivtmp.5171, ivtmp.5171,
	bcs	.L1804	@,
	cmp	ip, #0	@ tmp620,
	beq	.L1614	@,
	ldr	r0, [r3, #0]	@ D.38799, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1824	@,
.L1723:
	add	r2, r2, #1	@ i.5264, i.5264,
	add	r3, r3, #4	@ ivtmp.5171, ivtmp.5171,
	cmp	r2, r1	@ i.5264, temp.5348
	bcc	.L1614	@,
.L1804:
	movw	ip, #:lower16:11162668	@ tmp264,
	movt	ip, #:upper16:11162668	@ tmp264,
	ldr	r0, [r4, ip]	@ list0idx.5257, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.5132, list0idx.5257, list0idx.5326
.L1612:
	add	r0, r6, r0, asl #2	@,, D.38798, list0idx.5257,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	movw	r1, #:lower16:11162668	@ tmp268,
	movt	r1, #:upper16:11162668	@ tmp268,
	str	r5, [r4, r1]	@ list0idx.5326, <variable>.CurrSlice.listXsize
	b	.L1615	@
.L1826:
	add	sl, r7, #2785280	@ tmp335, list0idx.5259,
	ldr	r3, [r3, #4]	@ temp.5279, <variable>.DPB.fs_ref
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	add	ip, sl, #6976	@ tmp335, tmp335,
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #464	@ tmp337, temp.5279,
	cmp	r8, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	r1, [r4, ip, asl #2]	@ tmp337, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addge	r7, r7, #1	@ list0idx.5259, list0idx.5259,
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1825	@,
.L1766:
	add	r2, r2, #1	@ i.5282, tmp658,
	add	r3, r0, #4	@ ivtmp.5223, tmp659,
	cmp	r2, lr	@ i.5282, temp.5356
	bcs	.L1634	@,
.L1636:
	ldr	r1, [r3, #0]	@ temp.5279, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp658, i.5282,
	add	r0, r3, #4	@ tmp659, ivtmp.5223,
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #3	@ <variable>.is_reference,
	beq	.L1826	@,
	ldr	r3, [r3, #4]	@ temp.5279, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1766	@,
.L1825:
	add	r6, r7, #2785280	@ tmp894, list0idx.5259,
	add	sl, r3, #464	@ tmp895, temp.5279,
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r6, #6976	@ tmp894, tmp894,
	ldr	r3, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	cmp	r8, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	sl, [r4, r1, asl #2]	@ tmp895, <variable>.pListX
	addge	r7, r7, #1	@ list0idx.5259, list0idx.5259,
	b	.L1766	@
.L1828:
	ldr	ip, [r1, #464]	@ tmp248,
	ldr	r3, [r3, #4]	@ D.38787, <variable>.DPB.fs_ref
	bic	r6, ip, #-16777216	@ tmp246, tmp248,
	bic	ip, r6, #255	@ tmp246, tmp246,
	cmp	ip, #65536	@ tmp246,
	addeq	ip, r5, #2785280	@ tmp249, list0idx.5326,
	addeq	r1, r1, #464	@ tmp251, D.38787,
	addeq	ip, ip, #6976	@ tmp249, tmp249,
	addeq	r5, r5, #1	@ list0idx.5326, list0idx.5326,
	streq	r1, [r4, ip, asl #2]	@ tmp251, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1827	@,
.L1733:
	add	r2, r2, #1	@ i.5262, tmp626,
	add	r3, r0, #4	@ ivtmp.5176, tmp627,
	cmp	r2, lr	@ i.5262, temp.5349
	bcs	.L1608	@,
.L1610:
	ldr	r1, [r3, #0]	@ D.38787, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp626, i.5262,
	add	r0, r3, #4	@ tmp627, ivtmp.5176,
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1828	@,
	ldr	r3, [r3, #4]	@ D.38787, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1733	@,
.L1827:
	ldr	ip, [r3, #464]	@ tmp834,
	bic	r6, ip, #-16777216	@ tmp835, tmp834,
	bic	r1, r6, #255	@ tmp835, tmp835,
	cmp	r1, #65536	@ tmp835,
	addeq	r1, r5, #2785280	@ tmp836, list0idx.5326,
	addeq	r3, r3, #464	@ tmp837, D.38787,
	addeq	r1, r1, #6976	@ tmp836, tmp836,
	addeq	r5, r5, #1	@ list0idx.5326, list0idx.5326,
	streq	r3, [r4, r1, asl #2]	@ tmp837, <variable>.pListX
	b	.L1733	@
.L1830:
	add	ip, r5, #2785280	@ tmp346, list0idx.5322,
	ldr	r3, [r3, #4]	@ temp.5284, <variable>.DPB.fs_ref
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	add	ip, ip, #6976	@ tmp346, tmp346,
	ldr	r9, [r4, lr]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #464	@ tmp348, temp.5284,
	cmp	r9, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r1, [r4, ip, asl #2]	@ tmp348, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addlt	r5, r5, #1	@ list0idx.5322, list0idx.5322,
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1829	@,
.L1759:
	add	r2, r2, #1	@ i.5289, tmp653,
	add	r3, r0, #4	@ ivtmp.5218, tmp654,
	cmp	r2, sl	@ i.5289, temp.5355
	bcs	.L1807	@,
.L1640:
	ldr	r1, [r3, #0]	@ temp.5284, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp653, i.5289,
	add	r0, r3, #4	@ tmp654, ivtmp.5218,
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1830	@,
	ldr	r3, [r3, #4]	@ temp.5284, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1759	@,
.L1829:
	add	r1, r5, #2785280	@ tmp877, list0idx.5322,
	add	r6, r3, #464	@ tmp878, temp.5284,
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #6976	@ tmp877, tmp877,
	ldr	r3, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	cmp	ip, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r6, [r4, r1, asl #2]	@ tmp878, <variable>.pListX
	addlt	r5, r5, #1	@ list0idx.5322, list0idx.5322,
	b	.L1759	@
.L1832:
	ldr	lr, [r0, #464]	@ tmp260,
	ldr	r3, [r3, #4]	@ D.38799, <variable>.DPB.fs_ltref
	bic	lr, lr, #-16777216	@ tmp258, tmp260,
	bic	lr, lr, #255	@ tmp258, tmp258,
	cmp	lr, #256	@ tmp258,
	addeq	lr, r5, #2785280	@ tmp261, list0idx.5326,
	addeq	r0, r0, #464	@ tmp263, D.38799,
	addeq	lr, lr, #6976	@ tmp261, tmp261,
	addeq	r5, r5, #1	@ list0idx.5326, list0idx.5326,
	streq	r0, [r4, lr, asl #2]	@ tmp263, <variable>.pListX
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1831	@,
.L1726:
	add	r2, r2, #1	@ i.5264, tmp621,
	add	r3, ip, #4	@ ivtmp.5171, tmp622,
	cmp	r2, r1	@ i.5264, temp.5348
	bcs	.L1804	@,
.L1614:
	ldr	r0, [r3, #0]	@ D.38799, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp621, i.5264,
	add	ip, r3, #4	@ tmp622, ivtmp.5171,
	ldrb	lr, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1832	@,
	ldr	r3, [r3, #4]	@ D.38799, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L1726	@,
.L1831:
	ldr	r0, [r3, #464]	@ tmp820,
	bic	lr, r0, #-16777216	@ tmp821, tmp820,
	bic	r0, lr, #255	@ tmp821, tmp821,
	cmp	r0, #256	@ tmp821,
	addeq	r0, r5, #2785280	@ tmp822, list0idx.5326,
	addeq	r3, r3, #464	@ tmp823, D.38799,
	addeq	r0, r0, #6976	@ tmp822, tmp822,
	addeq	r5, r5, #1	@ list0idx.5326, list0idx.5326,
	streq	r3, [r4, r0, asl #2]	@ tmp823, <variable>.pListX
	b	.L1726	@
.L1834:
	ldrb	lr, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, #1	@ <variable>.frame.is_long_term,
	bne	.L1647	@,
	add	r6, r5, #2785280	@ tmp375, list0idx.5322,
	movw	lr, #:lower16:2792289	@ tmp378,
	movt	lr, #:upper16:2792289	@ tmp378,
	add	r6, r6, #6976	@ tmp375, tmp375,
	add	lr, r5, lr	@ tmp378, list0idx.5322, tmp378
	add	r5, r5, #1	@ list0idx.5322, list0idx.5322,
	add	r0, r0, #464	@ tmp377, temp.5291,
	str	r0, [r4, r6, asl #2]	@ tmp377, <variable>.pListX
	str	r0, [r4, lr, asl #2]	@ tmp377, <variable>.pListX
.L1647:
	ldr	r3, [r3, #4]	@ temp.5291, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1833	@,
.L1744:
	add	r2, r2, #1	@ i.5295, tmp636,
	add	r3, ip, #4	@ ivtmp.5199, tmp637,
	cmp	r2, r1	@ i.5295, temp.5353
	bcs	.L1806	@,
.L1648:
	ldr	r0, [r3, #0]	@ temp.5291, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp636, i.5295,
	add	ip, r3, #4	@ tmp637, ivtmp.5199,
	ldrb	r6, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r6, #3	@ <variable>.is_used,
	beq	.L1834	@,
	ldr	r3, [r3, #4]	@ temp.5291, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	bne	.L1744	@,
.L1833:
	ldrb	r0, [r3, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r0, #1	@ <variable>.frame.is_long_term,
	bne	.L1744	@,
	add	r6, r5, #2785280	@ tmp851, list0idx.5322,
	movw	r0, #:lower16:2792289	@ tmp853,
	movt	r0, #:upper16:2792289	@ tmp853,
	add	lr, r6, #6976	@ tmp851, tmp851,
	add	r6, r5, r0	@ tmp853, list0idx.5322, tmp853
	add	r3, r3, #464	@ tmp852, temp.5291,
	add	r5, r5, #1	@ list0idx.5322, list0idx.5322,
	str	r3, [r4, lr, asl #2]	@ tmp852, <variable>.pListX
	str	r3, [r4, r6, asl #2]	@ tmp852, <variable>.pListX
	b	.L1744	@
.L1673:
	cmp	r0, #0	@ prephitmp.5274,
	bne	.L1674	@,
	movw	r2, #:lower16:11162672	@ tmp524,
	movt	r2, #:upper16:11162672	@ tmp524,
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1808	@,
	movw	r3, #:lower16:11162684	@ tmp551,
	movt	r3, #:upper16:11162684	@ tmp551,
	movw	lr, #:lower16:11162668	@ tmp548,
	movt	lr, #:upper16:11162668	@ tmp548,
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	mov	r3, r0	@ i, prephitmp.5274
	str	r0, [r4, lr]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
	add	r1, r5, #1	@ tmp552, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r1, ip	@ tmp552, <variable>.CurrSlice.listXsize
	strls	r1, [r4, r2]	@, tmp552, <variable>.CurrSlice.listXsize
	strhi	ip, [r4, r2]	@, <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	b	.L1676	@
.L1621:
	movw	r8, #:lower16:11152056	@ D.38900,
	movt	r8, #:upper16:11152056	@ D.38900,
	add	r8, r4, r8	@ D.38900, pMvcCtx, D.38900
	movw	r2, #:lower16:11164296	@,
	movw	r6, #:lower16:11196171	@ tmp480,
	movt	r2, #:upper16:11164296	@,
	movt	r6, #:upper16:11196171	@ tmp480,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, r2	@, pMvcCtx,
	mov	r1, #0	@,
	mov	r2, r8	@, D.38900
	movw	r5, #:lower16:11164296	@ tmp479,
	bl	mvc_append_interview_list	@
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ temp.5329, <variable>.CurrPic.structure
	movt	r5, #:upper16:11164296	@ tmp479,
	cmp	r0, #0	@ temp.5329,
	bne	.L1665	@,
	ldr	r7, [r4, r5]	@ D.38905, <variable>.CurrSlice.interviewlistXsize
	movw	r0, #:lower16:11162668	@ tmp481,
	movt	r0, #:upper16:11162668	@ tmp481,
	cmp	r7, #0	@ D.38905,
	ldr	r5, [r4, r0]	@ list0idx.5325, <variable>.CurrSlice.listXsize
	beq	.L1666	@,
	add	r6, r5, #2785280	@ tmp483, list0idx.5325,
	cmp	r7, #1	@ D.38905,
	add	ip, r6, #6976	@ tmp483, tmp483,
	sub	lr, r7, #1	@ tmp612, D.38905,
	movw	r3, #:lower16:11152520	@ tmp490,
	movt	r3, #:upper16:11152520	@ tmp490,
	add	ip, r4, ip, asl #2	@, ivtmp.5167, pMvcCtx, tmp483,
	add	r1, r4, r3	@ tmp490, pMvcCtx, tmp490
	and	r2, lr, #1	@ tmp614, tmp612,
	add	r5, r5, #1	@ list0idx.5325, list0idx.5325,
	str	r1, [ip], #4	@ tmp490, <variable>.pListX
	mov	r6, #672	@ tmp582,
	mov	r1, #1	@ i.5298,
	bls	.L1666	@,
	cmp	r2, #0	@ tmp614,
	beq	.L1667	@,
	mov	r1, #2	@ i.5298,
	cmp	r7, r1	@ D.38905, i.5298
	movw	r3, #:lower16:11153192	@ tmp809,
	movt	r3, #:upper16:11153192	@ tmp809,
	add	lr, r4, r3	@ tmp809, pMvcCtx, tmp809
	add	r5, r5, #1	@ list0idx.5325, list0idx.5325,
	str	lr, [ip], #4	@ tmp809, <variable>.pListX
	bls	.L1666	@,
.L1667:
	add	r2, r1, #1	@ tmp617, i.5298,
	movw	lr, #:lower16:11152520	@ tmp762,
	mul	sl, r6, r1	@ tmp760, tmp582, i.5298
	add	r1, r2, #1	@ i.5298, tmp617,
	mul	r0, r6, r2	@ tmp768, tmp582, tmp617
	movt	lr, #:upper16:11152520	@ tmp762,
	cmp	r7, r1	@ D.38905, i.5298
	add	r2, sl, lr	@ tmp762, tmp760, tmp762
	add	r2, r4, r2	@ tmp763, pMvcCtx, tmp762
	add	r5, r5, #2	@ list0idx.5325, list0idx.5325,
	add	lr, r0, lr	@ tmp770, tmp768, tmp770
	mov	r0, ip	@ tmp615, ivtmp.5167
	str	r2, [r0], #4	@ tmp763, <variable>.pListX
	add	r2, r4, lr	@ tmp771, pMvcCtx, tmp770
	str	r2, [ip, #4]	@ tmp771, <variable>.pListX
	add	ip, r0, #4	@ ivtmp.5167, tmp615,
	bhi	.L1667	@,
.L1666:
	movw	r1, #:lower16:11162668	@ tmp491,
	movt	r1, #:upper16:11162668	@ tmp491,
	str	r5, [r4, r1]	@ list0idx.5325, <variable>.CurrSlice.listXsize
.L1668:
	movw	r6, #:lower16:11162624	@ tmp498,
	movt	r6, #:upper16:11162624	@ tmp498,
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ prephitmp.5118, <variable>.CurrSlice.slice_type
	cmp	r5, #1	@ prephitmp.5118,
	beq	.L1669	@,
	movw	r3, #:lower16:11162668	@ tmp499,
	movt	r3, #:upper16:11162668	@ tmp499,
	ldr	r0, [r4, r3]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
	b	.L1623	@
.L1814:
	movw	ip, #:lower16:11162624	@ tmp307,
	movt	ip, #:upper16:11162624	@ tmp307,
	ldrb	r5, [r4, ip]	@ zero_extendqisi2	@ prephitmp.5118, <variable>.CurrSlice.slice_type
	b	.L1623	@
.L1821:
	ldr	ip, [r2, #464]	@ tmp824,
	bic	r1, ip, #-16777216	@ tmp825, tmp824,
	bic	r6, r1, #255	@ tmp825, tmp825,
	cmp	r6, #65536	@ tmp825,
	addeq	r2, r2, #464	@ tmp827, D.38787,
	movweq	r6, #:lower16:2792256	@ tmp826,
	movteq	r6, #:upper16:2792256	@ tmp826,
	moveq	r5, #1	@ list0idx.5326,
	streq	r2, [r4, r6, asl #2]	@ tmp827, <variable>.pListX
	b	.L1728	@
.L1815:
	ldr	sl, [r2, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r8, sl	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r2, r2, #464	@ tmp883, temp.5279,
	movwge	sl, #:lower16:2792256	@ tmp882,
	movtge	sl, #:upper16:2792256	@ tmp882,
	movge	r7, #1	@ list0idx.5259,
	strge	r2, [r4, sl, asl #2]	@ tmp883, <variable>.pListX
	b	.L1761	@
.L1823:
	ldr	r0, [r2, #464]	@ tmp810,
	bic	lr, r0, #-16777216	@ tmp811, tmp810,
	bic	r0, lr, #255	@ tmp811, tmp811,
	cmp	r0, #256	@ tmp811,
	addeq	r0, r5, #2785280	@ tmp812, list0idx.5326,
	addeq	r2, r2, #464	@ tmp813, D.38799,
	addeq	r0, r0, #6976	@ tmp812, tmp812,
	addeq	r5, r5, #1	@ list0idx.5326, list0idx.5326,
	streq	r2, [r4, r0, asl #2]	@ tmp813, <variable>.pListX
	b	.L1721	@
.L1817:
	ldr	r6, [r2, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r1, [r4, lr]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r1, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r6, r7, #2785280	@ tmp865, list0idx.5259,
	addlt	r2, r2, #464	@ tmp866, temp.5284,
	addlt	r6, r6, #6976	@ tmp865, tmp865,
	addlt	r5, r7, #1	@ list0idx.5322, list0idx.5259,
	strlt	r2, [r4, r6, asl #2]	@ tmp866, <variable>.pListX
	b	.L1754	@
.L1819:
	ldrb	r0, [r2, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r0, #1	@ <variable>.frame.is_long_term,
	bne	.L1739	@,
	add	r6, r5, #2785280	@ tmp841, list0idx.5322,
	movw	r0, #:lower16:2792289	@ tmp843,
	movt	r0, #:upper16:2792289	@ tmp843,
	add	lr, r6, #6976	@ tmp841, tmp841,
	add	r6, r5, r0	@ tmp843, list0idx.5322, tmp843
	add	r2, r2, #464	@ tmp842, temp.5291,
	add	r5, r5, #1	@ list0idx.5322, list0idx.5322,
	str	r2, [r4, lr, asl #2]	@ tmp842, <variable>.pListX
	str	r2, [r4, r6, asl #2]	@ tmp842, <variable>.pListX
	b	.L1739	@
.L1818:
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	ip, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r6, r5, #2785280	@ tmp872, list0idx.5322,
	addlt	r1, r1, #464	@ tmp873, temp.5284,
	addlt	r6, r6, #6976	@ tmp872, tmp872,
	addlt	r5, r5, r2	@ list0idx.5322, list0idx.5322,
	strlt	r1, [r4, r6, asl #2]	@ tmp873, <variable>.pListX
	b	.L1756	@
.L1824:
	ldr	lr, [r0, #464]	@ tmp816,
	bic	ip, lr, #-16777216	@ tmp817, tmp816,
	bic	lr, ip, #255	@ tmp817, tmp817,
	cmp	lr, #256	@ tmp817,
	addeq	lr, r5, #2785280	@ tmp818, list0idx.5326,
	addeq	r0, r0, #464	@ tmp819, D.38799,
	addeq	lr, lr, #6976	@ tmp818, tmp818,
	addeq	r5, r5, r2	@ list0idx.5326, list0idx.5326,
	streq	r0, [r4, lr, asl #2]	@ tmp819, <variable>.pListX
	b	.L1723	@
.L1820:
	ldrb	lr, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, r2	@ <variable>.frame.is_long_term,
	bne	.L1741	@,
	add	r6, r5, #2785280	@ tmp847, list0idx.5322,
	movw	ip, #:lower16:2792289	@ tmp849,
	movt	ip, #:upper16:2792289	@ tmp849,
	add	lr, r6, #6976	@ tmp847, tmp847,
	add	r6, r5, ip	@ tmp849, list0idx.5322, tmp849
	add	r0, r0, #464	@ tmp848, temp.5291,
	add	r5, r5, r2	@ list0idx.5322, list0idx.5322,
	str	r0, [r4, lr, asl #2]	@ tmp848, <variable>.pListX
	str	r0, [r4, r6, asl #2]	@ tmp848, <variable>.pListX
	b	.L1741	@
.L1822:
	ldr	r0, [r1, #464]	@ tmp830,
	bic	ip, r0, #-16777216	@ tmp831, tmp830,
	bic	r6, ip, #255	@ tmp831, tmp831,
	cmp	r6, #65536	@ tmp831,
	addeq	r6, r5, #2785280	@ tmp832, list0idx.5326,
	addeq	r1, r1, #464	@ tmp833, D.38787,
	addeq	r6, r6, #6976	@ tmp832, tmp832,
	addeq	r5, r5, r2	@ list0idx.5326, list0idx.5326,
	streq	r1, [r4, r6, asl #2]	@ tmp833, <variable>.pListX
	b	.L1730	@
.L1816:
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	ip, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r6, r7, #2785280	@ tmp889, list0idx.5259,
	addge	r1, r1, #464	@ tmp890, temp.5279,
	addge	r6, r6, #6976	@ tmp889, tmp889,
	addge	r7, r7, r2	@ list0idx.5259, list0idx.5259,
	strge	r1, [r4, r6, asl #2]	@ tmp890, <variable>.pListX
	b	.L1763	@
.L1665:
	add	r6, r4, #11141120	@, pMvcCtx,
	ldr	r2, [r4, r5]	@ <variable>.CurrSlice.interviewlistXsize, <variable>.CurrSlice.interviewlistXsize
	add	r3, r6, #27904	@,,
	movw	ip, #:lower16:11162668	@ tmp497,
	mov	r1, r8	@, D.38900
	movt	ip, #:upper16:11162668	@ tmp497,
	add	r5, r4, ip	@ tmp497, pMvcCtx, tmp497
	str	r5, [sp, #0]	@ tmp497,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	b	.L1668	@
.L1625:
	movw	r2, #:lower16:11196640	@ tmp316,
	movt	r2, #:upper16:11196640	@ tmp316,
	movw	r5, #:lower16:11169024	@ tmp315,
	movt	r5, #:upper16:11169024	@ tmp315,
	ldr	r0, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	cmp	r3, #1	@ temp.5275,
	addeq	r0, r0, #504	@ tmp318, <variable>.CurrPic.frame_store,
	addne	r0, r0, #544	@ tmp322, <variable>.CurrPic.frame_store,
	str	r0, [r4, r5]	@ tmp322, <variable>.pListX
	b	.L1626	@
.L1669:
	add	r8, r8, #1344	@ D.38909, D.38900,
	movw	r7, #:lower16:11164300	@,
	movt	r7, #:upper16:11164300	@,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, r7	@, pMvcCtx,
	mov	r2, r8	@, D.38909
	mov	r1, r5	@, prephitmp.5118
	movw	r7, #:lower16:11164300	@ tmp501,
	bl	mvc_append_interview_list	@
	movw	r2, #:lower16:11196171	@ tmp502,
	movt	r2, #:upper16:11196171	@ tmp502,
	movt	r7, #:upper16:11164300	@ tmp501,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ temp.5335, <variable>.CurrPic.structure
	cmp	r0, #0	@ temp.5335,
	bne	.L1670	@,
	ldr	r7, [r4, r7]	@ D.38779, <variable>.CurrSlice.interviewlistXsize
	movw	r0, #:lower16:11162672	@ tmp503,
	movt	r0, #:upper16:11162672	@ tmp503,
	cmp	r7, #0	@ D.38779,
	ldr	ip, [r4, r0]	@ list0idx.5273, <variable>.CurrSlice.listXsize
	beq	.L1671	@,
	add	r0, ip, #2785280	@ tmp505, list0idx.5273,
	cmp	r7, #1	@ D.38779,
	add	r2, r0, #6976	@ tmp505, tmp505,
	sub	r6, r7, #1	@ tmp606, D.38779,
	movw	r3, #:lower16:11153864	@ tmp512,
	movt	r3, #:upper16:11153864	@ tmp512,
	add	lr, r4, r2, asl #2	@, ivtmp.5162, pMvcCtx, tmp505,
	add	r1, r4, r3	@ tmp512, pMvcCtx, tmp512
	and	r0, r6, #1	@ tmp608, tmp606,
	add	ip, ip, #1	@ list0idx.5273, list0idx.5273,
	str	r1, [lr, #132]	@ tmp512, <variable>.pListX
	mov	r6, #672	@ tmp580,
	add	r1, lr, #4	@ ivtmp.5162, ivtmp.5162,
	bls	.L1671	@,
	cmp	r0, #0	@ tmp608,
	beq	.L1672	@,
	cmp	r7, #2	@ D.38779,
	movw	r0, #:lower16:11154536	@ tmp804,
	movt	r0, #:upper16:11154536	@ tmp804,
	add	ip, ip, #1	@ list0idx.5273, list0idx.5273,
	add	r5, r4, r0	@ tmp804, pMvcCtx, tmp804
	str	r5, [r1, #132]	@ tmp804, <variable>.pListX
	add	r1, r1, #4	@ ivtmp.5162, ivtmp.5162,
	mov	r5, #2	@ i.5263,
	bls	.L1671	@,
.L1672:
	add	r0, r5, #1	@ tmp610, i.5263,
	add	lr, r1, #4	@ tmp611, ivtmp.5162,
	mul	sl, r6, r5	@ tmp775, tmp580, i.5263
	add	r5, r0, #1	@ i.5263, tmp610,
	mul	r8, r6, r0	@ tmp783, tmp580, tmp610
	movw	r2, #:lower16:11153864	@ tmp777,
	cmp	r7, r5	@ D.38779, i.5263
	movt	r2, #:upper16:11153864	@ tmp777,
	add	r0, sl, r2	@ tmp777, tmp775, tmp777
	add	ip, ip, #2	@ list0idx.5273, list0idx.5273,
	add	r3, r8, r2	@ tmp785, tmp783, tmp785
	add	r2, r4, r0	@ tmp778, pMvcCtx, tmp777
	str	r2, [r1, #132]	@ tmp778, <variable>.pListX
	add	r1, r4, r3	@ tmp786, pMvcCtx, tmp785
	str	r1, [lr, #132]	@ tmp786, <variable>.pListX
	add	r1, lr, #4	@ ivtmp.5162, tmp611,
	bhi	.L1672	@,
.L1671:
	movw	r5, #:lower16:11162672	@ tmp513,
	movw	r3, #:lower16:11162624	@ tmp514,
	movt	r5, #:upper16:11162672	@ tmp513,
	movt	r3, #:upper16:11162624	@ tmp514,
	movw	lr, #:lower16:11162668	@ tmp515,
	movt	lr, #:upper16:11162668	@ tmp515,
	str	ip, [r4, r5]	@ list0idx.5273, <variable>.CurrSlice.listXsize
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ prephitmp.5118, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, lr]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
	b	.L1623	@
.L1808:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.38840,
	b	.L1629	@
.L1670:
	movw	r3, #:lower16:11169156	@,
	movt	r3, #:upper16:11169156	@,
	ldr	r2, [r4, r7]	@, <variable>.CurrSlice.interviewlistXsize
	mov	r1, r8	@, D.38909
	add	r3, r4, r3	@, pMvcCtx,
	movw	r5, #:lower16:11162672	@ tmp521,
	movt	r5, #:upper16:11162672	@ tmp521,
	add	lr, r4, r5	@ tmp521, pMvcCtx, tmp521
	str	lr, [sp, #0]	@ tmp521,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	movw	ip, #:lower16:11162668	@ tmp523,
	movt	ip, #:upper16:11162668	@ tmp523,
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ prephitmp.5118, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, ip]	@ prephitmp.5274, <variable>.CurrSlice.listXsize
	b	.L1623	@
	.fnend
	.size	MVC_InitListX, .-MVC_InitListX
	.align	2
	.global	MVC_DecList
	.type	MVC_DecList, %function
MVC_DecList:
	.fnstart
.LFB1695:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11168616	@ tmp148,
	movt	r1, #:upper16:11168616	@ tmp148,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	r5, #0	@ nearest_pic_id,
	beq	.L1838	@,
	movw	r2, #:lower16:11168612	@ tmp151,
	movt	r2, #:upper16:11168612	@ tmp151,
	movw	r0, #:lower16:11196660	@ tmp150,
	movt	r0, #:upper16:11196660	@ tmp150,
	ldr	r6, [r4, r2]	@ D.44903, <variable>.DPB.size
	ldr	ip, [r4, r0]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r6, #0	@ D.44903,
	moveq	r5, r6	@ nearest_pic_id, D.44903
	beq	.L1838	@,
	mov	r6, r6, asl #2	@ D.49749, D.44903,
	mov	r5, #0	@ nearest_pic_id,
	tst	r6, #4	@ D.49749,
	mov	r2, r5	@ ivtmp.5390, nearest_pic_id
	mvn	r0, #-2147483648	@ nearest_poc_diff,
	bne	.L1841	@,
	movw	r2, #:lower16:11168420	@ tmp186,
	movt	r2, #:upper16:11168420	@ tmp186,
	add	r1, r4, r2	@ tmp186, pMvcCtx, tmp186
	ldr	r2, [r1, #0]	@ D.44907, <variable>.DPB.fs
	cmp	r2, #0	@ D.44907,
	beq	.L1850	@,
	ldr	r3, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, ip	@ tmp190, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp190,
	rsblt	r3, r3, #0	@ nearest_poc_diff.5393, tmp190
	cmp	r0, r3	@ nearest_poc_diff, nearest_poc_diff.5393
	ble	.L1850	@,
	ldr	r5, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1858:
	mov	r0, r3	@ nearest_poc_diff, nearest_poc_diff.5393
	mov	r2, #4	@ ivtmp.5390,
.L1841:
	add	r1, r4, r2	@ tmp152, pMvcCtx, ivtmp.5390
	movw	r3, #:lower16:11168420	@ tmp153,
	movt	r3, #:upper16:11168420	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.44907, <variable>.DPB.fs
	cmp	r3, #0	@ D.44907,
	beq	.L1839	@,
.L1860:
	ldr	r1, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, ip	@ tmp155, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp155,
	rsblt	r1, r1, #0	@ nearest_poc_diff.5393, tmp155
	cmp	r0, r1	@ nearest_poc_diff, nearest_poc_diff.5393
	ldrgt	r5, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	ble	.L1839	@,
	add	r2, r2, #4	@ tmp177, ivtmp.5390,
	cmp	r2, r6	@ tmp177, D.49749
	beq	.L1838	@,
.L1861:
	add	r0, r4, r2	@ tmp180, pMvcCtx, tmp177
	movw	r3, #:lower16:11168420	@ tmp182,
	movt	r3, #:upper16:11168420	@ tmp182,
	add	r3, r0, r3	@ tmp182, tmp180, tmp182
	ldr	r0, [r3, #0]	@ D.44907, <variable>.DPB.fs
	cmp	r0, #0	@ D.44907,
	beq	.L1852	@,
	ldr	r3, [r0, #600]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, ip	@ tmp193, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp193,
	rsblt	r3, r3, #0	@ nearest_poc_diff.5393, tmp193
	cmp	r1, r3	@ nearest_poc_diff.5393, nearest_poc_diff.5393
	ble	.L1852	@,
	ldr	r5, [r0, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1859:
	add	r2, r2, #4	@ ivtmp.5390, tmp177,
	mov	r0, r3	@ nearest_poc_diff, nearest_poc_diff.5393
	add	r1, r4, r2	@ tmp152, pMvcCtx, ivtmp.5390
	movw	r3, #:lower16:11168420	@ tmp153,
	movt	r3, #:upper16:11168420	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.44907, <variable>.DPB.fs
	cmp	r3, #0	@ D.44907,
	bne	.L1860	@,
.L1839:
	add	r2, r2, #4	@ tmp177, ivtmp.5390,
	mov	r1, r0	@ nearest_poc_diff.5393, nearest_poc_diff
	cmp	r2, r6	@ tmp177, D.49749
	bne	.L1861	@,
.L1838:
	movw	r3, #:lower16:11162624	@ tmp160,
	movt	r3, #:upper16:11162624	@ tmp160,
	movw	r2, #:lower16:11164256	@ tmp157,
	movw	ip, #:lower16:11164252	@ tmp158,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movt	r2, #:upper16:11164256	@ tmp157,
	movt	ip, #:upper16:11164252	@ tmp158,
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	str	r5, [r4, r2]	@ nearest_pic_id, <variable>.CurrSlice.picid_nearpoc
	mvn	r5, #0	@ tmp159,
	str	r5, [r4, ip]	@ tmp159, <variable>.CurrSlice.picid_refidx0
	beq	.L1862	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitListX	@
	cmp	r0, #0	@,
	beq	.L1844	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@ D.39027, tmp159
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1844:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ReorderListX	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_RepairList	@
	cmp	r0, #0	@,
	movne	r0, r5	@ D.39027, tmp159
	ldmnefd	sp!, {r4, r5, r6, pc}	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_FindMinRefIdx	@
	movw	r3, #:lower16:11169024	@ tmp166,
	movt	r3, #:upper16:11169024	@ tmp166,
	movw	r2, #:lower16:11164252	@ tmp168,
	movt	r2, #:upper16:11164252	@ tmp168,
	ldr	r0, [r4, r3]	@ D.39035, <variable>.pListX
	cmp	r0, #0	@ D.39035,
	ldrne	r0, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrne	r5, [r0, #184]	@ iftmp.630, <variable>.fs_image.image_id
	mov	r0, #0	@ D.39027,
	str	r5, [r4, r2]	@ iftmp.630, <variable>.CurrSlice.picid_refidx0
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1852:
	mov	r3, r1	@ nearest_poc_diff.5393, nearest_poc_diff.5393
	b	.L1859	@
.L1862:
	movw	r1, #:lower16:11162668	@ tmp162,
	movw	ip, #:lower16:11162672	@ tmp164,
	movt	r1, #:upper16:11162668	@ tmp162,
	movt	ip, #:upper16:11162672	@ tmp164,
	mov	r0, #0	@ tmp163,
	str	r0, [r4, r1]	@ tmp163, <variable>.CurrSlice.listXsize
	str	r0, [r4, ip]	@ tmp163, <variable>.CurrSlice.listXsize
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L1850:
	mvn	r3, #-2147483648	@ nearest_poc_diff.5393,
	b	.L1858	@
	.fnend
	.size	MVC_DecList, .-MVC_DecList
	.align	2
	.global	MVC_ArrangeVahbMem
	.type	MVC_ArrangeVahbMem, %function
MVC_ArrangeVahbMem:
	.fnstart
.LFB1664:
	@ args = 4, pretend = 0, frame = 40
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}	@,
	.save {r4, r5, r6, r7, lr}
	.pad #44
	sub	sp, sp, #44	@,,
	mov	r5, r1	@ ImgWidth, ImgWidth
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r1, #36	@,
	mov	r0, sp	@,
	mov	r6, r2	@ ImgHeight, ImgHeight
	bl	__memzero	@
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r3, #0	@ tmp151,
	mov	r1, #0	@ tmp162,
	mov	r2, #5	@ tmp164,
	mov	r7, sp	@ tmp183,
	ldr	r0, [ip, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	strb	r3, [sp, #1]	@ tmp151, FspInstCfg.s32TfEnable
	strb	r3, [sp, #2]	@ tmp151, FspInstCfg.s32RprEnable
	str	r6, [sp, #32]	@ ImgHeight, FspInstCfg.s32DispFsHeight
	str	r6, [sp, #16]	@ ImgHeight, FspInstCfg.s32DecFsHeight
	str	r6, [sp, #24]	@ ImgHeight, FspInstCfg.s32TfFsHeight
	movw	r6, #:lower16:11199520	@ tmp173,
	str	r5, [sp, #28]	@ ImgWidth, FspInstCfg.s32DispFsWidth
	movt	r6, #:upper16:11199520	@ tmp173,
	strb	r0, [sp, #0]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	str	r5, [sp, #12]	@ ImgWidth, FspInstCfg.s32DecFsWidth
	str	r5, [sp, #20]	@ ImgWidth, FspInstCfg.s32TfFsWidth
	ldr	r5, [ip, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r5, #24	@ <variable>.eCapLevel,
	mov	r5, #1	@ tmp171,
	movwne	r3, #:lower16:11168612	@ tmp157,
	movtne	r3, #:upper16:11168612	@ tmp157,
	ldrne	r3, [r4, r3]	@ <variable>.DPB.size, <variable>.DPB.size
	strb	r1, [sp, #6]	@ tmp162, FspInstCfg.s32ExpectedTfFsNum
	mov	r1, sp	@,
	addne	r3, r3, #3	@ tmp160, <variable>.DPB.size,
	strb	r2, [sp, #7]	@ tmp164, FspInstCfg.s32ExpectedDispFsNum
	uxtbne	r3, r3	@ iftmp.558, tmp160
	strb	r3, [sp, #5]	@ iftmp.558, FspInstCfg.s32ExpectedDecFsNum
	ldr	r0, [ip, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	mov	r3, #0	@ tmp169,
	cmp	r0, #24	@ <variable>.eCapLevel,
	ldrneb	r0, [sp, #64]	@ zero_extendqisi2	@ iftmp.559, PmvBlkNum
	moveq	r0, #1	@ iftmp.559,
	strb	r0, [sp, #8]	@ iftmp.559, FspInstCfg.s32ExpectedPmvNum
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	strb	r3, [sp, #4]	@ tmp169, FspInstCfg.s32UserDec
	strb	r5, [sp, #3]	@ tmp171, FspInstCfg.s8SubLevelEnable
	bl	FSP_ConfigInstance	@
	cmp	r0, #0	@,
	bne	.L1868	@,
	ldr	lr, [r4, #0]	@ temp.5421, <variable>.pstExtraData
	add	r3, sp, #36	@,,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, #0	@,
	moveq	r0, r5	@ D.37812, tmp171
	bne	.L1868	@,
.L1870:
	add	sp, sp, #44	@,,
	ldmfd	sp!, {r4, r5, r6, r7, pc}
.L1868:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #19	@ D.37812,
	b	.L1870	@
	.fnend
	.size	MVC_ArrangeVahbMem, .-MVC_ArrangeVahbMem
	.align	2
	.global	MVC_GetImagePara
	.type	MVC_GetImagePara, %function
MVC_GetImagePara:
	.fnstart
.LFB1644:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, sl, lr}
	movw	ip, #:lower16:11155244	@ tmp163,
	movw	r4, #:lower16:11162632	@ tmp161,
	movt	ip, #:upper16:11155244	@ tmp163,
	movt	r4, #:upper16:11162632	@ tmp161,
	mov	r5, #2240	@ tmp165,
	ldr	lr, [r0, ip]	@ <variable>.PPS, <variable>.PPS
	movw	ip, #:lower16:11155240	@ tmp159,
	ldr	r2, [r0, r4]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	ip, #:upper16:11155240	@ tmp159,
	ldr	r3, [r1, #148]	@ prephitmp.5441, <variable>.fs_image.format
	mov	r4, r1	@ pFrameStore, pFrameStore
	movw	r1, #:lower16:11198020	@ tmp173,
	movt	r1, #:upper16:11198020	@ tmp173,
	mla	r2, r5, r2, lr	@ tmp166, tmp165, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	bic	r3, r3, #768	@ prephitmp.5441, prephitmp.5441,
	ldr	lr, [r0, ip]	@ <variable>.SPS, <variable>.SPS
	bic	r3, r3, #3	@ prephitmp.5441, prephitmp.5441,
	ldrb	ip, [r4, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	movw	r5, #3992	@ tmp169,
	.pad #12
	sub	sp, sp, #12	@,,
	ldr	r2, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	str	r3, [r4, #148]	@ prephitmp.5441, <variable>.fs_image.format
	ldr	r1, [r0, r1]	@ <variable>.frame_rate, <variable>.frame_rate
	mla	r2, r5, r2, lr	@ sps, tmp169, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	r1, r1, asl #10	@ tmp175, <variable>.frame_rate,
	str	r1, [r4, #176]	@ tmp175, <variable>.fs_image.frame_rate
	cmp	ip, #3	@ <variable>.is_used,
	ldrls	pc, [pc, ip, asl #2]	@ <variable>.is_used
	b	.L1873	@
.L1877:
	.word	.L1874
	.word	.L1875
	.word	.L1876
	.word	.L1874
.L1874:
	ldrb	r6, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r6, #0	@ <variable>.frame.structure,
	bne	.L1878	@,
	ldr	r6, [r4, #616]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	mov	r5, #3072	@ prephitmp.5475,
	ldr	r7, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	cmp	r6, #0	@ <variable>.MbaffFrameFlag,
	ldr	lr, [r4, #620]	@ pic_type, <variable>.pic_type
	moveq	r6, #512	@ prephitmp.5476,
	movne	r6, #768	@ prephitmp.5476,
	str	r7, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1880:
	ldr	r7, [r4, #520]	@ D.36489, <variable>.top_field.poc
	ldr	r1, [r4, #560]	@ D.36490, <variable>.bottom_field.poc
	cmp	r7, r1	@ D.36489, D.36490
	beq	.L1910	@,
	movgt	r7, #0	@, top_field_first
	movle	r7, #1	@, top_field_first
.L1891:
	movw	r1, #:lower16:11168408	@ tmp191,
	movt	r1, #:upper16:11168408	@ tmp191,
	ldrb	r1, [r0, r1]	@ zero_extendqisi2	@ D.36504, <variable>.PicTimingSEI.pic_struct
	cmp	r1, #3	@ D.36504,
	moveq	r7, #4096	@ prephitmp.5445,
	beq	.L1893	@,
	cmp	r1, #4	@ D.36504,
	movne	r7, r7, asl #12	@ prephitmp.5445, top_field_first,
	moveq	r7, #0	@ prephitmp.5445,
.L1893:
	orr	r1, r6, r5	@ tmp192, prephitmp.5476, prephitmp.5475
	bic	r5, r3, #12288	@ tmp193, prephitmp.5441,
	orr	r3, r1, r5	@ tmp194, tmp192, tmp193
	and	r1, lr, #3	@ tmp195, pic_type,
	orr	r5, r3, r1	@ tmp196, tmp194, tmp195
	orr	r3, r5, r7	@ tmp197, tmp196, prephitmp.5445
	str	r3, [r4, #148]	@ tmp197, <variable>.fs_image.format
.L1873:
	ldrb	r1, [r2, #20]	@ zero_extendqisi2	@ D.36529, <variable>.frame_mbs_only_flag
	movw	r5, #:lower16:11164276	@ tmp210,
	movt	r5, #:upper16:11164276	@ tmp210,
	mov	lr, #1	@ tmp209,
	str	r1, [r4, #444]	@ D.36529, <variable>.fs_image.optm_inf.IsProgressiveFrm
	str	r1, [r4, #440]	@ D.36529, <variable>.fs_image.optm_inf.IsProgressiveSeq
	ldrb	r3, [r2, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r3, #0	@ <variable>.vui_parameters_present_flag,
	ldrne	r2, [r2, #68]	@ iftmp.466, <variable>.vui_seq_parameters.matrix_coefficients
	moveq	r2, r3	@ iftmp.466, <variable>.vui_parameters_present_flag
	str	lr, [r4, #448]	@ tmp209, <variable>.fs_image.optm_inf.RealFrmRate
	str	r2, [r4, #452]	@ iftmp.466, <variable>.fs_image.optm_inf.MatrixCoef
	ldr	r1, [r0, r5]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r1, lr	@ <variable>.CurrSlice.mvcinfo_flag,
	movne	r1, #0	@ tmp213,
	str	r1, [r4, #236]	@ tmp213, <variable>.fs_image.is_3D
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r3, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L1899	@,
	ldrb	r3, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r3, #0	@ <variable>.frame.structure,
	beq	.L1911	@,
.L1899:
	movw	r2, #:lower16:11168372	@ tmp220,
	movt	r2, #:upper16:11168372	@ tmp220,
	ldrsb	ip, [r0, r2]	@ <variable>.FramePackSEI.frame_packing_dec_ok, <variable>.FramePackSEI.frame_packing_dec_ok
	cmp	ip, #0	@ <variable>.FramePackSEI.frame_packing_dec_ok,
	beq	.L1900	@,
	movw	lr, #:lower16:11168388	@ tmp222,
	movt	lr, #:upper16:11168388	@ tmp222,
	ldr	r3, [r0, lr]	@ D.36552, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	r3, #3	@ D.36552,
	moveq	r3, #1	@ tmp223,
	streq	r3, [r4, #324]	@ tmp223, <variable>.fs_image.eFramePackingType
	beq	.L1900	@,
	cmp	r3, #4	@ D.36552,
	moveq	r3, #2	@ tmp224,
	streq	r3, [r4, #324]	@ tmp224, <variable>.fs_image.eFramePackingType
	beq	.L1900	@,
	cmp	r3, #5	@ D.36552,
	moveq	r3, #3	@ tmp225,
	streq	r3, [r4, #324]	@ tmp225, <variable>.fs_image.eFramePackingType
	beq	.L1900	@,
	mov	r5, #0	@ tmp226,
	str	r5, [r4, #324]	@ tmp226, <variable>.fs_image.eFramePackingType
	str	r0, [sp, #4]	@,
	bl	vfmw_dprint_nothing	@
	ldr	r0, [sp, #4]	@,
.L1900:
	movw	r3, #:lower16:11199520	@ tmp227,
	movt	r3, #:upper16:11199520	@ tmp227,
	ldr	r1, [r4, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pstLogicFsImage,
	beq	.L1907	@,
	add	r1, r4, #8	@, pFrameStore,
	mov	r2, #456	@,
	bl	memcpy	@
	mov	r2, #15	@ tmp235,
	str	r2, [r5, #336]	@ tmp235, <variable>.ImageDnr.video_standard
	mov	r1, #1	@ tmp238,
	ldrb	ip, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r1, [r5, #331]	@ tmp238, <variable>.ImageDnr.use_pic_qp_en
	cmp	ip, #0	@ <variable>.frame.structure,
	movne	ip, #4	@, iftmp.468,
	strb	ip, [r5, #324]	@ iftmp.468, <variable>.ImageDnr.pic_structure
	ldr	r0, [r4, #496]	@ D.36572, <variable>.frame.MaxQp
	strb	r1, [r5, #329]	@ tmp238, <variable>.ImageDnr.chroma_format_idc
	str	r0, [r5, #344]	@ D.36572, <variable>.ImageDnr.QP_U
	str	r0, [r5, #340]	@ D.36572, <variable>.ImageDnr.QP_Y
	str	r0, [r5, #348]	@ D.36572, <variable>.ImageDnr.QP_V
.L1907:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, sl, pc}
.L1911:
	cmp	ip, #3	@ <variable>.is_used,
	ldreq	r3, [r4, #148]	@ <variable>.fs_image.format, <variable>.fs_image.format
	biceq	r3, r3, #768	@ tmp219, <variable>.fs_image.format,
	streq	r3, [r4, #148]	@ tmp219, <variable>.fs_image.format
	b	.L1899	@
.L1876:
	ldr	lr, [r4, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r5, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	and	r1, lr, #3	@ tmp198, <variable>.pic_type,
	orr	r3, r3, r1	@ tmp200, prephitmp.5441, tmp198
	orr	lr, r3, #2816	@ tmp201, tmp200,
	str	r5, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
	str	lr, [r4, #148]	@ tmp201, <variable>.fs_image.format
	b	.L1873	@
.L1875:
	ldr	r5, [r4, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r1, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	and	lr, r5, #3	@ tmp203, <variable>.pic_type,
	orr	r5, r3, lr	@ tmp205, prephitmp.5441, tmp203
	orr	r3, r5, #1792	@ tmp206, tmp205,
	str	r1, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
	str	r3, [r4, #148]	@ tmp206, <variable>.fs_image.format
	b	.L1873	@
.L1878:
	movw	sl, #:lower16:11199516	@ tmp180,
	movt	sl, #:upper16:11199516	@ tmp180,
	ldr	r8, [r4, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldr	r1, [r0, sl]	@ D.36473, <variable>.out_error_thr
	cmp	r8, r1	@ <variable>.top_field.err_level, D.36473
	bhi	.L1912	@,
	ldr	sl, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, sl	@ D.36473, <variable>.bottom_field.err_level
	bcc	.L1884	@,
.L1882:
	ldr	r6, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	mov	r5, #3	@ valid_field,
	ldr	lr, [r4, #620]	@ pic_type, <variable>.pic_type
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	r7, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
	str	r6, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1885:
	ldrb	r6, [r4, #3]	@ zero_extendqisi2	@ D.36481, <variable>.mode_skip_flag
	cmp	r6, #1	@ D.36481,
	streq	sl, [r4, #188]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	moveq	lr, r1	@ pic_type, <variable>.bottom_field.pic_type
	moveq	r5, #2	@ valid_field,
	beq	.L1887	@,
	cmp	r6, #2	@ D.36481,
	streq	r8, [r4, #188]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	moveq	lr, r7	@ pic_type, pic_type
	moveq	r5, #1	@ valid_field,
.L1887:
	mov	r5, r5, asl #10	@ prephitmp.5475, valid_field,
	mov	r6, #768	@ prephitmp.5476,
	str	r7, [r4, #140]	@ pic_type, <variable>.fs_image.top_fld_type
	str	r1, [r4, #144]	@ <variable>.bottom_field.pic_type, <variable>.fs_image.bottom_fld_type
	b	.L1880	@
.L1884:
	ldr	r7, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
	mov	r5, #1	@ valid_field,
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	r8, [r4, #188]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	mov	lr, r7	@ pic_type, pic_type
	b	.L1885	@
.L1910:
	ldr	r1, [r4, #152]	@ <variable>.fs_image.image_width, <variable>.fs_image.image_width
	cmp	r1, #720	@ <variable>.fs_image.image_width,
	movne	r7, #1	@ top_field_first,
	bne	.L1891	@,
	ldr	r7, [r4, #156]	@ <variable>.fs_image.image_height, <variable>.fs_image.image_height
	subs	r7, r7, #480	@ top_field_first, <variable>.fs_image.image_height,
	movne	r7, #1	@ top_field_first
	b	.L1891	@
.L1912:
	ldr	sl, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, sl	@ D.36473, <variable>.bottom_field.err_level
	bcc	.L1882	@,
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	mov	r5, #2	@ valid_field,
	str	sl, [r4, #188]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	ldr	r7, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
	mov	lr, r1	@ pic_type, <variable>.bottom_field.pic_type
	b	.L1885	@
	.fnend
	.size	MVC_GetImagePara, .-MVC_GetImagePara
	.align	2
	.global	MVC_RemoveFrameStoreOutDPB
	.type	MVC_RemoveFrameStoreOutDPB, %function
MVC_RemoveFrameStoreOutDPB:
	.fnstart
.LFB1640:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:2792104	@ tmp139,
	movt	r2, #:upper16:2792104	@ tmp139,
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	mov	r5, r1	@ pos, pos
	add	r1, r1, r2	@ tmp139, pos, tmp139
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r3, r0, r1, asl #2	@, tmp143, pMvcCtx, tmp139,
	ldr	r3, [r3, #4]	@ D.36277, <variable>.DPB.fs
	cmp	r3, #0	@ D.36277,
	ldmeqfd	sp!, {r3, r4, r5, r6, r7, pc}	@
	movw	r6, #:lower16:2792104	@ tmp153,
	movt	r6, #:upper16:2792104	@ tmp153,
	add	r7, r5, r6	@ tmp153, pos, tmp153
	ldr	lr, [r3, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	movw	r2, #:lower16:11168892	@ tmp149,
	movt	r2, #:upper16:11168892	@ tmp149,
	add	r7, r4, r7, asl #2	@, tmp158, pMvcCtx, tmp153,
	movw	ip, #:lower16:2792158	@ tmp145,
	movt	ip, #:upper16:2792158	@ tmp145,
	ldr	r0, [r0, r2]	@ D.36282, <variable>.APC.used_size
	add	r3, lr, ip	@ tmp145, <variable>.apc_idc, tmp145
	ldr	ip, [r7, #4]	@ tmp155, <variable>.DPB.fs
	movw	lr, #:lower16:11168892	@ tmp150,
	movw	r6, #:lower16:11199520	@ tmp151,
	movt	lr, #:upper16:11168892	@ tmp150,
	movt	r6, #:upper16:11199520	@ tmp151,
	cmp	r0, #0	@ D.36282,
	mov	r1, #0	@ tmp148,
	subne	r0, r0, #1	@ iftmp.457, D.36282,
	str	r1, [r4, r3, asl #2]	@ tmp148, <variable>.APC.is_used
	str	r0, [r4, lr]	@ iftmp.457, <variable>.APC.used_size
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogic
	beq	.L1917	@,
	ldrsb	r1, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r1, #3	@ <variable>.s32DispState,
	beq	.L1918	@,
	ldr	r3, [r7, #4]	@ tmp166, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L1918:
	movw	r2, #:lower16:2792104	@ tmp174,
	movt	r2, #:upper16:2792104	@ tmp174,
	add	r0, r5, r2	@ tmp174, pos, tmp174
	movw	r1, #:lower16:11199520	@ tmp172,
	movt	r1, #:upper16:11199520	@ tmp172,
	mov	r2, #0	@,
	add	lr, r4, r0, asl #2	@, tmp179, pMvcCtx, tmp174,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	ip, [lr, #4]	@ tmp176, <variable>.DPB.fs
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
.L1917:
	movw	ip, #:lower16:2792104	@ tmp182,
	movt	ip, #:upper16:2792104	@ tmp182,
	add	r3, r5, ip	@ tmp182, pos, tmp182
	mov	r1, #0	@ tmp189,
	movw	ip, #:lower16:11168616	@ tmp216,
	movt	ip, #:upper16:11168616	@ tmp216,
	add	r2, r4, r3, asl #2	@, tmp187, pMvcCtx, tmp182,
	ldr	r0, [r2, #4]	@ tmp184, <variable>.DPB.fs
	strb	r1, [r0, #1]	@ tmp189, <variable>.is_used
	ldr	lr, [r2, #4]	@ tmp193, <variable>.DPB.fs
	strb	r1, [lr, #4]	@ tmp189, <variable>.is_in_dpb
	ldr	r0, [r2, #4]	@ tmp202, <variable>.DPB.fs
	strb	r1, [r0, #2]	@ tmp189, <variable>.is_reference
	ldr	lr, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r1, [r2, #4]	@ tmp189, <variable>.DPB.fs
	sub	r3, lr, #1	@ tmp219, <variable>.DPB.used_size,
	str	r3, [r4, ip]	@ tmp219, <variable>.DPB.used_size
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
	.fnend
	.size	MVC_RemoveFrameStoreOutDPB, .-MVC_RemoveFrameStoreOutDPB
	.align	2
	.global	MVC_RemoveUnUsedFrameStore
	.type	MVC_RemoveUnUsedFrameStore, %function
MVC_RemoveUnUsedFrameStore:
	.fnstart
.LFB1641:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	movw	r3, #:lower16:11168612	@ tmp140,
	movt	r3, #:upper16:11168612	@ tmp140,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	mov	r7, r1	@ CurrViewId, CurrViewId
	ldr	r6, [r0, r3]	@ k, <variable>.DPB.size
	cmp	r6, #0	@ k,
	beq	.L1921	@,
	movw	r4, #:lower16:11168420	@ ivtmp.5542,
	movt	r4, #:upper16:11168420	@ ivtmp.5542,
	add	r4, r0, r4	@ ivtmp.5542, pMvcCtx, ivtmp.5542
	sub	sl, r6, #1	@ tmp156, k,
	and	sl, sl, #1	@ tmp158, tmp156,
	ldr	r3, [r4, #0]	@ D.36308, <variable>.DPB.fs
	cmp	r3, #0	@ D.36308,
	beq	.L1926	@,
	ldrb	r5, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #0	@ <variable>.is_reference,
	beq	.L1937	@,
.L1926:
	mov	r5, #1	@ j,
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.5542, ivtmp.5542,
	bls	.L1921	@,
	cmp	sl, #0	@ tmp158,
	beq	.L1923	@,
	ldr	r3, [r4, #0]	@ D.36308, <variable>.DPB.fs
	cmp	r3, #0	@ D.36308,
	beq	.L1931	@,
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L1938	@,
.L1931:
	add	r5, r5, #1	@ j, tmp160,
	add	r4, r4, #4	@ ivtmp.5542, tmp159,
	cmp	r6, r5	@ k, j
	bls	.L1921	@,
.L1923:
	ldr	r3, [r4, #0]	@ D.36308, <variable>.DPB.fs
	cmp	r3, #0	@ D.36308,
	beq	.L1922	@,
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1922	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1922	@,
	ldr	r1, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L1922	@,
	ldr	r0, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1922	@,
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	mov	r1, r5	@, j
	bl	MVC_RemoveFrameStoreOutDPB	@
.L1922:
	ldr	r3, [r4, #4]	@ D.36308, <variable>.DPB.fs
	add	r5, r5, #1	@ tmp160, j,
	add	r4, r4, #4	@ tmp159, ivtmp.5542,
	cmp	r3, #0	@ D.36308,
	beq	.L1931	@,
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1931	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1931	@,
	ldr	r1, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L1931	@,
	ldr	r0, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1931	@,
.L1936:
	mov	r1, r5	@, tmp160
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	add	r5, r5, #1	@ j, tmp160,
	bl	MVC_RemoveFrameStoreOutDPB	@
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.5542, tmp159,
	bhi	.L1923	@,
.L1921:
	mov	r0, #0	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L1937:
	ldrb	r1, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #0	@ <variable>.is_in_dpb,
	bne	.L1926	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	ip, r7	@, <variable>.view_id, CurrViewId
	bne	.L1926	@,
	ldr	r2, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r2, #1	@ <variable>.eFoState,
	beq	.L1926	@,
	strb	r1, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	bl	MVC_RemoveFrameStoreOutDPB	@
	b	.L1926	@
.L1938:
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1931	@,
	ldr	r0, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r0, r7	@, <variable>.view_id, CurrViewId
	bne	.L1931	@,
	ldr	ip, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, r5	@ <variable>.eFoState,
	bne	.L1936	@,
	b	.L1931	@
	.fnend
	.size	MVC_RemoveUnUsedFrameStore, .-MVC_RemoveUnUsedFrameStore
	.align	2
	.global	MVC_UnMarkFrameStoreRef
	.type	MVC_UnMarkFrameStoreRef, %function
MVC_UnMarkFrameStoreRef:
	.fnstart
.LFB1630:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ prephitmp.5561, <variable>.is_used
	mov	r3, r1	@ pFrameStore, pFrameStore
	tst	r2, #1	@ prephitmp.5561,
	beq	.L1940	@,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp142,
	strb	r1, [r3, #506]	@ tmp142, <variable>.top_field.is_short_term
	and	ip, ip, #2	@ tmp140, <variable>.is_reference,
	strb	r1, [r3, #505]	@ tmp142, <variable>.top_field.is_long_term
	strb	ip, [r3, #2]	@ tmp140, <variable>.is_reference
.L1940:
	tst	r2, #2	@ prephitmp.5561,
	beq	.L1941	@,
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp151,
	strb	r1, [r3, #546]	@ tmp151, <variable>.bottom_field.is_short_term
	and	ip, ip, #1	@ tmp149, <variable>.is_reference,
	strb	r1, [r3, #545]	@ tmp151, <variable>.bottom_field.is_long_term
	strb	ip, [r3, #2]	@ tmp149, <variable>.is_reference
.L1941:
	cmp	r2, #3	@ prephitmp.5561,
	movw	ip, #:lower16:11199520	@ tmp163,
	movt	ip, #:upper16:11199520	@ tmp163,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	moveq	r2, #0	@ tmp155,
	streqb	r2, [r3, #2]	@ tmp155, <variable>.is_reference
	streqb	r2, [r3, #466]	@ tmp155, <variable>.frame.is_short_term
	streqb	r2, [r3, #465]	@ tmp155, <variable>.frame.is_long_term
	mov	r2, #0	@ tmp161,
	strb	r2, [r3, #2]	@ tmp161, <variable>.is_reference
	ldr	r0, [r0, ip]	@, <variable>.ChanID
	b	FSP_SetRef	@
	.fnend
	.size	MVC_UnMarkFrameStoreRef, .-MVC_UnMarkFrameStoreRef
	.align	2
	.global	MVC_SimpleSlideDPB
	.type	MVC_SimpleSlideDPB, %function
MVC_SimpleSlideDPB:
	.fnstart
.LFB1661:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:11168612	@ tmp143,
	movw	r1, #:lower16:11168616	@ tmp144,
	movt	r2, #:upper16:11168612	@ tmp143,
	movt	r1, #:upper16:11168616	@ tmp144,
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	ldr	r5, [r0, r2]	@ D.37499, <variable>.DPB.size
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, r5	@ <variable>.DPB.used_size, D.37499
	bcc	.L1945	@,
	cmp	r5, #0	@ D.37499,
	moveq	r6, r5	@ pos, prephitmp.5591
	beq	.L1947	@,
	tst	r5, #1	@ D.37499,
	movw	r0, #:lower16:11168420	@ ivtmp.5604,
	mov	r6, #0	@ pos,
	movt	r0, #:upper16:11168420	@ ivtmp.5604,
	movw	r7, #:lower16:11196732	@ tmp165,
	add	r3, r4, r0	@ ivtmp.5604, pMvcCtx, ivtmp.5604
	movt	r7, #:upper16:11196732	@ tmp165,
	mvn	r1, #-2147483648	@ poc.5608,
	mov	ip, r6	@ i, pos
	bne	.L1951	@,
	ldr	r2, [r3, #0]	@ D.37503, <variable>.DPB.fs
	cmp	r2, #0	@ D.37503,
	beq	.L1955	@,
	ldr	r1, [r2, #668]	@ poc, <variable>.dpb_cnt
	cmn	r1, #-2147483647	@ poc,
	bge	.L1955	@,
	ldr	lr, [r2, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L1963	@,
.L1955:
	mvn	r1, #-2147483648	@ poc,
.L1963:
	add	r3, r3, #4	@ ivtmp.5604, ivtmp.5604,
	mov	ip, #1	@ i,
.L1951:
	ldr	r0, [r3, #0]	@ D.37503, <variable>.DPB.fs
	cmp	r0, #0	@ D.37503,
	beq	.L1948	@,
	ldr	r2, [r0, #668]	@ poc, <variable>.dpb_cnt
	cmp	r2, r1	@ poc, poc.5608
	bge	.L1948	@,
	ldr	lr, [r0, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	r6, ip	@ pos, i
	beq	.L1949	@,
.L1948:
	mov	r2, r1	@ poc, poc.5608
.L1949:
	add	r0, ip, #1	@ tmp169, i,
	add	lr, r3, #4	@ tmp170, ivtmp.5604,
	cmp	r0, r5	@ tmp169, D.37499
	beq	.L1950	@,
	ldr	r3, [r3, #4]	@ D.37503, <variable>.DPB.fs
	cmp	r3, #0	@ D.37503,
	beq	.L1957	@,
	ldr	r1, [r3, #668]	@ poc, <variable>.dpb_cnt
	cmp	r1, r2	@ poc, poc
	bge	.L1957	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L1965	@,
.L1957:
	mov	r1, r2	@ poc, poc
.L1964:
	add	ip, r0, #1	@ i, tmp169,
	add	r3, lr, #4	@ ivtmp.5604, tmp170,
	b	.L1951	@
.L1950:
	mov	r5, r6	@ prephitmp.5591, pos
.L1947:
	movw	r1, #:lower16:2792104	@ tmp150,
	movt	r1, #:upper16:2792104	@ tmp150,
	add	r3, r6, r1	@ tmp150, pos, tmp150
	mov	r0, r4	@, pMvcCtx
	add	ip, r4, r3, asl #2	@, tmp154, pMvcCtx, tmp150,
	ldr	r1, [ip, #4]	@, <variable>.DPB.fs
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, prephitmp.5591
	bl	MVC_RemoveFrameStoreOutDPB	@
.L1945:
	movw	r3, #:lower16:11196656	@ tmp160,
	movt	r3, #:upper16:11196656	@ tmp160,
	mov	ip, #0	@ tmp158,
	movw	r0, #:lower16:11196172	@ tmp157,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movt	r0, #:upper16:11196172	@ tmp157,
	cmp	r2, ip	@ <variable>.CurrPic.nal_ref_idc,
	strb	ip, [r4, r0]	@ tmp158, <variable>.CurrPic.is_long_term
	movwne	r0, #:lower16:11196173	@ tmp162,
	movtne	r0, #:upper16:11196173	@ tmp162,
	movne	r2, #1	@ tmp163,
	strneb	r2, [r4, r0]	@ tmp163, <variable>.CurrPic.is_short_term
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
.L1965:
	mov	r6, r0	@ pos, tmp169
	b	.L1964	@
	.fnend
	.size	MVC_SimpleSlideDPB, .-MVC_SimpleSlideDPB
	.align	2
	.global	MVC_SlidingWinMark
	.type	MVC_SlidingWinMark, %function
MVC_SlidingWinMark:
	.fnstart
.LFB1655:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11152036	@ tmp146,
	movt	r3, #:upper16:11152036	@ tmp146,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, r3]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r2, #:lower16:11168624	@ tmp147,
	movt	r2, #:upper16:11168624	@ tmp147,
	movw	ip, #:lower16:11168620	@ tmp144,
	movt	ip, #:upper16:11168620	@ tmp144,
	.pad #12
	sub	sp, sp, #12	@,,
	ldr	r1, [r4, r2]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	ldr	r0, [r0, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r2, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	rsb	r3, r1, r0	@ tmp148, <variable>.DPB.ltref_frames_in_buffer, <variable>.num_ref_frames
	cmp	r2, r3	@ <variable>.DPB.ref_frames_in_buffer, tmp148
	beq	.L1985	@,
.L1973:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L1985:
	movw	r5, #:lower16:11168612	@ tmp152,
	movt	r5, #:upper16:11168612	@ tmp152,
	ldr	sl, [r4, r5]	@ D.37218, <variable>.DPB.size
	cmp	sl, #0	@ D.37218,
	moveq	fp, sl	@ pos, D.37218
	beq	.L1971	@,
	tst	sl, #1	@ D.37218,
	movw	r6, #:lower16:11168420	@ ivtmp.5635,
	mov	fp, #0	@ pos,
	movt	r6, #:upper16:11168420	@ ivtmp.5635,
	movw	r9, #:lower16:11196732	@ tmp168,
	add	r5, r4, r6	@ ivtmp.5635, pMvcCtx, ivtmp.5635
	movt	r9, #:upper16:11196732	@ tmp168,
	mvn	r7, #-2147483648	@ poc.5638,
	mov	r3, fp	@ i, pos
	beq	.L1980	@,
.L1972:
	ldr	r8, [r5, #0]	@ D.37202, <variable>.DPB.fs
	cmp	r8, #0	@ D.37202,
	beq	.L1969	@,
	ldr	r6, [r8, #668]	@ poc, <variable>.dpb_cnt
	cmp	r6, r7	@ poc, poc.5638
	bge	.L1969	@,
	ldrb	r1, [r8, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L1986	@,
.L1969:
	mov	r6, r7	@ poc, poc.5638
.L1970:
	add	r3, r3, #1	@ tmp172, i,
	add	r8, r5, #4	@ tmp173, ivtmp.5635,
	cmp	r3, sl	@ tmp172, D.37218
	beq	.L1971	@,
	ldr	r5, [r5, #4]	@ D.37202, <variable>.DPB.fs
	cmp	r5, #0	@ D.37202,
	beq	.L1977	@,
	ldr	r7, [r5, #668]	@ poc, <variable>.dpb_cnt
	cmp	r7, r6	@ poc, poc
	bge	.L1977	@,
	ldrb	r2, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1987	@,
.L1977:
	mov	r7, r6	@ poc, poc
.L1984:
	add	r3, r3, #1	@ i, tmp172,
	add	r5, r8, #4	@ ivtmp.5635, tmp173,
	b	.L1972	@
.L1986:
	mov	r0, r8	@, D.37202
	str	r3, [sp, #4]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L1969	@,
	ldr	lr, [r8, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r4, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	fp, r3	@ pos, i
	bne	.L1969	@,
	b	.L1970	@
.L1987:
	mov	r0, r5	@, D.37202
	str	r3, [sp, #4]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r3, [sp, #4]	@,
	cmp	r0, #0	@,
	beq	.L1977	@,
	ldr	r1, [r5, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r4, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L1977	@,
	mov	fp, r3	@ pos, tmp172
	b	.L1984	@
.L1980:
	ldr	r6, [r5, #0]	@ D.37202, <variable>.DPB.fs
	cmp	r6, #0	@ D.37202,
	beq	.L1975	@,
	ldr	r7, [r6, #668]	@ poc, <variable>.dpb_cnt
	cmn	r7, #-2147483647	@ poc,
	blt	.L1988	@,
.L1975:
	mvn	r7, #-2147483648	@ poc,
.L1983:
	add	r5, r5, #4	@ ivtmp.5635, ivtmp.5635,
	mov	r3, #1	@ i,
	b	.L1972	@
.L1971:
	movw	r2, #:lower16:2792104	@ tmp158,
	movt	r2, #:upper16:2792104	@ tmp158,
	add	r0, fp, r2	@ tmp158, pos, tmp158
	add	ip, r4, r0, asl #2	@, tmp162, pMvcCtx, tmp158,
	ldr	r5, [ip, #4]	@ D.37220, <variable>.DPB.fs
	cmp	r5, #0	@ D.37220,
	beq	.L1973	@,
	ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	beq	.L1973	@,
	mov	r0, r5	@, D.37220
	bl	MVC_NonLongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L1973	@,
	movw	ip, #:lower16:11196732	@ tmp165,
	movt	ip, #:upper16:11196732	@ tmp165,
	ldr	r1, [r5, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, lr	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L1973	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, D.37220
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	b	MVC_UpdateReflist	@
.L1988:
	ldrb	r8, [r6, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r8, #0	@ <variable>.is_reference,
	beq	.L1975	@,
	mov	r0, r6	@, D.37202
	bl	MVC_NonLongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L1975	@,
	ldr	r0, [r6, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r4, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L1975	@,
	b	.L1983	@
	.fnend
	.size	MVC_SlidingWinMark, .-MVC_SlidingWinMark
	.align	2
	.global	MVC_UnMarkAllSTRef
	.type	MVC_UnMarkAllSTRef, %function
MVC_UnMarkAllSTRef:
	.fnstart
.LFB1638:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movw	r8, #:lower16:11168620	@ tmp137,
	movt	r8, #:upper16:11168620	@ tmp137,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	ldmeqfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	movw	r4, #:lower16:11168484	@ ivtmp.5667,
	movt	r4, #:upper16:11168484	@ ivtmp.5667,
	movw	r7, #:lower16:11196732	@ tmp147,
	add	r4, r0, r4	@ ivtmp.5667, pMvcCtx, ivtmp.5667
	movt	r7, #:upper16:11196732	@ tmp147,
	mov	r5, #0	@ i,
	b	.L1992	@
.L1991:
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bls	.L1995	@,
.L1992:
	ldr	r1, [r4, #0]	@ D.36254, <variable>.DPB.fs_ref
	add	r5, r5, #1	@ i, i,
	ldr	r0, [r6, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	add	r4, r4, #4	@ ivtmp.5667, ivtmp.5667,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r2, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L1991	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L1992	@,
.L1995:
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	.fnend
	.size	MVC_UnMarkAllSTRef, .-MVC_UnMarkAllSTRef
	.align	2
	.global	MVC_UpdateMaxLTFrmIdx
	.type	MVC_UpdateMaxLTFrmIdx, %function
MVC_UpdateMaxLTFrmIdx:
	.fnstart
.LFB1637:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	movw	r7, #:lower16:11168624	@ tmp139,
	movt	r7, #:upper16:11168624	@ tmp139,
	movw	r8, #:lower16:11168628	@ tmp138,
	movt	r8, #:upper16:11168628	@ tmp138,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	mov	r2, r1	@ max_long_term_frame_idx_plus1, max_long_term_frame_idx_plus1
	str	r1, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	movw	r4, #:lower16:11168548	@ ivtmp.5701,
	movt	r4, #:upper16:11168548	@ ivtmp.5701,
	movw	sl, #:lower16:11196732	@ tmp151,
	add	r4, r0, r4	@ ivtmp.5701, pMvcCtx, ivtmp.5701
	movt	sl, #:upper16:11196732	@ tmp151,
	mov	r5, #0	@ i,
	b	.L1999	@
.L1998:
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	ldmlsfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L2001:
	ldr	r2, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
.L1999:
	ldr	r1, [r4, #0]	@ D.36236, <variable>.DPB.fs_ltref
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.5701, ivtmp.5701,
	ldr	r0, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r0, r2	@ <variable>.long_term_frame_idx, max_long_term_frame_idx_plus1
	bcc	.L1998	@,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r6, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L1998	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	bhi	.L2001	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
	.fnend
	.size	MVC_UpdateMaxLTFrmIdx, .-MVC_UpdateMaxLTFrmIdx
	.align	2
	.global	MVC_UnMarkLTFldByFrmIdx
	.type	MVC_UnMarkLTFldByFrmIdx, %function
MVC_UnMarkLTFldByFrmIdx:
	.fnstart
.LFB1632:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	ip, #:lower16:11168624	@ tmp141,
	movt	ip, #:upper16:11168624	@ tmp141,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl}	@,
	.save {r4, r5, r6, r7, r8, sl}
	ldr	ip, [r0, ip]	@ D.35917, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ D.35917,
	beq	.L2009	@,
	movw	r5, #:lower16:11168548	@ ivtmp.5734,
	movt	r5, #:upper16:11168548	@ ivtmp.5734,
	add	r5, r0, r5	@ ivtmp.5734, pMvcCtx, ivtmp.5734
	sub	r7, ip, #1	@ tmp150, D.35917,
	movw	r8, #:lower16:11196732	@ tmp149,
	and	r7, r7, #1	@ tmp152, tmp150,
	ldr	r4, [r5, #0]	@ D.35897, <variable>.DPB.fs_ltref
	movt	r8, #:upper16:11196732	@ tmp149,
	ldr	r6, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2036	@,
.L2011:
	mov	r6, #1	@ i,
	cmp	r6, ip	@ i, D.35917
	add	r5, r5, #4	@ ivtmp.5734, ivtmp.5734,
	bcs	.L2009	@,
	cmp	r7, #0	@ tmp152,
	beq	.L2008	@,
	ldr	r4, [r5, #0]	@ D.35897, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2037	@,
.L2018:
	add	r6, r6, #1	@ i, tmp153,
	add	r5, r5, #4	@ ivtmp.5734, tmp154,
	cmp	r6, ip	@ i, D.35917
	bcs	.L2009	@,
.L2008:
	ldr	r4, [r5, #0]	@ D.35897, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2038	@,
.L2004:
	ldr	r4, [r5, #4]	@ D.35897, <variable>.DPB.fs_ltref
	add	r6, r6, #1	@ tmp153, i,
	add	r5, r5, #4	@ tmp154, ivtmp.5734,
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2018	@,
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2018	@,
	cmp	r2, #1	@ structure,
	beq	.L2026	@,
.L2035:
	cmp	r2, #2	@ structure,
	bne	.L2018	@,
	ldrb	r7, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2007	@,
	cmp	r4, r1	@ D.35897, pFS
	beq	.L2018	@,
.L2007:
	mov	r1, r4	@, D.35897
	ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
	b	MVC_UnMarkFrameStoreRef	@
.L2037:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2018	@,
	cmp	r2, r6	@ structure,
	bne	.L2035	@,
.L2026:
	ldrb	r7, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	beq	.L2007	@,
	cmp	r4, r1	@ D.35897, pFS
	beq	.L2018	@,
	b	.L2007	@
.L2038:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2004	@,
	cmp	r2, #1	@ structure,
	beq	.L2039	@,
	cmp	r2, #2	@ structure,
	bne	.L2004	@,
	ldrb	r7, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2007	@,
.L2031:
	cmp	r4, r1	@ D.35897, pFS
	beq	.L2004	@,
	b	.L2007	@
.L2009:
	ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
	bx	lr
.L2039:
	ldrb	r7, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2031	@,
	b	.L2007	@
.L2036:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2011	@,
	cmp	r2, #1	@ structure,
	beq	.L2024	@,
	cmp	r2, #2	@ structure,
	bne	.L2011	@,
	ldrb	r6, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #0	@ <variable>.top_field.is_long_term,
	beq	.L2007	@,
.L2028:
	cmp	r4, r1	@ D.35897, pFS
	beq	.L2011	@,
	b	.L2007	@
.L2024:
	ldrb	r6, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2028	@,
	b	.L2007	@
	.fnend
	.size	MVC_UnMarkLTFldByFrmIdx, .-MVC_UnMarkLTFldByFrmIdx
	.align	2
	.global	MVC_UnMarkLTFrmByFrmIdx
	.type	MVC_UnMarkLTFrmByFrmIdx, %function
MVC_UnMarkLTFrmByFrmIdx:
	.fnstart
.LFB1631:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r3, #:lower16:11168624	@ tmp139,
	movt	r3, #:upper16:11168624	@ tmp139,
	stmfd	sp!, {r4, r5, r6, r7, r8}	@,
	.save {r4, r5, r6, r7, r8}
	ldr	r6, [r0, r3]	@ D.35885, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.35885,
	beq	.L2044	@,
	movw	r2, #:lower16:11168548	@ ivtmp.5763,
	movt	r2, #:upper16:11168548	@ ivtmp.5763,
	add	r2, r0, r2	@ ivtmp.5763, pMvcCtx, ivtmp.5763
	sub	r7, r6, #1	@ tmp146, D.35885,
	and	r4, r7, #1	@ tmp148, tmp146,
	movw	r7, #:lower16:11196732	@ tmp145,
	ldr	r3, [r2, #0]	@ D.35877, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11196732	@ tmp145,
	ldr	ip, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2057	@,
.L2046:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.35885, i
	add	r2, r2, #4	@ ivtmp.5763, ivtmp.5763,
	bls	.L2044	@,
	cmp	r4, #0	@ tmp148,
	beq	.L2043	@,
	ldr	r3, [r2, #0]	@ D.35877, <variable>.DPB.fs_ltref
	ldr	r4, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2058	@,
.L2048:
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.5763, ivtmp.5763,
	cmp	r6, ip	@ D.35885, i
	bhi	.L2043	@,
	b	.L2044	@
.L2042:
	ldr	r3, [r2, #4]	@ D.35877, <variable>.DPB.fs_ltref
	ldr	r2, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r2, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2059	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.5763, tmp150,
	cmp	r6, ip	@ D.35885, i
	bls	.L2044	@,
.L2043:
	ldr	r3, [r2, #0]	@ D.35877, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp149, i,
	add	r5, r2, #4	@ tmp150, ivtmp.5763,
	ldr	r4, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2042	@,
	ldr	r8, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2042	@,
.L2056:
	mov	r1, r3	@, D.35877
	ldmfd	sp!, {r4, r5, r6, r7, r8}
	b	MVC_UnMarkFrameStoreRef	@
.L2059:
	ldr	r4, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2056	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.5763, tmp150,
	cmp	r6, ip	@ D.35885, i
	bhi	.L2043	@,
.L2044:
	ldmfd	sp!, {r4, r5, r6, r7, r8}
	bx	lr
.L2057:
	ldr	r5, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2046	@,
	b	.L2056	@
.L2058:
	ldr	r5, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2048	@,
	b	.L2056	@
	.fnend
	.size	MVC_UnMarkLTFrmByFrmIdx, .-MVC_UnMarkLTFrmByFrmIdx
	.align	2
	.global	MVC_MarkCurrPicLT
	.type	MVC_MarkCurrPicLT, %function
MVC_MarkCurrPicLT:
	.fnstart
.LFB1639:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, lr}	@,
	.save {r3, r4, r5, lr}
	mov	r5, r2	@ long_term_frame_idx, long_term_frame_idx
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ D.36265, <variable>.structure
	mov	r4, r1	@ pCurrPic, pCurrPic
	cmp	r2, #0	@ D.36265,
	beq	.L2064	@,
	mov	r3, r5	@, long_term_frame_idx
	ldr	r1, [r1, #472]	@, <variable>.frame_store
	bl	MVC_UnMarkLTFldByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #484]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp!, {r3, r4, r5, pc}	@
.L2064:
	mov	r1, r5	@, long_term_frame_idx
	bl	MVC_UnMarkLTFrmByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #484]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp!, {r3, r4, r5, pc}	@
	.fnend
	.size	MVC_MarkCurrPicLT, .-MVC_MarkCurrPicLT
	.align	2
	.global	MVC_MarkSTToLTRef
	.type	MVC_MarkSTToLTRef, %function
MVC_MarkSTToLTRef:
	.fnstart
.LFB1636:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	mov	r6, r1	@ pCurrPic, pCurrPic
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mov	r7, r3	@ long_term_frame_idx, long_term_frame_idx
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ <variable>.structure,
	bne	.L2066	@,
	ldr	r3, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	mov	r1, r7	@, long_term_frame_idx
	mvn	r4, r2	@ tmp144, difference_of_pic_nums_minus1
	add	r4, r4, r3	@ picNumX, tmp144, <variable>.frame_num
	bl	MVC_UnMarkLTFrmByFrmIdx	@
.L2067:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, long_term_frame_idx
	mov	r2, r4	@, picNumX
	mov	r3, r6	@, pCurrPic
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@
	b	MVC_MarkPicLTRef	@
.L2066:
	movw	r1, #:lower16:11168620	@ tmp150,
	movt	r1, #:upper16:11168620	@ tmp150,
	ldr	r0, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	ldr	ip, [r5, r1]	@ D.36226, <variable>.DPB.ref_frames_in_buffer
	cmp	ip, #0	@ D.36226,
	rsb	r4, r2, r0, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	beq	.L2067	@,
	movw	r8, #:lower16:11168484	@ ivtmp.5820,
	movt	r8, #:upper16:11168484	@ ivtmp.5820,
	add	r3, r5, r8	@ ivtmp.5820, pMvcCtx, ivtmp.5820
	sub	r2, ip, #1	@ tmp169, D.36226,
	and	r0, r2, #1	@ tmp171, tmp169,
	movw	r8, #:lower16:11196732	@ tmp168,
	ldr	r1, [r3, #0]	@ D.36196, <variable>.DPB.fs_ref
	movt	r8, #:upper16:11196732	@ tmp168,
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ D.36198, <variable>.is_reference
	tst	r2, #1	@ D.36198,
	beq	.L2073	@,
	ldr	sl, [r1, #504]	@ tmp182,
	bic	sl, sl, #-16777216	@ tmp183, tmp182,
	bic	sl, sl, #255	@ tmp183, tmp183,
	cmp	sl, #65536	@ tmp183,
	beq	.L2099	@,
.L2073:
	tst	r2, #2	@ D.36198,
	beq	.L2074	@,
	ldr	r2, [r1, #544]	@ tmp189,
	bic	r2, r2, #-16777216	@ tmp190, tmp189,
	bic	r2, r2, #255	@ tmp190, tmp190,
	cmp	r2, #65536	@ tmp190,
	beq	.L2100	@,
.L2074:
	mov	r2, #1	@ i,
	cmp	r2, ip	@ i, D.36226
	add	r3, r3, #4	@ ivtmp.5820, ivtmp.5820,
	bcs	.L2067	@,
	cmp	r0, #0	@ tmp171,
	beq	.L2070	@,
	ldr	r1, [r3, #0]	@ D.36196, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.36198, <variable>.is_reference
	tst	r0, #1	@ D.36198,
	bne	.L2085	@,
.L2080:
	tst	r0, #2	@ D.36198,
	beq	.L2081	@,
	ldr	r0, [r1, #544]	@ tmp217,
	bic	r0, r0, #-16777216	@ tmp218, tmp217,
	bic	r0, r0, #255	@ tmp218, tmp218,
	cmp	r0, #65536	@ tmp218,
	beq	.L2101	@,
.L2081:
	add	r2, r2, #1	@ i, tmp172,
	add	r3, r3, #4	@ ivtmp.5820, tmp173,
	cmp	r2, ip	@ i, D.36226
	bcs	.L2067	@,
.L2070:
	ldr	r1, [r3, #0]	@ D.36196, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.36198, <variable>.is_reference
	tst	r0, #1	@ D.36198,
	beq	.L2068	@,
	ldr	sl, [r1, #504]	@ tmp155,
	bic	sl, sl, #-16777216	@ tmp153, tmp155,
	bic	sl, sl, #255	@ tmp153, tmp153,
	cmp	sl, #65536	@ tmp153,
	beq	.L2102	@,
.L2068:
	tst	r0, #2	@ D.36198,
	beq	.L2069	@,
	ldr	r0, [r1, #544]	@ tmp163,
	bic	r0, r0, #-16777216	@ tmp161, tmp163,
	bic	r0, r0, #255	@ tmp161, tmp161,
	cmp	r0, #65536	@ tmp161,
	beq	.L2103	@,
.L2069:
	ldr	r1, [r3, #4]	@ D.36196, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp172, i,
	add	r3, r3, #4	@ tmp173, ivtmp.5820,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.36198, <variable>.is_reference
	tst	r0, #1	@ D.36198,
	beq	.L2080	@,
.L2085:
	ldr	sl, [r1, #504]	@ tmp210,
	bic	sl, sl, #-16777216	@ tmp211, tmp210,
	bic	sl, sl, #255	@ tmp211, tmp211,
	cmp	sl, #65536	@ tmp211,
	bne	.L2080	@,
	ldr	sl, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2080	@,
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2080	@,
	b	.L2086	@
.L2101:
	ldr	r0, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r0, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2081	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2081	@,
	b	.L2087	@
.L2102:
	ldr	sl, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2068	@,
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2068	@,
	b	.L2086	@
.L2103:
	ldr	r0, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r0, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2069	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2069	@,
	b	.L2087	@
.L2100:
	ldr	r2, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2074	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2074	@,
.L2087:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #2	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2067	@
.L2099:
	ldr	sl, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2073	@,
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2073	@,
.L2086:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #1	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2067	@
	.fnend
	.size	MVC_MarkSTToLTRef, .-MVC_MarkSTToLTRef
	.align	2
	.global	MVC_UnMarkLTRef
	.type	MVC_UnMarkLTRef, %function
MVC_UnMarkLTRef:
	.fnstart
.LFB1634:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}	@,
	.save {r4, r5, r6, r7, r8, r9, sl}
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #0	@ <variable>.structure,
	beq	.L2105	@,
	movw	r1, #:lower16:11168624	@ tmp153,
	movt	r1, #:upper16:11168624	@ tmp153,
	ldr	r7, [r0, r1]	@ D.36032, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, #0	@ D.36032,
	beq	.L2115	@,
	movw	r6, #:lower16:11168548	@ ivtmp.5866,
	movt	r6, #:upper16:11168548	@ ivtmp.5866,
	add	r4, r0, r6	@ ivtmp.5866, pMvcCtx, ivtmp.5866
	sub	r8, r7, #1	@ tmp306, D.36032,
	and	r6, r8, #1	@ tmp308, tmp306,
	mov	ip, #0	@ i,
	ldr	r1, [r4, #0]	@ temp.5870, <variable>.DPB.fs_ltref
	movw	r8, #:lower16:11196732	@ tmp300,
	movt	r8, #:upper16:11196732	@ tmp300,
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5871, <variable>.is_reference
	ands	r5, r3, #1	@ tmp298, temp.5871,
	beq	.L2125	@,
	ldr	sl, [r1, #504]	@ tmp338,
	bic	sl, sl, #-16777216	@ tmp339, tmp338,
	bic	sl, sl, #255	@ tmp339, tmp339,
	cmp	sl, #256	@ tmp339,
	beq	.L2147	@,
.L2125:
	tst	r3, #2	@ temp.5871,
	beq	.L2126	@,
	ldr	r3, [r1, #544]	@ tmp345,
	bic	r3, r3, #-16777216	@ tmp346, tmp345,
	bic	r3, r3, #255	@ tmp346, tmp346,
	cmp	r3, #256	@ tmp346,
	beq	.L2148	@,
.L2126:
	mov	ip, #1	@ i,
	cmp	r7, ip	@ D.36032, i
	add	r4, r4, #4	@ ivtmp.5866, ivtmp.5866,
	bls	.L2115	@,
	cmp	r6, #0	@ tmp308,
	beq	.L2114	@,
	ldr	r1, [r4, #0]	@ temp.5870, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5871, <variable>.is_reference
	ands	r5, r3, ip	@ tmp298, temp.5871,
	beq	.L2128	@,
	ldr	r6, [r1, #504]	@ tmp351,
	bic	r6, r6, #-16777216	@ tmp352, tmp351,
	bic	r6, r6, #255	@ tmp352, tmp352,
	cmp	r6, #256	@ tmp352,
	beq	.L2149	@,
.L2128:
	tst	r3, #2	@ temp.5871,
	beq	.L2129	@,
	ldr	r3, [r1, #544]	@ tmp358,
	bic	r3, r3, #-16777216	@ tmp359, tmp358,
	bic	r3, r3, #255	@ tmp359, tmp359,
	cmp	r3, #256	@ tmp359,
	beq	.L2150	@,
.L2129:
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.5866, ivtmp.5866,
	cmp	r7, ip	@ D.36032, i
	bhi	.L2114	@,
.L2115:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	bx	lr
.L2105:
	movw	ip, #:lower16:11168624	@ tmp154,
	movt	ip, #:upper16:11168624	@ tmp154,
	ldr	r6, [r0, ip]	@ temp.5874, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ temp.5874,
	beq	.L2115	@,
	movw	r4, #:lower16:11168548	@ ivtmp.5861,
	movt	r4, #:upper16:11168548	@ ivtmp.5861,
	add	r3, r0, r4	@ ivtmp.5861, pMvcCtx, ivtmp.5861
	sub	r7, r6, #1	@ tmp301, temp.5874,
	and	r4, r7, #1	@ tmp303, tmp301,
	movw	r7, #:lower16:11196732	@ tmp299,
	ldr	r1, [r3, #0]	@ D.36017, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11196732	@ tmp299,
	ldr	ip, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	ip, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2151	@,
.L2118:
	mov	ip, #1	@ i.5869,
	cmp	ip, r6	@ i.5869, temp.5874
	add	r3, r3, #4	@ ivtmp.5861, ivtmp.5861,
	bcs	.L2115	@,
	cmp	r4, #0	@ tmp303,
	beq	.L2109	@,
	ldr	r1, [r3, #0]	@ D.36017, <variable>.DPB.fs_ltref
	ldr	r4, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2152	@,
.L2120:
	add	ip, ip, #1	@ i.5869, i.5869,
	add	r3, r3, #4	@ ivtmp.5861, ivtmp.5861,
	cmp	ip, r6	@ i.5869, temp.5874
	bcc	.L2109	@,
	b	.L2115	@
.L2108:
	ldr	r1, [r3, #4]	@ D.36017, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2153	@,
.L2123:
	add	ip, ip, #1	@ i.5869, tmp304,
	add	r3, r4, #4	@ ivtmp.5861, tmp305,
	cmp	ip, r6	@ i.5869, temp.5874
	bcs	.L2115	@,
.L2109:
	ldr	r1, [r3, #0]	@ D.36017, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp304, i.5869,
	add	r4, r3, #4	@ tmp305, ivtmp.5861,
	ldr	r5, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r5, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2108	@,
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2108	@,
	ldr	r5, [r1, #464]	@ tmp160,
	bic	r5, r5, #-16777216	@ tmp158, tmp160,
	bic	r5, r5, #255	@ tmp158, tmp158,
	cmp	r5, #256	@ tmp158,
	bne	.L2108	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2141	@,
	ldr	r1, [r3, #4]	@ D.36017, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2123	@,
.L2153:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #3	@ <variable>.is_reference,
	bne	.L2123	@,
	ldr	r3, [r1, #464]	@ tmp333,
	bic	r3, r3, #-16777216	@ tmp334, tmp333,
	bic	r3, r3, #255	@ tmp334, tmp334,
	cmp	r3, #256	@ tmp334,
	bne	.L2123	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2123	@,
	b	.L2141	@
.L2158:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2110	@,
	ldr	r6, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	beq	.L2142	@,
.L2110:
	tst	r3, #2	@ temp.5871,
	beq	.L2112	@,
	ldr	r3, [r1, #544]	@ tmp234,
	bic	r6, r3, #-16777216	@ tmp232, tmp234,
	bic	r3, r6, #255	@ tmp232, tmp232,
	cmp	r3, #256	@ tmp232,
	beq	.L2154	@,
.L2112:
	ldr	r1, [r4, #4]	@ temp.5870, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ tmp310, ivtmp.5866,
	mov	r6, ip	@ tmp309, i
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5871, <variable>.is_reference
	ands	r5, r3, #1	@ tmp298, temp.5871,
	beq	.L2132	@,
	ldr	sl, [r1, #504]	@ tmp364,
	bic	sl, sl, #-16777216	@ tmp365, tmp364,
	bic	sl, sl, #255	@ tmp365, tmp365,
	cmp	sl, #256	@ tmp365,
	beq	.L2155	@,
.L2132:
	tst	r3, #2	@ temp.5871,
	beq	.L2133	@,
	ldr	r3, [r1, #544]	@ tmp371,
	bic	r3, r3, #-16777216	@ tmp372, tmp371,
	bic	r3, r3, #255	@ tmp372, tmp372,
	cmp	r3, #256	@ tmp372,
	beq	.L2156	@,
.L2133:
	add	ip, r6, #1	@ i, tmp309,
	add	r4, r4, #4	@ ivtmp.5866, tmp310,
	cmp	r7, ip	@ D.36032, i
	bls	.L2115	@,
.L2114:
	ldr	r1, [r4, #0]	@ temp.5870, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5871, <variable>.is_reference
	ands	r5, r3, #1	@ tmp298, temp.5871,
	beq	.L2110	@,
	ldr	r6, [r1, #504]	@ tmp168,
	bic	r6, r6, #-16777216	@ tmp166, tmp168,
	bic	r6, r6, #255	@ tmp166, tmp166,
	cmp	r6, #256	@ tmp166,
	bne	.L2110	@,
	b	.L2158	@
.L2154:
	ldr	r6, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2112	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2112	@,
	b	.L2143	@
.L2155:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2132	@,
	ldr	sl, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2132	@,
	b	.L2142	@
.L2156:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2133	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2133	@,
	b	.L2143	@
.L2148:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2126	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2126	@,
.L2143:
	movw	r2, #:lower16:2792136	@ tmp241,
	movt	r2, #:upper16:2792136	@ tmp241,
	add	r3, ip, r2	@ tmp241, i, tmp241
	strb	r5, [r1, #2]	@ tmp298, <variable>.is_reference
	mov	r2, #0	@ tmp248,
	add	r3, r0, r3, asl #2	@, tmp246, pMvcCtx, tmp241,
	ldr	r4, [r3, #4]	@ tmp243, <variable>.DPB.fs_ltref
	strb	r2, [r4, #545]	@ tmp248, <variable>.bottom_field.is_long_term
	ldr	r1, [r3, #4]	@ prephitmp.5879, <variable>.DPB.fs_ltref
	ldrb	r4, [r1, #464]	@ zero_extendqisi2	@ D.36073, <variable>.frame.structure
	cmp	r4, #3	@ D.36073,
	cmpne	r4, r2	@, D.36073,
	streqb	r2, [r1, #466]	@ tmp248, <variable>.frame.is_short_term
	ldreq	r1, [r3, #4]	@ tmp267, <variable>.DPB.fs_ltref
	streqb	r2, [r1, #465]	@ tmp248, <variable>.frame.is_long_term
	ldreq	r1, [r3, #4]	@ prephitmp.5879, <variable>.DPB.fs_ltref
	b	.L2113	@
.L2147:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2125	@,
	ldr	sl, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2125	@,
.L2142:
	movw	r2, #:lower16:2792136	@ tmp175,
	movt	r2, #:upper16:2792136	@ tmp175,
	add	r2, ip, r2	@ tmp175, i, tmp175
	and	r4, r3, #2	@ tmp173, temp.5871,
	strb	r4, [r1, #2]	@ tmp173, <variable>.is_reference
	mov	r3, #0	@ tmp182,
	add	r2, r0, r2, asl #2	@, tmp180, pMvcCtx, tmp175,
	ldr	r1, [r2, #4]	@ tmp177, <variable>.DPB.fs_ltref
	strb	r3, [r1, #505]	@ tmp182, <variable>.top_field.is_long_term
	ldr	r1, [r2, #4]	@ prephitmp.5848, <variable>.DPB.fs_ltref
	ldrb	r4, [r1, #464]	@ zero_extendqisi2	@ D.36049, <variable>.frame.structure
	cmp	r4, #3	@ D.36049,
	cmpne	r4, r3	@, D.36049,
	streqb	r3, [r1, #466]	@ tmp182, <variable>.frame.is_short_term
	ldreq	r1, [r2, #4]	@ tmp201, <variable>.DPB.fs_ltref
	streqb	r3, [r1, #465]	@ tmp182, <variable>.frame.is_long_term
	ldreq	r1, [r2, #4]	@ prephitmp.5848, <variable>.DPB.fs_ltref
.L2113:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L2115	@,
	movw	r4, #:lower16:2792136	@ tmp290,
	movt	r4, #:upper16:2792136	@ tmp290,
	add	r2, ip, r4	@ tmp290, i, tmp290
	ldr	r1, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r4, #:lower16:2799480	@ tmp281,
	movt	r4, #:upper16:2799480	@ tmp281,
	add	r2, r0, r2, asl #2	@, tmp295, pMvcCtx, tmp290,
	add	ip, r1, r4	@ tmp281, <variable>.pmv_address_idc, tmp281
	movw	r4, #:lower16:11199520	@ tmp289,
	movt	r4, #:upper16:11199520	@ tmp289,
	ldr	r1, [r2, #4]	@ tmp292, <variable>.DPB.fs_ltref
	add	ip, r0, ip, asl #2	@, tmp286, pMvcCtx, tmp281,
	mov	r2, r3	@, <variable>.is_reference
	ldr	r0, [r0, r4]	@, <variable>.ChanID
	str	r3, [ip, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldr	r1, [r1, #584]	@, <variable>.logic_fs_id
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	b	FSP_SetRef	@
.L2149:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2128	@,
	ldr	r6, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2128	@,
	b	.L2142	@
.L2150:
	ldr	r6, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2129	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2129	@,
	b	.L2143	@
.L2151:
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L2118	@,
	ldr	ip, [r1, #464]	@ tmp320,
	bic	ip, ip, #-16777216	@ tmp321, tmp320,
	bic	ip, ip, #255	@ tmp321, tmp321,
	cmp	ip, #256	@ tmp321,
	bne	.L2118	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2118	@,
.L2141:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	b	MVC_UnMarkFrameStoreRef	@
.L2152:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2120	@,
	ldr	r4, [r1, #464]	@ tmp327,
	bic	r4, r4, #-16777216	@ tmp328, tmp327,
	bic	r4, r4, #255	@ tmp328, tmp328,
	cmp	r4, #256	@ tmp328,
	bne	.L2120	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2120	@,
	b	.L2141	@
	.fnend
	.size	MVC_UnMarkLTRef, .-MVC_UnMarkLTRef
	.align	2
	.global	MVC_UnMarkSTRef
	.type	MVC_UnMarkSTRef, %function
MVC_UnMarkSTRef:
	.fnstart
.LFB1633:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}	@,
	.save {r4, r5, r6, r7, r8, r9, sl}
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #0	@ <variable>.structure,
	bne	.L2160	@,
	movw	ip, #:lower16:11168620	@ tmp158,
	movt	ip, #:upper16:11168620	@ tmp158,
	ldr	r1, [r1, #480]	@ <variable>.frame_num, <variable>.frame_num
	mvn	r2, r2	@ tmp156, difference_of_pic_nums_minus1
	ldr	r6, [r0, ip]	@ temp.5955, <variable>.DPB.ref_frames_in_buffer
	add	ip, r2, r1	@ picNumX.5957, tmp156, <variable>.frame_num
	cmp	r6, #0	@ temp.5955,
	beq	.L2171	@,
	movw	r4, #:lower16:11168484	@ ivtmp.5924,
	movt	r4, #:upper16:11168484	@ ivtmp.5924,
	add	r3, r0, r4	@ ivtmp.5924, pMvcCtx, ivtmp.5924
	sub	r7, r6, #1	@ tmp310, temp.5955,
	and	r4, r7, #1	@ tmp312, tmp310,
	movw	r7, #:lower16:11196732	@ tmp308,
	ldr	r1, [r3, #0]	@ D.35937, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11196732	@ tmp308,
	ldr	r2, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.5957
	beq	.L2204	@,
.L2174:
	mov	r2, #1	@ i.5932,
	cmp	r2, r6	@ i.5932, temp.5955
	add	r3, r3, #4	@ ivtmp.5924, ivtmp.5924,
	bcs	.L2171	@,
	cmp	r4, #0	@ tmp312,
	beq	.L2165	@,
	ldr	r1, [r3, #0]	@ D.35937, <variable>.DPB.fs_ref
	ldr	r4, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, ip	@ <variable>.frame.pic_num, picNumX.5957
	beq	.L2205	@,
.L2176:
	add	r2, r2, #1	@ i.5932, i.5932,
	add	r3, r3, #4	@ ivtmp.5924, ivtmp.5924,
	cmp	r2, r6	@ i.5932, temp.5955
	bcc	.L2165	@,
	b	.L2171	@
.L2164:
	ldr	r1, [r3, #4]	@ D.35937, <variable>.DPB.fs_ref
	ldr	r3, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r3, ip	@ <variable>.frame.pic_num, picNumX.5957
	beq	.L2206	@,
.L2179:
	add	r2, r2, #1	@ i.5932, tmp313,
	add	r3, r4, #4	@ ivtmp.5924, tmp314,
	cmp	r2, r6	@ i.5932, temp.5955
	bcs	.L2171	@,
.L2165:
	ldr	r1, [r3, #0]	@ D.35937, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp313, i.5932,
	add	r4, r3, #4	@ tmp314, ivtmp.5924,
	ldr	r5, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, ip	@ <variable>.frame.pic_num, picNumX.5957
	bne	.L2164	@,
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2164	@,
	ldr	r5, [r1, #464]	@ tmp169,
	bic	r5, r5, #-16777216	@ tmp167, tmp169,
	bic	r5, r5, #255	@ tmp167, tmp167,
	cmp	r5, #65536	@ tmp167,
	bne	.L2164	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2197	@,
	ldr	r1, [r3, #4]	@ D.35937, <variable>.DPB.fs_ref
	ldr	r3, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r3, ip	@ <variable>.frame.pic_num, picNumX.5957
	bne	.L2179	@,
.L2206:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #3	@ <variable>.is_reference,
	bne	.L2179	@,
	ldr	r3, [r1, #464]	@ tmp342,
	bic	r3, r3, #-16777216	@ tmp343, tmp342,
	bic	r3, r3, #255	@ tmp343, tmp343,
	cmp	r3, #65536	@ tmp343,
	bne	.L2179	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2197	@,
	add	r2, r2, #1	@ i.5932, tmp313,
	add	r3, r4, #4	@ ivtmp.5924, tmp314,
	cmp	r2, r6	@ i.5932, temp.5955
	bcc	.L2165	@,
.L2171:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	bx	lr
.L2160:
	movw	r3, #:lower16:11168620	@ tmp163,
	movt	r3, #:upper16:11168620	@ tmp163,
	ldr	r8, [r1, #480]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r6, [r0, r3]	@ D.35952, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.35952,
	rsb	r8, r2, r8, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	beq	.L2171	@,
	movw	ip, #:lower16:11168484	@ ivtmp.5929,
	movt	ip, #:upper16:11168484	@ ivtmp.5929,
	add	r2, r0, ip	@ ivtmp.5929, pMvcCtx, ivtmp.5929
	sub	r1, r6, #1	@ tmp315, D.35952,
	and	r5, r1, #1	@ tmp317, tmp315,
	movw	r7, #:lower16:11196732	@ tmp309,
	ldr	r1, [r2, #0]	@ temp.5933, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11196732	@ tmp309,
	mov	ip, #0	@ i,
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5934, <variable>.is_reference
	ands	r4, r3, #1	@ tmp307, temp.5934,
	beq	.L2181	@,
	ldr	sl, [r1, #504]	@ tmp347,
	bic	sl, sl, #-16777216	@ tmp348, tmp347,
	bic	sl, sl, #255	@ tmp348, tmp348,
	cmp	sl, #65536	@ tmp348,
	beq	.L2207	@,
.L2181:
	tst	r3, #2	@ temp.5934,
	beq	.L2182	@,
	ldr	r3, [r1, #544]	@ tmp354,
	bic	r3, r3, #-16777216	@ tmp355, tmp354,
	bic	r3, r3, #255	@ tmp355, tmp355,
	cmp	r3, #65536	@ tmp355,
	beq	.L2208	@,
.L2182:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.35952, i
	add	r2, r2, #4	@ ivtmp.5929, ivtmp.5929,
	bls	.L2171	@,
	cmp	r5, #0	@ tmp317,
	beq	.L2170	@,
	ldr	r1, [r2, #0]	@ temp.5933, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5934, <variable>.is_reference
	ands	r4, r3, ip	@ tmp307, temp.5934,
	beq	.L2184	@,
	ldr	r5, [r1, #504]	@ tmp360,
	bic	r5, r5, #-16777216	@ tmp361, tmp360,
	bic	r5, r5, #255	@ tmp361, tmp361,
	cmp	r5, #65536	@ tmp361,
	beq	.L2209	@,
.L2184:
	tst	r3, #2	@ temp.5934,
	beq	.L2185	@,
	ldr	r3, [r1, #544]	@ tmp367,
	bic	r3, r3, #-16777216	@ tmp368, tmp367,
	bic	r3, r3, #255	@ tmp368, tmp368,
	cmp	r3, #65536	@ tmp368,
	beq	.L2210	@,
.L2185:
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.5929, ivtmp.5929,
	cmp	r6, ip	@ D.35952, i
	bls	.L2171	@,
	ldr	r1, [r2, #0]	@ temp.5933, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5934, <variable>.is_reference
	ands	r4, r3, #1	@ tmp307, temp.5934,
	bne	.L2211	@,
.L2166:
	tst	r3, #2	@ temp.5934,
	beq	.L2168	@,
	ldr	r5, [r1, #544]	@ tmp243,
	bic	r3, r5, #-16777216	@ tmp241, tmp243,
	bic	r5, r3, #255	@ tmp241, tmp241,
	cmp	r5, #65536	@ tmp241,
	beq	.L2212	@,
.L2168:
	ldr	r1, [r2, #4]	@ temp.5933, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ tmp319, ivtmp.5929,
	mov	r5, ip	@ tmp318, i
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5934, <variable>.is_reference
	ands	r4, r3, #1	@ tmp307, temp.5934,
	beq	.L2188	@,
	ldr	sl, [r1, #504]	@ tmp373,
	bic	sl, sl, #-16777216	@ tmp374, tmp373,
	bic	sl, sl, #255	@ tmp374, tmp374,
	cmp	sl, #65536	@ tmp374,
	beq	.L2213	@,
.L2188:
	tst	r3, #2	@ temp.5934,
	beq	.L2189	@,
	ldr	r3, [r1, #544]	@ tmp380,
	bic	r3, r3, #-16777216	@ tmp381, tmp380,
	bic	r3, r3, #255	@ tmp381, tmp381,
	cmp	r3, #65536	@ tmp381,
	beq	.L2214	@,
.L2189:
	add	ip, r5, #1	@ i, tmp318,
	add	r2, r2, #4	@ ivtmp.5929, tmp319,
	cmp	r6, ip	@ D.35952, i
	bls	.L2171	@,
.L2170:
	ldr	r1, [r2, #0]	@ temp.5933, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5934, <variable>.is_reference
	ands	r4, r3, #1	@ tmp307, temp.5934,
	beq	.L2166	@,
.L2211:
	ldr	r5, [r1, #504]	@ tmp177,
	bic	r5, r5, #-16777216	@ tmp175, tmp177,
	bic	r5, r5, #255	@ tmp175, tmp175,
	cmp	r5, #65536	@ tmp175,
	bne	.L2166	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2166	@,
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r8	@ <variable>.top_field.pic_num, picNumX
	bne	.L2166	@,
	b	.L2198	@
.L2212:
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2168	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r8	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2168	@,
	b	.L2199	@
.L2213:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2188	@,
	ldr	sl, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r8	@ <variable>.top_field.pic_num, picNumX
	bne	.L2188	@,
	b	.L2198	@
.L2214:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2189	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r8	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2189	@,
	b	.L2199	@
.L2208:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2182	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r8	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2182	@,
.L2199:
	movw	r2, #:lower16:2792120	@ tmp250,
	movt	r2, #:upper16:2792120	@ tmp250,
	add	r3, ip, r2	@ tmp250, i, tmp250
	strb	r4, [r1, #2]	@ tmp307, <variable>.is_reference
	mov	r2, #0	@ tmp257,
	add	r3, r0, r3, asl #2	@, tmp255, pMvcCtx, tmp250,
	ldr	r4, [r3, #4]	@ tmp252, <variable>.DPB.fs_ref
	strb	r2, [r4, #546]	@ tmp257, <variable>.bottom_field.is_short_term
	ldr	r1, [r3, #4]	@ prephitmp.5911, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #464]	@ zero_extendqisi2	@ D.35993, <variable>.frame.structure
	cmp	r4, #3	@ D.35993,
	cmpne	r4, r2	@, D.35993,
	streqb	r2, [r1, #466]	@ tmp257, <variable>.frame.is_short_term
	ldreq	r1, [r3, #4]	@ tmp276, <variable>.DPB.fs_ref
	streqb	r2, [r1, #465]	@ tmp257, <variable>.frame.is_long_term
	ldreq	r1, [r3, #4]	@ prephitmp.5911, <variable>.DPB.fs_ref
	b	.L2169	@
.L2207:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2181	@,
	ldr	sl, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	sl, r8	@ <variable>.top_field.pic_num, picNumX
	bne	.L2181	@,
.L2198:
	movw	r4, #:lower16:2792120	@ tmp184,
	movt	r4, #:upper16:2792120	@ tmp184,
	add	r2, ip, r4	@ tmp184, i, tmp184
	and	r3, r3, #2	@ tmp182, temp.5934,
	strb	r3, [r1, #2]	@ tmp182, <variable>.is_reference
	mov	r3, #0	@ tmp191,
	add	r2, r0, r2, asl #2	@, tmp189, pMvcCtx, tmp184,
	ldr	r4, [r2, #4]	@ tmp186, <variable>.DPB.fs_ref
	strb	r3, [r4, #506]	@ tmp191, <variable>.top_field.is_short_term
	ldr	r1, [r2, #4]	@ prephitmp.5937, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #464]	@ zero_extendqisi2	@ D.35969, <variable>.frame.structure
	cmp	r4, #3	@ D.35969,
	cmpne	r4, r3	@, D.35969,
	streqb	r3, [r1, #466]	@ tmp191, <variable>.frame.is_short_term
	ldreq	r1, [r2, #4]	@ tmp210, <variable>.DPB.fs_ref
	streqb	r3, [r1, #465]	@ tmp191, <variable>.frame.is_long_term
	ldreq	r1, [r2, #4]	@ prephitmp.5937, <variable>.DPB.fs_ref
.L2169:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	bne	.L2171	@,
	movw	r4, #:lower16:2792120	@ tmp299,
	movt	r4, #:upper16:2792120	@ tmp299,
	add	r2, ip, r4	@ tmp299, i, tmp299
	ldr	r1, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r4, #:lower16:2799480	@ tmp290,
	movt	r4, #:upper16:2799480	@ tmp290,
	add	r2, r0, r2, asl #2	@, tmp304, pMvcCtx, tmp299,
	add	ip, r1, r4	@ tmp290, <variable>.pmv_address_idc, tmp290
	movw	r4, #:lower16:11199520	@ tmp298,
	movt	r4, #:upper16:11199520	@ tmp298,
	ldr	r1, [r2, #4]	@ tmp301, <variable>.DPB.fs_ref
	add	ip, r0, ip, asl #2	@, tmp295, pMvcCtx, tmp290,
	mov	r2, r3	@, <variable>.is_reference
	ldr	r0, [r0, r4]	@, <variable>.ChanID
	str	r3, [ip, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldr	r1, [r1, #584]	@, <variable>.logic_fs_id
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	b	FSP_SetRef	@
.L2209:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2184	@,
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r8	@ <variable>.top_field.pic_num, picNumX
	bne	.L2184	@,
	b	.L2198	@
.L2210:
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2185	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r8	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2185	@,
	b	.L2199	@
.L2204:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #3	@ <variable>.is_reference,
	bne	.L2174	@,
	ldr	r2, [r1, #464]	@ tmp329,
	bic	r2, r2, #-16777216	@ tmp330, tmp329,
	bic	r2, r2, #255	@ tmp330, tmp330,
	cmp	r2, #65536	@ tmp330,
	bne	.L2174	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2174	@,
.L2197:
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
	b	MVC_UnMarkFrameStoreRef	@
.L2205:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2176	@,
	ldr	r4, [r1, #464]	@ tmp336,
	bic	r4, r4, #-16777216	@ tmp337, tmp336,
	bic	r4, r4, #255	@ tmp337, tmp337,
	cmp	r4, #65536	@ tmp337,
	bne	.L2176	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2176	@,
	b	.L2197	@
	.fnend
	.size	MVC_UnMarkSTRef, .-MVC_UnMarkSTRef
	.align	2
	.global	MVC_ClearAll
	.type	MVC_ClearAll, %function
MVC_ClearAll:
	.fnstart
.LFB1621:
	@ args = 0, pretend = 0, frame = 64
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #68
	sub	sp, sp, #68	@,,
	mov	r4, r1	@ flag, flag
	str	r0, [sp, #24]	@ pMvcCtx, %sfp
	bl	vfmw_dprint_nothing	@
	ldr	r0, [sp, #24]	@, %sfp
	bl	MVC_ClearCurrPic	@
	ldr	r0, [sp, #24]	@, %sfp
	bl	MVC_ClearAllNal	@
	ldr	r0, [sp, #24]	@, %sfp
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	bne	.L2234	@,
.L2216:
	cmp	r4, #0	@ flag,
	beq	.L2217	@,
	ldr	r0, [sp, #24]	@, %sfp
	movw	r3, #:lower16:11199520	@ tmp156,
	movt	r3, #:upper16:11199520	@ tmp156,
	add	r1, r0, #8	@,,
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
.L2218:
	ldr	r8, [sp, #24]	@, %sfp
	movw	r0, #:lower16:11169488	@,
	movw	fp, #:lower16:11169500	@,
	movt	r0, #:upper16:11169488	@,
	movt	fp, #:upper16:11169500	@,
	movw	r9, #:lower16:11169496	@,
	movw	r7, #:lower16:11169492	@,
	movt	r9, #:upper16:11169496	@,
	movt	r7, #:upper16:11169492	@,
	mov	ip, #0	@,
	add	lr, r8, r0	@,,
	add	sl, r8, fp	@,,
	add	r5, r8, r9	@,,
	add	r6, r8, r7	@,,
	str	lr, [sp, #48]	@, %sfp
	str	sl, [sp, #44]	@, %sfp
	str	r5, [sp, #40]	@, %sfp
	str	r6, [sp, #36]	@, %sfp
	str	ip, [sp, #52]	@, %sfp
	str	ip, [sp, #28]	@, %sfp
.L2223:
	ldr	r0, [sp, #28]	@, %sfp
	mov	r1, #672	@ tmp206,
	ldr	r7, [sp, #48]	@, %sfp
	movw	fp, #:lower16:11169880	@,
	ldr	ip, [sp, #24]	@, %sfp
	movt	fp, #:upper16:11169880	@,
	mul	r2, r1, r0	@, tmp206,
	ldr	lr, [sp, #52]	@, %sfp
	movw	r4, #:lower16:11169888	@,
	movt	r4, #:upper16:11169888	@,
	add	r3, ip, lr	@ D.50410,,
	movw	sl, #:lower16:11169292	@,
	add	r8, r3, #11141120	@, D.50410,
	movt	sl, #:upper16:11169292	@,
	movw	r9, #:lower16:11169900	@,
	movt	r9, #:upper16:11169900	@,
	str	r2, [sp, #60]	@, %sfp
	movw	r5, #:lower16:11169752	@,
	ldr	r6, [r7, #0]	@, <variable>.fs_image.p_usrdat
	movt	r5, #:upper16:11169752	@,
	str	fp, [sp, #4]	@, %sfp
	movw	lr, #:lower16:11169288	@ tmp166,
	str	r8, [sp, #32]	@, %sfp
	movt	lr, #:upper16:11169288	@ tmp166,
	ldr	r8, [sp, #4]	@, %sfp
	movw	ip, #:lower16:11169289	@ tmp170,
	str	r4, [sp, #8]	@, %sfp
	movt	ip, #:upper16:11169289	@ tmp170,
	add	r8, r3, r8	@, D.50410,
	str	r8, [sp, #4]	@, %sfp
	ldr	r8, [sp, #8]	@, %sfp
	movw	r0, #:lower16:11169290	@ tmp174,
	str	sl, [sp, #12]	@, %sfp
	movt	r0, #:upper16:11169290	@ tmp174,
	add	r8, r3, r8	@, D.50410,
	str	r8, [sp, #8]	@, %sfp
	ldr	r8, [sp, #12]	@, %sfp
	movw	r1, #:lower16:11169884	@ tmp178,
	str	r9, [sp, #16]	@, %sfp
	movt	r1, #:upper16:11169884	@ tmp178,
	add	r8, r3, r8	@, D.50410,
	str	r8, [sp, #12]	@, %sfp
	ldr	r8, [sp, #16]	@, %sfp
	movw	r2, #:lower16:11169876	@ tmp181,
	str	r5, [sp, #20]	@, %sfp
	movt	r2, #:upper16:11169876	@ tmp181,
	add	r8, r3, r8	@, D.50410,
	str	r8, [sp, #16]	@, %sfp
	ldr	r8, [sp, #20]	@, %sfp
	movw	r7, #:lower16:11169916	@ tmp197,
	str	r6, [sp, #56]	@, %sfp
	movt	r7, #:upper16:11169916	@ tmp197,
	movw	r6, #:lower16:11169920	@ tmp200,
	movw	fp, #:lower16:11169472	@ tmp203,
	movt	r6, #:upper16:11169920	@ tmp200,
	movt	fp, #:upper16:11169472	@ tmp203,
	movw	r4, #:lower16:11169836	@ tmp209,
	movw	sl, #:lower16:11169796	@ tmp211,
	movt	r4, #:upper16:11169836	@ tmp209,
	movt	sl, #:upper16:11169796	@ tmp211,
	movw	r9, #:lower16:11169756	@ tmp213,
	movw	r5, #:lower16:11169832	@ tmp223,
	movt	r9, #:upper16:11169756	@ tmp213,
	movt	r5, #:upper16:11169832	@ tmp223,
	add	ip, r3, ip	@ tmp170, D.50410, tmp170
	add	r1, r3, r1	@ tmp178, D.50410, tmp178
	add	r2, r3, r2	@ tmp181, D.50410, tmp181
	add	r7, r3, r7	@ tmp197, D.50410, tmp197
	add	r6, r3, r6	@ tmp200, D.50410, tmp200
	add	fp, r3, fp	@ tmp203, D.50410, tmp203
	add	r4, r3, r4	@ tmp209, D.50410, tmp209
	add	sl, r3, sl	@ tmp211, D.50410, tmp211
	add	r9, r3, r9	@ tmp213, D.50410, tmp213
	add	r8, r3, r8	@, D.50410,
	add	lr, r3, lr	@ tmp166, D.50410, tmp166
	add	r5, r3, r5	@ tmp223, D.50410, tmp223
	add	r0, r3, r0	@ tmp174, D.50410, tmp174
	ldr	r3, [sp, #32]	@, %sfp
	str	r8, [sp, #20]	@, %sfp
	add	r8, r3, #28672	@,,
	ldr	r3, [sp, #56]	@, %sfp
	str	r8, [sp, #32]	@, %sfp
	ldr	r8, [sp, #60]	@, %sfp
	cmp	r3, #0	@,
	movw	r3, #:lower16:11169288	@ tmp207,
	movt	r3, #:upper16:11169288	@ tmp207,
	add	r3, r8, r3	@ tmp207,, tmp207
	ldr	r8, [sp, #28]	@, %sfp
	str	r8, [fp, #0]	@, <variable>.fs_image.image_id
	ldr	r8, [sp, #24]	@, %sfp
	add	fp, r8, r3	@ D.35620,, tmp207
	str	fp, [r9, #0]	@ D.35620, <variable>.frame.frame_store
	str	fp, [r4, #0]	@ D.35620, <variable>.bottom_field.frame_store
	mov	r9, #1	@ tmp196,
	str	fp, [sl, #0]	@ D.35620, <variable>.top_field.frame_store
	mov	r4, #0	@ tmp168,
	ldr	r3, [sp, #32]	@, %sfp
	mvn	sl, #0	@ tmp186,
	mov	r8, #18	@ tmp199,
	strb	r9, [r3, #0]	@ tmp196, <variable>.top_field.structure
	ldr	fp, [sp, #4]	@, %sfp
	str	r8, [r7, #0]	@ tmp199, <variable>.pmv_address_idc
	mov	r7, #16	@ tmp202,
	strb	r4, [lr, #0]	@ tmp168, <variable>.non_existing
	str	r7, [r6, #0]	@ tmp202, <variable>.apc_idc
	mov	r6, #2	@ tmp225,
	str	sl, [fp, #0]	@ tmp186, <variable>.frame_num_wrap
	strb	r6, [r5, #0]	@ tmp225, <variable>.bottom_field.structure
	strb	r4, [ip, #0]	@ tmp168, <variable>.is_used
	strb	r4, [r0, #0]	@ tmp168, <variable>.is_reference
	str	r4, [r1, #0]	@ tmp168, <variable>.long_term_frame_idx
	str	r4, [r2, #0]	@ tmp168, <variable>.frame_num
	ldr	ip, [sp, #8]	@, %sfp
	str	r4, [ip, #0]	@ tmp168, <variable>.poc
	ldr	r1, [sp, #12]	@, %sfp
	strb	r4, [r1, #0]	@ tmp168, <variable>.is_in_dpb
	ldr	r2, [sp, #16]	@, %sfp
	str	r9, [r2, #0]	@ tmp196, <variable>.is_displayed
	ldr	r3, [sp, #20]	@, %sfp
	strb	r4, [r3, #0]	@ tmp168, <variable>.frame.structure
	beq	.L2219	@,
	ldr	r5, [sp, #24]	@, %sfp
	movw	r8, #:lower16:11199520	@ tmp227,
	movt	r8, #:upper16:11199520	@ tmp227,
	ldr	r1, [sp, #56]	@, %sfp
	ldr	r0, [r5, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [sp, #48]	@, %sfp
	str	r4, [r3, #0]	@ tmp168, <variable>.fs_image.p_usrdat
.L2219:
	ldr	r8, [sp, #36]	@, %sfp
	ldr	r1, [r8, #0]	@ temp.6036, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6036,
	beq	.L2220	@,
	ldr	r4, [sp, #24]	@, %sfp
	movw	sl, #:lower16:11199520	@ tmp230,
	movt	sl, #:upper16:11199520	@ tmp230,
	mov	r9, #0	@ tmp232,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r9, [r8, #0]	@ tmp232, <variable>.fs_image.p_usrdat
.L2220:
	ldr	fp, [sp, #40]	@, %sfp
	ldr	r1, [fp, #0]	@ temp.6038, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6038,
	beq	.L2221	@,
	ldr	r2, [sp, #24]	@, %sfp
	movw	ip, #:lower16:11199520	@ tmp233,
	movt	ip, #:upper16:11199520	@ tmp233,
	mov	r6, #0	@ tmp235,
	ldr	r0, [r2, ip]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r7, [sp, #40]	@, %sfp
	str	r6, [r7, #0]	@ tmp235, <variable>.fs_image.p_usrdat
.L2221:
	ldr	r5, [sp, #44]	@, %sfp
	ldr	r1, [r5, #0]	@ D.35624, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.35624,
	beq	.L2222	@,
	ldr	r3, [sp, #24]	@, %sfp
	movw	lr, #:lower16:11199520	@ tmp236,
	movt	lr, #:upper16:11199520	@ tmp236,
	ldr	r0, [r3, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp238,
	str	r1, [r5, #0]	@ tmp238, <variable>.fs_image.p_usrdat
.L2222:
	ldr	r1, [sp, #28]	@, %sfp
	ldr	ip, [sp, #52]	@, %sfp
	add	r7, r1, #1	@,,
	ldr	r6, [sp, #48]	@, %sfp
	ldr	r4, [sp, #44]	@, %sfp
	cmp	r7, #40	@,
	ldr	r9, [sp, #40]	@, %sfp
	add	r2, ip, #672	@,,
	ldr	r8, [sp, #36]	@, %sfp
	add	fp, r6, #672	@,,
	add	sl, r4, #672	@,,
	add	r5, r9, #672	@,,
	add	r0, r8, #672	@,,
	str	r7, [sp, #28]	@, %sfp
	str	r2, [sp, #52]	@, %sfp
	str	fp, [sp, #48]	@, %sfp
	str	sl, [sp, #44]	@, %sfp
	str	r5, [sp, #40]	@, %sfp
	str	r0, [sp, #36]	@, %sfp
	bne	.L2223	@,
	ldr	r5, [sp, #24]	@, %sfp
	movw	r4, #:lower16:11196376	@ tmp239,
	movt	r4, #:upper16:11196376	@ tmp239,
	ldr	r1, [r5, r4]	@ temp.6040, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6040,
	beq	.L2224	@,
	movw	lr, #:lower16:11199520	@ tmp240,
	movt	lr, #:upper16:11199520	@ tmp240,
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp243,
	str	r3, [r5, r4]	@ tmp243, <variable>.CurrPic.fs_image.p_usrdat
.L2224:
	ldr	r6, [sp, #24]	@, %sfp
	movw	r4, #:lower16:11196380	@ tmp244,
	movt	r4, #:upper16:11196380	@ tmp244,
	ldr	r1, [r6, r4]	@ temp.6042, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6042,
	beq	.L2225	@,
	movw	r8, #:lower16:11199520	@ tmp245,
	movt	r8, #:upper16:11199520	@ tmp245,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp248,
	str	r0, [r6, r4]	@ tmp248, <variable>.CurrPic.fs_image.p_usrdat
.L2225:
	ldr	r8, [sp, #24]	@, %sfp
	movw	r4, #:lower16:11196384	@ tmp249,
	movt	r4, #:upper16:11196384	@ tmp249,
	ldr	r1, [r8, r4]	@ temp.6044, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6044,
	beq	.L2226	@,
	movw	r9, #:lower16:11199520	@ tmp250,
	movt	r9, #:upper16:11199520	@ tmp250,
	mov	r5, #0	@ tmp253,
	ldr	r0, [r8, r9]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r8, r4]	@ tmp253, <variable>.CurrPic.fs_image.p_usrdat
.L2226:
	ldr	ip, [sp, #24]	@, %sfp
	movw	r4, #:lower16:11196388	@ tmp254,
	movt	r4, #:upper16:11196388	@ tmp254,
	ldr	r1, [ip, r4]	@ D.35627, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ D.35627,
	beq	.L2227	@,
	movw	r6, #:lower16:11199520	@ tmp255,
	movt	r6, #:upper16:11199520	@ tmp255,
	mov	fp, #0	@ tmp258,
	ldr	r0, [ip, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	sl, [sp, #24]	@, %sfp
	str	fp, [sl, r4]	@ tmp258, <variable>.CurrPic.fs_image.p_usrdat
.L2227:
	ldr	r1, [sp, #24]	@, %sfp
	movw	r7, #:lower16:11198024	@ tmp259,
	movt	r7, #:upper16:11198024	@ tmp259,
	ldr	r4, [r1, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r4, #0	@ <variable>.TotalUsrDatNum,
	beq	.L2228	@,
	movw	r2, #:lower16:11198028	@ ivtmp.5995,
	movt	r2, #:upper16:11198028	@ ivtmp.5995,
	mov	r5, #0	@ i.6033,
	movw	r6, #:lower16:11199520	@ tmp339,
	add	r4, r1, r2	@ ivtmp.5995,, ivtmp.5995
	movt	r6, #:upper16:11199520	@ tmp339,
	mov	r8, r5	@ tmp340, i.6033
	mov	sl, r1	@ pMvcCtx,
.L2230:
	ldr	r1, [r4, #0]	@ D.35630, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i.6033, i.6033,
	cmp	r1, #0	@ D.35630,
	beq	.L2229	@,
	ldr	r0, [sl, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp340, <variable>.pUsrDatArray
.L2229:
	ldr	ip, [sl, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.5995, ivtmp.5995,
	cmp	ip, r5	@ <variable>.TotalUsrDatNum, i.6033
	bhi	.L2230	@,
.L2228:
	ldr	r3, [sp, #24]	@, %sfp
	movw	sl, #:lower16:11198024	@ tmp267,
	movw	r1, #:lower16:11199496	@ tmp269,
	movt	sl, #:upper16:11198024	@ tmp267,
	movt	r1, #:upper16:11199496	@ tmp269,
	movw	r5, #:lower16:11198004	@ tmp271,
	movw	r8, #:lower16:11199444	@ tmp273,
	movt	r5, #:upper16:11198004	@ tmp271,
	movt	r8, #:upper16:11199444	@ tmp273,
	movw	r7, #:lower16:11199504	@ tmp275,
	movw	r6, #:lower16:11199452	@ tmp277,
	movt	r7, #:upper16:11199504	@ tmp275,
	movt	r6, #:upper16:11199452	@ tmp277,
	movw	lr, #:lower16:11198012	@ tmp279,
	movw	ip, #:lower16:11199528	@ tmp281,
	movt	lr, #:upper16:11198012	@ tmp279,
	movt	ip, #:upper16:11199528	@ tmp281,
	movw	r2, #:lower16:11198016	@ tmp283,
	movt	r2, #:upper16:11198016	@ tmp283,
	movw	r9, #:lower16:11168368	@,
	movw	fp, #:lower16:11164360	@,
	movt	r9, #:upper16:11168368	@,
	movt	fp, #:upper16:11164360	@,
	str	r9, [sp, #16]	@, %sfp
	str	fp, [sp, #8]	@, %sfp
	movw	r4, #:lower16:11164361	@,
	movt	r4, #:upper16:11164361	@,
	str	r4, [sp, #12]	@, %sfp
	mov	r4, #0	@ tmp268,
	str	r4, [r3, r1]	@ tmp268, <variable>.IDRPicOfCurrPic
	str	r4, [r3, r5]	@ tmp268, <variable>.AllowStartDec
	movw	r9, #:lower16:11166364	@ tmp288,
	str	r4, [r3, r6]	@ tmp268, <variable>.IModeOutFlag
	movt	r9, #:upper16:11166364	@ tmp288,
	str	r4, [r3, ip]	@ tmp268, <variable>.FirstFrameDisplayed
	movw	fp, #:lower16:11166365	@ tmp294,
	str	r4, [r3, r2]	@ tmp268, <variable>.PPicFound
	movt	fp, #:upper16:11166365	@ tmp294,
	str	r4, [r3, sl]	@ tmp268, <variable>.TotalUsrDatNum
	add	r0, r3, #11141120	@,,
	str	r4, [r3, r8]	@ tmp268, <variable>.SliceParaNum
	add	r0, r0, #21504	@,,
	str	r4, [r3, r7]	@ tmp268, <variable>.MaxBytesReceived
	mov	r1, #1680	@,
	str	r4, [r3, lr]	@ tmp268, <variable>.IDRFound
	movw	r5, #:lower16:11162624	@ tmp301,
	ldr	r8, [sp, #16]	@, %sfp
	movt	r5, #:upper16:11162624	@ tmp301,
	str	r4, [r3, #368]	@ tmp268, <variable>.pCurrNal
	str	r4, [r3, r8]	@ tmp268, <variable>.CurrMarkIdx
	strb	r4, [r3, r9]	@ tmp268, <variable>.is_valid
	strb	r4, [r3, fp]	@ tmp268, <variable>.no_output_of_prior_pics_flag
	ldr	r8, [sp, #8]	@, %sfp
	strb	r4, [r3, r8]	@ tmp268, <variable>.is_valid
	ldr	lr, [sp, #12]	@, %sfp
	strb	r4, [r3, lr]	@ tmp268, <variable>.no_output_of_prior_pics_flag
	bl	__memzero	@
	ldr	r6, [sp, #24]	@, %sfp
	movw	r2, #:lower16:11162629	@ tmp305,
	movw	ip, #:lower16:11196168	@ tmp308,
	movt	r2, #:upper16:11162629	@ tmp305,
	movt	ip, #:upper16:11196168	@ tmp308,
	movw	r0, #:lower16:11197336	@ tmp311,
	movw	r3, #:lower16:11197344	@ tmp314,
	movt	r0, #:upper16:11197336	@ tmp311,
	movt	r3, #:upper16:11197344	@ tmp314,
	movw	r1, #:lower16:11197340	@ tmp316,
	movt	r1, #:upper16:11197340	@ tmp316,
	strb	r4, [r6, ip]	@ tmp268, <variable>.CurrPic.state
	mov	ip, #1	@ tmp306,
	strb	r4, [r6, r0]	@ tmp268, <variable>.PrevPic.structure
	mov	r0, r4	@, tmp268
	str	r4, [r6, r1]	@ tmp268, <variable>.PrevPic.nal_ref_idc
	mov	r1, #2	@ tmp303,
	strb	ip, [r6, r2]	@ tmp306, <variable>.CurrSlice.new_pic_flag
	strb	r1, [r6, r5]	@ tmp303, <variable>.CurrSlice.slice_type
	mov	r1, #256	@ tmp315,
	str	r1, [r6, r3]	@ tmp315, <variable>.PrevPic.frame_num
	add	sp, sp, #68	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2217:
	ldr	r4, [sp, #24]	@, %sfp
	add	r0, r4, #8	@,,
	bl	ResetVoQueue	@
	ldr	r2, [sp, #24]	@, %sfp
	movw	r1, #:lower16:11199520	@ tmp160,
	movt	r1, #:upper16:11199520	@ tmp160,
	ldr	r0, [r2, r1]	@, <variable>.ChanID
	bl	FSP_EmptyInstance	@
	b	.L2218	@
.L2234:
	bl	vfmw_dprint_nothing	@
	b	.L2216	@
	.fnend
	.size	MVC_ClearAll, .-MVC_ClearAll
	.align	2
	.global	MVC_DEC_GetImageBuffer
	.type	MVC_DEC_GetImageBuffer, %function
MVC_DEC_GetImageBuffer:
	.fnstart
.LFB1767:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r3, #:lower16:11197996	@ tmp147,
	movt	r3, #:upper16:11197996	@ tmp147,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	ldr	r3, [r0, r3]	@ D.44617, <variable>.TotalFsNum
	.pad #8
	sub	sp, sp, #8	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #0	@ D.44617,
	beq	.L2236	@,
	movw	r7, #:lower16:11169289	@ ivtmp.6079,
	movw	r8, #:lower16:11168420	@ ivtmp.6074,
	movt	r7, #:upper16:11169289	@ ivtmp.6079,
	movt	r8, #:upper16:11168420	@ ivtmp.6074,
	movw	sl, #:lower16:11168612	@ tmp182,
	add	r7, r0, r7	@ ivtmp.6079, pMvcCtx, ivtmp.6079
	add	r8, r0, r8	@ ivtmp.6074, pMvcCtx, ivtmp.6074
	movt	sl, #:upper16:11168612	@ tmp182,
	mov	r6, #0	@ i.6084,
	mov	r9, #672	@ tmp181,
.L2243:
	ldrb	r2, [r7, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.is_used,
	bne	.L2237	@,
	mul	r1, r9, r6	@ tmp150, tmp181, i.6084
	movw	r0, #:lower16:11169288	@ tmp152,
	movt	r0, #:upper16:11169288	@ tmp152,
	add	ip, r1, r0	@ tmp152, tmp150, tmp152
	adds	ip, r4, ip	@ D.44627, pMvcCtx, tmp152
	beq	.L2238	@,
	ldr	r5, [r4, sl]	@ D.44937, <variable>.DPB.size
	cmp	r5, #0	@ D.44937,
	beq	.L2238	@,
	ldr	r2, [r8, #0]	@ D.44938, <variable>.DPB.fs
	sub	lr, r5, #1	@ tmp185, D.44937,
	and	r0, lr, #1	@ tmp187, tmp185,
	cmp	r2, #0	@ D.44938,
	beq	.L2250	@,
	cmp	ip, r2	@ D.44627, D.44938
	beq	.L2237	@,
.L2250:
	mov	r1, #1	@ i,
	cmp	r1, r5	@ i, D.44937
	add	r2, r8, #4	@ ivtmp.6074, ivtmp.6074,
	bcs	.L2238	@,
	cmp	r0, #0	@ tmp187,
	beq	.L2240	@,
	ldr	r0, [r8, #4]	@ D.44938, <variable>.DPB.fs
	cmp	r0, #0	@ D.44938,
	beq	.L2252	@,
	cmp	ip, r0	@ D.44627, D.44938
	beq	.L2237	@,
.L2252:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6074, ivtmp.6074,
	cmp	r1, r5	@ i, D.44937
	bcs	.L2238	@,
.L2240:
	ldr	r0, [r2, #0]	@ D.44938, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp188, i,
	add	lr, r2, #4	@ tmp189, ivtmp.6074,
	cmp	r0, #0	@ D.44938,
	beq	.L2239	@,
	cmp	ip, r0	@ D.44627, D.44938
	beq	.L2237	@,
.L2239:
	ldr	r2, [r2, #4]	@ D.44938, <variable>.DPB.fs
	cmp	r2, #0	@ D.44938,
	beq	.L2255	@,
	cmp	ip, r2	@ D.44627, D.44938
	beq	.L2237	@,
.L2255:
	add	r1, r1, #1	@ i, tmp188,
	add	r2, lr, #4	@ ivtmp.6074, tmp189,
	cmp	r1, r5	@ i, D.44937
	bcc	.L2240	@,
.L2238:
	movw	r5, #:lower16:11199520	@ tmp156,
	movt	r5, #:upper16:11199520	@ tmp156,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@,
	beq	.L2236	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmn	r0, #1	@,
	beq	.L2260	@,
.L2241:
	mov	r0, #0	@ D.44620,
.L2242:
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
.L2237:
	add	r6, r6, #1	@ i.6084, i.6084,
	add	r7, r7, #672	@ ivtmp.6079, ivtmp.6079,
	cmp	r3, r6	@ D.44617, i.6084
	bhi	.L2243	@,
	movw	r6, #:lower16:11197996	@ tmp165,
	movt	r6, #:upper16:11197996	@ tmp165,
	add	r0, r4, #8	@, pMvcCtx,
	add	r1, sp, #4	@,,
	mov	r2, sp	@,
	bl	GetQueueImgNum	@
	bl	vfmw_dprint_nothing	@
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, r6]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L2244	@,
	mov	r5, #0	@ i,
.L2245:
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, r6]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r5, r5, #1	@ i, i,
	cmp	r2, r5	@ <variable>.TotalFsNum, i
	bhi	.L2245	@,
.L2244:
	bl	vfmw_dprint_nothing	@
	movw	r2, #:lower16:11197996	@ tmp172,
	movt	r2, #:upper16:11197996	@ tmp172,
	movw	r1, #:lower16:11168616	@ tmp175,
	movt	r1, #:upper16:11168616	@ tmp175,
	ldr	r0, [r4, r2]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	ldr	r3, [r4, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	r2, [sp, #4]	@ ReadImgNum, ReadImgNum
	sub	ip, r0, #2	@ tmp173, <variable>.TotalFsNum,
	ldr	r1, [sp, #0]	@ NewImgNum, NewImgNum
	rsb	r0, r3, ip	@ tmp176, <variable>.DPB.used_size, tmp173
	add	ip, r1, r2	@ tmp169, NewImgNum, ReadImgNum
	cmp	ip, r0	@ tmp169, tmp176
	bge	.L2241	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.44620,
	b	.L2242	@
.L2236:
	mov	r0, #1	@ D.44620,
	b	.L2242	@
.L2260:
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	add	r1, r4, #8	@, pMvcCtx,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.44620,
	b	.L2242	@
	.fnend
	.size	MVC_DEC_GetImageBuffer, .-MVC_DEC_GetImageBuffer
	.align	2
	.global	MVC_DEC_Init
	.type	MVC_DEC_Init, %function
MVC_DEC_Init:
	.fnstart
.LFB1762:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldr	r6, [r0, #352]	@ D.44326, <variable>.ImageQue.ResetMagicWord
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ pstExtraData, pstExtraData
	.pad #52
	sub	sp, sp, #52	@,,
	movw	r1, #:lower16:11199560	@,
	movt	r1, #:upper16:11199560	@,
	bl	__memzero	@
	add	r0, r4, #8	@, pMvcCtx,
	str	r6, [r4, #352]	@ D.44326, <variable>.ImageQue.ResetMagicWord
	bl	ResetVoQueue	@
	mov	r0, #0	@ tmp152,
	str	r5, [r4, #0]	@ pstExtraData, <variable>.pstExtraData
	str	r0, [r4, #364]	@ tmp152, <variable>.StartMode
	str	r0, [r4, #360]	@ tmp152, <variable>.pMvcDecParam
	ldr	r3, [r5, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #25	@ <variable>.eCapLevel,
	beq	.L2276	@,
	movw	r3, #:lower16:11155232	@ tmp161,
	movw	r2, #:lower16:11155236	@ tmp163,
	movt	r3, #:upper16:11155232	@ tmp161,
	movt	r2, #:upper16:11155236	@ tmp163,
	movw	ip, #:lower16:11155228	@ tmp165,
	movt	ip, #:upper16:11155228	@ tmp165,
	mov	lr, #32	@ tmp162,
	mov	r1, #256	@ tmp164,
	mov	r6, #136	@ tmp166,
	str	lr, [r4, r3]	@ tmp162, <variable>.MaxSpsNum
	str	r1, [r4, r2]	@ tmp164, <variable>.MaxPpsNum
	str	r6, [r4, ip]	@ tmp166, <variable>.MaxSliceNum
.L2263:
	ldr	r0, [r5, #504]	@, <variable>.s32ContextMemAddr
	movw	r6, #:lower16:11155244	@ tmp175,
	bl	MEM_Phy2Vir	@
	movw	r1, #:lower16:11155232	@ tmp171,
	movt	r1, #:upper16:11155232	@ tmp171,
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #:lower16:11155236	@ tmp176,
	movt	r3, #:upper16:11155236	@ tmp176,
	ldr	r2, [r4, r1]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movw	r1, #3992	@ tmp174,
	ldr	lr, [ip, #500]	@ <variable>.s32BasicCtxSize, <variable>.s32BasicCtxSize
	movt	r6, #:upper16:11155244	@ tmp175,
	ldr	ip, [r4, r3]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r3, #:lower16:11199440	@ tmp180,
	mul	r1, r1, r2	@ tmp172, tmp174, <variable>.MaxSpsNum
	movw	r2, #:lower16:11155240	@ tmp170,
	movt	r2, #:upper16:11155240	@ tmp170,
	movt	r3, #:upper16:11199440	@ tmp180,
	add	r0, r0, lr	@ D.44347,, <variable>.s32BasicCtxSize
	str	r0, [r4, r2]	@ D.44347, <variable>.SPS
	add	r2, r0, r1	@ prephitmp.6117, D.44347, tmp172
	mov	lr, #2240	@ tmp179,
	cmp	r0, #0	@ D.44347,
	str	r2, [r4, r6]	@ prephitmp.6117, <variable>.PPS
	mla	lr, lr, ip, r2	@ D.44359, tmp179, <variable>.MaxPpsNum, prephitmp.6117
	str	lr, [r4, r3]	@ D.44359, <variable>.DecSlicePara
	beq	.L2275	@,
	cmp	r2, #0	@ prephitmp.6117,
	beq	.L2275	@,
	cmp	lr, #0	@ D.44359,
	beq	.L2275	@,
	ldr	r7, [r5, #524]	@ <variable>.s32KeepSPSPPS, <variable>.s32KeepSPSPPS
	cmp	r7, #0	@ <variable>.s32KeepSPSPPS,
	beq	.L2277	@,
.L2268:
	movw	r2, #:lower16:11155228	@ tmp195,
	movt	r2, #:upper16:11155228	@ tmp195,
	movw	r6, #4060	@ tmp197,
	movw	lr, #:lower16:11155232	@ tmp192,
	ldr	r0, [r4, r2]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movt	lr, #:upper16:11155232	@ tmp192,
	movw	fp, #:lower16:11159264	@ tmp190,
	movw	r9, #:lower16:11155992	@ tmp191,
	ldr	sl, [r4, lr]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movt	fp, #:upper16:11159264	@ tmp190,
	mul	r1, r6, r0	@ __n, tmp197, <variable>.MaxSliceNum
	movt	r9, #:upper16:11155992	@ tmp191,
	movw	r5, #:lower16:11199440	@ tmp194,
	movt	r5, #:upper16:11199440	@ tmp194,
	str	ip, [r4, fp]	@ prephitmp.6115, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r1, #0	@ __n,
	str	sl, [r4, r9]	@ <variable>.MaxSpsNum, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r0, [r4, r5]	@ __p, <variable>.DecSlicePara
	bne	.L2278	@,
.L2270:
	movw	fp, #:lower16:11199508	@ tmp199,
	movt	fp, #:upper16:11199508	@ tmp199,
	movw	r3, #:lower16:11199448	@ tmp198,
	movw	lr, #:lower16:11199464	@ tmp203,
	ldr	r9, [r4, fp]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	movt	r3, #:upper16:11199448	@ tmp198,
	movt	lr, #:upper16:11199464	@ tmp203,
	movw	ip, #:lower16:11199468	@ tmp205,
	movw	r2, #:lower16:11199472	@ tmp207,
	movt	ip, #:upper16:11199468	@ tmp205,
	movt	r2, #:upper16:11199472	@ tmp207,
	movw	fp, #:lower16:11199476	@ tmp209,
	movw	sl, #:lower16:11199484	@,
	movt	fp, #:upper16:11199476	@ tmp209,
	movt	sl, #:upper16:11199484	@,
	movw	r8, #:lower16:11199488	@,
	str	sl, [sp, #8]	@, %sfp
	movt	r8, #:upper16:11199488	@,
	movw	r7, #:lower16:11199492	@,
	str	r8, [sp, #12]	@, %sfp
	movt	r7, #:upper16:11199492	@,
	movw	r8, #:lower16:11197996	@ tmp219,
	str	r7, [sp, #16]	@, %sfp
	movt	r8, #:upper16:11197996	@ tmp219,
	movw	r7, #:lower16:11198000	@ tmp221,
	movw	r6, #:lower16:11199456	@,
	movt	r7, #:upper16:11198000	@ tmp221,
	movt	r6, #:upper16:11199456	@,
	movw	r5, #:lower16:11198024	@,
	str	r6, [sp, #20]	@, %sfp
	movt	r5, #:upper16:11198024	@,
	movw	sl, #:lower16:11198028	@ tmp227,
	str	r5, [sp, #24]	@, %sfp
	movt	sl, #:upper16:11198028	@ tmp227,
	movw	r6, #:lower16:11198032	@ tmp229,
	movw	r5, #:lower16:11198036	@ tmp231,
	movt	r6, #:upper16:11198032	@ tmp229,
	movt	r5, #:upper16:11198036	@ tmp231,
	movw	r1, #:lower16:11198040	@,
	movt	r1, #:upper16:11198040	@,
	str	r1, [sp, #28]	@, %sfp
	movw	r1, #:lower16:11198012	@,
	movt	r1, #:upper16:11198012	@,
	str	r1, [sp, #36]	@, %sfp
	movw	r1, #:lower16:11198016	@,
	movt	r1, #:upper16:11198016	@,
	str	r1, [sp, #44]	@, %sfp
	movw	r1, #:lower16:11198020	@ tmp243,
	movt	r1, #:upper16:11198020	@ tmp243,
	movw	r0, #:lower16:11199480	@,
	ubfx	r9, r9, #16, #2	@ tmp202, <variable>.advanced_cfg,,
	movt	r0, #:upper16:11199480	@,
	str	r0, [sp, #4]	@, %sfp
	movw	r0, #:lower16:11198004	@,
	movt	r0, #:upper16:11198004	@,
	str	r0, [sp, #32]	@, %sfp
	movw	r0, #:lower16:11199528	@,
	movt	r0, #:upper16:11199528	@,
	str	r0, [sp, #40]	@, %sfp
	add	r0, r4, #13568	@, pMvcCtx,
	str	r9, [r4, r3]	@ tmp202, <variable>.OldDecMode
	mov	r3, #0	@ tmp204,
	str	r3, [r4, sl]	@ tmp204, <variable>.pUsrDatArray
	mov	sl, #40	@ tmp220,
	str	r3, [r4, r6]	@ tmp204, <variable>.pUsrDatArray
	add	r0, r0, #32	@,,
	str	r3, [r4, r5]	@ tmp204, <variable>.pUsrDatArray
	mov	r5, r3	@ tmp284, tmp204
	str	r3, [r4, lr]	@ tmp204, <variable>.TotalNal
	str	r3, [r4, ip]	@ tmp204, <variable>.TotalSPS
	str	r3, [r4, r2]	@ tmp204, <variable>.TotalPPS
	str	r3, [r4, fp]	@ tmp204, <variable>.TotalSlice
	str	sl, [r4, r8]	@ tmp220, <variable>.TotalFsNum
	mov	r8, #18	@ tmp222,
	str	r8, [r4, r7]	@ tmp222, <variable>.TotalPmvNum
	mov	r7, #25	@ tmp244,
	str	r7, [r4, r1]	@ tmp244, <variable>.frame_rate
	movw	r1, #:lower16:10800896	@,
	ldr	ip, [sp, #4]	@, %sfp
	movt	r1, #:upper16:10800896	@,
	str	r3, [r4, ip]	@ tmp204, <variable>.SeqCnt
	ldr	r2, [sp, #8]	@, %sfp
	str	r3, [r4, r2]	@ tmp204, <variable>.TotalPicNum
	ldr	lr, [sp, #12]	@, %sfp
	str	r3, [r4, lr]	@ tmp204, <variable>.TotalFrameNum
	ldr	r6, [sp, #16]	@, %sfp
	str	r3, [r4, r6]	@ tmp204, <variable>.TotalFieldNum
	ldr	r8, [sp, #20]	@, %sfp
	str	r3, [r4, r8]	@ tmp204, <variable>.MutexHold
	ldr	r7, [sp, #24]	@, %sfp
	str	r3, [r4, r7]	@ tmp204, <variable>.TotalUsrDatNum
	movw	r7, #:lower16:10814508	@,
	ldr	ip, [sp, #28]	@, %sfp
	movt	r7, #:upper16:10814508	@,
	str	r3, [r4, ip]	@ tmp204, <variable>.pUsrDatArray
	ldr	r2, [sp, #32]	@, %sfp
	str	r3, [r4, r2]	@ tmp204, <variable>.AllowStartDec
	ldr	lr, [sp, #36]	@, %sfp
	str	r3, [r4, lr]	@ tmp204, <variable>.IDRFound
	ldr	r6, [sp, #40]	@, %sfp
	str	r3, [r4, r6]	@ tmp204, <variable>.FirstFrameDisplayed
	ldr	r8, [sp, #44]	@, %sfp
	str	r3, [r4, r8]	@ tmp204, <variable>.PPicFound
	bl	__memzero	@
	movw	r1, #:lower16:337528	@,
	add	r0, r4, r7	@, pMvcCtx,
	movt	r1, #:upper16:337528	@,
	bl	__memzero	@
	movw	r3, #:lower16:351124	@ ivtmp.6139,
	movw	ip, #:lower16:11152020	@ D.50569,
	movt	r3, #:upper16:351124	@ ivtmp.6139,
	movt	ip, #:upper16:11152020	@ D.50569,
	add	r3, r4, r3	@ ivtmp.6139, pMvcCtx, ivtmp.6139
	add	r1, r4, ip	@ D.50569, pMvcCtx, D.50569
.L2271:
	add	lr, r3, #335872	@ ivtmp.6139, ivtmp.6139,
	movw	r6, #:lower16:-337499	@ tmp254,
	add	ip, lr, #1648	@ ivtmp.6139, ivtmp.6139,
	movt	r6, #:upper16:-337499	@ tmp254,
	add	r2, r3, r6	@ tmp254, ivtmp.6139, tmp254
	str	r5, [r3, #0]	@ tmp284, <variable>.is_valid
	add	r3, ip, #8	@ ivtmp.6139, ivtmp.6139,
	cmp	r3, r1	@ ivtmp.6139, D.50569
	strb	r5, [r2, #0]	@ tmp284, <variable>.sps.is_valid
	bne	.L2271	@,
	movw	r7, #:lower16:10814496	@ tmp261,
	movw	r2, #:lower16:10814500	@ tmp263,
	movt	r7, #:upper16:10814496	@ tmp261,
	movt	r2, #:upper16:10814500	@ tmp263,
	movw	lr, #:lower16:10814504	@ tmp265,
	movw	ip, #:lower16:11152048	@ tmp267,
	movt	lr, #:upper16:10814504	@ tmp265,
	movt	ip, #:upper16:11152048	@ tmp267,
	movw	r6, #:lower16:11152036	@ tmp269,
	movw	r3, #:lower16:11155224	@ tmp272,
	movt	r6, #:upper16:11152036	@ tmp269,
	movt	r3, #:upper16:11155224	@ tmp272,
	movw	r1, #:lower16:11155248	@ tmp271,
	movw	r0, #:lower16:11154744	@,
	movt	r1, #:upper16:11155248	@ tmp271,
	movt	r0, #:upper16:11154744	@,
	mov	r8, #13568	@ tmp259,
	str	r5, [r4, r3]	@ tmp284, <variable>.PicCount
	add	r1, r4, r1	@ tmp271, pMvcCtx, tmp271
	add	r0, r4, r0	@, pMvcCtx,
	str	r1, [r4, r6]	@ tmp271, <variable>.pCurrSPS
	mov	r1, #480	@,
	str	r5, [r4, ip]	@ tmp284, <variable>.Init_Subsps_Flag
	mov	ip, #32	@ tmp264,
	str	r5, [r4, r8]	@ tmp284, <variable>.CurrNalMvcInfo.is_valid
	str	ip, [r4, lr]	@ tmp264, <variable>.CurrSUBSPSID
	str	ip, [r4, r2]	@ tmp264, <variable>.CurrSPSID
	str	r5, [r4, r7]	@ tmp284, <variable>.TotalSUBSPS
	bl	__memzero	@
	mov	r0, r4	@, pMvcCtx
	bl	VCTRL_GetChanIDByCtx	@
	movw	r3, #:lower16:11199520	@ tmp276,
	movt	r3, #:upper16:11199520	@ tmp276,
	cmn	r0, #1	@ D.44408,
	str	r0, [r4, r3]	@ D.44408, <variable>.ChanID
	beq	.L2275	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp284
	bl	MVC_ClearAll	@
	mov	r0, #1	@ D.44365,
.L2266:
	add	sp, sp, #52	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2277:
	cmp	r1, #0	@ tmp172,
	bne	.L2279	@,
.L2269:
	movw	r5, #:lower16:11155236	@ tmp187,
	movt	r5, #:upper16:11155236	@ tmp187,
	mov	r8, #2240	@ tmp188,
	ldr	ip, [r4, r5]	@ prephitmp.6115, <variable>.MaxPpsNum
	mul	r1, r8, ip	@ __n, tmp188, prephitmp.6115
	cmp	r1, #0	@ __n,
	beq	.L2268	@,
	mov	r0, r2	@, prephitmp.6117
	bl	__memzero	@
	ldr	ip, [r4, r5]	@ prephitmp.6115, <variable>.MaxPpsNum
	b	.L2268	@
.L2278:
	bl	__memzero	@
	b	.L2270	@
.L2276:
	ldr	r3, [r5, #580]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.stChanOption.s32MaxSpsNum
	movw	r0, #:lower16:11155232	@ tmp155,
	movt	r0, #:upper16:11155232	@ tmp155,
	movw	lr, #:lower16:11155236	@ tmp157,
	movt	lr, #:upper16:11155236	@ tmp157,
	movw	ip, #:lower16:11155228	@ tmp159,
	str	r3, [r4, r0]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.MaxSpsNum
	movt	ip, #:upper16:11155228	@ tmp159,
	ldr	r1, [r5, #584]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.stChanOption.s32MaxPpsNum
	str	r1, [r4, lr]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.MaxPpsNum
	ldr	r2, [r5, #576]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.stChanOption.s32MaxSliceNum
	str	r2, [r4, ip]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.MaxSliceNum
	b	.L2263	@
.L2279:
	bl	__memzero	@
	ldr	r2, [r4, r6]	@ prephitmp.6117, <variable>.PPS
	b	.L2269	@
.L2275:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #19	@ D.44365,
	b	.L2266	@
	.fnend
	.size	MVC_DEC_Init, .-MVC_DEC_Init
	.align	2
	.global	MVC_AllocFrameStore
	.type	MVC_AllocFrameStore, %function
MVC_AllocFrameStore:
	.fnstart
.LFB1705:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r3, #:lower16:11162625	@ tmp166,
	.pad #12
	sub	sp, sp, #12	@,,
	movt	r3, #:upper16:11162625	@ tmp166,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r1, [sp, #4]	@ IsDecGap, %sfp
	ldrb	r5, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L2282	@,
	movw	r1, #:lower16:11162626	@ tmp168,
	movt	r1, #:upper16:11162626	@ tmp168,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r5, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r5, #2	@ structure,
	moveq	r5, #1	@ structure,
.L2282:
	movw	r6, #:lower16:11199448	@ tmp170,
	ldr	ip, [sp, #4]	@, %sfp
	movt	r6, #:upper16:11199448	@ tmp170,
	cmp	ip, #1	@,
	ldr	r2, [r4, r6]	@ <variable>.OldDecMode, <variable>.OldDecMode
	moveq	r5, #0	@ structure,
	cmp	r2, #2	@ <variable>.OldDecMode,
	beq	.L2301	@,
	sub	r1, r5, #1	@ tmp178, structure,
	movw	r3, #:lower16:11196169	@ tmp175,
	cmp	r1, #1	@ tmp178,
	movt	r3, #:upper16:11196169	@ tmp175,
	mov	r2, #0	@ tmp176,
	strb	r2, [r4, r3]	@ tmp176, <variable>.CurrPic.field_pair_flag
	bls	.L2378	@,
.L2286:
	movw	r3, #:lower16:11197996	@ tmp286,
	movt	r3, #:upper16:11197996	@ tmp286,
	mov	r6, #0	@ tmp284,
	movw	r0, #:lower16:11196168	@ tmp283,
	ldr	sl, [r4, r3]	@ D.39686, <variable>.TotalFsNum
	movt	r0, #:upper16:11196168	@ tmp283,
	cmp	sl, r6	@ D.39686,
	strb	r6, [r4, r0]	@ tmp284, <variable>.CurrPic.state
	beq	.L2308	@,
	movw	r9, #:lower16:11168420	@ ivtmp.6181,
	movt	r9, #:upper16:11168420	@ ivtmp.6181,
	movw	fp, #:lower16:11169289	@ ivtmp.6186,
	add	r8, r4, r9	@ ivtmp.6181, pMvcCtx, ivtmp.6181
	movt	fp, #:upper16:11169289	@ ivtmp.6186,
	movw	r9, #:lower16:11168612	@ tmp447,
	movt	r9, #:upper16:11168612	@ tmp447,
	add	r7, r4, fp	@ ivtmp.6186, pMvcCtx, ivtmp.6186
	mov	fp, #672	@ tmp446,
.L2314:
	ldrb	r2, [r7, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.is_used,
	bne	.L2309	@,
	mul	lr, fp, r6	@ tmp289, tmp446, i
	movw	r1, #:lower16:11169288	@ tmp291,
	movt	r1, #:upper16:11169288	@ tmp291,
	add	ip, lr, r1	@ tmp291, tmp289, tmp291
	adds	r3, r4, ip	@ D.39682, pMvcCtx, tmp291
	beq	.L2310	@,
	ldr	lr, [r4, r9]	@ D.44944, <variable>.DPB.size
	cmp	lr, #0	@ D.44944,
	beq	.L2310	@,
	ldr	r2, [r8, #0]	@ D.44945, <variable>.DPB.fs
	sub	r0, lr, #1	@ tmp455, D.44944,
	and	r0, r0, #1	@ tmp457, tmp455,
	cmp	r2, #0	@ D.44945,
	beq	.L2327	@,
	cmp	r3, r2	@ D.39682, D.44945
	beq	.L2309	@,
.L2327:
	mov	r1, #1	@ i,
	cmp	r1, lr	@ i, D.44944
	add	r2, r8, #4	@ ivtmp.6181, ivtmp.6181,
	bcs	.L2310	@,
	cmp	r0, #0	@ tmp457,
	beq	.L2312	@,
	ldr	r0, [r8, #4]	@ D.44945, <variable>.DPB.fs
	cmp	r0, #0	@ D.44945,
	beq	.L2329	@,
	cmp	r3, r0	@ D.39682, D.44945
	beq	.L2309	@,
.L2329:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6181, ivtmp.6181,
	cmp	r1, lr	@ i, D.44944
	bcs	.L2310	@,
.L2312:
	ldr	r0, [r2, #0]	@ D.44945, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp458, i,
	add	ip, r2, #4	@ tmp459, ivtmp.6181,
	cmp	r0, #0	@ D.44945,
	beq	.L2311	@,
	cmp	r3, r0	@ D.39682, D.44945
	beq	.L2309	@,
.L2311:
	ldr	r2, [r2, #4]	@ D.44945, <variable>.DPB.fs
	cmp	r2, #0	@ D.44945,
	beq	.L2332	@,
	cmp	r3, r2	@ D.39682, D.44945
	beq	.L2309	@,
.L2332:
	add	r1, r1, #1	@ i, tmp458,
	add	r2, ip, #4	@ ivtmp.6181, tmp459,
	cmp	r1, lr	@ i, D.44944
	bcc	.L2312	@,
.L2310:
	mov	r7, #672	@ tmp305,
	movw	sl, #:lower16:11196168	@ tmp295,
	mla	r6, r7, r6, r4	@ tmp306, tmp305, i, pMvcCtx
	movt	sl, #:upper16:11196168	@ tmp295,
	movw	r7, #:lower16:11196640	@ tmp298,
	movw	lr, #:lower16:11196700	@ tmp300,
	movt	r7, #:upper16:11196640	@ tmp298,
	movt	lr, #:upper16:11196700	@ tmp300,
	movw	r8, #:lower16:11196184	@,
	movw	r9, #:lower16:11169296	@,
	movt	r8, #:upper16:11196184	@,
	movt	r9, #:upper16:11169296	@,
	add	r1, r6, r9	@, tmp306,
	str	r3, [r4, r7]	@ D.39682, <variable>.CurrPic.frame_store
	mov	r6, #0	@ tmp299,
	add	r0, r4, r8	@, pMvcCtx,
	mov	r2, #456	@,
	mov	r8, #1	@ tmp296,
	strb	r8, [r4, sl]	@ tmp296, <variable>.CurrPic.state
	str	r6, [r3, #624]	@ tmp299, <variable>.err_level
	mov	r3, #101	@ tmp301,
	str	r3, [r4, lr]	@ tmp301, <variable>.CurrPic.err_level
	bl	memcpy	@
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11196364	@ tmp312,
	movt	r0, #:upper16:11196364	@ tmp312,
	str	r6, [r4, r0]	@ tmp299, <variable>.CurrPic.fs_image.error_level
	strb	r6, [r1, #3]	@ tmp299, <variable>.mode_skip_flag
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [ip, #612]	@ tmp299, <variable>.is_displayed
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r6, [r2, #2]	@ tmp299, <variable>.is_reference
	ldr	r9, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [r9, #4]	@ tmp296, <variable>.is_in_dpb
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [r3, #608]	@ tmp299, <variable>.eFoState
	ldrb	r9, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r9, r8	@ <variable>.CurrPic.state,
	bne	.L2308	@,
	ldr	r2, [sp, #4]	@, %sfp
	movw	r8, #:lower16:11199520	@ tmp334,
	movt	r8, #:upper16:11199520	@ tmp334,
	rsbs	r1, r2, #1	@,
	movcc	r1, #0	@
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_NewLogicFs	@
	mov	r6, r0	@ LogicFsID,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r1, r6	@, LogicFsID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ tmp348, pstLFs.6217,
	movne	r3, #1	@ tmp348
	cmp	r6, #0	@ LogicFsID,
	mov	r8, r0	@ pstLFs.6217,
	movlt	r3, #0	@, tmp348,
	cmp	r3, #0	@ tmp348,
	beq	.L2315	@,
	ldr	r1, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r1, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	ip, #25	@ <variable>.eCapLevel,
	beq	.L2379	@,
.L2316:
	movw	r7, #:lower16:11196640	@ tmp362,
	movt	r7, #:upper16:11196640	@ tmp362,
	add	r1, r8, #8	@, pstLFs.6217,
	mov	r2, #456	@,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r0, lr, #8	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	add	r1, r3, #8	@, <variable>.CurrPic.frame_store,
	mov	r2, #456	@,
	add	r0, r4, r0	@, pMvcCtx,
	bl	memcpy	@
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	ip, #:lower16:11196724	@ tmp381,
	movt	ip, #:upper16:11196724	@ tmp381,
	str	r6, [r1, #584]	@ LogicFsID, <variable>.logic_fs_id
	ldrsb	r2, [r8, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	str	r2, [r4, ip]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
.L2317:
	ldr	r7, [sp, #4]	@, %sfp
	movw	ip, #:lower16:11196171	@ tmp390,
	movt	ip, #:upper16:11196171	@ tmp390,
	uxtb	r3, r5	@ D.39733, structure
	cmp	r7, #1	@,
	strb	r3, [r4, ip]	@ D.39733, <variable>.CurrPic.structure
	moveq	r0, #0	@ D.39633,
	beq	.L2296	@,
	movw	r7, #:lower16:11162625	@ tmp393,
	movt	r7, #:upper16:11162625	@ tmp393,
	movw	r1, #:lower16:11196640	@ tmp392,
	movt	r1, #:upper16:11196640	@ tmp392,
	ldrb	r9, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	fp, #:lower16:11196169	@ tmp396,
	ldr	r8, [r4, r1]	@ temp.6226, <variable>.CurrPic.frame_store
	movt	fp, #:upper16:11196169	@ tmp396,
	cmp	r9, #0	@ <variable>.CurrSlice.field_pic_flag,
	movne	r9, #3	@, iftmp.655,
	strb	r9, [r8, #464]	@ iftmp.655, <variable>.frame.structure
	ldrb	sl, [r4, fp]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	sl, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2380	@,
	movw	r2, #:lower16:11164280	@ tmp429,
	movt	r2, #:upper16:11164280	@ tmp429,
	movw	sl, #:lower16:11162644	@ tmp420,
	movw	r0, #:lower16:11162656	@ tmp423,
	ldr	r7, [r4, r2]	@, <variable>.CurrSlice.view_id
	movt	sl, #:upper16:11162644	@ tmp420,
	movt	r0, #:upper16:11162656	@ tmp423,
	movw	r1, #:lower16:11199536	@ tmp426,
	movt	r1, #:upper16:11199536	@ tmp426,
	ldr	r9, [r4, sl]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	sl, [r4, r0]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r8, #:lower16:11197336	@ tmp417,
	ldr	fp, [r4, r1]	@ <variable>.PicCounter, <variable>.PicCounter
	movt	r8, #:upper16:11197336	@ tmp417,
	str	r7, [sp, #4]	@, %sfp
	movw	ip, #:lower16:11197340	@ tmp422,
	movw	r7, #:lower16:11197344	@ tmp419,
	movt	ip, #:upper16:11197340	@ tmp422,
	movt	r7, #:upper16:11197344	@ tmp419,
	movw	r0, #:lower16:11197352	@ tmp425,
	movt	r0, #:upper16:11197352	@ tmp425,
	strb	r3, [r4, r8]	@ D.39733, <variable>.PrevPic.structure
	str	r9, [r4, r7]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	cmp	r5, #0	@ structure,
	str	fp, [r4, r0]	@ <variable>.PicCounter, <variable>.PrevPic.pic_counter
	movw	r1, #:lower16:11197368	@ tmp428,
	str	sl, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	movt	r1, #:upper16:11197368	@ tmp428,
	ldr	ip, [sp, #4]	@, %sfp
	movw	r2, #:lower16:11197356	@ tmp431,
	movw	r3, #:lower16:11197360	@ tmp432,
	movt	r2, #:upper16:11197356	@ tmp431,
	movt	r3, #:upper16:11197360	@ tmp432,
	movne	r0, #0	@ D.39633,
	moveq	r0, r5	@ D.39633, structure
	str	r6, [r4, r2]	@ LogicFsID, <variable>.PrevPic.image_id
	str	ip, [r4, r1]	@, <variable>.PrevPic.view_id
	movne	r2, #1	@ tmp433,
	streqb	r5, [r4, r3]	@ structure, <variable>.PrevPic.FrameStoreFlag
	strneb	r2, [r4, r3]	@ tmp433, <variable>.PrevPic.FrameStoreFlag
.L2296:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2309:
	add	r6, r6, #1	@ i, i,
	add	r7, r7, #672	@ ivtmp.6186, ivtmp.6186,
	cmp	sl, r6	@ D.39686, i
	bhi	.L2314	@,
.L2308:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39633,
	b	.L2296	@
.L2386:
	cmp	r3, #1	@ D.39600,
	beq	.L2300	@,
.L2301:
	movw	r3, #:lower16:11196169	@ tmp278,
	movt	r3, #:upper16:11196169	@ tmp278,
	mov	r2, #0	@ tmp279,
.L2375:
	strb	r2, [r4, r3]	@ tmp279, <variable>.CurrPic.field_pair_flag
	b	.L2286	@
.L2378:
	movw	r6, #:lower16:11197336	@ tmp179,
	movt	r6, #:upper16:11197336	@ tmp179,
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ D.39600, <variable>.PrevPic.structure
	cmp	r3, r2	@ D.39600,
	beq	.L2287	@,
	movw	r1, #:lower16:11197368	@ tmp180,
	movw	r6, #:lower16:11164280	@ tmp181,
	movt	r1, #:upper16:11197368	@ tmp180,
	movt	r6, #:upper16:11164280	@ tmp181,
	ldr	ip, [r4, r1]	@ <variable>.PrevPic.view_id, <variable>.PrevPic.view_id
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	ip, r2	@ <variable>.PrevPic.view_id, <variable>.CurrSlice.view_id
	beq	.L2288	@,
.L2287:
	movw	r0, #:lower16:11168612	@ tmp184,
	movt	r0, #:upper16:11168612	@ tmp184,
	ldr	r1, [r4, r0]	@ D.39604, <variable>.DPB.size
	subs	r3, r1, #1	@ j, D.39604,
	bmi	.L2286	@,
	movw	r8, #:lower16:2792104	@ tmp185,
	movt	r8, #:upper16:2792104	@ tmp185,
	add	r7, r1, r8	@ tmp185, D.39604, tmp185
	mov	lr, #0	@ tmp451,
	movw	ip, #:lower16:11196169	@ tmp450,
	movw	r6, #:lower16:11162644	@ tmp452,
	add	r2, r4, r7, asl #2	@, ivtmp.6195, pMvcCtx, tmp185,
	movw	r8, #:lower16:11162656	@ tmp454,
	movw	r7, #:lower16:11164280	@ tmp453,
	movt	ip, #:upper16:11196169	@ tmp450,
	ldr	r1, [r2], #4	@ D.39607, <variable>.DPB.fs
	movt	r6, #:upper16:11162644	@ tmp452,
	movt	r7, #:upper16:11164280	@ tmp453,
	movt	r8, #:upper16:11162656	@ tmp454,
	cmp	r1, lr	@ D.39607,
	and	r0, r3, #1	@ tmp461, j,
	beq	.L2334	@,
	cmp	r5, #1	@ structure,
	beq	.L2381	@,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #1	@ <variable>.is_used,
	beq	.L2338	@,
.L2336:
	strb	lr, [r4, ip]	@ tmp451, <variable>.CurrPic.field_pair_flag
.L2334:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r2, #4	@ ivtmp.6195, ivtmp.6195,
	bmi	.L2286	@,
	cmp	r0, #0	@ tmp461,
	beq	.L2298	@,
	ldr	r1, [r2, #-4]	@ D.39607, <variable>.DPB.fs
	cmp	r1, #0	@ D.39607,
	beq	.L2340	@,
	cmp	r5, #1	@ structure,
	beq	.L2382	@,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2344	@,
.L2342:
	strb	lr, [r4, ip]	@ tmp451, <variable>.CurrPic.field_pair_flag
.L2340:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r2, #4	@ ivtmp.6195, ivtmp.6195,
	bmi	.L2286	@,
.L2298:
	ldr	r1, [r2, #-4]	@ D.39607, <variable>.DPB.fs
	cmp	r1, #0	@ D.39607,
	beq	.L2289	@,
	cmp	r5, #1	@ structure,
	beq	.L2383	@,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2291	@,
.L2292:
	strb	lr, [r4, ip]	@ tmp451, <variable>.CurrPic.field_pair_flag
.L2289:
	sub	r2, r2, #4	@ tmp463, ivtmp.6195,
	sub	r3, r3, #1	@ j, j,
	ldr	r0, [r2, #-4]	@ D.39607, <variable>.DPB.fs
	mov	r1, r3	@ tmp462, j
	cmp	r0, #0	@ D.39607,
	beq	.L2347	@,
	cmp	r5, #1	@ structure,
	beq	.L2384	@,
	ldrb	sl, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #1	@ <variable>.is_used,
	beq	.L2351	@,
.L2349:
	strb	lr, [r4, ip]	@ tmp451, <variable>.CurrPic.field_pair_flag
.L2347:
	subs	r3, r1, #1	@ j, tmp462,
	sub	r2, r2, #4	@ ivtmp.6195, tmp463,
	bpl	.L2298	@,
	b	.L2286	@
.L2384:
	ldrb	sl, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #2	@ <variable>.is_used,
	bne	.L2349	@,
.L2351:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	sl, [r0, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, sl	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2349	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	sl, [r0, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, sl	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2349	@,
	ldr	sl, [r4, r8]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	sl, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2365	@,
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2349	@,
	b	.L2294	@
.L2383:
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #2	@ <variable>.is_used,
	bne	.L2292	@,
.L2291:
	ldr	sl, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	sl, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2292	@,
	ldr	sl, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	sl, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2292	@,
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2293	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L2292	@,
.L2294:
	movw	r6, #:lower16:2792104	@ tmp204,
	movt	r6, #:upper16:2792104	@ tmp204,
	add	r8, r3, r6	@ tmp204, j, tmp204
	movw	r7, #:lower16:11196169	@ tmp201,
	movw	r6, #:lower16:11196640	@ tmp210,
	movt	r7, #:upper16:11196169	@ tmp201,
	add	r8, r4, r8, asl #2	@, tmp208, pMvcCtx, tmp204,
	movt	r6, #:upper16:11196640	@ tmp210,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	ldr	sl, [r8, #4]	@ temp.6205, <variable>.DPB.fs
	mov	lr, #1	@ tmp202,
	add	r0, r4, r1	@, pMvcCtx,
	mov	r2, #456	@,
	strb	lr, [r4, r7]	@ tmp202, <variable>.CurrPic.field_pair_flag
	add	r1, sl, #8	@, temp.6205,
	str	sl, [r4, r6]	@ temp.6205, <variable>.CurrPic.frame_store
	bl	memcpy	@
	ldr	r0, [r8, #4]	@ tmp225, <variable>.DPB.fs
	movw	ip, #:lower16:11199520	@ tmp231,
	movt	ip, #:upper16:11199520	@ tmp231,
	ldr	r2, [r0, #584]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	str	r2, [sl, #584]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	ldr	r3, [r8, #4]	@ tmp234, <variable>.DPB.fs
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLFs
	beq	.L2385	@,
	ldrb	r2, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	movw	r3, #:lower16:11196724	@ tmp239,
	ldrsb	ip, [r0, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	movt	r3, #:upper16:11196724	@ tmp239,
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	str	ip, [r4, r3]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
	beq	.L2286	@,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	cmp	lr, #0	@ <variable>.CurrPic.frame_store,
	beq	.L2286	@,
.L2307:
	mov	r6, #0	@ LogicFsID,
	b	.L2317	@
.L2380:
	movw	r8, #:lower16:11199536	@ tmp408,
	movt	r8, #:upper16:11199536	@ tmp408,
	movw	fp, #:lower16:11162644	@ tmp402,
	movw	r2, #:lower16:11162656	@ tmp405,
	ldr	sl, [r4, r8]	@, <variable>.PicCounter
	movt	fp, #:upper16:11162644	@ tmp402,
	movt	r2, #:upper16:11162656	@ tmp405,
	movw	r5, #:lower16:11164280	@ tmp415,
	movt	r5, #:upper16:11164280	@ tmp415,
	ldr	r9, [r4, fp]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	fp, [r4, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r8, #:lower16:11197344	@ tmp401,
	str	sl, [sp, #4]	@, %sfp
	movt	r8, #:upper16:11197344	@ tmp401,
	ldr	sl, [r4, r5]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r7, #:lower16:11197340	@ tmp404,
	movw	r0, #:lower16:11197368	@ tmp414,
	movt	r7, #:upper16:11197340	@ tmp404,
	movt	r0, #:upper16:11197368	@ tmp414,
	str	r9, [r4, r8]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	str	fp, [r4, r7]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	movw	r1, #:lower16:11197336	@ tmp398,
	str	sl, [r4, r0]	@ <variable>.CurrSlice.view_id, <variable>.PrevPic.view_id
	movt	r1, #:upper16:11197336	@ tmp398,
	ldr	r7, [sp, #4]	@, %sfp
	movw	r5, #:lower16:11197352	@ tmp407,
	movw	ip, #:lower16:11197356	@ tmp410,
	movt	r5, #:upper16:11197352	@ tmp407,
	movt	ip, #:upper16:11197356	@ tmp410,
	movw	r3, #:lower16:11197360	@ tmp411,
	movt	r3, #:upper16:11197360	@ tmp411,
	mov	r2, #0	@ tmp399,
	mov	r0, r2	@ D.39633, tmp399
	str	r7, [r4, r5]	@, <variable>.PrevPic.pic_counter
	str	r6, [r4, ip]	@ LogicFsID, <variable>.PrevPic.image_id
	strb	r2, [r4, r1]	@ tmp399, <variable>.PrevPic.structure
	strb	r2, [r4, r3]	@ tmp399, <variable>.PrevPic.FrameStoreFlag
	b	.L2296	@
.L2379:
	movw	r3, #13564	@ tmp351,
	ldr	ip, [r0, #180]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	ldr	r7, [r4, r3]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	movw	lr, #13560	@ tmp354,
	ldr	r2, [r4, lr]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	r0, [r0, #112]	@ <variable>.stDispImg.luma_phy_addr, <variable>.stDispImg.luma_phy_addr
	mov	r1, r7, asl #4	@ HeightAligh, <variable>.CurHeightInMb,
	str	r1, [r8, #156]	@ HeightAligh, <variable>.stDispImg.image_height
	mov	lr, r2, asl #4	@ tmp356, <variable>.CurWidthInMb,
	str	lr, [r8, #152]	@ tmp356, <variable>.stDispImg.image_width
	mul	r7, ip, r1	@ ChromOffset, <variable>.stDispImg.image_stride, HeightAligh
	add	r0, r7, r0	@ D.39710, ChromOffset, <variable>.stDispImg.luma_phy_addr
	str	r0, [r8, #116]	@ D.39710, <variable>.stDispImg.chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r8, #128]	@ <variable>.stDispImg.luma_2d_phy_addr, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r1, [r8, #96]	@ <variable>.stDispImg.top_luma_phy_addr, <variable>.stDispImg.top_luma_phy_addr
	add	r3, r7, r3	@ D.39724, ChromOffset, <variable>.stDispImg.luma_2d_phy_addr
	ldr	ip, [r8, #180]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	add	r7, r7, r1	@ D.39717, ChromOffset, <variable>.stDispImg.top_luma_phy_addr
	str	r3, [r8, #132]	@ D.39724, <variable>.stDispImg.chrom_2d_phy_addr
	add	r2, r7, ip	@ tmp360, D.39717, <variable>.stDispImg.image_stride
	str	r7, [r8, #100]	@ D.39717, <variable>.stDispImg.top_chrom_phy_addr
	str	r2, [r8, #108]	@ tmp360, <variable>.stDispImg.btm_chrom_phy_addr
	str	r0, [r8, #44]	@, <variable>.stDispImg.chrom_vir_addr
	mov	r0, r3	@, D.39724
	bl	MEM_Phy2Vir	@
	str	r0, [r8, #60]	@, <variable>.stDispImg.chrom_2d_vir_addr
	b	.L2316	@
.L2382:
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #2	@ <variable>.is_used,
	bne	.L2342	@,
.L2344:
	ldr	sl, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	sl, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2342	@,
	ldr	sl, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	sl, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2342	@,
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2363	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2342	@,
	b	.L2294	@
.L2381:
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #2	@ <variable>.is_used,
	bne	.L2336	@,
.L2338:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	sl, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, sl	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2336	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, sl	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2336	@,
	ldr	sl, [r4, r8]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	sl, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2361	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2336	@,
	b	.L2294	@
.L2288:
	cmp	r5, #2	@ structure,
	beq	.L2386	@,
	cmp	r3, #2	@ D.39600,
	bne	.L2301	@,
.L2300:
	movw	r6, #:lower16:11199448	@ tmp246,
	movt	r6, #:upper16:11199448	@ tmp246,
	ldr	r1, [r4, r6]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r1, #2	@ <variable>.OldDecMode,
	beq	.L2302	@,
	movw	r2, #:lower16:11197344	@ tmp248,
	movw	r1, #:lower16:11162644	@ tmp249,
	movt	r2, #:upper16:11197344	@ tmp248,
	movt	r1, #:upper16:11162644	@ tmp249,
	ldr	ip, [r4, r2]	@ <variable>.PrevPic.frame_num, <variable>.PrevPic.frame_num
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	cmp	ip, r3	@ <variable>.PrevPic.frame_num, <variable>.CurrSlice.frame_num
	bne	.L2286	@,
.L2302:
	movw	ip, #:lower16:11162656	@ tmp252,
	movt	ip, #:upper16:11162656	@ tmp252,
	ldr	r6, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2303	@,
	movw	r1, #:lower16:11197340	@ tmp254,
	movt	r1, #:upper16:11197340	@ tmp254,
	ldr	r3, [r4, r1]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.PrevPic.nal_ref_idc,
	bne	.L2286	@,
.L2304:
	movw	r2, #:lower16:11199536	@ tmp258,
	movw	r6, #:lower16:11199532	@ tmp259,
	movt	r2, #:upper16:11199536	@ tmp258,
	movt	r6, #:upper16:11199532	@ tmp259,
	ldr	r1, [r4, r2]	@ <variable>.PicCounter, <variable>.PicCounter
	ldr	r3, [r4, r6]	@ <variable>.PrevStorePicCounter, <variable>.PrevStorePicCounter
	rsb	ip, r3, r1	@ tmp260, <variable>.PrevStorePicCounter, <variable>.PicCounter
	cmp	ip, #2	@ tmp260,
	bhi	.L2286	@,
	movw	ip, #:lower16:11196640	@ tmp266,
	movt	ip, #:upper16:11196640	@ tmp266,
	movw	r3, #:lower16:11196169	@ tmp263,
	movt	r3, #:upper16:11196169	@ tmp263,
	ldr	r2, [r4, ip]	@ D.39627, <variable>.CurrPic.frame_store
	mov	r1, #1	@ tmp264,
	strb	r1, [r4, r3]	@ tmp264, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ D.39627,
	beq	.L2375	@,
	cmp	r5, #2	@ structure,
	beq	.L2387	@,
	ldrb	r1, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r1, #2	@ <variable>.is_used,
	beq	.L2307	@,
.L2376:
	mov	sl, #0	@ tmp273,
	strb	sl, [r4, r3]	@ tmp273, <variable>.CurrPic.field_pair_flag
	b	.L2286	@
.L2293:
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #0	@ <variable>.is_reference,
	beq	.L2292	@,
	b	.L2294	@
.L2365:
	ldrb	sl, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #0	@ <variable>.is_reference,
	bne	.L2349	@,
	b	.L2294	@
.L2315:
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r4, sl]	@ tmp348, <variable>.CurrPic.state
	strb	r3, [r2, #4]	@ tmp348, <variable>.is_in_dpb
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r9	@, <variable>.CurrPic.state
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39633,
	b	.L2296	@
.L2385:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.39633,
	b	.L2296	@
.L2387:
	ldrb	r6, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r6, r1	@ <variable>.is_used,
	bne	.L2376	@,
	mov	r6, #0	@ LogicFsID,
	b	.L2317	@
.L2303:
	movw	r6, #:lower16:11197340	@ tmp256,
	movt	r6, #:upper16:11197340	@ tmp256,
	ldr	r2, [r4, r6]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r2, #0	@ <variable>.PrevPic.nal_ref_idc,
	beq	.L2286	@,
	b	.L2304	@
.L2361:
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #0	@ <variable>.is_reference,
	bne	.L2336	@,
	b	.L2294	@
.L2363:
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #0	@ <variable>.is_reference,
	bne	.L2342	@,
	b	.L2294	@
	.fnend
	.size	MVC_AllocFrameStore, .-MVC_AllocFrameStore
	.align	2
	.global	MVC_OutputFrmToVO
	.type	MVC_OutputFrmToVO, %function
MVC_OutputFrmToVO:
	.fnstart
.LFB1646:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	cmp	r0, #0	@ pMvcCtx,
	cmpne	r1, #0	@, pFrameStore,
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movne	r3, #0	@, tmp153
	moveq	r3, #1	@, tmp153
	.pad #8
	sub	sp, sp, #8	@,,
	mov	r5, r1	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r2	@ is_last_frame, is_last_frame
	beq	.L2405	@,
	ldr	r1, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L2391	@,
	movw	r2, #:lower16:11199448	@ tmp156,
	movt	r2, #:upper16:11199448	@ tmp156,
	ldr	ip, [r0, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	ip, #2	@ <variable>.OldDecMode,
	beq	.L2391	@,
	movw	ip, #:lower16:11197372	@ tmp158,
	movt	ip, #:upper16:11197372	@ tmp158,
	ldr	r1, [r0, ip]	@ D.36623, <variable>.pDirectOutBuf
	cmp	r1, #0	@ D.36623,
	strneb	r3, [r1, #1]	@ tmp153, <variable>.is_used
	movne	r0, #1	@ D.36615,
	strne	r3, [r4, ip]	@ tmp153, <variable>.pDirectOutBuf
	beq	.L2392	@,
.L2390:
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
.L2391:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	cmn	r0, #3	@,
	beq	.L2392	@,
	movw	r7, #:lower16:11197372	@ tmp163,
	movt	r7, #:upper16:11197372	@ tmp163,
	ldr	r1, [r4, r7]	@ temp.6266, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6266,
	beq	.L2393	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r7]	@, <variable>.pDirectOutBuf
	bl	MVC_CheckFrameStore	@
	cmp	r0, #0	@ ret.6268
	beq	.L2406	@,
	cmn	r0, #3	@ ret.6268,
	beq	.L2398	@,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r3, #184]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
.L2398:
	movw	ip, #:lower16:11197372	@ tmp212,
	movt	ip, #:upper16:11197372	@ tmp212,
	mov	lr, #0	@ tmp213,
	ldr	r0, [r4, ip]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	lr, [r0, #1]	@ tmp213, <variable>.is_used
	str	lr, [r4, ip]	@ tmp213, <variable>.pDirectOutBuf
.L2393:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	cmp	r0, #0	@,
	beq	.L2407	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r5, #184]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
	mov	r0, #2	@ D.36615,
	b	.L2390	@
.L2405:
	bl	vfmw_dprint_nothing	@
	mov	r0, #2	@ D.36615,
	b	.L2390	@
.L2392:
	mov	r0, #1	@ D.36615,
	b	.L2390	@
.L2406:
	ldr	r0, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r8, #:lower16:11199520	@ tmp166,
	movt	r8, #:upper16:11199520	@ tmp166,
	mov	r2, #1	@,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r8, r0, #0	@ pstLogicFsImage,
	beq	.L2404	@,
	ldr	lr, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11199520	@ tmp186,
	movt	r7, #:upper16:11199520	@ tmp186,
	mov	r1, #15	@,
	cmp	r6, #1	@ is_last_frame,
	cmpeq	lr, r5	@, <variable>.pDirectOutBuf, pFrameStore
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #8	@, pMvcCtx,
	moveq	lr, #1	@ tmp185,
	streq	lr, [r8, #216]	@ tmp185, <variable>.last_frame
	ldr	r0, [r4, r7]	@ <variable>.ChanID, <variable>.ChanID
	str	r8, [sp, #0]	@ pstLogicFsImage,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	bne	.L2408	@,
	mov	r1, r8	@, pstLogicFsImage
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	movw	r1, #:lower16:11199552	@ tmp200,
	movw	r3, #:lower16:11199544	@ tmp204,
	movt	r1, #:upper16:11199552	@ tmp200,
	movt	r3, #:upper16:11199544	@ tmp204,
	ldr	r2, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	ip, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r2, #1	@ tmp203, <variable>.numOutputFrame,
	str	r0, [r4, r1]	@ tmp203, <variable>.numOutputFrame
	add	r2, ip, #2	@ tmp207, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp207, <variable>.PicOutCounter
	b	.L2398	@
.L2407:
	movw	r7, #:lower16:11199520	@ tmp217,
	movt	r7, #:upper16:11199520	@ tmp217,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage.6286,
	beq	.L2404	@,
	cmp	r6, #1	@ is_last_frame,
	streq	r6, [r7, #216]	@ is_last_frame, <variable>.last_frame
	movw	r6, #:lower16:11199520	@ tmp224,
	movt	r6, #:upper16:11199520	@ tmp224,
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	ldr	r0, [r4, r6]	@ <variable>.ChanID, <variable>.ChanID
	add	r3, r4, #8	@, pMvcCtx,
	str	r7, [sp, #0]	@ pstLogicFsImage.6286,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	bne	.L2409	@,
	mov	r1, r7	@, pstLogicFsImage.6286
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	movw	r2, #:lower16:11199552	@ tmp230,
	movw	r3, #:lower16:11199544	@ tmp234,
	movt	r2, #:upper16:11199552	@ tmp230,
	movt	r3, #:upper16:11199544	@ tmp234,
	mov	r0, #0	@ D.36615,
	ldr	ip, [r4, r2]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	r1, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	ip, ip, #1	@ tmp233, <variable>.numOutputFrame,
	str	ip, [r4, r2]	@ tmp233, <variable>.numOutputFrame
	add	r2, r1, #2	@ tmp237, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp237, <variable>.PicOutCounter
	b	.L2390	@
.L2408:
	movw	r5, #:lower16:11197372	@ tmp190,
	movt	r5, #:upper16:11197372	@ tmp190,
	bl	vfmw_dprint_nothing	@
	mov	r6, #0	@ tmp191,
	ldr	r1, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, r6	@, tmp191
	strb	r6, [r1, #1]	@ tmp191, <variable>.is_used
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	str	r6, [r4, r5]	@ tmp191, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.36615,
	b	.L2390	@
.L2409:
	bl	vfmw_dprint_nothing	@
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.36615,
	b	.L2390	@
.L2404:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.36615,
	b	.L2390	@
	.fnend
	.size	MVC_OutputFrmToVO, .-MVC_OutputFrmToVO
	.align	2
	.global	MVC_InitDPB
	.type	MVC_InitDPB, %function
MVC_InitDPB:
	.fnstart
.LFB1697:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearAllSlice	@
	movw	r3, #:lower16:11168420	@ tmp191,
	movt	r3, #:upper16:11168420	@ tmp191,
	ldr	r2, [r4, r3]	@ temp.6364, <variable>.DPB.fs
	cmp	r2, #0	@ temp.6364,
	beq	.L2411	@,
	movw	r5, #:lower16:11199520	@ tmp192,
	movt	r5, #:upper16:11199520	@ tmp192,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2411:
	movw	r0, #:lower16:11168484	@ tmp195,
	movt	r0, #:upper16:11168484	@ tmp195,
	ldr	r2, [r4, r0]	@ temp.6363, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6363,
	beq	.L2412	@,
	movw	r6, #:lower16:11199520	@ tmp196,
	movt	r6, #:upper16:11199520	@ tmp196,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2412:
	movw	r1, #:lower16:11168548	@ tmp199,
	movt	r1, #:upper16:11168548	@ tmp199,
	ldr	r2, [r4, r1]	@ temp.6366, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6366,
	beq	.L2413	@,
	movw	r7, #:lower16:11199520	@ tmp200,
	movt	r7, #:upper16:11199520	@ tmp200,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2413:
	movw	lr, #:lower16:11168420	@ tmp207,
	movw	ip, #:lower16:11168424	@ tmp209,
	movt	lr, #:upper16:11168420	@ tmp207,
	movt	ip, #:upper16:11168424	@ tmp209,
	mov	r2, #0	@ tmp204,
	movw	sl, #:lower16:11168548	@ tmp203,
	str	r2, [r4, lr]	@ tmp204, <variable>.DPB.fs
	movt	sl, #:upper16:11168548	@ tmp203,
	ldr	r0, [r4, ip]	@ temp.6369, <variable>.DPB.fs
	movw	r8, #:lower16:11168484	@ tmp205,
	movt	r8, #:upper16:11168484	@ tmp205,
	str	r2, [r4, sl]	@ tmp204, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6369,
	str	r2, [r4, r8]	@ tmp204, <variable>.DPB.fs_ref
	beq	.L2414	@,
	movw	r3, #:lower16:11199520	@ tmp210,
	movt	r3, #:upper16:11199520	@ tmp210,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2414:
	movw	r5, #:lower16:11168488	@ tmp213,
	movt	r5, #:upper16:11168488	@ tmp213,
	ldr	r2, [r4, r5]	@ temp.6372, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6372,
	beq	.L2415	@,
	movw	r6, #:lower16:11199520	@ tmp214,
	movt	r6, #:upper16:11199520	@ tmp214,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2415:
	movw	r0, #:lower16:11168552	@ tmp217,
	movt	r0, #:upper16:11168552	@ tmp217,
	ldr	r2, [r4, r0]	@ temp.6375, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6375,
	beq	.L2416	@,
	movw	r7, #:lower16:11199520	@ tmp218,
	movt	r7, #:upper16:11199520	@ tmp218,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2416:
	movw	ip, #:lower16:11168424	@ tmp225,
	movw	sl, #:lower16:11168428	@ tmp227,
	movt	ip, #:upper16:11168424	@ tmp225,
	movt	sl, #:upper16:11168428	@ tmp227,
	mov	r2, #0	@ tmp222,
	movw	r1, #:lower16:11168552	@ tmp221,
	str	r2, [r4, ip]	@ tmp222, <variable>.DPB.fs
	movt	r1, #:upper16:11168552	@ tmp221,
	ldr	r0, [r4, sl]	@ temp.6378, <variable>.DPB.fs
	movw	r8, #:lower16:11168488	@ tmp223,
	movt	r8, #:upper16:11168488	@ tmp223,
	str	r2, [r4, r1]	@ tmp222, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6378,
	str	r2, [r4, r8]	@ tmp222, <variable>.DPB.fs_ref
	beq	.L2417	@,
	movw	lr, #:lower16:11199520	@ tmp228,
	movt	lr, #:upper16:11199520	@ tmp228,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2417:
	movw	r3, #:lower16:11168492	@ tmp231,
	movt	r3, #:upper16:11168492	@ tmp231,
	ldr	r2, [r4, r3]	@ temp.6381, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6381,
	beq	.L2418	@,
	movw	r5, #:lower16:11199520	@ tmp232,
	movt	r5, #:upper16:11199520	@ tmp232,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2418:
	movw	r6, #:lower16:11168556	@ tmp235,
	movt	r6, #:upper16:11168556	@ tmp235,
	ldr	r2, [r4, r6]	@ temp.6384, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6384,
	beq	.L2419	@,
	movw	r7, #:lower16:11199520	@ tmp236,
	movt	r7, #:upper16:11199520	@ tmp236,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2419:
	movw	r0, #:lower16:11168428	@ tmp243,
	movw	sl, #:lower16:11168432	@ tmp245,
	movt	r0, #:upper16:11168428	@ tmp243,
	movt	sl, #:upper16:11168432	@ tmp245,
	mov	r2, #0	@ tmp240,
	movw	r1, #:lower16:11168556	@ tmp239,
	str	r2, [r4, r0]	@ tmp240, <variable>.DPB.fs
	movt	r1, #:upper16:11168556	@ tmp239,
	ldr	r0, [r4, sl]	@ temp.6387, <variable>.DPB.fs
	movw	r8, #:lower16:11168492	@ tmp241,
	movt	r8, #:upper16:11168492	@ tmp241,
	str	r2, [r4, r1]	@ tmp240, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6387,
	str	r2, [r4, r8]	@ tmp240, <variable>.DPB.fs_ref
	beq	.L2420	@,
	movw	ip, #:lower16:11199520	@ tmp246,
	movt	ip, #:upper16:11199520	@ tmp246,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2420:
	movw	lr, #:lower16:11168496	@ tmp249,
	movt	lr, #:upper16:11168496	@ tmp249,
	ldr	r2, [r4, lr]	@ temp.6390, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6390,
	beq	.L2421	@,
	movw	r3, #:lower16:11199520	@ tmp250,
	movt	r3, #:upper16:11199520	@ tmp250,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2421:
	movw	r5, #:lower16:11168560	@ tmp253,
	movt	r5, #:upper16:11168560	@ tmp253,
	ldr	r2, [r4, r5]	@ temp.6393, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6393,
	beq	.L2422	@,
	movw	r6, #:lower16:11199520	@ tmp254,
	movt	r6, #:upper16:11199520	@ tmp254,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2422:
	movw	r1, #:lower16:11168432	@ tmp261,
	movw	sl, #:lower16:11168436	@ tmp263,
	movt	r1, #:upper16:11168432	@ tmp261,
	movt	sl, #:upper16:11168436	@ tmp263,
	mov	r7, #0	@ tmp258,
	movw	r8, #:lower16:11168560	@ tmp257,
	str	r7, [r4, r1]	@ tmp258, <variable>.DPB.fs
	movt	r8, #:upper16:11168560	@ tmp257,
	ldr	r0, [r4, sl]	@ temp.6396, <variable>.DPB.fs
	movw	r2, #:lower16:11168496	@ tmp259,
	movt	r2, #:upper16:11168496	@ tmp259,
	str	r7, [r4, r8]	@ tmp258, <variable>.DPB.fs_ltref
	cmp	r0, r7	@ temp.6396,
	str	r7, [r4, r2]	@ tmp258, <variable>.DPB.fs_ref
	beq	.L2423	@,
	movw	ip, #:lower16:11199520	@ tmp264,
	movt	ip, #:upper16:11199520	@ tmp264,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2423:
	movw	r0, #:lower16:11168500	@ tmp267,
	movt	r0, #:upper16:11168500	@ tmp267,
	ldr	r2, [r4, r0]	@ temp.6399, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6399,
	beq	.L2424	@,
	movw	lr, #:lower16:11199520	@ tmp268,
	movt	lr, #:upper16:11199520	@ tmp268,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2424:
	movw	r3, #:lower16:11168564	@ tmp271,
	movt	r3, #:upper16:11168564	@ tmp271,
	ldr	r2, [r4, r3]	@ temp.6402, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6402,
	beq	.L2425	@,
	movw	r5, #:lower16:11199520	@ tmp272,
	movt	r5, #:upper16:11199520	@ tmp272,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2425:
	movw	sl, #:lower16:11168436	@ tmp279,
	movw	r8, #:lower16:11168440	@ tmp281,
	movt	sl, #:upper16:11168436	@ tmp279,
	movt	r8, #:upper16:11168440	@ tmp281,
	mov	r6, #0	@ tmp276,
	movw	r2, #:lower16:11168564	@ tmp275,
	str	r6, [r4, sl]	@ tmp276, <variable>.DPB.fs
	movt	r2, #:upper16:11168564	@ tmp275,
	ldr	r0, [r4, r8]	@ temp.6405, <variable>.DPB.fs
	movw	r7, #:lower16:11168500	@ tmp277,
	movt	r7, #:upper16:11168500	@ tmp277,
	str	r6, [r4, r2]	@ tmp276, <variable>.DPB.fs_ltref
	cmp	r0, r6	@ temp.6405,
	str	r6, [r4, r7]	@ tmp276, <variable>.DPB.fs_ref
	beq	.L2426	@,
	movw	ip, #:lower16:11199520	@ tmp282,
	movt	ip, #:upper16:11199520	@ tmp282,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2426:
	movw	r1, #:lower16:11168504	@ tmp285,
	movt	r1, #:upper16:11168504	@ tmp285,
	ldr	r2, [r4, r1]	@ temp.6408, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6408,
	beq	.L2427	@,
	movw	lr, #:lower16:11199520	@ tmp286,
	movt	lr, #:upper16:11199520	@ tmp286,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2427:
	movw	r0, #:lower16:11168568	@ tmp289,
	movt	r0, #:upper16:11168568	@ tmp289,
	ldr	r2, [r4, r0]	@ temp.6411, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6411,
	beq	.L2428	@,
	movw	r3, #:lower16:11199520	@ tmp290,
	movt	r3, #:upper16:11199520	@ tmp290,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2428:
	movw	r8, #:lower16:11168440	@ tmp297,
	movw	r2, #:lower16:11168444	@ tmp299,
	movt	r8, #:upper16:11168440	@ tmp297,
	movt	r2, #:upper16:11168444	@ tmp299,
	mov	r5, #0	@ tmp294,
	movw	r7, #:lower16:11168568	@ tmp293,
	str	r5, [r4, r8]	@ tmp294, <variable>.DPB.fs
	movt	r7, #:upper16:11168568	@ tmp293,
	ldr	r0, [r4, r2]	@ temp.6414, <variable>.DPB.fs
	movw	r6, #:lower16:11168504	@ tmp295,
	movt	r6, #:upper16:11168504	@ tmp295,
	str	r5, [r4, r7]	@ tmp294, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6414,
	str	r5, [r4, r6]	@ tmp294, <variable>.DPB.fs_ref
	beq	.L2429	@,
	movw	sl, #:lower16:11199520	@ tmp300,
	movt	sl, #:upper16:11199520	@ tmp300,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2429:
	movw	ip, #:lower16:11168508	@ tmp303,
	movt	ip, #:upper16:11168508	@ tmp303,
	ldr	r2, [r4, ip]	@ temp.6417, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6417,
	beq	.L2430	@,
	movw	lr, #:lower16:11199520	@ tmp304,
	movt	lr, #:upper16:11199520	@ tmp304,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2430:
	movw	r1, #:lower16:11168572	@ tmp307,
	movt	r1, #:upper16:11168572	@ tmp307,
	ldr	r2, [r4, r1]	@ temp.6420, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6420,
	beq	.L2431	@,
	movw	r3, #:lower16:11199520	@ tmp308,
	movt	r3, #:upper16:11199520	@ tmp308,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2431:
	movw	r0, #:lower16:11168444	@ tmp315,
	movw	r2, #:lower16:11168448	@ tmp317,
	movt	r0, #:upper16:11168444	@ tmp315,
	movt	r2, #:upper16:11168448	@ tmp317,
	mov	r5, #0	@ tmp312,
	movw	r7, #:lower16:11168572	@ tmp311,
	str	r5, [r4, r0]	@ tmp312, <variable>.DPB.fs
	movt	r7, #:upper16:11168572	@ tmp311,
	ldr	r0, [r4, r2]	@ temp.6423, <variable>.DPB.fs
	movw	r6, #:lower16:11168508	@ tmp313,
	movt	r6, #:upper16:11168508	@ tmp313,
	str	r5, [r4, r7]	@ tmp312, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6423,
	str	r5, [r4, r6]	@ tmp312, <variable>.DPB.fs_ref
	beq	.L2432	@,
	movw	r8, #:lower16:11199520	@ tmp318,
	movt	r8, #:upper16:11199520	@ tmp318,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2432:
	movw	sl, #:lower16:11168512	@ tmp321,
	movt	sl, #:upper16:11168512	@ tmp321,
	ldr	r2, [r4, sl]	@ temp.6426, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6426,
	beq	.L2433	@,
	movw	ip, #:lower16:11199520	@ tmp322,
	movt	ip, #:upper16:11199520	@ tmp322,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2433:
	movw	lr, #:lower16:11168576	@ tmp325,
	movt	lr, #:upper16:11168576	@ tmp325,
	ldr	r2, [r4, lr]	@ temp.6429, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6429,
	beq	.L2434	@,
	movw	r3, #:lower16:11199520	@ tmp326,
	movt	r3, #:upper16:11199520	@ tmp326,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2434:
	movw	r2, #:lower16:11168448	@ tmp333,
	movw	r7, #:lower16:11168452	@ tmp335,
	movt	r2, #:upper16:11168448	@ tmp333,
	movt	r7, #:upper16:11168452	@ tmp335,
	mov	r5, #0	@ tmp330,
	movw	r1, #:lower16:11168576	@ tmp329,
	str	r5, [r4, r2]	@ tmp330, <variable>.DPB.fs
	movt	r1, #:upper16:11168576	@ tmp329,
	ldr	r0, [r4, r7]	@ temp.6432, <variable>.DPB.fs
	movw	r6, #:lower16:11168512	@ tmp331,
	movt	r6, #:upper16:11168512	@ tmp331,
	str	r5, [r4, r1]	@ tmp330, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6432,
	str	r5, [r4, r6]	@ tmp330, <variable>.DPB.fs_ref
	beq	.L2435	@,
	movw	r8, #:lower16:11199520	@ tmp336,
	movt	r8, #:upper16:11199520	@ tmp336,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2435:
	movw	r0, #:lower16:11168516	@ tmp339,
	movt	r0, #:upper16:11168516	@ tmp339,
	ldr	r2, [r4, r0]	@ temp.6435, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6435,
	beq	.L2436	@,
	movw	sl, #:lower16:11199520	@ tmp340,
	movt	sl, #:upper16:11199520	@ tmp340,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2436:
	movw	ip, #:lower16:11168580	@ tmp343,
	movt	ip, #:upper16:11168580	@ tmp343,
	ldr	r2, [r4, ip]	@ temp.6438, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6438,
	beq	.L2437	@,
	movw	lr, #:lower16:11199520	@ tmp344,
	movt	lr, #:upper16:11199520	@ tmp344,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2437:
	movw	r1, #:lower16:11168452	@ tmp351,
	movw	r7, #:lower16:11168456	@ tmp353,
	movt	r1, #:upper16:11168452	@ tmp351,
	movt	r7, #:upper16:11168456	@ tmp353,
	mov	r5, #0	@ tmp348,
	movw	r6, #:lower16:11168580	@ tmp347,
	str	r5, [r4, r1]	@ tmp348, <variable>.DPB.fs
	movt	r6, #:upper16:11168580	@ tmp347,
	ldr	r0, [r4, r7]	@ temp.6441, <variable>.DPB.fs
	movw	r3, #:lower16:11168516	@ tmp349,
	movt	r3, #:upper16:11168516	@ tmp349,
	str	r5, [r4, r6]	@ tmp348, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6441,
	str	r5, [r4, r3]	@ tmp348, <variable>.DPB.fs_ref
	beq	.L2438	@,
	movw	r8, #:lower16:11199520	@ tmp354,
	movt	r8, #:upper16:11199520	@ tmp354,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2438:
	movw	r0, #:lower16:11168520	@ tmp357,
	movt	r0, #:upper16:11168520	@ tmp357,
	ldr	r2, [r4, r0]	@ temp.6444, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6444,
	beq	.L2439	@,
	movw	sl, #:lower16:11199520	@ tmp358,
	movt	sl, #:upper16:11199520	@ tmp358,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2439:
	movw	ip, #:lower16:11168584	@ tmp361,
	movt	ip, #:upper16:11168584	@ tmp361,
	ldr	r2, [r4, ip]	@ temp.6447, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6447,
	beq	.L2440	@,
	movw	lr, #:lower16:11199520	@ tmp362,
	movt	lr, #:upper16:11199520	@ tmp362,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2440:
	movw	r7, #:lower16:11168456	@ tmp369,
	movw	r6, #:lower16:11168460	@ tmp371,
	movt	r7, #:upper16:11168456	@ tmp369,
	movt	r6, #:upper16:11168460	@ tmp371,
	mov	r2, #0	@ tmp366,
	movw	r3, #:lower16:11168584	@ tmp365,
	str	r2, [r4, r7]	@ tmp366, <variable>.DPB.fs
	movt	r3, #:upper16:11168584	@ tmp365,
	ldr	r0, [r4, r6]	@ temp.6450, <variable>.DPB.fs
	movw	r5, #:lower16:11168520	@ tmp367,
	movt	r5, #:upper16:11168520	@ tmp367,
	str	r2, [r4, r3]	@ tmp366, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6450,
	str	r2, [r4, r5]	@ tmp366, <variable>.DPB.fs_ref
	beq	.L2441	@,
	movw	r8, #:lower16:11199520	@ tmp372,
	movt	r8, #:upper16:11199520	@ tmp372,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2441:
	movw	r1, #:lower16:11168524	@ tmp375,
	movt	r1, #:upper16:11168524	@ tmp375,
	ldr	r2, [r4, r1]	@ temp.6453, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6453,
	beq	.L2442	@,
	movw	sl, #:lower16:11199520	@ tmp376,
	movt	sl, #:upper16:11199520	@ tmp376,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2442:
	movw	r0, #:lower16:11168588	@ tmp379,
	movt	r0, #:upper16:11168588	@ tmp379,
	ldr	r2, [r4, r0]	@ temp.6456, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6456,
	beq	.L2443	@,
	movw	ip, #:lower16:11199520	@ tmp380,
	movt	ip, #:upper16:11199520	@ tmp380,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2443:
	movw	r6, #:lower16:11168460	@ tmp387,
	movw	r3, #:lower16:11168464	@ tmp389,
	movt	r6, #:upper16:11168460	@ tmp387,
	movt	r3, #:upper16:11168464	@ tmp389,
	mov	lr, #0	@ tmp384,
	movw	r5, #:lower16:11168588	@ tmp383,
	str	lr, [r4, r6]	@ tmp384, <variable>.DPB.fs
	movt	r5, #:upper16:11168588	@ tmp383,
	ldr	r0, [r4, r3]	@ temp.6459, <variable>.DPB.fs
	movw	r2, #:lower16:11168524	@ tmp385,
	movt	r2, #:upper16:11168524	@ tmp385,
	str	lr, [r4, r5]	@ tmp384, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6459,
	str	lr, [r4, r2]	@ tmp384, <variable>.DPB.fs_ref
	beq	.L2444	@,
	movw	r7, #:lower16:11199520	@ tmp390,
	movt	r7, #:upper16:11199520	@ tmp390,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2444:
	movw	r8, #:lower16:11168528	@ tmp393,
	movt	r8, #:upper16:11168528	@ tmp393,
	ldr	r2, [r4, r8]	@ temp.6462, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6462,
	beq	.L2445	@,
	movw	sl, #:lower16:11199520	@ tmp394,
	movt	sl, #:upper16:11199520	@ tmp394,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2445:
	movw	r1, #:lower16:11168592	@ tmp397,
	movt	r1, #:upper16:11168592	@ tmp397,
	ldr	r2, [r4, r1]	@ temp.6465, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6465,
	beq	.L2446	@,
	movw	ip, #:lower16:11199520	@ tmp398,
	movt	ip, #:upper16:11199520	@ tmp398,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2446:
	movw	r0, #:lower16:11168464	@ tmp405,
	movw	r3, #:lower16:11168468	@ tmp407,
	movt	r0, #:upper16:11168464	@ tmp405,
	movt	r3, #:upper16:11168468	@ tmp407,
	mov	lr, #0	@ tmp402,
	movw	r5, #:lower16:11168592	@ tmp401,
	str	lr, [r4, r0]	@ tmp402, <variable>.DPB.fs
	movt	r5, #:upper16:11168592	@ tmp401,
	ldr	r0, [r4, r3]	@ temp.6468, <variable>.DPB.fs
	movw	r2, #:lower16:11168528	@ tmp403,
	movt	r2, #:upper16:11168528	@ tmp403,
	str	lr, [r4, r5]	@ tmp402, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6468,
	str	lr, [r4, r2]	@ tmp402, <variable>.DPB.fs_ref
	beq	.L2447	@,
	movw	r6, #:lower16:11199520	@ tmp408,
	movt	r6, #:upper16:11199520	@ tmp408,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2447:
	movw	r7, #:lower16:11168532	@ tmp411,
	movt	r7, #:upper16:11168532	@ tmp411,
	ldr	r2, [r4, r7]	@ temp.6471, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6471,
	beq	.L2448	@,
	movw	r8, #:lower16:11199520	@ tmp412,
	movt	r8, #:upper16:11199520	@ tmp412,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2448:
	movw	sl, #:lower16:11168596	@ tmp415,
	movt	sl, #:upper16:11168596	@ tmp415,
	ldr	r2, [r4, sl]	@ temp.6474, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6474,
	beq	.L2449	@,
	movw	ip, #:lower16:11199520	@ tmp416,
	movt	ip, #:upper16:11199520	@ tmp416,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2449:
	movw	r3, #:lower16:11168468	@ tmp423,
	movw	r5, #:lower16:11168472	@ tmp425,
	movt	r3, #:upper16:11168468	@ tmp423,
	movt	r5, #:upper16:11168472	@ tmp425,
	mov	lr, #0	@ tmp420,
	movw	r1, #:lower16:11168596	@ tmp419,
	str	lr, [r4, r3]	@ tmp420, <variable>.DPB.fs
	movt	r1, #:upper16:11168596	@ tmp419,
	ldr	r0, [r4, r5]	@ temp.6477, <variable>.DPB.fs
	movw	r2, #:lower16:11168532	@ tmp421,
	movt	r2, #:upper16:11168532	@ tmp421,
	str	lr, [r4, r1]	@ tmp420, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6477,
	str	lr, [r4, r2]	@ tmp420, <variable>.DPB.fs_ref
	beq	.L2450	@,
	movw	r6, #:lower16:11199520	@ tmp426,
	movt	r6, #:upper16:11199520	@ tmp426,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2450:
	movw	r0, #:lower16:11168536	@ tmp429,
	movt	r0, #:upper16:11168536	@ tmp429,
	ldr	r2, [r4, r0]	@ temp.6480, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6480,
	beq	.L2451	@,
	movw	r7, #:lower16:11199520	@ tmp430,
	movt	r7, #:upper16:11199520	@ tmp430,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2451:
	movw	r8, #:lower16:11168600	@ tmp433,
	movt	r8, #:upper16:11168600	@ tmp433,
	ldr	r2, [r4, r8]	@ temp.6483, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6483,
	beq	.L2452	@,
	movw	sl, #:lower16:11199520	@ tmp434,
	movt	sl, #:upper16:11199520	@ tmp434,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2452:
	movw	r1, #:lower16:11168472	@ tmp441,
	movw	r5, #:lower16:11168476	@ tmp443,
	movt	r1, #:upper16:11168472	@ tmp441,
	movt	r5, #:upper16:11168476	@ tmp443,
	mov	ip, #0	@ tmp438,
	movw	r2, #:lower16:11168600	@ tmp437,
	str	ip, [r4, r1]	@ tmp438, <variable>.DPB.fs
	movt	r2, #:upper16:11168600	@ tmp437,
	ldr	r0, [r4, r5]	@ temp.6486, <variable>.DPB.fs
	movw	lr, #:lower16:11168536	@ tmp439,
	movt	lr, #:upper16:11168536	@ tmp439,
	str	ip, [r4, r2]	@ tmp438, <variable>.DPB.fs_ltref
	cmp	r0, ip	@ temp.6486,
	str	ip, [r4, lr]	@ tmp438, <variable>.DPB.fs_ref
	beq	.L2453	@,
	movw	r3, #:lower16:11199520	@ tmp444,
	movt	r3, #:upper16:11199520	@ tmp444,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2453:
	movw	r6, #:lower16:11168540	@ tmp447,
	movt	r6, #:upper16:11168540	@ tmp447,
	ldr	r2, [r4, r6]	@ temp.6489, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6489,
	beq	.L2454	@,
	movw	r7, #:lower16:11199520	@ tmp448,
	movt	r7, #:upper16:11199520	@ tmp448,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2454:
	movw	r0, #:lower16:11168604	@ tmp451,
	movt	r0, #:upper16:11168604	@ tmp451,
	ldr	r2, [r4, r0]	@ temp.6492, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6492,
	beq	.L2455	@,
	movw	r8, #:lower16:11199520	@ tmp452,
	movt	r8, #:upper16:11199520	@ tmp452,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2455:
	movw	r5, #:lower16:11168476	@ tmp459,
	movw	r2, #:lower16:11168480	@ tmp461,
	movt	r5, #:upper16:11168476	@ tmp459,
	movt	r2, #:upper16:11168480	@ tmp461,
	mov	sl, #0	@ tmp456,
	movw	lr, #:lower16:11168604	@ tmp455,
	str	sl, [r4, r5]	@ tmp456, <variable>.DPB.fs
	movt	lr, #:upper16:11168604	@ tmp455,
	ldr	r0, [r4, r2]	@ D.39081, <variable>.DPB.fs
	movw	ip, #:lower16:11168540	@ tmp457,
	movt	ip, #:upper16:11168540	@ tmp457,
	str	sl, [r4, lr]	@ tmp456, <variable>.DPB.fs_ltref
	cmp	r0, sl	@ D.39081,
	str	sl, [r4, ip]	@ tmp456, <variable>.DPB.fs_ref
	beq	.L2456	@,
	movw	r3, #:lower16:11199520	@ tmp462,
	movt	r3, #:upper16:11199520	@ tmp462,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2456:
	movw	r1, #:lower16:11168544	@ tmp465,
	movt	r1, #:upper16:11168544	@ tmp465,
	ldr	r2, [r4, r1]	@ D.39086, <variable>.DPB.fs_ref
	cmp	r2, #0	@ D.39086,
	beq	.L2457	@,
	movw	r6, #:lower16:11199520	@ tmp466,
	movt	r6, #:upper16:11199520	@ tmp466,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2457:
	movw	r7, #:lower16:11168608	@ tmp469,
	movt	r7, #:upper16:11168608	@ tmp469,
	ldr	r2, [r4, r7]	@ D.39090, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ D.39090,
	beq	.L2458	@,
	movw	r8, #:lower16:11199520	@ tmp470,
	movt	r8, #:upper16:11199520	@ tmp470,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2458:
	movw	r5, #:lower16:11197372	@ tmp490,
	movt	r5, #:upper16:11197372	@ tmp490,
	movw	r3, #:lower16:11152052	@ tmp480,
	movt	r3, #:upper16:11152052	@ tmp480,
	ldr	r8, [r4, r5]	@ D.39095, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11168608	@ tmp473,
	ldr	sl, [r4, r3]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	movt	r7, #:upper16:11168608	@ tmp473,
	movw	r1, #:lower16:11168544	@ tmp475,
	movw	r6, #:lower16:11168480	@ tmp477,
	movt	r1, #:upper16:11168544	@ tmp475,
	movt	r6, #:upper16:11168480	@ tmp477,
	movw	r2, #:lower16:11168612	@ tmp479,
	movw	lr, #:lower16:11168616	@ tmp482,
	movt	r2, #:upper16:11168612	@ tmp479,
	movt	lr, #:upper16:11168616	@ tmp482,
	movw	ip, #:lower16:11168620	@ tmp484,
	movw	r0, #:lower16:11168624	@ tmp486,
	movt	ip, #:upper16:11168620	@ tmp484,
	movt	r0, #:upper16:11168624	@ tmp486,
	movw	r3, #:lower16:11168628	@ tmp488,
	cmp	r8, #0	@ D.39095,
	movt	r3, #:upper16:11168628	@ tmp488,
	str	sl, [r4, r2]	@ <variable>.CurrDPBSize, <variable>.DPB.size
	mov	r2, #0	@ tmp474,
	str	r2, [r4, r7]	@ tmp474, <variable>.DPB.fs_ltref
	str	r2, [r4, r1]	@ tmp474, <variable>.DPB.fs_ref
	str	r2, [r4, r6]	@ tmp474, <variable>.DPB.fs
	str	r2, [r4, lr]	@ tmp474, <variable>.DPB.used_size
	str	r2, [r4, ip]	@ tmp474, <variable>.DPB.ref_frames_in_buffer
	str	r2, [r4, r0]	@ tmp474, <variable>.DPB.ltref_frames_in_buffer
	str	r2, [r4, r3]	@ tmp474, <variable>.DPB.max_long_term_pic_idx
	beq	.L2459	@,
	movw	ip, #:lower16:11199448	@ tmp491,
	movt	ip, #:upper16:11199448	@ tmp491,
	ldr	r0, [r4, ip]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L2475	@,
.L2460:
	movw	r5, #:lower16:11196640	@ tmp495,
	movt	r5, #:upper16:11196640	@ tmp495,
	ldr	r2, [r4, r5]	@ D.39104, <variable>.CurrPic.frame_store
	cmp	r2, #0	@ D.39104,
	beq	.L2461	@,
	movw	lr, #:lower16:11199520	@ tmp496,
	movt	lr, #:upper16:11199520	@ tmp496,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2461:
	movw	r2, #:lower16:11197372	@ tmp499,
	movt	r2, #:upper16:11197372	@ tmp499,
	mov	r1, #0	@ tmp500,
	str	r1, [r4, r2]	@ tmp500, <variable>.pDirectOutBuf
.L2459:
	movw	lr, #:lower16:11168632	@,
	movt	lr, #:upper16:11168632	@,
	add	r0, r4, lr	@, pMvcCtx,
	mov	r1, #392	@,
	bl	__memzero	@
	movw	r0, #:lower16:11168612	@ tmp503,
	movt	r0, #:upper16:11168612	@ tmp503,
	mov	r5, #0	@ tmp507,
	movw	r2, #:lower16:11154872	@ tmp504,
	movw	ip, #:lower16:11168888	@ tmp505,
	ldr	r6, [r4, r0]	@ D.39113, <variable>.DPB.size
	movt	r2, #:upper16:11154872	@ tmp504,
	movt	ip, #:upper16:11168888	@ tmp505,
	movw	r3, #:lower16:11168892	@ tmp506,
	movt	r3, #:upper16:11168892	@ tmp506,
	mov	r1, r5	@ ivtmp.6354, tmp507
	mov	r0, r5	@ tmp579, ivtmp.6354
	str	r6, [r4, ip]	@ D.39113, <variable>.APC.size
	str	r6, [r4, r2]	@ D.39113, <variable>.OutFRMBuffer.size
	str	r5, [r4, r3]	@ tmp507, <variable>.APC.used_size
.L2462:
	add	r3, r1, #4	@ tmp584, ivtmp.6354,
	add	r5, r4, r1	@ tmp508, pMvcCtx, ivtmp.6354
	movw	lr, #:lower16:11197924	@ tmp509,
	add	r1, r3, #4	@ ivtmp.6354, tmp584,
	movt	lr, #:upper16:11197924	@ tmp509,
	add	ip, r4, r3	@ tmp586, pMvcCtx, tmp584
	add	r2, r5, lr	@ tmp509, tmp508, tmp509
	add	r3, ip, lr	@ tmp588, tmp586, tmp588
	cmp	r1, #72	@ ivtmp.6354,
	str	r0, [r2, #0]	@ tmp579, <variable>.PmvStoreUsedFlag
	str	r0, [r3, #0]	@ tmp579, <variable>.PmvStoreUsedFlag
	bne	.L2462	@,
	movw	r1, #:lower16:11162668	@ ivtmp.6345,
	movt	r1, #:upper16:11162668	@ ivtmp.6345,
	add	r6, r4, r1	@ ivtmp.6345, pMvcCtx, ivtmp.6345
	mov	r5, r0	@ i, tmp579
	mov	ip, r0	@ j, i
.L2463:
	add	r3, r5, r5, asl #5	@, tmp517, i, i,
	mov	r1, #1	@ j,
	mov	r2, r3, asl #2	@ tmp518, tmp517,
	add	lr, r2, #11141120	@ tmp519, tmp518,
	add	r3, lr, #27904	@ tmp519, tmp519,
	add	r2, r4, r3	@ ivtmp.6337, pMvcCtx, tmp519
	add	r2, r2, #4	@ ivtmp.6337, ivtmp.6337,
	str	ip, [r4, r3]	@ j, <variable>.pListX
.L2464:
	add	r1, r1, #2	@ j, j,
	mov	lr, r2	@ tmp583, ivtmp.6337
	cmp	r1, #33	@ j,
	str	ip, [lr], #4	@ j, <variable>.pListX
	str	ip, [r2, #4]	@ j, <variable>.pListX
	add	r2, lr, #4	@ ivtmp.6337, tmp583,
	bne	.L2464	@,
	add	r5, r5, #1	@ i, i,
	str	r0, [r6], #4	@ tmp577, <variable>.CurrSlice.listXsize
	cmp	r5, #2	@ i,
	bne	.L2463	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L2475:
	mov	r1, r8	@, D.39095
	mov	r0, r4	@, pMvcCtx
	bl	MVC_OutputFrmToVO	@
	ldr	r6, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r6, #0	@ <variable>.pDirectOutBuf,
	bne	.L2460	@,
	b	.L2459	@
	.fnend
	.size	MVC_InitDPB, .-MVC_InitDPB
	.align	2
	.global	MVC_DEC_GetRemainImg
	.type	MVC_DEC_GetRemainImg, %function
MVC_DEC_GetRemainImg:
	.fnstart
.LFB1654:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	sl, #:lower16:11168612	@ tmp148,
	movt	sl, #:upper16:11168612	@ tmp148,
	.pad #12
	sub	sp, sp, #12	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2477	@,
	movw	r5, #:lower16:11168420	@ ivtmp.6531,
	movt	r5, #:upper16:11168420	@ ivtmp.6531,
	add	r5, r0, r5	@ ivtmp.6531, pMvcCtx, ivtmp.6531
	mov	r7, #0	@ i,
	movw	r9, #:lower16:11199520	@ tmp181,
	mov	r6, r7	@ flush_size, i
	movt	r9, #:upper16:11199520	@ tmp181,
	mov	r8, r5	@ ivtmp.6537, ivtmp.6531
	b	.L2479	@
.L2478:
	ldr	r3, [r4, sl]	@ prephitmp.6509, <variable>.DPB.size
	cmp	r3, r7	@ prephitmp.6509, i
	bls	.L2504	@,
.L2479:
	ldr	r3, [r8, #0]	@ D.37153, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	add	r8, r8, #4	@ ivtmp.6537, ivtmp.6537,
	cmp	r3, #0	@ D.37153,
	beq	.L2478	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	beq	.L2478	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L2478	@,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	ldr	r3, [r4, sl]	@ prephitmp.6509, <variable>.DPB.size
	sub	r1, ip, #1	@ tmp157, <variable>.s32DispState,
	uxtb	r0, r1	@ tmp158, tmp157
	cmp	r0, #1	@ tmp158,
	addls	r6, r6, #1	@ flush_size, flush_size,
	cmp	r3, r7	@ prephitmp.6509, i
	bhi	.L2479	@,
.L2504:
	cmp	r6, #0	@ flush_size,
	mvneq	r7, #0	@ ret,
	beq	.L2481	@,
	add	r8, sp, #4	@ tmp177,,
	mvn	r7, #0	@ ret,
	mov	r2, sp	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, ret
	mov	r3, r8	@, tmp177
	bl	MVC_GetMinPOC	@
	ldr	r2, [sp, #4]	@ pos.520, pos
	add	r9, r6, r7	@ tmp183, flush_size, tmp1
	mov	sl, sp	@ tmp176,
	cmp	r2, r7	@ pos.520,
	and	fp, r9, #1	@ tmp184, tmp183,
	beq	.L2502	@,
	movw	lr, #:lower16:2792104	@ tmp190,
	movt	lr, #:upper16:2792104	@ tmp190,
	add	r7, r2, lr	@ tmp190, pos.520, tmp190
	mov	r2, r6	@, flush_size
	mov	r0, r4	@, pMvcCtx
	add	r6, r4, r7, asl #2	@, tmp192, pMvcCtx, tmp190,
	ldr	r1, [r6, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	subs	r6, r9, #0	@ flush_size, tmp183
	mov	r7, r0	@ ret,
	beq	.L2502	@,
	cmp	fp, #0	@ tmp184,
	beq	.L2485	@,
	mov	r2, sp	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	mov	r3, r8	@, tmp177
	bl	MVC_GetMinPOC	@
	ldr	r2, [sp, #4]	@ pos.520, pos
	cmn	r2, #1	@ pos.520,
	beq	.L2502	@,
	movw	r1, #:lower16:2792104	@ tmp196,
	movt	r1, #:upper16:2792104	@ tmp196,
	add	r3, r2, r1	@ tmp196, pos.520, tmp196
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, flush_size
	add	r3, r4, r3, asl #2	@, tmp198, pMvcCtx, tmp196,
	b	.L2499	@
.L2485:
	mov	r3, r8	@, tmp177
	mvn	r1, #0	@,
	mov	r2, sp	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #4]	@ pos.520, pos
	movw	ip, #:lower16:2792104	@ tmp163,
	movt	ip, #:upper16:2792104	@ tmp163,
	add	r3, r1, ip	@ tmp163, pos.520, tmp163
	cmn	r1, #1	@ pos.520,
	mov	r2, r6	@, flush_size
	mov	r0, r4	@, pMvcCtx
	sub	r6, r6, #1	@ tmp185, flush_size,
	add	r3, r4, r3, asl #2	@, tmp167, pMvcCtx, tmp163,
	beq	.L2502	@,
	ldr	r1, [r3, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	mvn	r1, #0	@,
	mov	r2, sp	@,
	mov	r3, r8	@, tmp177
	mov	r7, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #4]	@ pos.520, pos
	movw	ip, #:lower16:2792104	@ tmp201,
	movt	ip, #:upper16:2792104	@ tmp201,
	add	r3, r1, ip	@ tmp201, pos.520, tmp201
	cmn	r1, #1	@ pos.520,
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, tmp185
	add	r3, r4, r3, asl #2	@, tmp203, pMvcCtx, tmp201,
	beq	.L2502	@,
.L2499:
	ldr	r1, [r3, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	subs	r6, r6, #1	@ flush_size, tmp185,
	mov	r7, r0	@ ret,
	bne	.L2485	@,
.L2502:
	movw	lr, #:lower16:11168612	@ tmp162,
	movt	lr, #:upper16:11168612	@ tmp162,
	ldr	r3, [r4, lr]	@ prephitmp.6509, <variable>.DPB.size
.L2481:
	cmp	r3, #0	@ prephitmp.6509,
	movwne	r8, #:lower16:11168612	@ tmp179,
	movne	r6, #0	@ i.6535,
	movtne	r8, #:upper16:11168612	@ tmp179,
	bne	.L2487	@,
	b	.L2484	@
.L2486:
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.6535
	bls	.L2484	@,
.L2487:
	ldr	r1, [r5, #0]	@ temp.6534, <variable>.DPB.fs
	add	r6, r6, #1	@ i.6535, i.6535,
	add	r5, r5, #4	@ ivtmp.6531, ivtmp.6531,
	cmp	r1, #0	@ temp.6534,
	beq	.L2486	@,
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	beq	.L2486	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.6535
	bhi	.L2487	@,
.L2484:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
	cmp	r7, #0	@ ret,
	bne	.L2489	@,
.L2488:
	mov	r0, r7	@, ret
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2477:
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
.L2489:
	add	r0, r4, #8	@, pMvcCtx,
	bl	GetVoLastImageID	@
	mov	r7, r0	@ ret,
	b	.L2488	@
	.fnend
	.size	MVC_DEC_GetRemainImg, .-MVC_DEC_GetRemainImg
	.align	2
	.global	MVC_DirectOutput
	.type	MVC_DirectOutput, %function
MVC_DirectOutput:
	.fnstart
.LFB1652:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r3, #:lower16:11196171	@ tmp182,
	movt	r3, #:upper16:11196171	@ tmp182,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #1	@ <variable>.CurrPic.structure,
	beq	.L2508	@,
	bcc	.L2507	@,
	cmp	r3, #2	@ <variable>.CurrPic.structure,
	movne	r6, #0	@ ret,
	beq	.L2554	@,
.L2510:
	mov	r0, r6	@, ret
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L2507:
	movw	r6, #:lower16:11196640	@ tmp185,
	movt	r6, #:upper16:11196640	@ tmp185,
	movw	r5, #:lower16:11197372	@ tmp188,
	movt	r5, #:upper16:11197372	@ tmp188,
	ldr	r1, [r0, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #0	@ tmp186,
	strb	r2, [r1, #464]	@ tmp186, <variable>.frame.structure
	ldr	r1, [r0, r5]	@ temp.6592, <variable>.pDirectOutBuf
	cmp	r1, r2	@ temp.6592,
	beq	.L2511	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, #0	@ <variable>.pDirectOutBuf,
	beq	.L2512	@,
	ldr	r5, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r6, #:lower16:11199520	@ tmp191,
	movt	r6, #:upper16:11199520	@ tmp191,
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2512:
	movw	r7, #:lower16:11197372	@ tmp196,
	movt	r7, #:upper16:11197372	@ tmp196,
	mov	r2, #0	@ tmp197,
	str	r2, [r4, r7]	@ tmp197, <variable>.pDirectOutBuf
.L2511:
	movw	r8, #:lower16:11196640	@ tmp198,
	movt	r8, #:upper16:11196640	@ tmp198,
	movw	r5, #:lower16:11197372	@ tmp199,
	movt	r5, #:upper16:11197372	@ tmp199,
	ldr	r2, [r4, r8]	@ temp.6595, <variable>.CurrPic.frame_store
	movw	lr, #:lower16:11196170	@ tmp212,
	movt	lr, #:upper16:11196170	@ tmp212,
	mov	r6, #0	@ tmp221,
	movw	sl, #:lower16:11196184	@,
	movt	sl, #:upper16:11196184	@,
	str	r2, [r4, r5]	@ temp.6595, <variable>.pDirectOutBuf
	add	r1, r4, sl	@, pMvcCtx,
	str	r2, [r2, #468]	@ temp.6595, <variable>.frame.frame_store
	mov	r2, #456	@,
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	sl, #:lower16:11199520	@ tmp267,
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	sl, #:upper16:11199520	@ tmp267,
	str	r0, [r3, #508]	@ <variable>.CurrPic.frame_store, <variable>.top_field.frame_store
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r9, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r9, [r7, #548]	@ <variable>.CurrPic.frame_store, <variable>.bottom_field.frame_store
	mov	r9, #3	@ tmp217,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [ip, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r9, [r3, #1]	@ tmp217, <variable>.is_used
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r7, #2]	@ tmp221, <variable>.is_reference
	movw	r7, #:lower16:11196692	@ tmp245,
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r7, #:upper16:11196692	@ tmp245,
	strb	r6, [lr, #4]	@ tmp221, <variable>.is_in_dpb
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r6, [ip, #612]	@ tmp221, <variable>.is_displayed
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, r0, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11196700	@ tmp238,
	movt	r1, #:upper16:11196700	@ tmp238,
	ldr	r2, [r4, r5]	@ temp.6607, <variable>.pDirectOutBuf
	movw	lr, #:lower16:11196177	@ tmp249,
	movt	lr, #:upper16:11196177	@ tmp249,
	ldr	r3, [r4, r1]	@ D.36966, <variable>.CurrPic.err_level
	movw	ip, #:lower16:11196175	@ tmp252,
	movt	ip, #:upper16:11196175	@ tmp252,
	movw	r0, #:lower16:11196660	@ tmp257,
	movt	r0, #:upper16:11196660	@ tmp257,
	movw	r1, #:lower16:11196732	@ tmp261,
	str	r3, [r2, #624]	@ D.36966, <variable>.err_level
	movt	r1, #:upper16:11196732	@ tmp261,
	str	r3, [r2, #488]	@ D.36966, <variable>.frame.err_level
	movw	r3, #:lower16:11196736	@ tmp265,
	ldr	r9, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r3, #:upper16:11196736	@ tmp265,
	mov	r2, r6	@, tmp221
	strb	r6, [r9, #464]	@ tmp221, <variable>.frame.structure
	ldr	r9, [r4, r7]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r9, [r7, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldrb	r7, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [lr, #616]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	lr, [r4, r5]	@ temp.6611, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	ip, r6	@ iftmp.500, tmp2
	moveq	ip, #3	@ iftmp.500,
	strb	ip, [lr, #3]	@ iftmp.500, <variable>.mode_skip_flag
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [lr, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #644]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r1, [r3, #648]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r2, r6	@, tmp221
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, #0	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2543	@,
	ldr	ip, [r4, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2543:
	movw	r1, #:lower16:11197372	@ tmp657,
	movt	r1, #:upper16:11197372	@ tmp657,
	mov	r2, #0	@ tmp658,
	str	r2, [r4, r1]	@ tmp658, <variable>.pDirectOutBuf
.L2556:
	mov	r0, r6	@, ret
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L2508:
	movw	r5, #:lower16:11196640	@ tmp284,
	movt	r5, #:upper16:11196640	@ tmp284,
	movw	r8, #:lower16:11196169	@ tmp287,
	movt	r8, #:upper16:11196169	@ tmp287,
	ldr	r1, [r0, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r6, #3	@ tmp285,
	strb	r6, [r1, #464]	@ tmp285, <variable>.frame.structure
	ldrb	r2, [r0, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2516	@,
	movw	r8, #:lower16:11197372	@ tmp289,
	movt	r8, #:upper16:11197372	@ tmp289,
	ldr	r1, [r0, r8]	@ temp.6623, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6623,
	beq	.L2517	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r7, [r4, r5]	@ temp.6624, <variable>.CurrPic.frame_store
	str	r7, [r4, r8]	@ temp.6624, <variable>.pDirectOutBuf
	str	r7, [r7, #508]	@ temp.6624, <variable>.top_field.frame_store
	mov	r6, r0	@ ret,
.L2518:
	movw	r5, #:lower16:11197372	@ tmp297,
	movw	r8, #:lower16:11196170	@ tmp298,
	movt	r5, #:upper16:11197372	@ tmp297,
	movt	r8, #:upper16:11196170	@ tmp298,
	mov	sl, #1	@ tmp303,
	movw	r7, #:lower16:11196692	@ tmp318,
	ldrb	r9, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r8, #0	@ tmp307,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r7, #:upper16:11196692	@ tmp318,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r4, r1	@, pMvcCtx,
	strb	r9, [r2, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	mov	r2, #456	@,
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	sl, [ip, #1]	@ tmp303, <variable>.is_used
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [lr, #4]	@ tmp307, <variable>.is_in_dpb
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [r0, #612]	@ tmp307, <variable>.is_displayed
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [r3, #2]	@ tmp307, <variable>.is_reference
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r9, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r9, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [lr, #616]	@ tmp307, <variable>.MbaffFrameFlag
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, r0, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r3, #:lower16:11196700	@ tmp332,
	movt	r3, #:upper16:11196700	@ tmp332,
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	ip, #:lower16:11196175	@ tmp341,
	movt	ip, #:upper16:11196175	@ tmp341,
	ldr	r9, [r4, r3]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r0, #:lower16:11196660	@ tmp347,
	movw	r1, #:lower16:11196732	@ tmp351,
	movw	r2, #:lower16:11196736	@ tmp355,
	movw	r3, #:lower16:11199452	@ tmp357,
	movt	r0, #:upper16:11196660	@ tmp347,
	str	r9, [r7, #528]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	movt	r1, #:upper16:11196732	@ tmp351,
	ldr	r7, [r4, r5]	@ temp.6639, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11196736	@ tmp355,
	movt	r3, #:upper16:11199452	@ tmp357,
	ldr	r9, [r7, #528]	@ D.36990, <variable>.top_field.err_level
	str	r9, [r7, #624]	@ D.36990, <variable>.err_level
	str	r9, [r7, #488]	@ D.36990, <variable>.frame.err_level
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	sl, [r7, #504]	@ tmp303, <variable>.top_field.structure
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, sl	@ <variable>.CurrPic.mode_skip_flag,
	movne	ip, #0	@, tmp343
	moveq	ip, #1	@, tmp343
	b	.L2553	@
.L2554:
	movw	r5, #:lower16:11196640	@ tmp473,
	movt	r5, #:upper16:11196640	@ tmp473,
	movw	r7, #:lower16:11196169	@ tmp476,
	movt	r7, #:upper16:11196169	@ tmp476,
	ldr	r3, [r0, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r8, #3	@ tmp474,
	strb	r8, [r3, #464]	@ tmp474, <variable>.frame.structure
	ldrb	r2, [r0, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2529	@,
	movw	r8, #:lower16:11197372	@ tmp478,
	movt	r8, #:upper16:11197372	@ tmp478,
	ldr	r1, [r0, r8]	@ temp.6687, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6687,
	beq	.L2530	@,
	bl	MVC_OutputFrmToVO	@
	mov	r6, r0	@ ret,
	ldr	r0, [r4, r5]	@ temp.6688, <variable>.CurrPic.frame_store
	str	r0, [r4, r8]	@ temp.6688, <variable>.pDirectOutBuf
	str	r0, [r0, #548]	@ temp.6688, <variable>.bottom_field.frame_store
.L2531:
	movw	r5, #:lower16:11197372	@ tmp486,
	movw	r8, #:lower16:11196170	@ tmp487,
	movt	r5, #:upper16:11197372	@ tmp486,
	movt	r8, #:upper16:11196170	@ tmp487,
	mov	sl, #2	@ tmp492,
	movw	r9, #:lower16:11196692	@ tmp507,
	ldrb	ip, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r8, #0	@ tmp496,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r9, #:upper16:11196692	@ tmp507,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r4, r1	@, pMvcCtx,
	strb	ip, [r2, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	mov	r2, #456	@,
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	sl, [r0, #1]	@ tmp492, <variable>.is_used
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [r3, #4]	@ tmp496, <variable>.is_in_dpb
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [lr, #612]	@ tmp496, <variable>.is_displayed
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [r7, #2]	@ tmp496, <variable>.is_reference
	ldr	r0, [r4, r9]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [r3, #616]	@ tmp496, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11196700	@ tmp521,
	movt	r1, #:upper16:11196700	@ tmp521,
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	ip, #:lower16:11196175	@ tmp529,
	movt	ip, #:upper16:11196175	@ tmp529,
	ldr	r9, [r4, r1]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r0, #:lower16:11196660	@ tmp534,
	movw	r1, #:lower16:11196732	@ tmp538,
	movw	r2, #:lower16:11196736	@ tmp542,
	movw	r3, #:lower16:11199452	@ tmp544,
	movt	r0, #:upper16:11196660	@ tmp534,
	str	r9, [r7, #568]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	movt	r1, #:upper16:11196732	@ tmp538,
	ldr	r7, [r4, r5]	@ temp.6703, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11196736	@ tmp542,
	movt	r3, #:upper16:11199452	@ tmp544,
	ldr	r9, [r7, #568]	@ temp.6704, <variable>.bottom_field.err_level
	str	r9, [r7, #624]	@ temp.6704, <variable>.err_level
	str	r9, [r7, #488]	@ temp.6704, <variable>.frame.err_level
	ldr	r7, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	sl, [r7, #544]	@ tmp492, <variable>.bottom_field.structure
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r7, [r4, r5]	@ temp.6706, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	ip, sl	@ iftmp.508,
	movne	ip, r8	@ iftmp.508,
.L2553:
	strb	ip, [r7, #3]	@ iftmp.508, <variable>.mode_skip_flag
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [sl, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	r1, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [r1, #644]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	sl, [r4, r2]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	sl, [lr, #648]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldr	sl, [r4, r3]	@ <variable>.IModeOutFlag, <variable>.IModeOutFlag
	cmp	sl, #1	@ <variable>.IModeOutFlag,
	bne	.L2510	@,
	ldr	r6, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11199520	@ tmp546,
	movt	r7, #:upper16:11199520	@ tmp546,
	mov	r2, r8	@, tmp496
	ldr	r1, [r6, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r2, r8	@, tmp496
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, r8	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2543	@,
	movw	r1, #:lower16:11196640	@ tmp558,
	movt	r1, #:upper16:11196640	@ tmp558,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	mov	r2, sl	@, <variable>.IModeOutFlag
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	b	.L2543	@
.L2529:
	movw	r7, #:lower16:11197372	@ tmp562,
	movt	r7, #:upper16:11197372	@ tmp562,
	movw	fp, #:lower16:11196184	@,
	movt	fp, #:upper16:11196184	@,
	ldr	lr, [r0, r7]	@ prephitmp.6671, <variable>.pDirectOutBuf
	add	r1, r4, fp	@, pMvcCtx,
	mov	r2, #456	@,
	cmp	lr, #0	@ prephitmp.6671,
	ldreq	lr, [r0, r5]	@ temp.6723, <variable>.CurrPic.frame_store
	streq	lr, [r0, r7]	@ temp.6723, <variable>.pDirectOutBuf
	streq	lr, [lr, #548]	@ temp.6723, <variable>.bottom_field.frame_store
	ldreq	lr, [r0, r7]	@ prephitmp.6671, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.6671,
	ldrd	r6, [lr, #24]	@ OtherFieldUsertag.6725, prephitmp.6671,
	ldr	r5, [lr, #16]	@ OtherFieldPts.6724, <variable>.fs_image.PTS
	ldr	r8, [lr, #20]	@ OtherFieldPts.6724, <variable>.fs_image.PTS
	ldrd	sl, [lr, #32]	@ OtherFieldDisptime.6726, prephitmp.6671,
	bl	memcpy	@
	movw	ip, #:lower16:11196192	@ tmp580,
	movt	ip, #:upper16:11196192	@ tmp580,
	add	r9, r4, ip	@ tmp580, pMvcCtx, tmp580
	movw	r0, #:lower16:11196192	@ tmp574,
	movt	r0, #:upper16:11196192	@ tmp574,
	and	ip, r5, r8	@ tmp572, OtherFieldPts.6724, OtherFieldPts.6724
	ldr	r1, [r9, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r0, #:lower16:11196200	@ tmp590,
	movt	r0, #:upper16:11196200	@ tmp590,
	and	r3, r2, r1	@ tmp576, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r1, #:lower16:11197372	@ tmp589,
	cmn	r3, #1	@ tmp576,
	movne	r9, #0	@, tmp585
	moveq	r9, #1	@, tmp585
	cmn	ip, #1	@ tmp572,
	movt	r1, #:upper16:11197372	@ tmp589,
	movw	r2, #:lower16:11196208	@ tmp594,
	moveq	r9, #0	@, tmp585,
	cmp	r9, #0	@ tmp585,
	movt	r2, #:upper16:11196208	@ tmp594,
	movwne	r9, #:lower16:11197372	@ tmp587,
	movtne	r9, #:upper16:11197372	@ tmp587,
	ldrne	r9, [r4, r9]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r8, [r9, #20]	@ OtherFieldPts.6724, <variable>.fs_image.PTS
	strne	r5, [r9, #16]	@ OtherFieldPts.6724, <variable>.fs_image.PTS
	ldrd	r8, [r4, r0]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp590
	ldr	ip, [r4, r1]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r9, r7	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag.6725
	cmpeq	r8, r6	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag.6725
	ldrd	r0, [r4, r2]	@ <variable>.CurrPic.fs_image.DispTime, pMvcCtx, tmp594
	movhi	r8, r6	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag.6725
	movw	r6, #:lower16:11197372	@ tmp593,
	movt	r6, #:upper16:11197372	@ tmp593,
	movhi	r9, r7	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag.6725
	strd	r8, [ip, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	cmp	r1, fp	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime.6726
	cmpeq	r0, sl	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime.6726
	ldr	r5, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	ip, #:lower16:11197372	@ tmp596,
	movt	ip, #:upper16:11197372	@ tmp596,
	movhi	r1, fp	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime.6726
	movhi	r0, sl	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime.6726
	strd	r0, [r5, #32]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	movw	r0, #:lower16:11196692	@ tmp606,
	ldr	r2, [r4, ip]	@ temp.6738, <variable>.pDirectOutBuf
	movt	r0, #:upper16:11196692	@ tmp606,
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #:lower16:11196170	@ tmp598,
	movtne	r3, #:upper16:11196170	@ tmp598,
	moveq	r1, r3	@ iftmp.510, <variable>.non_existing
	ldrneb	r1, [r4, r3]	@ zero_extendqisi2	@ iftmp.510, <variable>.CurrPic.non_existing
	movw	r3, #:lower16:11197372	@ tmp600,
	movt	r3, #:upper16:11197372	@ tmp600,
	strb	r1, [r2, #0]	@ iftmp.510, <variable>.non_existing
	movw	r1, #:lower16:11196700	@ tmp620,
	ldr	ip, [r4, r3]	@ temp.6740, <variable>.pDirectOutBuf
	movt	r1, #:upper16:11196700	@ tmp620,
	movw	r2, #:lower16:11196175	@ tmp631,
	movt	r2, #:upper16:11196175	@ tmp631,
	ldrb	r6, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r5, r6, #2	@ tmp603, <variable>.is_used,
	strb	r5, [ip, #1]	@ tmp603, <variable>.is_used
	ldr	r6, [r4, r3]	@ temp.6743, <variable>.pDirectOutBuf
	mov	ip, #2	@ tmp612,
	ldr	r5, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	lr, [r6, #620]	@ <variable>.pic_type, <variable>.pic_type
	cmp	lr, r5	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	lr, [r6, #620]	@, <variable>.pic_type, <variable>.pic_type
	strcc	r5, [r6, #620]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	mov	r6, #3	@ tmp616,
	ldr	lr, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	ip, [lr, #544]	@ tmp612, <variable>.bottom_field.structure
	ldr	r0, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [r0, #464]	@ tmp616, <variable>.frame.structure
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r5, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	lr, [r5, #568]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	ldr	r1, [r4, r3]	@ temp.6750, <variable>.pDirectOutBuf
	ldr	ip, [r1, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r6, [r1, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r0, ip, r6	@ tmp623, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	r5, r0, lsr #1	@ tmp626, tmp623,
	str	r5, [r1, #488]	@ tmp626, <variable>.frame.err_level
	ldr	lr, [r4, r3]	@ temp.6755, <variable>.pDirectOutBuf
	ldr	r6, [lr, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	r6, [lr, #624]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	ip, [r4, r3]	@ temp.6757, <variable>.pDirectOutBuf
	ldr	r0, [ip, #548]	@ <variable>.bottom_field.frame_store, <variable>.bottom_field.frame_store
	str	r0, [ip, #468]	@ <variable>.bottom_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	beq	.L2555	@,
.L2541:
	ldr	r2, [r4, r3]	@ temp.6591, <variable>.pDirectOutBuf
	ldrb	r1, [r2, #3]	@ zero_extendqisi2	@ iftmp.511, <variable>.mode_skip_flag
.L2542:
	movw	r5, #:lower16:11197372	@ tmp640,
	movw	lr, #:lower16:11196660	@ tmp641,
	movt	r5, #:upper16:11197372	@ tmp640,
	movt	lr, #:upper16:11196660	@ tmp641,
	strb	r1, [r2, #3]	@ iftmp.511, <variable>.mode_skip_flag
	movw	r8, #:lower16:11199520	@ tmp643,
	ldr	r1, [r4, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	movt	r8, #:upper16:11199520	@ tmp643,
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, #0	@,
	str	r1, [r0, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	mov	r2, #0	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, #0	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2543	@,
	movw	ip, #:lower16:11196640	@ tmp655,
	movt	ip, #:upper16:11196640	@ tmp655,
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r3, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	movw	r1, #:lower16:11197372	@ tmp657,
	movt	r1, #:upper16:11197372	@ tmp657,
	mov	r2, #0	@ tmp658,
	str	r2, [r4, r1]	@ tmp658, <variable>.pDirectOutBuf
	b	.L2556	@
.L2516:
	movw	sl, #:lower16:11197372	@ tmp375,
	movt	sl, #:upper16:11197372	@ tmp375,
	movw	fp, #:lower16:11196184	@,
	movt	fp, #:upper16:11196184	@,
	ldr	lr, [r0, sl]	@ prephitmp.6569, <variable>.pDirectOutBuf
	add	r1, r4, fp	@, pMvcCtx,
	mov	r2, #456	@,
	cmp	lr, #0	@ prephitmp.6569,
	ldreq	lr, [r0, r5]	@ temp.6657, <variable>.CurrPic.frame_store
	streq	lr, [r0, sl]	@ temp.6657, <variable>.pDirectOutBuf
	streq	lr, [lr, #508]	@ temp.6657, <variable>.top_field.frame_store
	ldreq	lr, [r0, sl]	@ prephitmp.6569, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.6569,
	ldrd	r6, [lr, #24]	@ OtherFieldUsertag, prephitmp.6569,
	ldr	r5, [lr, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	r8, [lr, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	sl, [lr, #32]	@ OtherFieldDisptime, prephitmp.6569,
	bl	memcpy	@
	movw	ip, #:lower16:11196192	@ tmp393,
	movt	ip, #:upper16:11196192	@ tmp393,
	add	r9, r4, ip	@ tmp393, pMvcCtx, tmp393
	movw	r1, #:lower16:11196192	@ tmp387,
	movt	r1, #:upper16:11196192	@ tmp387,
	and	ip, r5, r8	@ tmp385, OtherFieldPts, OtherFieldPts
	ldr	r0, [r9, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r1]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r1, #:lower16:11196200	@ tmp403,
	movt	r1, #:upper16:11196200	@ tmp403,
	and	r3, r2, r0	@ tmp389, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r0, #:lower16:11197372	@ tmp402,
	cmn	r3, #1	@ tmp389,
	movne	r9, #0	@, tmp398
	moveq	r9, #1	@, tmp398
	cmn	ip, #1	@ tmp385,
	movt	r0, #:upper16:11197372	@ tmp402,
	movw	r2, #:lower16:11196208	@ tmp407,
	moveq	r9, #0	@, tmp398,
	cmp	r9, #0	@ tmp398,
	movt	r2, #:upper16:11196208	@ tmp407,
	movwne	r9, #:lower16:11197372	@ tmp400,
	movtne	r9, #:upper16:11197372	@ tmp400,
	ldrne	r9, [r4, r9]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r8, [r9, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strne	r5, [r9, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r8, [r4, r1]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp403
	ldr	r5, [r4, r0]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r9, r7	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag
	cmpeq	r8, r6	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag
	ldrd	r0, [r4, r2]	@ <variable>.CurrPic.fs_image.DispTime, pMvcCtx, tmp407
	movhi	r8, r6	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag
	movw	r6, #:lower16:11197372	@ tmp406,
	movt	r6, #:upper16:11197372	@ tmp406,
	movhi	r9, r7	@ <variable>.CurrPic.fs_image.Usertag, OtherFieldUsertag
	strd	r8, [r5, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	cmp	r1, fp	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime
	cmpeq	r0, sl	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime
	ldr	ip, [r4, r6]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r5, #:lower16:11197372	@ tmp409,
	movt	r5, #:upper16:11197372	@ tmp409,
	movhi	r1, fp	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime
	movhi	r0, sl	@ <variable>.CurrPic.fs_image.DispTime, OtherFieldDisptime
	strd	r0, [ip, #32]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	movw	r0, #:lower16:11196692	@ tmp419,
	ldr	r6, [r4, r5]	@ temp.6661, <variable>.pDirectOutBuf
	movt	r0, #:upper16:11196692	@ tmp419,
	movw	r5, #:lower16:11196700	@ tmp433,
	movt	r5, #:upper16:11196700	@ tmp433,
	ldrb	r3, [r6, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #:lower16:11196170	@ tmp411,
	movtne	r3, #:upper16:11196170	@ tmp411,
	moveq	r1, r3	@ iftmp.504, <variable>.non_existing
	ldrneb	r1, [r4, r3]	@ zero_extendqisi2	@ iftmp.504, <variable>.CurrPic.non_existing
	movw	r3, #:lower16:11197372	@ tmp413,
	movt	r3, #:upper16:11197372	@ tmp413,
	strb	r1, [r6, #0]	@ iftmp.504, <variable>.non_existing
	movw	r6, #:lower16:11196175	@ tmp444,
	ldr	ip, [r4, r3]	@ temp.6662, <variable>.pDirectOutBuf
	movt	r6, #:upper16:11196175	@ tmp444,
	ldrb	r2, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r1, r2, #1	@ tmp416, <variable>.is_used,
	strb	r1, [ip, #1]	@ tmp416, <variable>.is_used
	ldr	r2, [r4, r3]	@ temp.6664, <variable>.pDirectOutBuf
	mov	ip, #1	@ tmp425,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	lr, [r2, #620]	@ <variable>.pic_type, <variable>.pic_type
	cmp	lr, r1	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	lr, [r2, #620]	@, <variable>.pic_type, <variable>.pic_type
	strcc	r1, [r2, #620]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	mov	lr, #3	@ tmp429,
	ldr	r2, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	ip, [r2, #504]	@ tmp425, <variable>.top_field.structure
	ldr	r0, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	lr, [r0, #464]	@ tmp429, <variable>.frame.structure
	ldr	r2, [r4, r5]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r1, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r2, [r1, #528]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	ldr	r5, [r4, r3]	@ temp.6669, <variable>.pDirectOutBuf
	ldr	ip, [r5, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	lr, [r5, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r0, ip, lr	@ tmp436, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	r2, r0, lsr #1	@ tmp439, tmp436,
	str	r2, [r5, #488]	@ tmp439, <variable>.frame.err_level
	ldr	r1, [r4, r3]	@ temp.6672, <variable>.pDirectOutBuf
	ldr	ip, [r1, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	ip, [r1, #624]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	lr, [r4, r3]	@ temp.6673, <variable>.pDirectOutBuf
	ldr	r0, [lr, #508]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	str	r0, [lr, #468]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	bne	.L2541	@,
	ldr	r2, [r4, r3]	@ D.36957, <variable>.pDirectOutBuf
	ldrb	r6, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r6, #1	@ iftmp.505, <variable>.mode_skip_flag,
	b	.L2542	@
.L2517:
	ldr	lr, [r0, r5]	@ temp.6626, <variable>.CurrPic.frame_store
	mov	r6, r1	@ ret, temp.6623
	str	lr, [r0, r8]	@ temp.6626, <variable>.pDirectOutBuf
	str	lr, [lr, #508]	@ temp.6626, <variable>.top_field.frame_store
	b	.L2518	@
.L2530:
	ldr	r2, [r0, r5]	@ temp.6690, <variable>.CurrPic.frame_store
	mov	r6, r1	@ ret, temp.6687
	str	r2, [r0, r8]	@ temp.6690, <variable>.pDirectOutBuf
	str	r2, [r2, #548]	@ temp.6690, <variable>.bottom_field.frame_store
	b	.L2531	@
.L2555:
	ldr	r2, [r4, r3]	@ temp.6591, <variable>.pDirectOutBuf
	ldrb	r6, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r6, #2	@ iftmp.511, <variable>.mode_skip_flag,
	b	.L2542	@
	.fnend
	.size	MVC_DirectOutput, .-MVC_DirectOutput
	.align	2
	.global	MVC_OutputFrmFromDPB
	.type	MVC_OutputFrmFromDPB, %function
MVC_OutputFrmFromDPB:
	.fnstart
.LFB1647:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:2792104	@ tmp138,
	movt	r2, #:upper16:2792104	@ tmp138,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	add	r4, r1, r2	@ tmp138, pos, tmp138
	mov	r5, r1	@ pos, pos
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	add	r4, r0, r4, asl #2	@, tmp142, pMvcCtx, tmp138,
	ldr	r3, [r4, #4]	@ D.36680, <variable>.DPB.fs
	cmp	r3, #0	@ D.36680,
	moveq	r4, r3	@ ret, D.36680
	beq	.L2559	@,
	mov	r2, #0	@ tmp144,
	strb	r2, [r3, #4]	@ tmp144, <variable>.is_in_dpb
	ldr	r1, [r4, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	ldr	r1, [r4, #4]	@ tmp155, <variable>.DPB.fs
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmn	r0, #1	@ ret,
	moveq	r4, r0	@, ret, ret
	movne	r4, #0	@, ret,
	cmp	r3, #0	@ <variable>.is_reference,
	beq	.L2562	@,
.L2559:
	mov	r0, r4	@, ret
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L2562:
	mov	r0, r6	@, pMvcCtx
	mov	r1, r5	@, pos
	bl	MVC_RemoveFrameStoreOutDPB	@
	mov	r0, r4	@, ret
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	MVC_OutputFrmFromDPB, .-MVC_OutputFrmFromDPB
	.align	2
	.global	MVC_FlushDPB
	.type	MVC_FlushDPB, %function
MVC_FlushDPB:
	.fnstart
.LFB1653:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r8, #:lower16:11168612	@ tmp158,
	movt	r8, #:upper16:11168612	@ tmp158,
	.pad #20
	sub	sp, sp, #20	@,,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ CurrViewId, CurrViewId
	ldr	r3, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2564	@,
	movw	r6, #:lower16:11168420	@ ivtmp.6832,
	movt	r6, #:upper16:11168420	@ ivtmp.6832,
	add	r6, r0, r6	@ ivtmp.6832, pMvcCtx, ivtmp.6832
	mov	r7, #0	@ i,
	b	.L2566	@
.L2565:
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bls	.L2564	@,
.L2566:
	ldr	r1, [r6, #0]	@ D.37088, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.6832, ivtmp.6832,
	cmp	r1, #0	@ D.37088,
	beq	.L2565	@,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2565	@,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r2, r4	@, <variable>.view_id, CurrViewId
	bne	.L2565	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bhi	.L2566	@,
.L2564:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r4	@, CurrViewId
	bl	MVC_RemoveUnUsedFrameStore	@
	movw	ip, #:lower16:11168612	@ tmp172,
	movt	ip, #:upper16:11168612	@ tmp172,
	ldr	r0, [r5, ip]	@ temp.6847, <variable>.DPB.size
	cmp	r0, #0	@ temp.6847,
	beq	.L2567	@,
	mov	r0, r0, asl #2	@ D.51299, temp.6847,
	mov	r2, #0	@ ivtmp.6828,
	tst	r0, #4	@ D.51299,
	mvn	ip, #0	@ other_view_id.6848,
	mov	sl, r2	@ flush_size, ivtmp.6828
	beq	.L2602	@,
.L2572:
	add	r6, r5, r2	@ tmp173, pMvcCtx, ivtmp.6828
	movw	r3, #:lower16:11168420	@ tmp174,
	movt	r3, #:upper16:11168420	@ tmp174,
	add	lr, r6, r3	@ tmp174, tmp173, tmp174
	ldr	r1, [lr, #0]	@ temp.6835, <variable>.DPB.fs
	cmp	r1, #0	@ temp.6835,
	beq	.L2568	@,
	ldr	r6, [r1, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r6, r4	@, other_view_id, CurrViewId
	bne	.L2569	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2569	@,
.L2568:
	add	r2, r2, #4	@ tmp213, ivtmp.6828,
	mov	r6, ip	@ other_view_id, other_view_id.6848
	cmp	r2, r0	@ tmp213, D.51299
	beq	.L2571	@,
.L2624:
	add	r1, r5, r2	@ tmp216, pMvcCtx, tmp213
	movw	lr, #:lower16:11168420	@ tmp218,
	movt	lr, #:upper16:11168420	@ tmp218,
	add	ip, r1, lr	@ tmp218, tmp216, tmp218
	ldr	r3, [ip, #0]	@ temp.6835, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6835,
	beq	.L2596	@,
	ldr	r3, [r3, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r3, r4	@, other_view_id, CurrViewId
	bne	.L2597	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2597	@,
.L2596:
	mov	r3, r6	@ other_view_id, other_view_id
.L2598:
	add	r2, r2, #4	@ ivtmp.6828, tmp213,
	mov	ip, r3	@ other_view_id.6848, other_view_id
	b	.L2572	@
.L2569:
	cmp	r4, r6	@ CurrViewId, other_view_id
	beq	.L2568	@,
	add	r2, r2, #4	@ tmp213, ivtmp.6828,
	cmp	r2, r0	@ tmp213, D.51299
	bne	.L2624	@,
.L2571:
	cmp	sl, #0	@ flush_size,
	beq	.L2567	@,
	adds	r9, r6, #1	@ pretmp.6809, other_view_id,
	movne	r9, #1	@ pretmp.6809
	sub	r8, sl, #1	@ tmp206, flush_size,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movge	fp, #0	@, pretmp.6844
	andlt	fp, r9, #1	@,, pretmp.6844, pretmp.6809
	and	r7, r8, #1	@, tmp206,
	cmp	fp, #0	@ pretmp.6844,
	str	r7, [sp, #4]	@, %sfp
	add	r8, sp, #12	@ tmp200,,
	add	r7, sp, #8	@ tmp203,,
	bne	.L2625	@,
.L2581:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6840, pos
	cmn	r1, #1	@ pos.6840,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2574	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r2, #0	@, tmp229
	andgt	r2, r9, #1	@,, tmp229, pretmp.6809
	cmp	r2, #0	@ tmp229,
	bne	.L2626	@,
.L2582:
	subs	sl, sl, #1	@ flush_size, flush_size,
	beq	.L2567	@,
	ldr	r3, [sp, #4]	@, %sfp
	cmp	r3, #0	@,
	beq	.L2576	@,
	cmp	fp, #0	@ pretmp.6844,
	bne	.L2605	@,
.L2588:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6840, pos
	cmn	r1, #1	@ pos.6840,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2574	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	ip, #0	@, tmp249
	andgt	ip, r9, #1	@,, tmp249, pretmp.6809
	cmp	ip, #0	@ tmp249,
	bne	.L2627	@,
	subs	sl, sl, #1	@ flush_size, tmp208,
	beq	.L2567	@,
.L2576:
	cmp	fp, #0	@ pretmp.6844,
	beq	.L2573	@,
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.514, pos
	cmn	r1, #1	@ pos.514,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2574	@,
.L2573:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6840, pos
	cmn	r1, #1	@ pos.6840,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2574	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r0, #0	@, tmp196
	andgt	r0, r9, #1	@,, tmp196, pretmp.6809
	cmp	r0, #0	@ tmp196,
	bne	.L2628	@,
.L2575:
	cmp	fp, #0	@ pretmp.6844,
	sub	sl, sl, #1	@ tmp208, flush_size,
	beq	.L2588	@,
.L2605:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.514, pos
	cmn	r1, #1	@ pos.514,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2588	@,
.L2574:
	mvn	r0, #0	@ D.37119,
	b	.L2577	@
.L2597:
	cmp	r4, r3	@ CurrViewId, other_view_id
	bne	.L2598	@,
	b	.L2596	@
.L2602:
	movw	lr, #:lower16:11168420	@ tmp254,
	movt	lr, #:upper16:11168420	@ tmp254,
	add	r6, r5, lr	@ tmp254, pMvcCtx, tmp254
	ldr	r3, [r6, #0]	@ temp.6835, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6835,
	beq	.L2592	@,
	ldr	ip, [r3, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	ip, r4	@, other_view_id, CurrViewId
	bne	.L2593	@,
	cmn	r4, #1	@ CurrViewId,
	mov	sl, #1	@ flush_size,
	bne	.L2593	@,
.L2592:
	mvn	ip, #0	@ other_view_id,
	mov	r2, #4	@ ivtmp.6828,
	b	.L2572	@
.L2593:
	cmp	r4, ip	@ CurrViewId, other_view_id
	beq	.L2592	@,
	mov	r2, #4	@ ivtmp.6828,
	b	.L2572	@
.L2627:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6843, pos
	cmn	r1, #1	@ pos.6843,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2574	@,
	subs	sl, sl, #1	@ flush_size, tmp208,
	bne	.L2576	@,
.L2567:
	mov	r0, #0	@ D.37119,
.L2577:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2628:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6843, pos
	cmn	r1, #1	@ pos.6843,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2575	@,
	mvn	r0, #0	@ D.37119,
	b	.L2577	@
.L2625:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.514, pos
	cmn	r1, #1	@ pos.514,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2581	@,
	mvn	r0, #0	@ D.37119,
	b	.L2577	@
.L2626:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [sp, #12]	@ pos.6843, pos
	cmn	r1, #1	@ pos.6843,
	beq	.L2567	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2582	@,
	mvn	r0, #0	@ D.37119,
	b	.L2577	@
	.fnend
	.size	MVC_FlushDPB, .-MVC_FlushDPB
	.align	2
	.global	MVC_IDRMemMarking
	.type	MVC_IDRMemMarking, %function
MVC_IDRMemMarking:
	.fnstart
.LFB1658:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:11196644	@ tmp150,
	movt	r2, #:upper16:11196644	@ tmp150,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	.pad #12
	sub	sp, sp, #12	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r3, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2630	@,
	movw	r0, #:lower16:11198000	@ tmp152,
	movt	r0, #:upper16:11198000	@ tmp152,
	ldr	r5, [r4, r0]	@ D.37334, <variable>.TotalPmvNum
	cmp	r5, #0	@ D.37334,
	beq	.L2631	@,
	movw	sl, #:lower16:11168420	@ ivtmp.6889,
	movt	sl, #:upper16:11168420	@ ivtmp.6889,
	add	r3, r4, sl	@ ivtmp.6889, pMvcCtx, ivtmp.6889
	sub	r6, r5, #1	@ tmp247, D.37334,
	and	r1, r6, #1	@ tmp249, tmp247,
	mov	r6, #0	@ tmp241,
	ldr	r2, [r3, #0]	@ D.37327, <variable>.DPB.fs
	movw	r0, #:lower16:11196732	@ tmp240,
	movt	r0, #:upper16:11196732	@ tmp240,
	cmp	r2, r6	@ D.37327,
	beq	.L2653	@,
	ldr	sl, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	lr, [r2, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	lr, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	sl, r3, #29440	@ tmp353, ivtmp.6889,
	addeq	sl, sl, #64	@ tmp353, tmp353,
	streq	r6, [sl, #0]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2653:
	mov	r2, #1	@ i,
	cmp	r2, r5	@ i, D.37334
	add	r3, r3, #4	@ ivtmp.6889, ivtmp.6889,
	bcs	.L2631	@,
	cmp	r1, #0	@ tmp249,
	beq	.L2633	@,
	ldr	r1, [r3, #0]	@ D.37327, <variable>.DPB.fs
	cmp	r1, #0	@ D.37327,
	beq	.L2655	@,
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r1, r3, #29440	@ tmp360, ivtmp.6889,
	addeq	r1, r1, #64	@ tmp360, tmp360,
	streq	r6, [r1, #0]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2655:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.6889, ivtmp.6889,
	cmp	r2, r5	@ i, D.37334
	bcs	.L2631	@,
.L2633:
	ldr	r1, [r3, #0]	@ D.37327, <variable>.DPB.fs
	add	r2, r2, #1	@ tmp250, i,
	add	ip, r3, #4	@ tmp251, ivtmp.6889,
	cmp	r1, #0	@ D.37327,
	beq	.L2632	@,
	ldr	lr, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r1, r3, #29440	@ tmp158, ivtmp.6889,
	streq	r6, [r1, #64]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2632:
	ldr	r3, [r3, #4]	@ D.37327, <variable>.DPB.fs
	cmp	r3, #0	@ D.37327,
	beq	.L2658	@,
	ldr	sl, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r3, ip, #29440	@ tmp365, tmp251,
	streq	r6, [r3, #64]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2658:
	add	r2, r2, #1	@ i, tmp250,
	add	r3, ip, #4	@ ivtmp.6889, tmp251,
	cmp	r2, r5	@ i, D.37334
	bcc	.L2633	@,
.L2631:
	movw	ip, #:lower16:11168612	@ tmp160,
	movt	ip, #:upper16:11168612	@ tmp160,
	ldr	sl, [r4, ip]	@ D.37335, <variable>.DPB.size
	cmp	sl, #0	@ D.37335,
	beq	.L2634	@,
	movw	r5, #:lower16:11168484	@ ivtmp.6885,
	movt	r5, #:upper16:11168484	@ ivtmp.6885,
	add	r5, r4, r5	@ ivtmp.6885, pMvcCtx, ivtmp.6885
	sub	r7, sl, #1	@ tmp242, D.37335,
	movw	r8, #:lower16:11196732	@ tmp235,
	movw	fp, #:lower16:11199520	@ tmp237,
	ldr	r1, [r5, #-64]	@ temp.6893, <variable>.DPB.fs
	movw	r9, #:lower16:11168616	@ tmp239,
	and	r3, r7, #1	@ tmp244, tmp242,
	movt	r8, #:upper16:11196732	@ tmp235,
	cmp	r1, #0	@ temp.6893,
	movt	fp, #:upper16:11199520	@ tmp237,
	movt	r9, #:upper16:11168616	@ tmp239,
	mov	r6, #0	@ tmp236,
	beq	.L2643	@,
	ldr	r7, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2671	@,
.L2643:
	mov	r7, #1	@ i.6905,
	cmp	sl, r7	@ D.37335, i.6905
	add	r5, r5, #4	@ ivtmp.6885, ivtmp.6885,
	bls	.L2634	@,
	cmp	r3, #0	@ tmp244,
	beq	.L2637	@,
	ldr	r3, [r5, #-64]	@ temp.6893, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6893,
	beq	.L2650	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2672	@,
.L2650:
	add	r7, r7, #1	@ i.6905, tmp245,
	add	r5, r5, #4	@ ivtmp.6885, tmp246,
	cmp	sl, r7	@ D.37335, i.6905
	bls	.L2634	@,
.L2637:
	ldr	r3, [r5, #-64]	@ temp.6893, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6893,
	beq	.L2635	@,
	ldr	r0, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2673	@,
.L2635:
	add	r5, r5, #4	@ tmp246, ivtmp.6885,
	add	r7, r7, #1	@ tmp245, i.6905,
	ldr	r3, [r5, #-64]	@ temp.6893, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6893,
	beq	.L2650	@,
	ldr	r0, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2650	@,
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	ip, [r5, #-64]	@ temp.6896, <variable>.DPB.fs
	strb	r6, [ip, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [ip, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	r1, [r5, #-64]	@ temp.6897, <variable>.DPB.fs
	strb	r6, [r1, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [r1, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	lr, [r5, #-64]	@ tmp327, <variable>.DPB.fs
	strb	r6, [lr, #2]	@ tmp236, <variable>.is_reference
	ldr	r3, [r5, #-64]	@ tmp330, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp332, <variable>.DPB.fs
	movw	r3, #:lower16:2792158	@ tmp338,
	movt	r3, #:upper16:2792158	@ tmp338,
	mov	r1, #1	@,
	strb	r6, [r2, #1]	@ tmp236, <variable>.is_used
	ldr	r0, [r5, #-64]	@ tmp333, <variable>.DPB.fs
	strb	r6, [r0, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	ip, [r5, #-64]	@ tmp334, <variable>.DPB.fs
	str	r1, [ip, #612]	@, <variable>.is_displayed
.L2670:
	ldr	r2, [r5, #-64]	@ temp.6903, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	lr, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r3, lr, r3	@ tmp338, <variable>.apc_idc, tmp338
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2651	@,
	ldr	ip, [r5, #-64]	@ tmp347, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2651:
	add	r7, r7, #1	@ i.6905, tmp245,
	ldr	r1, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	sl, r7	@ D.37335, i.6905
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r0, r1, #1	@ tmp345, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	add	r5, r5, #4	@ ivtmp.6885, tmp246,
	str	r0, [r4, r9]	@ tmp345, <variable>.DPB.used_size
	bhi	.L2637	@,
.L2634:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	ip, #:lower16:11196644	@ tmp213,
	movt	ip, #:upper16:11196644	@ tmp213,
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ <variable>.long_term_reference_flag, <variable>.long_term_reference_flag
	cmp	r3, #0	@ <variable>.long_term_reference_flag,
	bne	.L2674	@,
	movw	r1, #:lower16:11168628	@ tmp225,
	movw	r2, #:lower16:11196172	@ tmp227,
	movt	r1, #:upper16:11168628	@ tmp225,
	movt	r2, #:upper16:11196172	@ tmp227,
	movw	lr, #:lower16:11196173	@ tmp230,
	movt	lr, #:upper16:11196173	@ tmp230,
	mov	r0, r3	@ D.37356, <variable>.long_term_reference_flag
	str	r3, [r4, r1]	@ <variable>.long_term_reference_flag, <variable>.DPB.max_long_term_pic_idx
	strb	r3, [r4, r2]	@ <variable>.long_term_reference_flag, <variable>.CurrPic.is_long_term
	mov	r3, #1	@ tmp231,
	strb	r3, [r4, lr]	@ tmp231, <variable>.CurrPic.is_short_term
.L2638:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2673:
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	ip, [r5, #-64]	@ temp.6896, <variable>.DPB.fs
	strb	r6, [ip, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [ip, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	r0, [r5, #-64]	@ temp.6897, <variable>.DPB.fs
	strb	r6, [r0, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [r0, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r3, [r5, #-64]	@ tmp177, <variable>.DPB.fs
	strb	r6, [r3, #2]	@ tmp236, <variable>.is_reference
	ldr	lr, [r5, #-64]	@ tmp182, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r1, [r5, #-64]	@ tmp184, <variable>.DPB.fs
	mov	r0, #1	@,
	movw	r3, #:lower16:2792158	@ tmp192,
	movt	r3, #:upper16:2792158	@ tmp192,
	strb	r6, [r1, #1]	@ tmp236, <variable>.is_used
	ldr	ip, [r5, #-64]	@ tmp187, <variable>.DPB.fs
	strb	r6, [ip, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r2, [r5, #-64]	@ tmp190, <variable>.DPB.fs
	str	r0, [r2, #612]	@, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.6903, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r3, r1, r3	@ tmp192, <variable>.apc_idc, tmp192
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2636	@,
	ldr	lr, [r5, #-64]	@ tmp201, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2636:
	ldr	r1, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r2, r1, #1	@ tmp209, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r2, [r4, r9]	@ tmp209, <variable>.DPB.used_size
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	b	.L2635	@
.L2674:
	movw	r3, #:lower16:11168628	@ tmp215,
	movw	ip, #:lower16:11196652	@ tmp217,
	movt	r3, #:upper16:11168628	@ tmp215,
	movt	ip, #:upper16:11196652	@ tmp217,
	movw	r2, #:lower16:11196172	@ tmp219,
	movw	r1, #:lower16:11196173	@ tmp222,
	movt	r2, #:upper16:11196172	@ tmp219,
	movt	r1, #:upper16:11196173	@ tmp222,
	mov	r0, #0	@ tmp218,
	mov	lr, #1	@ tmp216,
	str	r0, [r4, ip]	@ tmp218, <variable>.CurrPic.long_term_frame_idx
	strb	r0, [r4, r1]	@ tmp218, <variable>.CurrPic.is_short_term
	strb	lr, [r4, r2]	@ tmp216, <variable>.CurrPic.is_long_term
	str	lr, [r4, r3]	@ tmp216, <variable>.DPB.max_long_term_pic_idx
	b	.L2638	@
.L2671:
	strb	r6, [r1, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, r6	@, tmp236
	strb	r6, [r1, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	r0, [r5, #-64]	@ temp.6896, <variable>.DPB.fs
	strb	r6, [r0, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [r0, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.6897, <variable>.DPB.fs
	strb	r6, [ip, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [ip, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r7, [r5, #-64]	@ tmp270, <variable>.DPB.fs
	strb	r6, [r7, #2]	@ tmp236, <variable>.is_reference
	movw	r7, #:lower16:2792158	@ tmp281,
	ldr	lr, [r5, #-64]	@ tmp273, <variable>.DPB.fs
	movt	r7, #:upper16:2792158	@ tmp281,
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	str	r3, [sp, #4]	@,
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp275, <variable>.DPB.fs
	mov	r0, #1	@,
	strb	r6, [r2, #1]	@ tmp236, <variable>.is_used
	ldr	r3, [r5, #-64]	@ tmp276, <variable>.DPB.fs
	strb	r6, [r3, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r1, [r5, #-64]	@ tmp277, <variable>.DPB.fs
	str	r0, [r1, #612]	@, <variable>.is_displayed
	ldr	r3, [r5, #-64]	@ temp.6903, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	ip, [r3, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	add	r2, ip, r7	@ tmp281, <variable>.apc_idc, tmp281
	str	r6, [r4, r2, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	ldr	r3, [sp, #4]	@,
	cmp	r0, #3	@,
	beq	.L2644	@,
	ldr	lr, [r5, #-64]	@ tmp290, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	str	r3, [sp, #4]	@,
	bl	FSP_SetDisplay	@
	ldr	r3, [sp, #4]	@,
.L2644:
	ldr	r2, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r1, r2, #1	@ tmp288, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r1, [r4, r9]	@ tmp288, <variable>.DPB.used_size
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	b	.L2643	@
.L2672:
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	ip, [r5, #-64]	@ temp.6896, <variable>.DPB.fs
	strb	r6, [ip, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [ip, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	r1, [r5, #-64]	@ temp.6897, <variable>.DPB.fs
	strb	r6, [r1, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [r1, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	lr, [r5, #-64]	@ tmp299, <variable>.DPB.fs
	strb	r6, [lr, #2]	@ tmp236, <variable>.is_reference
	ldr	r3, [r5, #-64]	@ tmp302, <variable>.DPB.fs
	ldr	r0, [r4, fp]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r0, [r5, #-64]	@ tmp304, <variable>.DPB.fs
	movw	r3, #:lower16:2792158	@ tmp310,
	movt	r3, #:upper16:2792158	@ tmp310,
	strb	r6, [r0, #1]	@ tmp236, <variable>.is_used
	ldr	ip, [r5, #-64]	@ tmp305, <variable>.DPB.fs
	strb	r6, [ip, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r2, [r5, #-64]	@ tmp306, <variable>.DPB.fs
	str	r7, [r2, #612]	@ tmp1, <variable>.is_displayed
	b	.L2670	@
.L2630:
	movw	r3, #:lower16:11196732	@ tmp210,
	movt	r3, #:upper16:11196732	@ tmp210,
	ldr	r1, [r0, r3]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.37356,
	beq	.L2634	@,
	b	.L2638	@
	.fnend
	.size	MVC_IDRMemMarking, .-MVC_IDRMemMarking
	.align	2
	.global	MVC_AdaptiveMemMark
	.type	MVC_AdaptiveMemMark, %function
MVC_AdaptiveMemMark:
	.fnstart
.LFB1657:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r3, #:lower16:11196644	@ tmp153,
	movt	r3, #:upper16:11196644	@ tmp153,
	movw	r7, #:lower16:11196168	@ D.37277,
	movt	r7, #:upper16:11196168	@ D.37277,
	movw	r8, #:lower16:11161504	@ tmp224,
	ldr	r4, [r0, r3]	@ ivtmp.6943, <variable>.CurrPic.pMarkPara
	add	r7, r0, r7	@ D.37277, pMvcCtx, D.37277
	movt	r8, #:upper16:11161504	@ tmp224,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	add	r6, r4, #2000	@ D.51428, ivtmp.6943,
	mov	sl, #1	@ tmp225,
.L2685:
	ldr	r0, [r4, #4]	@ <variable>.memory_management_control_operation, <variable>.memory_management_control_operation
	cmp	r0, #6	@ <variable>.memory_management_control_operation,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.memory_management_control_operation
	b	.L2676	@
.L2684:
	.word	.L2677
	.word	.L2678
	.word	.L2679
	.word	.L2680
	.word	.L2681
	.word	.L2682
	.word	.L2683
.L2683:
	ldr	r2, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.37277
	bl	MVC_MarkCurrPicLT	@
.L2676:
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	cmp	r4, r6	@ ivtmp.6943, D.51428
	bne	.L2685	@,
.L2677:
	movw	r2, #:lower16:11161504	@ tmp163,
	movt	r2, #:upper16:11161504	@ tmp163,
	ldr	r1, [r5, r2]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r1, #1	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L2695	@,
.L2686:
	mov	r0, #0	@ D.37309,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L2682:
	mov	r0, r5	@, pMvcCtx
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	bl	MVC_UnMarkAllSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_UpdateMaxLTFrmIdx	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.6943, D.51428
	str	sl, [r5, r8]	@ tmp225, <variable>.CurrPOC.last_has_mmco_5
	bne	.L2685	@,
	b	.L2677	@
.L2681:
	ldr	r1, [r4, #20]	@, <variable>.max_long_term_frame_idx_plus1
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateMaxLTFrmIdx	@
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.6943, D.51428
	bne	.L2685	@,
	b	.L2677	@
.L2680:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r1, r7	@, D.37277
	ldr	r3, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	bl	MVC_MarkSTToLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.6943, D.51428
	bne	.L2685	@,
	b	.L2677	@
.L2679:
	ldr	r2, [r4, #12]	@, <variable>.long_term_pic_num
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.37277
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	bl	MVC_UnMarkLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.6943, D.51428
	bne	.L2685	@,
	b	.L2677	@
.L2678:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.37277
	add	r4, r4, #20	@ ivtmp.6943, ivtmp.6943,
	bl	MVC_UnMarkSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	cmp	r4, r6	@ ivtmp.6943, D.51428
	bne	.L2685	@,
	b	.L2677	@
.L2695:
	movw	r0, #:lower16:11164284	@ tmp170,
	movt	r0, #:upper16:11164284	@ tmp170,
	movw	r2, #:lower16:11196171	@ tmp178,
	movt	r2, #:upper16:11196171	@ tmp178,
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	lr, #:lower16:2790658	@ tmp167,
	movt	lr, #:upper16:2790658	@ tmp167,
	ldrb	r0, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, ip, lr	@ tmp167, <variable>.CurrSlice.voidx, tmp167
	movw	r1, #:lower16:11196648	@ tmp165,
	movw	lr, #:lower16:11197344	@ tmp176,
	movt	r1, #:upper16:11196648	@ tmp165,
	add	ip, r5, r3, asl #2	@, tmp173, pMvcCtx, tmp167,
	movt	lr, #:upper16:11197344	@ tmp176,
	cmp	r0, #1	@ <variable>.CurrPic.structure,
	mov	r3, #0	@ tmp166,
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.frame_num
	str	r3, [ip, #4]	@ tmp166, <variable>.CurrSlice.prev_frame_num
	str	r3, [r5, lr]	@ tmp166, <variable>.PrevPic.frame_num
	beq	.L2689	@,
	bcs	.L2696	@,
	movw	r0, #:lower16:11196668	@ tmp196,
	movw	lr, #:lower16:11196660	@ tmp197,
	movt	r0, #:upper16:11196668	@ tmp196,
	movt	lr, #:upper16:11196660	@ tmp197,
	movw	r1, #:lower16:11196672	@ tmp201,
	movw	r2, #:lower16:11161512	@ tmp208,
	ldr	r7, [r5, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	movt	r1, #:upper16:11196672	@ tmp201,
	movt	r2, #:upper16:11161512	@ tmp208,
	ldr	r9, [r5, r0]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	movw	ip, #:lower16:11161524	@ tmp209,
	movt	ip, #:upper16:11161524	@ tmp209,
	rsb	r9, r7, r9	@, <variable>.CurrPic.thispoc, <variable>.CurrPic.toppoc
	ldr	fp, [r5, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	ldr	r8, [r5, ip]	@, <variable>.CurrPOC.ThisPOC
	movw	r3, #:lower16:11161516	@ tmp213,
	ldr	sl, [r5, r1]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	movt	r3, #:upper16:11161516	@ tmp213,
	str	r9, [r5, r0]	@, <variable>.CurrPic.toppoc
	movw	r6, #:lower16:11196664	@ tmp206,
	rsb	sl, r7, sl	@ D.37297, <variable>.CurrPic.thispoc, <variable>.CurrPic.bottompoc
	rsb	r7, r8, fp	@ D.37301,, <variable>.CurrPOC.toppoc
	mov	r8, r9	@ D.37298,
	ldr	fp, [r5, ip]	@, <variable>.CurrPOC.ThisPOC
	ldr	r9, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	movt	r6, #:upper16:11196664	@ tmp206,
	movw	r4, #:lower16:11161520	@ tmp218,
	movt	r4, #:upper16:11161520	@ tmp218,
	rsb	r9, fp, r9	@,,
	cmp	r8, sl	@ D.37298, D.37297
	movge	r8, sl	@ D.37298, D.37297
	str	r9, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	str	r8, [r5, lr]	@ D.37298, <variable>.CurrPic.thispoc
	mov	r3, r9	@ D.37303,
	str	sl, [r5, r1]	@ D.37297, <variable>.CurrPic.bottompoc
	cmp	r3, r7	@ D.37303, D.37301
	movge	r3, r7	@ D.37303, D.37301
	str	r8, [r5, r6]	@ D.37298, <variable>.CurrPic.framepoc
	str	r3, [r5, ip]	@ D.37303, <variable>.CurrPOC.ThisPOC
	str	r7, [r5, r2]	@ D.37301, <variable>.CurrPOC.toppoc
	str	r3, [r5, r4]	@ D.37303, <variable>.CurrPOC.framepoc
.L2687:
	movw	r2, #:lower16:11196732	@ tmp220,
	movt	r2, #:upper16:11196732	@ tmp220,
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [r5, r2]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.37309,
	beq	.L2686	@,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L2696:
	cmp	r0, #2	@ <variable>.CurrPic.structure,
	bne	.L2687	@,
	movw	ip, #:lower16:11196672	@ tmp188,
	movw	r1, #:lower16:11196660	@ tmp190,
	movw	r2, #:lower16:11161516	@ tmp192,
	movt	ip, #:upper16:11196672	@ tmp188,
	movt	r1, #:upper16:11196660	@ tmp190,
	movt	r2, #:upper16:11161516	@ tmp192,
.L2694:
	movw	lr, #:lower16:11161524	@ tmp194,
	movt	lr, #:upper16:11161524	@ tmp194,
	str	r3, [r5, ip]	@ tmp166,
	str	r3, [r5, lr]	@ tmp166, <variable>.CurrPOC.ThisPOC
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.thispoc
	str	r3, [r5, r2]	@ tmp166,
	b	.L2687	@
.L2689:
	movw	ip, #:lower16:11196668	@ tmp180,
	movw	r1, #:lower16:11196660	@ tmp182,
	movw	r2, #:lower16:11161512	@ tmp184,
	movt	ip, #:upper16:11196668	@ tmp180,
	movt	r1, #:upper16:11196660	@ tmp182,
	movt	r2, #:upper16:11161512	@ tmp184,
	b	.L2694	@
	.fnend
	.size	MVC_AdaptiveMemMark, .-MVC_AdaptiveMemMark
	.align	2
	.global	MVC_Marking
	.type	MVC_Marking, %function
MVC_Marking:
	.fnstart
.LFB1659:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	ip, #:lower16:11196171	@ tmp143,
	movw	r3, #:lower16:11196174	@ tmp146,
	movt	ip, #:upper16:11196171	@ tmp143,
	movt	r3, #:upper16:11196174	@ tmp146,
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:11161504	@ tmp140,
	ldrb	r0, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	movt	r1, #:upper16:11161504	@ tmp140,
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, tmp145
	moveq	r2, #1	@, tmp145
	movw	ip, #:lower16:11161508	@ tmp142,
	cmp	r0, #5	@ <variable>.CurrPic.nal_unit_type,
	movt	ip, #:upper16:11161508	@ tmp142,
	mov	r3, #0	@ tmp141,
	str	r3, [r4, r1]	@ tmp141, <variable>.CurrPOC.last_has_mmco_5
	str	r2, [r4, ip]	@ tmp145, <variable>.CurrPOC.last_pic_bottom_field
	beq	.L2698	@,
	movw	r0, #:lower16:11196692	@ tmp148,
	movt	r0, #:upper16:11196692	@ tmp148,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r1, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2699	@,
	ldr	r3, [r4, #0]	@ D.37374, <variable>.pstExtraData
	ldr	r2, [r3, #540]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r2, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L2710	@,
.L2699:
	movw	r5, #:lower16:11196644	@ tmp156,
	movt	r5, #:upper16:11196644	@ tmp156,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L2709	@,
	movw	r3, #:lower16:11196656	@ tmp159,
	movt	r3, #:upper16:11196656	@ tmp159,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2711	@,
.L2704:
	mov	r0, #0	@ D.37387,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L2710:
	ldr	ip, [r3, #536]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	ip, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L2699	@,
	ldr	r1, [r3, #544]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r1, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L2699	@,
	ldr	r0, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r0, #1024	@ tmp153, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp153,
	bls	.L2699	@,
.L2698:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IDRMemMarking	@
	cmp	r0, #0	@,
	bne	.L2700	@,
.L2701:
	movw	r0, #:lower16:11196174	@ tmp165,
	movt	r0, #:upper16:11196174	@ tmp165,
	ldrb	lr, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	cmp	lr, #5	@ <variable>.CurrPic.nal_unit_type,
	beq	.L2705	@,
.L2709:
	movw	r3, #:lower16:11196656	@ tmp167,
	movt	r3, #:upper16:11196656	@ tmp167,
	ldr	r1, [r4, r3]	@ prephitmp.6967, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ prephitmp.6967,
	beq	.L2704	@,
	movw	r5, #:lower16:11196644	@ tmp169,
	movt	r5, #:upper16:11196644	@ tmp169,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L2706	@,
	movw	r0, #:lower16:11196169	@ tmp171,
	movt	r0, #:upper16:11196169	@ tmp171,
	ldrb	r6, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2706	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SlidingWinMark	@
	ldr	r3, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	movw	r1, #:lower16:11196172	@ tmp177,
	movt	r1, #:upper16:11196172	@ tmp177,
	strb	r6, [r3, #0]	@ <variable>.CurrPic.field_pair_flag, <variable>.is_valid
	strb	r6, [r4, r1]	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.is_long_term
.L2705:
	movw	r2, #:lower16:11196656	@ tmp180,
	movt	r2, #:upper16:11196656	@ tmp180,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2704	@,
.L2706:
	movw	r0, #:lower16:11196172	@ tmp183,
	movt	r0, #:upper16:11196172	@ tmp183,
	movw	r1, #:lower16:11196173	@ tmp182,
	movt	r1, #:upper16:11196173	@ tmp182,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	mov	r0, #0	@ D.37387,
	cmp	r3, r0	@ <variable>.CurrPic.is_long_term,
	movne	ip, #0	@, tmp185
	moveq	ip, #1	@, tmp185
	strb	ip, [r4, r1]	@ tmp185, <variable>.CurrPic.is_short_term
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L2711:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AdaptiveMemMark	@
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r2, #0	@ tmp163,
	strb	r2, [ip, #0]	@ tmp163, <variable>.is_valid
	cmp	r0, r2	@,
	beq	.L2701	@,
.L2700:
	mvn	r0, #0	@ D.37387,
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	MVC_Marking, .-MVC_Marking
	.align	2
	.global	MVC_ClearDPB
	.type	MVC_ClearDPB, %function
MVC_ClearDPB:
	.fnstart
.LFB1620:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, lr}	@,
	.save {r4, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L2716	@,
.L2713:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	beq	.L2714	@,
	bl	vfmw_dprint_nothing	@
.L2714:
	movw	r2, #:lower16:11198012	@ tmp138,
	movw	r3, #:lower16:11199528	@ tmp140,
	movt	r2, #:upper16:11198012	@ tmp138,
	movt	r3, #:upper16:11199528	@ tmp140,
	mov	r0, #0	@ tmp139,
	str	r0, [r4, r2]	@ tmp139, <variable>.IDRFound
	str	r0, [r4, r3]	@ tmp139, <variable>.FirstFrameDisplayed
	ldmfd	sp!, {r4, pc}	@
.L2716:
	bl	vfmw_dprint_nothing	@
	b	.L2713	@
	.fnend
	.size	MVC_ClearDPB, .-MVC_ClearDPB
	.align	2
	.global	MVC_ReceivePacket
	.type	MVC_ReceivePacket, %function
MVC_ReceivePacket:
	.fnstart
.LFB1757:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r8, r9, lr}	@,
	.save {r4, r5, r6, r8, r9, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ pPacket, pPacket
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, #368]	@ D.44080, <variable>.pCurrNal
	cmp	r3, #0	@ D.44080,
	beq	.L2718	@,
	ldrb	r2, [r6, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	cmp	r2, #1	@ <variable>.last_pack_in_nal,
	beq	.L2740	@,
.L2719:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	ldr	r3, [r4, #368]	@ D.44080, <variable>.pCurrNal
	cmp	r3, #0	@ D.44080,
	ldrneb	r2, [r6, #0]	@ zero_extendqisi2	@ prephitmp.7023, <variable>.last_pack_in_nal
	beq	.L2718	@,
.L2720:
	strb	r2, [r3, #3]	@ prephitmp.7023, <variable>.nal_integ
	ldr	r0, [r6, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r0, #0	@ <variable>.stream_len,
	ble	.L2729	@,
	ldr	r2, [r6, #4]	@ temp.7061, <variable>.p_stream
	cmp	r2, #0	@ temp.7061,
	beq	.L2729	@,
	ldr	r3, [r6, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	r3, #0	@ <variable>.strm_phy_addr,
	bne	.L2732	@,
.L2729:
	ldr	r3, [r4, #368]	@ prephitmp.7025, <variable>.pCurrNal
.L2731:
	movw	r5, #:lower16:11199520	@ tmp265,
	movt	r5, #:upper16:11199520	@ tmp265,
	mov	r2, #1	@ tmp263,
	strb	r2, [r3, #3]	@ tmp263, <variable>.nal_integ
	ldr	r1, [r6, #16]	@, <variable>.StreamID
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r0, #:lower16:g_event_report	@ tmp268,
	movt	r0, #:upper16:g_event_report	@ tmp268,
	ldr	r3, [r0, #0]	@ g_event_report.7081, g_event_report
	cmp	r3, #0	@ g_event_report.7081,
	beq	.L2726	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.7081
.L2726:
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r3, #0	@ <variable>.nal_integ,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
	ldmfd	sp!, {r4, r5, r6, r8, r9, pc}	@
.L2740:
	ldr	r1, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bhi	.L2719	@,
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r0, #1	@ <variable>.nal_integ,
	bne	.L2720	@,
	b	.L2719	@
.L2732:
	ldr	r3, [r4, #368]	@ prephitmp.7025, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ temp.7063, <variable>.nal_segment
	cmp	r1, #1	@ temp.7063,
	bhi	.L2731	@,
	rsb	lr, r1, r1, asl #3	@, tmp224, temp.7063, temp.7063,
	mov	r0, r4	@, pMvcCtx
	add	ip, r3, lr, asl #2	@, tmp226, prephitmp.7025, tmp224,
	str	r2, [ip, #4]	@ temp.7061, <variable>.streamBuffer
	ldr	lr, [r4, #368]	@ temp.7065, <variable>.pCurrNal
	ldr	ip, [r6, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp230, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, lr, r2, asl #2	@, tmp232, temp.7065, tmp230,
	str	ip, [r3, #8]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	lr, [r4, #368]	@ temp.7069, <variable>.pCurrNal
	ldr	ip, [r6, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp238, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, lr, r2, asl #2	@, tmp240, temp.7069, tmp238,
	str	ip, [r3, #12]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	lr, [r4, #368]	@ temp.7072, <variable>.pCurrNal
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp247, <variable>.nal_segment, <variable>.nal_segment,
	mov	r1, #0	@ tmp251,
	add	ip, lr, r2, asl #2	@, tmp249, temp.7072, tmp247,
	add	r3, ip, #16	@ tmp250, tmp249,
	str	r1, [r3, #4]	@ tmp251, <variable>.bitsoffset
	ldr	ip, [r4, #368]	@ temp.7074, <variable>.pCurrNal
	ldr	r1, [r6, #16]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r2, [ip, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	lr, r2, r2, asl #3	@, tmp256, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, ip, lr, asl #2	@, tmp258, temp.7074, tmp256,
	str	r1, [r3, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	lr, [r4, #368]	@ temp.7077, <variable>.pCurrNal
	ldr	r2, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	add	ip, r2, #1	@ tmp262, <variable>.nal_segment,
	str	ip, [lr, #64]	@ tmp262, <variable>.nal_segment
	bl	MVC_CombinePacket	@
	b	.L2726	@
.L2718:
	ldr	r3, [r6, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r3, #0	@ <variable>.stream_len,
	ble	.L2722	@,
	ldr	r2, [r6, #4]	@ <variable>.p_stream, <variable>.p_stream
	cmp	r2, #0	@ <variable>.p_stream,
	beq	.L2722	@,
	ldr	ip, [r6, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	ip, #0	@ <variable>.strm_phy_addr,
	beq	.L2722	@,
	ldrb	r2, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r1, r4, #96	@ ivtmp.7044, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L2724	@,
	b	.L2723	@
.L2741:
	ldrb	r2, [r1, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r1, r1, #192	@ ivtmp.7044, ivtmp.7044,
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L2723	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L2725	@,
.L2724:
	ldrb	r2, [r1, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	bne	.L2741	@,
.L2723:
	cmp	r3, #136	@ Pos,
	bhi	.L2725	@,
	add	r8, r3, r3, asl #1	@, tmp168, Pos, Pos,
	mov	lr, #1	@ tmp172,
	mov	ip, r8, asl #5	@ tmp169, tmp168,
	add	r0, ip, r4	@ tmp170, tmp169, pMvcCtx
	add	r3, ip, #376	@ tmp178, tmp169,
	add	r1, r4, r3	@ tmp179, pMvcCtx, tmp178
	add	r8, r0, #376	@ tmp171, tmp170,
	strb	lr, [r0, #377]	@ tmp172, <variable>.is_valid
	str	r1, [r4, #368]	@ tmp179, <variable>.pCurrNal
	ldr	r9, [r6, #4]	@ <variable>.p_stream, <variable>.p_stream
	str	r9, [r8, #4]	@ <variable>.p_stream, <variable>.streamBuffer
	ldr	ip, [r6, #12]	@ <variable>.stream_len, <variable>.stream_len
	str	ip, [r8, #8]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r0, [r6, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	str	r0, [r3, #12]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [r1, #20]	@ <variable>.is_valid, <variable>.bitsoffset
	ldr	r9, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r8, [r6, #16]	@ <variable>.StreamID, <variable>.StreamID
	str	r8, [r9, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrd	r8, [r6, #24]	@ <variable>.pts, pPacket,
	strd	r8, [ip, #80]	@ <variable>.pts, <variable>.pCurrNal,
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	lr, [r3, #64]	@ tmp172, <variable>.nal_segment
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r2, [r0, #0]	@ <variable>.is_valid, <variable>.nal_used_segment
	ldrb	lr, [r6, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	lr, [r1, #3]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	b	.L2726	@
.L2725:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearAllNal	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r2, #:lower16:g_event_report	@ tmp212,
	movt	r2, #:upper16:g_event_report	@ tmp212,
	ldr	r3, [r2, #0]	@ g_event_report.874, g_event_report
	cmp	r3, #0	@ g_event_report.874,
	bne	.L2742	@,
.L2727:
	mvn	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, r8, r9, pc}	@
.L2722:
	movw	r5, #:lower16:11199520	@ tmp214,
	movt	r5, #:upper16:11199520	@ tmp214,
	bl	vfmw_dprint_nothing	@
	ldr	r1, [r6, #16]	@, <variable>.StreamID
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r1, #:lower16:g_event_report	@ tmp217,
	movt	r1, #:upper16:g_event_report	@ tmp217,
	ldr	r3, [r1, #0]	@ g_event_report.7058, g_event_report
	cmp	r3, #0	@ g_event_report.7058,
	beq	.L2727	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.7058
	mvn	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, r8, r9, pc}	@
.L2742:
	movw	lr, #:lower16:11199520	@ tmp213,
	movt	lr, #:upper16:11199520	@ tmp213,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.874
	mvn	r0, #0	@ ret,
	ldmfd	sp!, {r4, r5, r6, r8, r9, pc}	@
	.fnend
	.size	MVC_ReceivePacket, .-MVC_ReceivePacket
	.align	2
	.global	MVC_DecVDM
	.type	MVC_DecVDM, %function
MVC_DecVDM:
	.fnstart
.LFB1715:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11196171	@ tmp147,
	movt	r1, #:upper16:11196171	@ tmp147,
	stmfd	sp!, {r4, r5, r6, r7, lr}	@,
	.save {r4, r5, r6, r7, lr}
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	.pad #12
	sub	sp, sp, #12	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L2744	@,
	movw	r2, #:lower16:11196169	@ tmp149,
	movt	r2, #:upper16:11196169	@ tmp149,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r0, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2744	@,
.L2745:
	movw	ip, #:lower16:11199508	@ tmp162,
	movt	ip, #:upper16:11199508	@ tmp162,
	movw	r6, #:lower16:11199448	@ tmp165,
	movt	r6, #:upper16:11199448	@ tmp165,
	ldr	r5, [r4, ip]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	ldr	r3, [r4, r6]	@ D.40669, <variable>.OldDecMode
	ubfx	r5, r5, #16, #2	@ IPBDecMode, <variable>.advanced_cfg,,
	cmp	r5, #2	@ IPBDecMode,
	cmpne	r3, r5	@, D.40669, IPBDecMode
	beq	.L2746	@,
	sub	lr, r3, #2	@ tmp173, D.40669,
	cmp	lr, #1	@ tmp173,
	bls	.L2777	@,
.L2746:
	movw	r1, #:lower16:11199448	@ tmp175,
	cmp	r5, #2	@ IPBDecMode,
	movt	r1, #:upper16:11199448	@ tmp175,
	str	r5, [r4, r1]	@ IPBDecMode, <variable>.OldDecMode
	beq	.L2750	@,
	cmp	r5, #3	@ IPBDecMode,
	beq	.L2751	@,
	cmp	r5, #1	@ IPBDecMode,
	beq	.L2778	@,
.L2748:
	movw	r3, #:lower16:11199524	@ tmp196,
	movt	r3, #:upper16:11199524	@ tmp196,
	ldr	ip, [r4, r3]	@ <variable>.PrevPicIsIDR, <variable>.PrevPicIsIDR
	cmp	ip, #1	@ <variable>.PrevPicIsIDR,
	beq	.L2779	@,
.L2753:
	movw	r0, #:lower16:11196696	@ tmp204,
	movt	r0, #:upper16:11196696	@ tmp204,
	movw	r3, #:lower16:11199524	@ tmp203,
	movt	r3, #:upper16:11199524	@ tmp203,
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	str	ip, [r4, r3]	@ <variable>.CurrPic.is_idr_pic, <variable>.PrevPicIsIDR
.L2754:
	movw	r1, #:lower16:11199444	@ tmp206,
	movt	r1, #:upper16:11199444	@ tmp206,
	ldr	lr, [r4, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	lr, #0	@ <variable>.SliceParaNum,
	beq	.L2776	@,
	movw	r2, #:lower16:11199448	@ tmp208,
	movt	r2, #:upper16:11199448	@ tmp208,
	ldr	r5, [r4, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r5, #4	@ <variable>.OldDecMode,
	beq	.L2756	@,
	movw	ip, #:lower16:11196692	@ tmp210,
	movt	ip, #:upper16:11196692	@ tmp210,
	ldr	r3, [r4, ip]	@ prephitmp.7105, <variable>.CurrPic.pic_type
.L2757:
	cmp	r3, #2	@ prephitmp.7105,
	beq	.L2780	@,
	cmp	r3, #1	@ prephitmp.7105,
	beq	.L2781	@,
.L2759:
	bl	vfmw_dprint_nothing	@
	movw	r0, #:lower16:11199484	@ tmp240,
	movt	r0, #:upper16:11199484	@ tmp240,
	movw	r6, #:lower16:11196716	@ tmp229,
	movw	r5, #:lower16:11196720	@ tmp235,
	movt	r6, #:upper16:11196716	@ tmp229,
	movt	r5, #:upper16:11196720	@ tmp235,
	movw	r3, #:lower16:11199444	@ tmp238,
	movt	r3, #:upper16:11199444	@ tmp238,
	ldr	r0, [r4, r0]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.pic_mbs, <variable>.CurrPic.pic_mbs
	movw	ip, #:lower16:11198968	@ tmp228,
	ldr	r6, [r4, r5]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	movt	ip, #:upper16:11198968	@ tmp228,
	ldr	r5, [r4, r3]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	movw	r2, #:lower16:11198050	@ tmp231,
	movw	r1, #:lower16:11198964	@ tmp234,
	movt	r2, #:upper16:11198050	@ tmp231,
	movt	r1, #:upper16:11198964	@ tmp234,
	movw	r3, #:lower16:11199168	@ tmp237,
	cmp	r0, #0	@ <variable>.TotalPicNum,
	movt	r3, #:upper16:11199168	@ tmp237,
	str	r7, [r4, ip]	@ <variable>.CurrPic.pic_mbs, <variable>.DecPicPara.mbtodec
	mov	ip, #1	@ tmp232,
	str	r6, [r4, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	strb	ip, [r4, r2]	@ tmp232, <variable>.DecPicPara.NewPicFlag
	str	r5, [r4, r3]	@ <variable>.SliceParaNum, <variable>.DecPicPara.SliceParaNum
	beq	.L2747	@,
	movw	r2, #:lower16:11196692	@ tmp242,
	movt	r2, #:upper16:11196692	@ tmp242,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	lr, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2761	@,
	movw	r5, #:lower16:g_event_report	@ tmp244,
	movt	r5, #:upper16:g_event_report	@ tmp244,
	ldr	r1, [r5, #0]	@ g_event_report, g_event_report
	cmp	r1, #0	@ g_event_report,
	beq	.L2773	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetPicStreamSize	@
	add	r2, sp, #8	@ tmp249,,
	movw	ip, #:lower16:11199520	@ tmp247,
	movt	ip, #:upper16:11199520	@ tmp247,
	ldr	r3, [r5, #0]	@ g_event_report, g_event_report
	mov	r1, #20	@,
	str	r0, [r2, #-4]!	@, para
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report
.L2773:
	ldr	r2, [r4, #0]	@ temp.7133, <variable>.pstExtraData
.L2762:
	movw	r3, #:lower16:11198048	@ D.40747,
	movt	r3, #:upper16:11198048	@ D.40747,
	add	r3, r4, r3	@ D.40747, pMvcCtx, D.40747
	str	r3, [r4, #360]	@ D.40747, <variable>.pMvcDecParam
	ldr	r1, [r2, #684]	@ D.40748, <variable>.stDisParams.s32Mode
	cmp	r1, #1	@ D.40748,
	beq	.L2782	@,
	cmp	r1, #2	@ D.40748,
	beq	.L2783	@,
.L2764:
	ldr	ip, [r2, #512]	@ <variable>.s32Compress_en, <variable>.s32Compress_en
	movw	lr, #:lower16:11199432	@ tmp271,
	movt	lr, #:upper16:11199432	@ tmp271,
	mov	r0, #0	@ D.40683,
	str	ip, [r4, lr]	@ <variable>.s32Compress_en, <variable>.DecPicPara.Compress_en
.L2747:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, pc}
.L2744:
	movw	r3, #:lower16:11199548	@ tmp151,
	movt	r3, #:upper16:11199548	@ tmp151,
	movw	r1, #:lower16:11199552	@ tmp154,
	movt	r1, #:upper16:11199552	@ tmp154,
	ldr	r6, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	r5, [r4, #0]	@ D.40661, <variable>.pstExtraData
	ldr	r2, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	add	r0, r6, #1	@ D.40663, <variable>.numTotalFrame,
	cmp	r0, r2	@ D.40663, <variable>.numOutputFrame
	movlt	r0, r2	@ D.40665, <variable>.numOutputFrame
	str	r0, [r4, r3]	@ D.40665, <variable>.numTotalFrame
	str	r0, [r5, #440]	@ D.40665, <variable>.stChanState.total_frame_num
	ldr	lr, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	ip, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	rsb	r6, ip, lr	@ tmp161, <variable>.numOutputFrame, <variable>.numTotalFrame
	str	r6, [r5, #444]	@ tmp161, <variable>.stChanState.error_frame_num
	b	.L2745	@
.L2781:
	movw	r6, #:lower16:11196732	@ tmp224,
	movt	r6, #:upper16:11196732	@ tmp224,
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, #0	@ <variable>.CurrPic.view_id,
	movweq	r5, #:lower16:11198016	@ tmp226,
	movteq	r5, #:upper16:11198016	@ tmp226,
	streq	r3, [r4, r5]	@ prephitmp.7105, <variable>.PPicFound
	b	.L2759	@
.L2778:
	movw	lr, #:lower16:11196692	@ tmp189,
	movt	lr, #:upper16:11196692	@ tmp189,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2748	@,
	movw	r3, #:lower16:11196656	@ tmp191,
	movt	r3, #:upper16:11196656	@ tmp191,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2748	@,
	movw	r2, #:lower16:11196175	@ tmp193,
	movt	r2, #:upper16:11196175	@ tmp193,
	mov	r0, r4	@, pMvcCtx
	strb	r5, [r4, r2]	@ IPBDecMode, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
.L2777:
	cmp	r5, #1	@ IPBDecMode,
	bhi	.L2746	@,
	bl	vfmw_dprint_nothing	@
	str	r5, [r4, r6]	@ IPBDecMode, <variable>.OldDecMode
.L2751:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
.L2750:
	movw	r0, #:lower16:11196692	@ tmp176,
	movt	r0, #:upper16:11196692	@ tmp176,
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2774	@,
	movw	ip, #:lower16:11199444	@ tmp181,
	movt	ip, #:upper16:11199444	@ tmp181,
	ldr	r2, [r4, ip]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r2, #0	@ <variable>.SliceParaNum,
	beq	.L2748	@,
	movw	r3, #:lower16:11199440	@ tmp184,
	movt	r3, #:upper16:11199440	@ tmp184,
	ldr	r1, [r4, r3]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	ldr	lr, [r1, #48]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	cmp	lr, #0	@ <variable>.first_mb_in_slice,
	beq	.L2748	@,
.L2774:
	movw	ip, #:lower16:11196175	@ tmp186,
	movt	ip, #:upper16:11196175	@ tmp186,
	mov	r2, #1	@ tmp187,
	mov	r0, r4	@, pMvcCtx
	strb	r2, [r4, ip]	@ tmp187, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
.L2761:
	movw	lr, #:lower16:11168616	@ tmp251,
	movt	lr, #:upper16:11168616	@ tmp251,
	ldr	r0, [r4, lr]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	bne	.L2773	@,
	ldr	r2, [r4, #0]	@ temp.7133, <variable>.pstExtraData
	ldr	r1, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	beq	.L2762	@,
.L2776:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
.L2779:
	movw	lr, #:lower16:11196692	@ tmp198,
	movt	lr, #:upper16:11196692	@ tmp198,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2753	@,
	movw	r2, #:lower16:11196696	@ tmp201,
	movt	r2, #:upper16:11196696	@ tmp201,
	ldr	r1, [r4, r2]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	str	r1, [r4, r3]	@ <variable>.CurrPic.is_idr_pic, <variable>.PrevPicIsIDR
	b	.L2754	@
.L2780:
	movw	lr, #:lower16:11198016	@ tmp215,
	movt	lr, #:upper16:11198016	@ tmp215,
	ldr	r0, [r4, lr]	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	r0, #0	@ <variable>.PPicFound,
	bne	.L2759	@,
	ldr	r1, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r5, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r5, #0	@ <variable>.s32DecOrderOutput,
	bne	.L2759	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	movw	r3, #:lower16:11196640	@ tmp222,
	movt	r3, #:upper16:11196640	@ tmp222,
	movw	r1, #:lower16:11199520	@ tmp219,
	movt	r1, #:upper16:11199520	@ tmp219,
	mov	r2, r5	@, <variable>.s32DecOrderOutput
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
.L2756:
	movw	r3, #:lower16:11196692	@ tmp211,
	movt	r3, #:upper16:11196692	@ tmp211,
	ldr	r3, [r4, r3]	@ prephitmp.7105, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ prephitmp.7105,
	bne	.L2757	@,
	movw	r5, #:lower16:11198016	@ tmp226,
	movt	r5, #:upper16:11198016	@ tmp226,
	str	r3, [r4, r5]	@ prephitmp.7105, <variable>.PPicFound
	b	.L2759	@
.L2782:
	cmp	r3, #0	@ D.40747,
	beq	.L2764	@,
	movw	r0, #:lower16:11196692	@ tmp256,
	movt	r0, #:upper16:11196692	@ tmp256,
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	ip, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2764	@,
	movw	r2, #:lower16:11196640	@ tmp261,
	movt	r2, #:upper16:11196640	@ tmp261,
	movw	r1, #:lower16:11199520	@ tmp259,
	movt	r1, #:upper16:11199520	@ tmp259,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, #0	@ tmp258,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r2, ip	@, tmp258
	str	ip, [r4, #360]	@ tmp258, <variable>.pMvcDecParam
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	b	.L2776	@
.L2783:
	ldr	r0, [r2, #688]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	cmp	r0, #0	@ <variable>.stDisParams.s32DisNums,
	ble	.L2764	@,
	cmp	r3, #0	@ D.40747,
	beq	.L2764	@,
	movw	lr, #:lower16:11196692	@ tmp263,
	movt	lr, #:upper16:11196692	@ tmp263,
	ldr	r3, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2764	@,
	movw	r0, #:lower16:11196640	@ tmp268,
	movt	r0, #:upper16:11196640	@ tmp268,
	movw	r1, #:lower16:11199520	@ tmp266,
	movt	r1, #:upper16:11199520	@ tmp266,
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #0	@ tmp265,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r2, r3	@, tmp265
	str	r3, [r4, #360]	@ tmp265, <variable>.pMvcDecParam
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	ip, [r4, #0]	@ temp.7142, <variable>.pstExtraData
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [ip, #688]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	sub	r1, r2, #1	@ tmp270, <variable>.stDisParams.s32DisNums,
	str	r1, [ip, #688]	@ tmp270, <variable>.stDisParams.s32DisNums
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.40683,
	b	.L2747	@
	.fnend
	.size	MVC_DecVDM, .-MVC_DecVDM
	.align	2
	.global	MVC_FlushDecoder
	.type	MVC_FlushDecoder, %function
MVC_FlushDecoder:
	.fnstart
.LFB1751:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	@ link register save eliminated.
	movw	r1, #:lower16:11162676	@ tmp140,
	movw	r3, #:lower16:11162629	@ tmp141,
	movt	r1, #:upper16:11162676	@ tmp140,
	movt	r3, #:upper16:11162629	@ tmp141,
	str	r4, [sp, #-4]!	@,
	.save {r4}
	mov	ip, #1	@ tmp137,
	mov	r4, #0	@ tmp135,
	str	ip, [r0, #364]	@ tmp137, <variable>.StartMode
	str	r4, [r0, r1]	@ tmp135, <variable>.CurrSlice.first_mb_in_slice
	strb	ip, [r0, r3]	@ tmp137, <variable>.CurrSlice.new_pic_flag
	ldmfd	sp!, {r4}
	b	MVC_DecVDM	@
	.fnend
	.size	MVC_FlushDecoder, .-MVC_FlushDecoder
	.align	2
	.global	MVC_InsertFrmInDPB
	.type	MVC_InsertFrmInDPB, %function
MVC_InsertFrmInDPB:
	.fnstart
.LFB1651:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r4, #:lower16:11168616	@ tmp200,
	movt	r4, #:upper16:11168616	@ tmp200,
	.pad #20
	sub	sp, sp, #20	@,,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ pos, pos
	ldr	r3, [r0, r4]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r4, r2	@ pCurrPic, pCurrPic
	cmp	r3, #0	@ <variable>.DPB.used_size,
	movweq	r2, #:lower16:.LANCHOR1	@ tmp202,
	movteq	r2, #:upper16:.LANCHOR1	@ tmp202,
	streq	r3, [r2, #68]	@ <variable>.DPB.used_size, cnt
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #1	@ <variable>.structure,
	beq	.L2790	@,
	bcc	.L2789	@,
	cmp	r3, #2	@ <variable>.structure,
	beq	.L2835	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.36847,
.L2797:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2789:
	movw	r0, #:lower16:2792104	@ tmp205,
	movt	r0, #:upper16:2792104	@ tmp205,
	add	r3, r1, r0	@ tmp205, pos, tmp205
	ldr	r2, [r4, #472]	@ D.36797, <variable>.frame_store
	mov	r1, #3	@ tmp220,
	add	r0, r5, r3, asl #2	@, tmp209, pMvcCtx, tmp205,
	str	r2, [r0, #4]	@ D.36797, <variable>.DPB.fs
	ldrb	r8, [r4, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r8, [r2, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r7, [r0, #4]	@ tmp215, <variable>.DPB.fs
	strb	r1, [r7, #1]	@ tmp220, <variable>.is_used
	ldr	lr, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r0, #4]	@ tmp224, <variable>.DPB.fs
	ldrb	sl, [lr, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	sl, [ip, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r8, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r0, #4]	@ tmp234, <variable>.DPB.fs
	ldr	r7, [r8, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r7, [r2, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r1, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	ldr	r2, [r0, #4]	@ temp.7215, <variable>.DPB.fs
	cmp	r1, #0	@ <variable>.is_long_term,
	beq	.L2836	@,
.L2792:
	mov	r1, #3	@ iftmp.486,
.L2793:
	movw	sl, #:lower16:2792104	@ tmp250,
	movt	sl, #:upper16:2792104	@ tmp250,
	add	r3, r6, sl	@ tmp250, pos, tmp250
	strb	r1, [r2, #2]	@ iftmp.486, <variable>.is_reference
	ldr	lr, [r4, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	add	r1, r4, #16	@, pCurrPic,
	add	r6, r5, r3, asl #2	@, tmp255, pMvcCtx, tmp250,
	mov	r2, #456	@,
	ldr	r7, [r6, #4]	@ tmp252, <variable>.DPB.fs
	str	lr, [r7, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r8, [r6, #4]	@ tmp260, <variable>.DPB.fs
	add	r0, r8, #8	@, tmp260,
	movw	r8, #:lower16:.LANCHOR1	@ tmp445,
	bl	memcpy	@
	ldr	ip, [r6, #4]	@ temp.7218, <variable>.DPB.fs
	ldr	r0, [r4, #532]	@ D.36813, <variable>.err_level
	mov	lr, #0	@ tmp304,
	mov	r2, lr	@, tmp304
	movt	r8, #:upper16:.LANCHOR1	@ tmp445,
	str	r0, [ip, #624]	@ D.36813, <variable>.err_level
	str	r0, [ip, #488]	@ D.36813, <variable>.frame.err_level
	mov	r0, r5	@, pMvcCtx
	ldr	r3, [r6, #4]	@ temp.7219, <variable>.DPB.fs
	ldr	sl, [r4, #472]	@ temp.7220, <variable>.frame_store
	str	sl, [r3, #468]	@ temp.7220, <variable>.frame.frame_store
	str	sl, [r3, #548]	@ temp.7220, <variable>.bottom_field.frame_store
	str	sl, [r3, #508]	@ temp.7220, <variable>.top_field.frame_store
	ldr	r7, [r6, #4]	@ tmp283, <variable>.DPB.fs
	ldr	r1, [r4, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	str	r1, [r7, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	ldr	sl, [r6, #4]	@ tmp291, <variable>.DPB.fs
	ldr	ip, [r4, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [sl, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r3, [r6, #4]	@ tmp299, <variable>.DPB.fs
	strb	lr, [r3, #464]	@ tmp304, <variable>.frame.structure
	ldr	r7, [r6, #4]	@ tmp308, <variable>.DPB.fs
	ldrb	r1, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [r7, #465]	@ <variable>.is_long_term, <variable>.frame.is_long_term
	ldr	lr, [r6, #4]	@ tmp317, <variable>.DPB.fs
	ldrb	sl, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	sl, [lr, #466]	@ <variable>.is_short_term, <variable>.frame.is_short_term
	ldr	r3, [r6, #4]	@ temp.7228, <variable>.DPB.fs
	ldr	ip, [r4, #524]	@ D.36819, <variable>.pic_type
	str	ip, [r3, #620]	@ D.36819, <variable>.pic_type
	str	ip, [r3, #492]	@ D.36819, <variable>.frame.pic_type
	ldr	r7, [r6, #4]	@ tmp332, <variable>.DPB.fs
	ldrb	r1, [r4, #9]	@ zero_extendqisi2	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	str	r1, [r7, #616]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldr	lr, [r6, #4]	@ tmp340, <variable>.DPB.fs
	ldr	sl, [r4, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	sl, [lr, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r3, [r6, #4]	@ tmp348, <variable>.DPB.fs
	ldr	ip, [r4, #496]	@ <variable>.framepoc, <variable>.framepoc
	str	ip, [r3, #480]	@ <variable>.framepoc, <variable>.frame.poc
	ldr	r7, [r6, #4]	@ tmp356, <variable>.DPB.fs
	ldr	r1, [r4, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	r1, [r7, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	lr, [r6, #4]	@ tmp364, <variable>.DPB.fs
	ldr	sl, [r4, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	sl, [lr, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	r3, [r6, #4]	@ tmp372, <variable>.DPB.fs
	ldr	ip, [r4, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r3, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r7, [r6, #4]	@ tmp380, <variable>.DPB.fs
	ldr	r1, [r4, #512]	@ <variable>.decframepoc, <variable>.decframepoc
	str	r1, [r7, #484]	@ <variable>.decframepoc, <variable>.frame.MVC_DecPOC
	ldr	lr, [r6, #4]	@ tmp388, <variable>.DPB.fs
	ldr	sl, [r4, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	sl, [lr, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r3, [r6, #4]	@ tmp396, <variable>.DPB.fs
	ldr	ip, [r4, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r3, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldrb	r1, [r4, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r7, [r6, #4]	@ temp.7238, <variable>.DPB.fs
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	moveq	r1, #3	@ iftmp.488,
	movne	r1, r2	@ iftmp.488,
	strb	r1, [r7, #3]	@ iftmp.488, <variable>.mode_skip_flag
	ldr	lr, [r6, #4]	@ tmp412, <variable>.DPB.fs
	ldr	sl, [r4, #564]	@ <variable>.view_id, <variable>.view_id
	str	sl, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r6, #4]	@ tmp420, <variable>.DPB.fs
	ldr	ip, [r4, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r3, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r7, [r6, #4]	@ temp.7241, <variable>.DPB.fs
	ldr	r1, [r4, #576]	@ D.36838, <variable>.inter_view_flag
	str	r1, [r7, #660]	@ D.36838, <variable>.inter_view_flag
	str	r1, [r7, #664]	@ D.36838, <variable>.inter_view_flag
	ldr	lr, [r6, #4]	@ temp.7242, <variable>.DPB.fs
	ldr	sl, [r4, #572]	@ D.36840, <variable>.anchor_pic_flag
	str	sl, [lr, #656]	@ D.36840, <variable>.anchor_pic_flag
	str	sl, [lr, #652]	@ D.36840, <variable>.anchor_pic_flag
	mov	sl, #1	@ tmp460,
	ldr	ip, [r8, #68]	@ cnt, cnt
	ldr	r3, [r6, #4]	@ tmp440, <variable>.DPB.fs
	str	ip, [r3, #668]	@ cnt, <variable>.dpb_cnt
	ldr	r1, [r8, #68]	@ cnt, cnt
	add	r7, r1, #1	@ tmp450, cnt,
	str	r7, [r8, #68]	@ tmp450, cnt
	ldr	r3, [r6, #4]	@ temp.7245, <variable>.DPB.fs
	ldr	r1, [r3, #468]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	ldrb	r8, [r3, #465]	@ zero_extendqisi2	@ D.44965, <variable>.frame.is_long_term
	ldrb	r7, [r3, #466]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	ldr	lr, [r3, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldr	ip, [r3, #492]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	strb	sl, [r3, #504]	@ tmp460, <variable>.top_field.structure
	mov	sl, #2	@ tmp468,
	strb	r8, [r3, #545]	@ D.44965, <variable>.bottom_field.is_long_term
	str	r1, [r3, #548]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	r7, [r3, #546]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	sl, [r3, #544]	@ tmp468, <variable>.bottom_field.structure
	str	lr, [r3, #568]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	ip, [r3, #572]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	r8, [r3, #505]	@ D.44965, <variable>.top_field.is_long_term
	strb	r7, [r3, #506]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	lr, [r3, #528]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	ip, [r3, #532]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r1, [r3, #508]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldr	r1, [r4, #472]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@,
	bne	.L2819	@,
.L2796:
	ldr	r2, [r6, #4]	@ prephitmp.7193, <variable>.DPB.fs
.L2803:
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2797	@,
	movw	ip, #:lower16:11199520	@ tmp1441,
	movt	ip, #:upper16:11199520	@ tmp1441,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	mov	r0, #0	@ D.36847,
	b	.L2797	@
.L2790:
	ldr	r0, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	mov	r1, #3	@ tmp475,
	strb	r1, [r0, #464]	@ tmp475, <variable>.frame.structure
	ldrb	r2, [r4, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r2, #0	@ <variable>.field_pair_flag,
	beq	.L2798	@,
	movw	lr, #:lower16:2792104	@ tmp478,
	movt	lr, #:upper16:2792104	@ tmp478,
	add	ip, r6, lr	@ tmp478, pos, tmp478
	add	r2, r5, ip, asl #2	@, tmp482, pMvcCtx, tmp478,
	ldr	r1, [r2, #4]	@ temp.7248, <variable>.DPB.fs
	cmp	r1, #0	@ temp.7248,
	beq	.L2798	@,
	strb	r3, [r1, #504]	@ <variable>.structure, <variable>.top_field.structure
	ldr	r1, [r2, #4]	@ tmp738, <variable>.DPB.fs
	ldr	r8, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r8, [r1, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r0, [r2, #4]	@ tmp746, <variable>.DPB.fs
	ldrb	ip, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r0, #505]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	sl, [r2, #4]	@ tmp755, <variable>.DPB.fs
	ldrb	r7, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r7, [sl, #506]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	fp, [r2, #4]	@ tmp764, <variable>.DPB.fs
	ldr	r9, [r4, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	r9, [fp, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	movw	fp, #:lower16:2792104	@ tmp802,
	ldr	r3, [r2, #4]	@ tmp772, <variable>.DPB.fs
	movt	fp, #:upper16:2792104	@ tmp802,
	ldr	lr, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	lr, [r3, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	add	r3, r6, fp	@ tmp802, pos, tmp802
	ldr	r1, [r2, #4]	@ tmp780, <variable>.DPB.fs
	ldr	r8, [r4, #532]	@ <variable>.err_level, <variable>.err_level
	str	r8, [r1, #528]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	sl, [r2, #4]	@ temp.7261, <variable>.DPB.fs
	ldr	r0, [sl, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	ip, [sl, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	lr, r0, ip	@ D.36864, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	lr, [sl, #624]	@ D.36864, <variable>.err_level
	str	lr, [sl, #488]	@ D.36864, <variable>.frame.err_level
	add	ip, r5, r3, asl #2	@, tmp806, pMvcCtx, tmp802,
	ldr	r9, [r2, #4]	@ temp.7262, <variable>.DPB.fs
	movw	sl, #:lower16:2792104	@ tmp829,
	movt	sl, #:upper16:2792104	@ tmp829,
	ldrb	r7, [r9, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r7, #0	@ <variable>.non_existing,
	ldrneb	lr, [r4, #2]	@ zero_extendqisi2	@ iftmp.493, <variable>.non_existing
	moveq	lr, r7	@ iftmp.493, <variable>.non_existing
	strb	lr, [r9, #0]	@ iftmp.493, <variable>.non_existing
	add	r9, r6, sl	@ tmp829, pos, tmp829
	ldr	r8, [ip, #4]	@ temp.7263, <variable>.DPB.fs
	add	sl, r5, r9, asl #2	@, tmp833, pMvcCtx, tmp829,
	ldrb	r1, [r8, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r0, r1, #1	@ tmp810, <variable>.is_used,
	strb	r0, [r8, #1]	@ tmp810, <variable>.is_used
	ldr	r7, [ip, #4]	@ D.36798, <variable>.DPB.fs
	add	r1, r4, #16	@, pCurrPic,
	ldrb	r2, [r4, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	fp, [r7, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r2, #1	@ <variable>.mode_skip_flag,
	mov	r2, #456	@,
	orreq	fp, fp, #1	@ iftmp.494, <variable>.mode_skip_flag,
	strb	fp, [r7, #3]	@ iftmp.494, <variable>.mode_skip_flag
	ldr	lr, [sl, #4]	@ temp.7265, <variable>.DPB.fs
	add	r0, lr, #8	@, temp.7265,
	ldrd	r8, [lr, #24]	@, temp.7265,
	ldr	r7, [lr, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	fp, [lr, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r8, [sp, #8]	@,,
	ldrd	r8, [lr, #32]	@, temp.7265,
	strd	r8, [sp]	@, %sfp
	bl	memcpy	@
	ldr	r1, [r4, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, r7, fp	@ tmp840, OtherFieldPts, OtherFieldPts
	ldr	r3, [r4, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldrd	r8, [r4, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	and	r0, r1, r3	@ tmp843, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r3, #:lower16:2792104	@ tmp857,
	cmn	r0, #1	@ tmp843,
	movne	ip, #0	@, tmp849
	moveq	ip, #1	@, tmp849
	cmn	r2, #1	@ tmp840,
	movt	r3, #:upper16:2792104	@ tmp857,
	moveq	ip, #0	@, tmp849,
	cmp	ip, #0	@ tmp849,
	add	r0, r6, r3	@ tmp857, pos, tmp857
	ldrne	ip, [sl, #4]	@ tmp852, <variable>.DPB.fs
	add	r2, r5, r0, asl #2	@, tmp862, pMvcCtx, tmp857,
	strne	fp, [ip, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strne	r7, [ip, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r0, [sp, #8]	@,,
	ldr	ip, [r2, #4]	@ tmp859, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	movw	r1, #:lower16:2792104	@ tmp865,
	movt	r1, #:upper16:2792104	@ tmp865,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	add	r3, r6, r1	@ tmp865, pos, tmp865
	strd	r8, [ip, #24]	@ <variable>.fs_image.Usertag, tmp859,
	ldrd	r0, [r4, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	add	r2, r5, r3, asl #2	@, tmp870, pMvcCtx, tmp865,
	ldrd	r8, [sp]	@, %sfp
	ldr	ip, [r2, #4]	@ tmp867, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [ip, #32]	@ <variable>.fs_image.DispTime, tmp867,
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2811	@,
	ldrb	r2, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #1	@ <variable>.is_short_term,
	beq	.L2811	@,
.L2812:
	movw	lr, #:lower16:2792104	@ tmp894,
	movt	lr, #:upper16:2792104	@ tmp894,
	add	r2, r6, lr	@ tmp894, pos, tmp894
	add	r6, r5, r2, asl #2	@, tmp898, pMvcCtx, tmp894,
	ldr	r3, [r6, #4]	@ temp.7275, <variable>.DPB.fs
	ldr	r0, [r3, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	r1, [r3, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, r1	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r3, #620]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	r1, [r3, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	ip, [r6, #4]	@ tmp905, <variable>.DPB.fs
	ldr	lr, [r4, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	lr, [ip, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r2, [r6, #4]	@ temp.7278, <variable>.DPB.fs
	ldr	r0, [r2, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [r2, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r0, r1	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	r0, [r2, #604]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r1, [r2, #604]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r3, [r6, #4]	@ tmp922, <variable>.DPB.fs
	ldr	ip, [r4, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r3, #660]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r2, [r4, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	lr, [r6, #4]	@ tmp930, <variable>.DPB.fs
	str	r2, [lr, #652]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r0, [r6, #4]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldr	r1, [r6, #4]	@ temp.7284, <variable>.DPB.fs
	movw	r3, #:lower16:2792190	@ tmp949,
	movt	r3, #:upper16:2792190	@ tmp949,
	ldr	r0, [r1, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r2, r1	@ prephitmp.7193, temp.7284
	ldr	ip, [r1, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	add	r3, r0, r3	@ tmp949, <variable>.apc_idc, tmp949
	str	ip, [r5, r3, asl #2]	@ <variable>.top_field.poc, <variable>.APC.poc
	b	.L2803	@
.L2835:
	ldr	r1, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	mov	r0, #3	@ tmp960,
	strb	r0, [r1, #464]	@ tmp960, <variable>.frame.structure
	ldrb	ip, [r4, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	ip, #0	@ <variable>.field_pair_flag,
	bne	.L2837	@,
.L2813:
	movw	lr, #:lower16:2792104	@ tmp969,
	movt	lr, #:upper16:2792104	@ tmp969,
	add	r3, r6, lr	@ tmp969, pos, tmp969
	ldr	r2, [r4, #472]	@ temp.7408, <variable>.frame_store
	mov	r1, #2	@ tmp975,
	add	lr, r5, r3, asl #2	@, tmp973, pMvcCtx, tmp969,
	str	r2, [lr, #4]	@ temp.7408, <variable>.DPB.fs
	strb	r1, [r2, #544]	@ tmp975, <variable>.bottom_field.structure
	ldr	ip, [lr, #4]	@ tmp979, <variable>.DPB.fs
	ldr	r0, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	r0, [ip, #548]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r2, [lr, #4]	@ tmp987, <variable>.DPB.fs
	ldrb	ip, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r2, #545]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r0, [lr, #4]	@ tmp996, <variable>.DPB.fs
	ldrb	ip, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	ip, [r0, #546]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r2, [lr, #4]	@ tmp1005, <variable>.DPB.fs
	ldr	r0, [r4, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r0, [r2, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	ip, [lr, #4]	@ tmp1013, <variable>.DPB.fs
	ldr	r0, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r0, [ip, #572]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	r2, [lr, #4]	@ tmp1021, <variable>.DPB.fs
	ldr	ip, [r4, #532]	@ <variable>.err_level, <variable>.err_level
	str	ip, [r2, #568]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	r0, [lr, #4]	@ temp.7421, <variable>.DPB.fs
	ldr	ip, [r0, #528]	@ temp.7422, <variable>.top_field.err_level
	str	ip, [r0, #624]	@ temp.7422, <variable>.err_level
	str	ip, [r0, #488]	@ temp.7422, <variable>.frame.err_level
	ldr	r2, [lr, #4]	@ tmp1035, <variable>.DPB.fs
	ldrb	r0, [r4, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r0, [r2, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	ip, [lr, #4]	@ tmp1044, <variable>.DPB.fs
	strb	r1, [ip, #1]	@ tmp975, <variable>.is_used
	ldr	r0, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #4]	@ tmp1053, <variable>.DPB.fs
	ldrb	ip, [r0, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	ip, [r2, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r1, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [lr, #4]	@ tmp1063, <variable>.DPB.fs
	ldr	ip, [r1, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	ip, [r0, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2815	@,
	ldrb	r1, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r1, #1	@ <variable>.is_short_term,
	beq	.L2815	@,
.L2816:
	movw	r2, #:lower16:2792104	@ tmp1090,
	movt	r2, #:upper16:2792104	@ tmp1090,
	add	ip, r6, r2	@ tmp1090, pos, tmp1090
	mov	lr, #0	@ tmp1097,
	add	r1, r4, #16	@, pCurrPic,
	mov	r2, #456	@,
	add	r6, r5, ip, asl #2	@, tmp1095, pMvcCtx, tmp1090,
	ldr	r3, [r6, #4]	@ tmp1092, <variable>.DPB.fs
	str	lr, [r3, #616]	@ tmp1097, <variable>.MbaffFrameFlag
	ldr	r0, [r6, #4]	@ tmp1100, <variable>.DPB.fs
	add	r0, r0, #8	@, tmp1100,
	bl	memcpy	@
	ldr	r1, [r6, #4]	@ tmp1111, <variable>.DPB.fs
	ldr	ip, [r4, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp1194,
	movt	r3, #:upper16:.LANCHOR1	@ tmp1194,
	mov	r2, #2	@,
	mov	r0, r5	@, pMvcCtx
	str	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r6, #4]	@ tmp1119, <variable>.DPB.fs
	ldr	ip, [r4, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r6, #4]	@ tmp1127, <variable>.DPB.fs
	ldr	ip, [r4, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r6, #4]	@ tmp1135, <variable>.DPB.fs
	ldr	ip, [r4, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r6, #4]	@ temp.7448, <variable>.DPB.fs
	ldr	ip, [r4, #524]	@ temp.7449, <variable>.pic_type
	str	ip, [r1, #620]	@ temp.7449, <variable>.pic_type
	str	ip, [r1, #572]	@ temp.7449, <variable>.bottom_field.pic_type
	ldr	r1, [r6, #4]	@ tmp1149, <variable>.DPB.fs
	ldr	ip, [r4, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r1, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [r6, #4]	@ tmp1157, <variable>.DPB.fs
	ldr	ip, [r4, #564]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r6, #4]	@ tmp1165, <variable>.DPB.fs
	ldr	ip, [r4, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r6, #4]	@ tmp1173, <variable>.DPB.fs
	ldr	ip, [r4, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r1, #664]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r6, #4]	@ tmp1181, <variable>.DPB.fs
	ldr	ip, [r4, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	str	ip, [r1, #656]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r6, #4]	@ tmp1189, <variable>.DPB.fs
	str	ip, [r1, #668]	@ cnt, <variable>.dpb_cnt
	ldr	r1, [r3, #68]	@ cnt, cnt
	add	ip, r1, #1	@ tmp1199, cnt,
	str	ip, [r3, #68]	@ tmp1199, cnt
	ldrb	r1, [r4, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r3, [r6, #4]	@ temp.7464, <variable>.DPB.fs
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	moveq	r1, r2	@ iftmp.495,
	movne	r1, #0	@ iftmp.495,
.L2834:
	strb	r1, [r3, #3]	@ iftmp.495, <variable>.mode_skip_flag
	ldr	r1, [r4, #472]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@,
	beq	.L2796	@,
.L2819:
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.36847,
	b	.L2797	@
.L2798:
	movw	ip, #:lower16:2792104	@ tmp484,
	movt	ip, #:upper16:2792104	@ tmp484,
	add	r3, r6, ip	@ tmp484, pos, tmp484
	ldr	r2, [r4, #472]	@ temp.7285, <variable>.frame_store
	mov	lr, #1	@ tmp490,
	add	ip, r5, r3, asl #2	@, tmp488, pMvcCtx, tmp484,
	str	r2, [ip, #4]	@ temp.7285, <variable>.DPB.fs
	strb	lr, [r2, #504]	@ tmp490, <variable>.top_field.structure
	ldr	r0, [ip, #4]	@ tmp494, <variable>.DPB.fs
	ldr	r1, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	r1, [r0, #508]	@ <variable>.frame_store, <variable>.top_field.frame_store
	ldr	r2, [ip, #4]	@ tmp502, <variable>.DPB.fs
	ldrb	r0, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r2, #505]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r1, [ip, #4]	@ tmp511, <variable>.DPB.fs
	ldrb	r0, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r0, [r1, #506]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r2, [ip, #4]	@ tmp520, <variable>.DPB.fs
	ldr	r1, [r4, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	r1, [r2, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r0, [ip, #4]	@ tmp528, <variable>.DPB.fs
	ldr	r1, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r1, [r0, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r2, [ip, #4]	@ tmp536, <variable>.DPB.fs
	ldr	r0, [r4, #532]	@ <variable>.err_level, <variable>.err_level
	str	r0, [r2, #528]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	r1, [ip, #4]	@ temp.7298, <variable>.DPB.fs
	ldr	r0, [r1, #528]	@ temp.7299, <variable>.top_field.err_level
	str	r0, [r1, #624]	@ temp.7299, <variable>.err_level
	str	r0, [r1, #488]	@ temp.7299, <variable>.frame.err_level
	ldr	r2, [ip, #4]	@ tmp550, <variable>.DPB.fs
	ldrb	r1, [r4, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r1, [r2, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r0, [ip, #4]	@ tmp559, <variable>.DPB.fs
	strb	lr, [r0, #1]	@ tmp490, <variable>.is_used
	ldr	r1, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [ip, #4]	@ tmp568, <variable>.DPB.fs
	ldrb	lr, [r1, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	lr, [r2, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r0, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #4]	@ tmp578, <variable>.DPB.fs
	ldr	r2, [r0, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r2, [r1, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2800	@,
	ldrb	lr, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2800	@,
.L2801:
	movw	r2, #:lower16:2792104	@ tmp605,
	movt	r2, #:upper16:2792104	@ tmp605,
	add	ip, r6, r2	@ tmp605, pos, tmp605
	mov	lr, #0	@ tmp612,
	add	r1, r4, #16	@, pCurrPic,
	mov	r2, #456	@,
	add	r6, r5, ip, asl #2	@, tmp610, pMvcCtx, tmp605,
	ldr	r3, [r6, #4]	@ tmp607, <variable>.DPB.fs
	str	lr, [r3, #616]	@ tmp612, <variable>.MbaffFrameFlag
	ldr	r0, [r6, #4]	@ tmp615, <variable>.DPB.fs
	add	r0, r0, #8	@, tmp615,
	bl	memcpy	@
	ldr	r1, [r6, #4]	@ tmp626, <variable>.DPB.fs
	ldr	ip, [r4, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp711,
	movt	r3, #:upper16:.LANCHOR1	@ tmp711,
	mov	r2, #1	@,
	mov	r0, r5	@, pMvcCtx
	str	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r6, #4]	@ tmp634, <variable>.DPB.fs
	ldr	ip, [r4, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r6, #4]	@ tmp642, <variable>.DPB.fs
	ldr	ip, [r4, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r6, #4]	@ tmp650, <variable>.DPB.fs
	ldr	ip, [r4, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r6, #4]	@ tmp658, <variable>.DPB.fs
	ldr	ip, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	ip, [r1, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r1, [r6, #4]	@ tmp666, <variable>.DPB.fs
	ldr	ip, [r4, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	ip, [r1, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r1, [r6, #4]	@ tmp674, <variable>.DPB.fs
	ldr	ip, [r4, #564]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r6, #4]	@ tmp682, <variable>.DPB.fs
	ldr	ip, [r4, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r6, #4]	@ tmp690, <variable>.DPB.fs
	ldr	ip, [r4, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r1, #660]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r6, #4]	@ tmp698, <variable>.DPB.fs
	ldr	ip, [r4, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	str	ip, [r1, #652]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r6, #4]	@ tmp706, <variable>.DPB.fs
	str	ip, [r1, #668]	@ cnt, <variable>.dpb_cnt
	ldr	r1, [r3, #68]	@ cnt, cnt
	add	ip, r1, r2	@ tmp716, cnt,
	str	ip, [r3, #68]	@ tmp716, cnt
	ldrb	r1, [r4, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r3, [r6, #4]	@ tmp719, <variable>.DPB.fs
	cmp	r1, r2	@ <variable>.mode_skip_flag,
	movne	r1, #0	@, tmp725
	moveq	r1, #1	@, tmp725
	b	.L2834	@
.L2836:
	ldrb	r1, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r1, #0	@ <variable>.is_short_term,
	beq	.L2793	@,
	b	.L2792	@
.L2837:
	movw	lr, #:lower16:2792104	@ tmp963,
	movt	lr, #:upper16:2792104	@ tmp963,
	add	r2, r6, lr	@ tmp963, pos, tmp963
	add	r2, r5, r2, asl #2	@, tmp967, pMvcCtx, tmp963,
	ldr	r1, [r2, #4]	@ temp.7347, <variable>.DPB.fs
	cmp	r1, #0	@ temp.7347,
	beq	.L2813	@,
	strb	r3, [r1, #544]	@ <variable>.structure, <variable>.bottom_field.structure
	ldr	r1, [r2, #4]	@ tmp1219, <variable>.DPB.fs
	ldr	r8, [r4, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	r8, [r1, #548]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r0, [r2, #4]	@ tmp1227, <variable>.DPB.fs
	ldrb	ip, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r0, #545]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	sl, [r2, #4]	@ tmp1236, <variable>.DPB.fs
	ldrb	r7, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r7, [sl, #546]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	fp, [r2, #4]	@ tmp1245, <variable>.DPB.fs
	ldr	r9, [r4, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r9, [fp, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	movw	fp, #:lower16:2792104	@ tmp1283,
	ldr	r3, [r2, #4]	@ tmp1253, <variable>.DPB.fs
	movt	fp, #:upper16:2792104	@ tmp1283,
	ldr	lr, [r4, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	lr, [r3, #572]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	add	r3, r6, fp	@ tmp1283, pos, tmp1283
	ldr	r1, [r2, #4]	@ tmp1261, <variable>.DPB.fs
	ldr	r8, [r4, #532]	@ <variable>.err_level, <variable>.err_level
	str	r8, [r1, #568]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	sl, [r2, #4]	@ temp.7360, <variable>.DPB.fs
	ldr	r0, [sl, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	ip, [sl, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	lr, r0, ip	@ temp.7363, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	lr, [sl, #624]	@ temp.7363, <variable>.err_level
	str	lr, [sl, #488]	@ temp.7363, <variable>.frame.err_level
	add	ip, r5, r3, asl #2	@, tmp1287, pMvcCtx, tmp1283,
	ldr	r9, [r2, #4]	@ temp.7364, <variable>.DPB.fs
	movw	sl, #:lower16:2792104	@ tmp1310,
	movt	sl, #:upper16:2792104	@ tmp1310,
	ldrb	r7, [r9, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r7, #0	@ <variable>.non_existing,
	ldrneb	lr, [r4, #2]	@ zero_extendqisi2	@ iftmp.497, <variable>.non_existing
	moveq	lr, r7	@ iftmp.497, <variable>.non_existing
	strb	lr, [r9, #0]	@ iftmp.497, <variable>.non_existing
	add	r9, r6, sl	@ tmp1310, pos, tmp1310
	ldr	r8, [ip, #4]	@ temp.7366, <variable>.DPB.fs
	add	sl, r5, r9, asl #2	@, tmp1314, pMvcCtx, tmp1310,
	ldrb	r1, [r8, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r0, r1, #2	@ tmp1291, <variable>.is_used,
	strb	r0, [r8, #1]	@ tmp1291, <variable>.is_used
	ldr	r7, [ip, #4]	@ temp.7209, <variable>.DPB.fs
	add	r1, r4, #16	@, pCurrPic,
	ldrb	r2, [r4, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	fp, [r7, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r2, #1	@ <variable>.mode_skip_flag,
	mov	r2, #456	@,
	orreq	fp, fp, #2	@ iftmp.498, <variable>.mode_skip_flag,
	strb	fp, [r7, #3]	@ iftmp.498, <variable>.mode_skip_flag
	ldr	lr, [sl, #4]	@ temp.7370, <variable>.DPB.fs
	add	r0, lr, #8	@, temp.7370,
	ldrd	r8, [lr, #24]	@, temp.7370,
	ldr	r7, [lr, #16]	@ OtherFieldPts.7371, <variable>.fs_image.PTS
	ldr	fp, [lr, #20]	@ OtherFieldPts.7371, <variable>.fs_image.PTS
	strd	r8, [sp, #8]	@,,
	ldrd	r8, [lr, #32]	@, temp.7370,
	strd	r8, [sp]	@, %sfp
	bl	memcpy	@
	ldr	r1, [r4, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, r7, fp	@ tmp1321, OtherFieldPts.7371, OtherFieldPts.7371
	ldr	r3, [r4, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldrd	r8, [r4, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	and	r0, r1, r3	@ tmp1324, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r3, #:lower16:2792104	@ tmp1338,
	cmn	r0, #1	@ tmp1324,
	movne	ip, #0	@, tmp1330
	moveq	ip, #1	@, tmp1330
	cmn	r2, #1	@ tmp1321,
	movt	r3, #:upper16:2792104	@ tmp1338,
	moveq	ip, #0	@, tmp1330,
	cmp	ip, #0	@ tmp1330,
	add	r0, r6, r3	@ tmp1338, pos, tmp1338
	ldrne	ip, [sl, #4]	@ tmp1333, <variable>.DPB.fs
	add	r2, r5, r0, asl #2	@, tmp1343, pMvcCtx, tmp1338,
	strne	fp, [ip, #20]	@ OtherFieldPts.7371, <variable>.fs_image.PTS
	strne	r7, [ip, #16]	@ OtherFieldPts.7371, <variable>.fs_image.PTS
	ldrd	r0, [sp, #8]	@,,
	ldr	ip, [r2, #4]	@ tmp1340, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	movw	r1, #:lower16:2792104	@ tmp1346,
	movt	r1, #:upper16:2792104	@ tmp1346,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	add	r3, r6, r1	@ tmp1346, pos, tmp1346
	strd	r8, [ip, #24]	@ <variable>.fs_image.Usertag, tmp1340,
	ldrd	r0, [r4, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	add	r2, r5, r3, asl #2	@, tmp1351, pMvcCtx, tmp1346,
	ldrd	r8, [sp]	@, %sfp
	ldr	ip, [r2, #4]	@ tmp1348, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [ip, #32]	@ <variable>.fs_image.DispTime, tmp1348,
	ldrb	r3, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2827	@,
	ldrb	r2, [r4, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #1	@ <variable>.is_short_term,
	beq	.L2827	@,
.L2828:
	movw	r2, #:lower16:2792104	@ tmp1375,
	movt	r2, #:upper16:2792104	@ tmp1375,
	add	r3, r6, r2	@ tmp1375, pos, tmp1375
	add	r6, r5, r3, asl #2	@, tmp1379, pMvcCtx, tmp1375,
	ldr	r1, [r6, #4]	@ temp.7392, <variable>.DPB.fs
	ldr	r0, [r1, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	lr, [r1, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, lr	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r1, #620]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	lr, [r1, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	ip, [r6, #4]	@ tmp1386, <variable>.DPB.fs
	ldr	r2, [r4, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	r2, [ip, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	r3, [r6, #4]	@ temp.7398, <variable>.DPB.fs
	ldr	r1, [r3, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	lr, [r3, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	lr, r1	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	lr, [r3, #604]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r1, [r3, #604]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r0, [r6, #4]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldr	ip, [r4, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r0, [r6, #4]	@ tmp1410, <variable>.DPB.fs
	movw	r3, #:lower16:2792206	@ tmp1430,
	movt	r3, #:upper16:2792206	@ tmp1430,
	str	ip, [r0, #664]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r4, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r2, [r6, #4]	@ tmp1418, <variable>.DPB.fs
	str	r1, [r2, #656]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r2, [r6, #4]	@ prephitmp.7193, <variable>.DPB.fs
	ldr	r0, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r2, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	add	r3, r0, r3	@ tmp1430, <variable>.apc_idc, tmp1430
	str	ip, [r5, r3, asl #2]	@ <variable>.bottom_field.poc, <variable>.APC.poc
	b	.L2803	@
.L2815:
	movw	r1, #:lower16:2792104	@ tmp1072,
	movt	r1, #:upper16:2792104	@ tmp1072,
	add	r3, r6, r1	@ tmp1072, pos, tmp1072
	mov	lr, #2	@ tmp1079,
	add	ip, r5, r3, asl #2	@, tmp1077, pMvcCtx, tmp1072,
	ldr	r2, [ip, #4]	@ tmp1074, <variable>.DPB.fs
	strb	lr, [r2, #2]	@ tmp1079, <variable>.is_reference
	ldrb	r0, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, #1	@ <variable>.is_long_term,
	ldreq	ip, [ip, #4]	@ tmp1084, <variable>.DPB.fs
	ldreq	r0, [r4, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r0, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2816	@
.L2800:
	movw	lr, #:lower16:2792104	@ tmp587,
	movt	lr, #:upper16:2792104	@ tmp587,
	add	ip, r6, lr	@ tmp587, pos, tmp587
	mov	r1, #1	@ tmp594,
	add	r3, r5, ip, asl #2	@, tmp592, pMvcCtx, tmp587,
	ldr	r2, [r3, #4]	@ tmp589, <variable>.DPB.fs
	strb	r1, [r2, #2]	@ tmp594, <variable>.is_reference
	ldrb	r0, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r0, r1	@ <variable>.is_long_term,
	ldreq	r3, [r3, #4]	@ tmp599, <variable>.DPB.fs
	ldreq	r0, [r4, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r0, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2801	@
.L2827:
	movw	lr, #:lower16:2792104	@ tmp1356,
	movt	lr, #:upper16:2792104	@ tmp1356,
	add	r2, r6, lr	@ tmp1356, pos, tmp1356
	add	r3, r5, r2, asl #2	@, tmp1360, pMvcCtx, tmp1356,
	ldr	r0, [r3, #4]	@ temp.7387, <variable>.DPB.fs
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	ip, r1, #2	@ tmp1364, <variable>.is_reference,
	strb	ip, [r0, #2]	@ tmp1364, <variable>.is_reference
	ldrb	lr, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	lr, #1	@ <variable>.is_long_term,
	ldreq	r3, [r3, #4]	@ tmp1369, <variable>.DPB.fs
	ldreq	lr, [r4, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	lr, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2828	@
.L2811:
	movw	lr, #:lower16:2792104	@ tmp875,
	movt	lr, #:upper16:2792104	@ tmp875,
	add	r2, r6, lr	@ tmp875, pos, tmp875
	add	r3, r5, r2, asl #2	@, tmp879, pMvcCtx, tmp875,
	ldr	r0, [r3, #4]	@ temp.7271, <variable>.DPB.fs
	ldrb	r1, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	ip, r1, #1	@ tmp883, <variable>.is_reference,
	strb	ip, [r0, #2]	@ tmp883, <variable>.is_reference
	ldrb	lr, [r4, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	lr, #1	@ <variable>.is_long_term,
	ldreq	r3, [r3, #4]	@ tmp888, <variable>.DPB.fs
	ldreq	lr, [r4, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	lr, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2812	@
	.fnend
	.size	MVC_InsertFrmInDPB, .-MVC_InsertFrmInDPB
	.align	2
	.global	MVC_StorePicInDpb
	.type	MVC_StorePicInDpb, %function
MVC_StorePicInDpb:
	.fnstart
.LFB1662:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11196171	@ tmp178,
	movw	r2, #:lower16:11196168	@ tmp181,
	movt	r1, #:upper16:11196171	@ tmp178,
	movt	r2, #:upper16:11196168	@ tmp181,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	ldrb	ip, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	ldrb	lr, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r3, #:lower16:11161504	@ tmp175,
	movw	r5, #:lower16:11161508	@ tmp177,
	movt	r3, #:upper16:11161504	@ tmp175,
	cmp	lr, #2	@ <variable>.CurrPic.structure,
	movne	r1, #0	@, tmp180
	moveq	r1, #1	@, tmp180
	movt	r5, #:upper16:11161508	@ tmp177,
	cmp	ip, #0	@ <variable>.CurrPic.state,
	mov	r2, #0	@ tmp176,
	.pad #16
	sub	sp, sp, #16	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r1, [r0, r5]	@ tmp180, <variable>.CurrPOC.last_pic_bottom_field
	str	r2, [r0, r3]	@ tmp176, <variable>.CurrPOC.last_has_mmco_5
	beq	.L2932	@,
	movw	r2, #:lower16:11196696	@ tmp186,
	movt	r2, #:upper16:11196696	@ tmp186,
	movw	lr, #:lower16:11199536	@ tmp184,
	movt	lr, #:upper16:11199536	@ tmp184,
	ldr	ip, [r0, r2]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	movw	r3, #:lower16:11199532	@ tmp183,
	ldr	r5, [r0, lr]	@ <variable>.PicCounter, <variable>.PicCounter
	movt	r3, #:upper16:11199532	@ tmp183,
	cmp	ip, #0	@ <variable>.CurrPic.is_idr_pic,
	str	r5, [r0, r3]	@ <variable>.PicCounter, <variable>.PrevStorePicCounter
	bne	.L2937	@,
.L2841:
	movw	ip, #:lower16:11199448	@ tmp191,
	movt	ip, #:upper16:11199448	@ tmp191,
	ldr	r0, [r4, ip]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L2938	@,
.L2843:
	ldr	r5, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r5, #12]	@ prephitmp.7501, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ prephitmp.7501,
	ble	.L2939	@,
.L2846:
	movw	r1, #:lower16:11196170	@ tmp209,
	movt	r1, #:upper16:11196170	@ tmp209,
	ldrb	lr, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	lr, #0	@ <variable>.CurrPic.non_existing,
	beq	.L2940	@,
.L2848:
	cmp	r2, #2	@ prephitmp.7501,
	beq	.L2941	@,
.L2847:
	movw	r0, #:lower16:11196656	@ tmp293,
	movt	r0, #:upper16:11196656	@ tmp293,
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2866	@,
	movw	r2, #:lower16:11199512	@ tmp295,
	movw	r3, #:lower16:11196700	@ tmp296,
	movt	r2, #:upper16:11199512	@ tmp295,
	movt	r3, #:upper16:11196700	@ tmp296,
	ldr	r5, [r4, r2]	@ <variable>.ref_error_thr, <variable>.ref_error_thr
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	cmp	r5, ip	@ <variable>.ref_error_thr, <variable>.CurrPic.err_level
	bcs	.L2873	@,
	movw	r1, #:lower16:11196170	@ tmp299,
	movt	r1, #:upper16:11196170	@ tmp299,
	ldrb	r5, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r5, #0	@ <variable>.CurrPic.non_existing,
	beq	.L2942	@,
.L2873:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_Marking	@
	cmp	r0, #0	@,
	bne	.L2932	@,
	mov	r0, r4	@, pMvcCtx
	movw	r5, #:lower16:11196732	@ tmp304,
	movt	r5, #:upper16:11196732	@ tmp304,
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r5]	@, <variable>.CurrPic.view_id
	bl	MVC_RemoveUnUsedFrameStore	@
.L2866:
	movw	ip, #:lower16:11196169	@ tmp306,
	movt	ip, #:upper16:11196169	@ tmp306,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r0, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2876	@,
	movw	r3, #:lower16:11168612	@ tmp308,
	movt	r3, #:upper16:11168612	@ tmp308,
	ldr	ip, [r4, r3]	@ prephitmp.7503, <variable>.DPB.size
.L2877:
	movw	r1, #:lower16:11196656	@ tmp316,
	movt	r1, #:upper16:11196656	@ tmp316,
	ldr	r6, [r4, r1]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2943	@,
.L2885:
	movw	r5, #:lower16:11168616	@ tmp419,
	movw	r6, #:lower16:11196656	@ tmp423,
	movw	r7, #:lower16:11196660	@ tmp424,
	movw	r8, #:lower16:11168612	@ tmp425,
	movt	r5, #:upper16:11168616	@ tmp419,
	movt	r6, #:upper16:11196656	@ tmp423,
	movt	r7, #:upper16:11196660	@ tmp424,
	movt	r8, #:upper16:11168612	@ tmp425,
	add	sl, sp, #12	@ tmp420,,
	add	r9, sp, #8	@ tmp421,,
	b	.L2928	@
.L2946:
	ldr	ip, [r4, r8]	@ prephitmp.7503, <variable>.DPB.size
.L2928:
	ldr	lr, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r2, sl	@, tmp420
	mov	r3, r9	@, tmp421
	mov	r0, r4	@, pMvcCtx
	cmp	lr, ip	@ <variable>.DPB.used_size, prephitmp.7503
	mvn	r1, #0	@,
	bcc	.L2887	@,
	bl	MVC_GetMinPOC	@
	cmp	r0, #0	@,
	mov	r0, r4	@, pMvcCtx
	blt	.L2944	@,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2888	@,
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	lr, [sp, #12]	@ min_poc, min_poc
	cmp	r1, lr	@ <variable>.CurrPic.thispoc, min_poc
	blt	.L2945	@,
.L2888:
	ldr	r1, [sp, #8]	@, pos
	bl	MVC_OutputFrmFromDPB	@
	cmn	r0, #1	@,
	bne	.L2946	@,
.L2932:
	bl	vfmw_dprint_nothing	@
	bl	vfmw_dprint_nothing	@
.L2840:
	movw	r6, #:lower16:11196640	@ tmp388,
	movt	r6, #:upper16:11196640	@ tmp388,
	movw	r5, #:lower16:11199520	@ tmp385,
	movt	r5, #:upper16:11199520	@ tmp385,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mvn	r5, #0	@ ret,
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, #0	@ tmp392,
	strb	r0, [r3, #4]	@ tmp392, <variable>.is_in_dpb
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [r1, #1]	@ tmp392, <variable>.is_used
.L2903:
	movw	r2, #:lower16:11196168	@ tmp398,
	movt	r2, #:upper16:11196168	@ tmp398,
	mov	ip, #0	@ tmp399,
	mov	r0, r5	@, ret
	strb	ip, [r4, r2]	@ tmp399, <variable>.CurrPic.state
	add	sp, sp, #16	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
.L2937:
	movw	r3, #:lower16:11196644	@ tmp189,
	movt	r3, #:upper16:11196644	@ tmp189,
	ldr	r5, [r0, r3]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r1, [r5, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r1, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2842	@,
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	bne	.L2932	@,
	movw	ip, #:lower16:11199448	@ tmp191,
	movt	ip, #:upper16:11199448	@ tmp191,
	ldr	r0, [r4, ip]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	bne	.L2843	@,
.L2938:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	movw	r3, #:lower16:11196724	@ tmp193,
	movw	r2, #:lower16:11198000	@ tmp194,
	movt	r3, #:upper16:11196724	@ tmp193,
	movt	r2, #:upper16:11198000	@ tmp194,
	ldr	r1, [r4, r2]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	mov	r5, r0	@ ret,
	ldr	r0, [r4, r3]	@ D.37574, <variable>.CurrPic.pmv_address_idc
	cmp	r0, r1	@ D.37574, <variable>.TotalPmvNum
	beq	.L2890	@,
	movw	r2, #:lower16:2799480	@ tmp196,
	movt	r2, #:upper16:2799480	@ tmp196,
	add	ip, r0, r2	@ tmp196, D.37574, tmp196
	str	r1, [r4, r3]	@ <variable>.TotalPmvNum, <variable>.CurrPic.pmv_address_idc
	mov	r1, #0	@ tmp202,
	add	lr, r4, ip, asl #2	@, tmp200, pMvcCtx, tmp196,
	str	r1, [lr, #4]	@ tmp202, <variable>.PmvStoreUsedFlag
.L2890:
.L2845:
	bl	vfmw_dprint_nothing	@
	cmn	r5, #1	@ ret,
	bne	.L2903	@,
	b	.L2840	@
.L2940:
	movw	r6, #:lower16:11196171	@ tmp212,
	movt	r6, #:upper16:11196171	@ tmp212,
	movw	r3, #:lower16:11196640	@ tmp211,
	movt	r3, #:upper16:11196640	@ tmp211,
	ldrb	r1, [r4, r6]	@ zero_extendqisi2	@ temp.7541, <variable>.CurrPic.structure
	ldr	r6, [r4, r3]	@ pFrameStore, <variable>.CurrPic.frame_store
	sub	r5, r1, #1	@ tmp213, temp.7541,
	uxtb	ip, r5	@ tmp214, tmp213
	cmp	ip, #1	@ tmp214,
	movhi	r0, #0	@, one_fld_flg
	movls	r0, #1	@, one_fld_flg
	cmp	r1, #0	@ temp.7541,
	bne	.L2947	@,
.L2849:
	cmp	r0, #0	@ one_fld_flg,
	beq	.L2850	@,
	movw	r3, #:lower16:11199528	@ tmp223,
	movt	r3, #:upper16:11199528	@ tmp223,
	ldr	ip, [r4, r3]	@ temp.7542, <variable>.FirstFrameDisplayed
	cmp	ip, #0	@ temp.7542,
	bne	.L2851	@,
	movw	r5, #:lower16:11196752	@,
	movw	r1, #:lower16:11196168	@,
	movt	r5, #:upper16:11196752	@,
	movt	r1, #:upper16:11196168	@,
	mov	r2, #1	@ tmp225,
	add	r0, r4, r5	@, pMvcCtx,
	str	r2, [r4, r3]	@ tmp225, <variable>.FirstFrameDisplayed
	add	r1, r4, r1	@, pMvcCtx,
	mov	r2, #584	@,
	bl	memcpy	@
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #12]	@ prephitmp.7501, <variable>.s32DecOrderOutput
	b	.L2848	@
.L2943:
	movw	r0, #:lower16:11168624	@ tmp318,
	movw	r3, #:lower16:11168620	@ tmp319,
	movt	r0, #:upper16:11168624	@ tmp318,
	movt	r3, #:upper16:11168620	@ tmp319,
	ldr	r2, [r4, r0]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	ldr	r5, [r4, r3]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	lr, r2, r5	@ tmp320, <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, ip	@ tmp320, prephitmp.7503
	bcc	.L2885	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
.L2933:
	bl	vfmw_dprint_nothing	@
	b	.L2840	@
.L2842:
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L2841	@,
	b	.L2932	@
.L2941:
	movw	r2, #:lower16:11196656	@ tmp281,
	movt	r2, #:upper16:11196656	@ tmp281,
	ldr	r3, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2866	@,
	movw	r5, #:lower16:11168612	@ tmp283,
	movt	r5, #:upper16:11168612	@ tmp283,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SimpleSlideDPB	@
	ldr	ip, [r4, r5]	@ D.37659, <variable>.DPB.size
	cmp	ip, #0	@ D.37659,
	beq	.L2867	@,
	movw	lr, #:lower16:11168420	@ tmp284,
	movt	lr, #:upper16:11168420	@ tmp284,
	ldr	r1, [r4, lr]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r1, #0	@ <variable>.DPB.fs,
	beq	.L2867	@,
	tst	ip, #1	@ D.37659,
	movw	r0, #:lower16:11168424	@ ivtmp.7520,
	movt	r0, #:upper16:11168424	@ ivtmp.7520,
	mov	r1, #0	@ i,
	add	r3, r4, r0	@ ivtmp.7520, pMvcCtx, ivtmp.7520
	bne	.L2868	@,
	ldr	r0, [r3], #4	@ D.37657, <variable>.DPB.fs
	mov	r1, #1	@ i,
	cmp	r0, #0	@ D.37657,
	bne	.L2868	@,
.L2869:
	movw	ip, #:lower16:11196168	@,
	movt	ip, #:upper16:11196168	@,
	add	r2, r4, ip	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmp	r0, #0	@,
	bne	.L2932	@,
	movw	r3, #:lower16:11168616	@ tmp289,
	movt	r3, #:upper16:11168616	@ tmp289,
	mov	r0, r4	@, pMvcCtx
	mov	r5, #0	@ ret,
	ldr	r1, [r4, r3]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r2, r1, #1	@ tmp292, <variable>.DPB.used_size,
	str	r2, [r4, r3]	@ tmp292, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	bl	vfmw_dprint_nothing	@
	b	.L2903	@
.L2939:
	movw	r0, #:lower16:11199528	@ tmp207,
	movt	r0, #:upper16:11199528	@ tmp207,
	ldr	r3, [r4, r0]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r3, #2	@ <variable>.FirstFrameDisplayed,
	bne	.L2846	@,
	b	.L2847	@
.L2876:
	movw	lr, #:lower16:11196640	@ tmp309,
	movw	r1, #:lower16:11197372	@ tmp310,
	movt	lr, #:upper16:11196640	@ tmp309,
	movt	r1, #:upper16:11197372	@ tmp310,
	ldr	r0, [r4, lr]	@ D.37683, <variable>.CurrPic.frame_store
	ldr	r2, [r4, r1]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, r2	@ D.37683, <variable>.pDirectOutBuf
	beq	.L2948	@,
.L2878:
	movw	r5, #:lower16:11168612	@ tmp312,
	movt	r5, #:upper16:11168612	@ tmp312,
	ldr	ip, [r4, r5]	@ prephitmp.7503, <variable>.DPB.size
	cmp	ip, #0	@ prephitmp.7503,
	beq	.L2877	@,
	movw	r3, #:lower16:11168420	@ ivtmp.7535,
	movt	r3, #:upper16:11168420	@ ivtmp.7535,
	add	r3, r4, r3	@ ivtmp.7535, pMvcCtx, ivtmp.7535
	sub	r2, ip, #1	@ tmp436, prephitmp.7503,
	and	lr, r2, #1	@ tmp438, tmp436,
	mov	r1, #0	@ i.7563,
	ldr	r2, [r3, #0]	@ temp.7562, <variable>.DPB.fs
	cmp	r2, r1	@ temp.7562,
	beq	.L2916	@,
	cmp	r0, r2	@ D.37683, temp.7562
	beq	.L2931	@,
.L2916:
	mov	r1, #1	@ i.7563,
	cmp	r1, ip	@ i.7563, prephitmp.7503
	add	r3, r3, #4	@ ivtmp.7535, ivtmp.7535,
	bcs	.L2877	@,
	cmp	lr, #0	@ tmp438,
	beq	.L2884	@,
	ldr	r2, [r3, #0]	@ temp.7562, <variable>.DPB.fs
	cmp	r2, #0	@ temp.7562,
	beq	.L2918	@,
	cmp	r0, r2	@ D.37683, temp.7562
	beq	.L2931	@,
.L2918:
	add	r1, r1, #1	@ i.7563, i.7563,
	add	r3, r3, #4	@ ivtmp.7535, ivtmp.7535,
	cmp	r1, ip	@ i.7563, prephitmp.7503
	bcc	.L2884	@,
	b	.L2877	@
.L2882:
	ldr	r3, [r3, #4]	@ temp.7562, <variable>.DPB.fs
	add	r1, r1, #1	@ i.7563, i.7563,
	cmp	r3, #0	@ temp.7562,
	mov	r2, r1	@ tmp439, i.7563
	beq	.L2921	@,
	cmp	r0, r3	@ D.37683, temp.7562
	beq	.L2931	@,
.L2921:
	add	r1, r2, #1	@ i.7563, tmp439,
	add	r3, lr, #4	@ ivtmp.7535, tmp440,
	cmp	r1, ip	@ i.7563, prephitmp.7503
	bcs	.L2877	@,
.L2884:
	ldr	r2, [r3, #0]	@ temp.7562, <variable>.DPB.fs
	add	lr, r3, #4	@ tmp440, ivtmp.7535,
	cmp	r2, #0	@ temp.7562,
	beq	.L2882	@,
	cmp	r0, r2	@ D.37683, temp.7562
	bne	.L2882	@,
.L2931:
	movw	r0, #:lower16:11196168	@,
	movt	r0, #:upper16:11196168	@,
	add	r2, r4, r0	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmn	r0, #1	@,
	beq	.L2932	@,
	mov	r0, r4	@, pMvcCtx
	mov	r5, #0	@ ret,
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	bl	vfmw_dprint_nothing	@
	b	.L2903	@
.L2947:
	ldrb	ip, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #0	@ <variable>.is_used,
	moveq	lr, r0	@, tmp222, one_fld_flg
	orrne	lr, r0, #1	@,, tmp222, one_fld_flg
	cmp	lr, #0	@ tmp222,
	beq	.L2848	@,
	b	.L2849	@
.L2851:
	cmp	ip, #1	@ temp.7542,
	beq	.L2852	@,
.L2850:
	cmp	r1, #0	@ temp.7541,
	beq	.L2853	@,
	ldrb	r3, [r6, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #0	@ <variable>.is_used,
	beq	.L2848	@,
.L2853:
	cmp	r0, #0	@ one_fld_flg,
	bne	.L2949	@,
.L2854:
	movw	r1, #:lower16:11196168	@ pOutPic,
	movt	r1, #:upper16:11196168	@ pOutPic,
	add	r8, r4, r1	@ pOutPic, pMvcCtx, pOutPic
	mov	r5, r6	@ pOutFrameStore, pFrameStore
.L2855:
	cmp	r2, #0	@ prephitmp.7501,
	ble	.L2856	@,
	ldrb	r7, [r8, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r7, #0	@ <variable>.structure,
	beq	.L2857	@,
	ldrb	sl, [r8, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	sl, #1	@ <variable>.field_pair_flag,
	beq	.L2950	@,
.L2857:
	ldr	r0, [r8, #532]	@ <variable>.err_level, <variable>.err_level
	str	r0, [r5, #624]	@ <variable>.err_level, <variable>.err_level
.L2858:
	movw	sl, #:lower16:11199520	@ tmp247,
	movt	sl, #:upper16:11199520	@ tmp247,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pOutFrameStore
	bl	MVC_GetImagePara	@
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pImg,
	beq	.L2933	@,
	ldrd	r2, [r8, #40]	@, pOutPic,
	ldrd	r0, [r8, #24]	@ <variable>.fs_image.PTS, pOutPic,
	strd	r2, [r7, #24]	@, pImg,
	ldrd	r2, [r8, #32]	@ <variable>.fs_image.Usertag, pOutPic,
	strd	r0, [r7, #8]	@ <variable>.fs_image.PTS, pImg,
	strd	r2, [r7, #16]	@ <variable>.fs_image.Usertag, pImg,
	ldr	r3, [r5, #624]	@ D.37627, <variable>.err_level
	cmp	r3, #0	@ D.37627,
	str	r3, [r7, #180]	@ D.37627, <variable>.error_level
	beq	.L2860	@,
	ldr	r8, [r7, #140]	@ <variable>.format, <variable>.format
	ands	r8, r8, #3	@ tmp253, <variable>.format,
	beq	.L2951	@,
.L2861:
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	lr, [ip, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	lr, r3	@ <variable>.s32OutErrThr, D.37627
	bcc	.L2863	@,
.L2860:
	movw	r8, #:lower16:11199520	@ tmp260,
	movt	r8, #:upper16:11199520	@ tmp260,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r8]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #8	@, pMvcCtx,
	str	r7, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	beq	.L2864	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2864:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, pImg
	bl	MVC_SetFrmRepeatCount	@
	movw	r3, #:lower16:11199544	@ tmp269,
	movt	r3, #:upper16:11199544	@ tmp269,
	ldr	r2, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r2, #2	@ tmp272, <variable>.PicOutCounter,
	str	r0, [r4, r3]	@ tmp272, <variable>.PicOutCounter
.L2856:
	movw	r0, #:lower16:11199528	@ tmp274,
	movt	r0, #:upper16:11199528	@ tmp274,
	movw	lr, #:lower16:11199528	@ tmp278,
	movt	lr, #:upper16:11199528	@ tmp278,
	ldr	ip, [r4, r0]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	mov	r1, #2	@ tmp279,
	cmp	ip, #2	@ <variable>.FirstFrameDisplayed,
	movne	ip, #1	@ tmp276,
	strne	ip, [r6, #636]	@ tmp276, <variable>.as_first_out
	strne	ip, [r5, #608]	@ tmp276, <variable>.eFoState
	ldr	r5, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	str	r1, [r4, lr]	@ tmp279, <variable>.FirstFrameDisplayed
	ldr	r2, [r5, #12]	@ prephitmp.7501, <variable>.s32DecOrderOutput
	b	.L2848	@
.L2870:
	ldr	r5, [r2], #4	@ D.37657, <variable>.DPB.fs
	cmp	r5, #0	@ D.37657,
	beq	.L2869	@,
	ldr	lr, [r3, #4]	@ D.37657, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.7520, tmp429,
	cmp	lr, #0	@ D.37657,
	beq	.L2869	@,
.L2868:
	add	r1, r1, #1	@ i, i,
	mov	r2, r3	@ tmp429, ivtmp.7520
	cmp	r1, ip	@ i, D.37659
	bcc	.L2870	@,
	b	.L2869	@
.L2944:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
.L2887:
	movw	r2, #:lower16:11196656	@ tmp341,
	movt	r2, #:upper16:11196656	@ tmp341,
	ldr	r5, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r5, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2893	@,
	movw	r3, #:lower16:11196172	@ tmp343,
	movt	r3, #:upper16:11196172	@ tmp343,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	beq	.L2952	@,
.L2893:
	movw	r1, #:lower16:11168612	@ tmp347,
	movt	r1, #:upper16:11168612	@ tmp347,
	ldr	ip, [r4, r1]	@ temp.7593, <variable>.DPB.size
	cmp	ip, #0	@ temp.7593,
	beq	.L2895	@,
	movw	r5, #:lower16:11168420	@ tmp348,
	movt	r5, #:upper16:11168420	@ tmp348,
	ldr	lr, [r4, r5]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	lr, #0	@ <variable>.DPB.fs,
	beq	.L2895	@,
	tst	ip, #1	@ temp.7593,
	movw	r2, #:lower16:11168424	@ ivtmp.7525,
	movt	r2, #:upper16:11168424	@ ivtmp.7525,
	mov	r1, #0	@ i.7564,
	add	r3, r4, r2	@ ivtmp.7525, pMvcCtx, ivtmp.7525
	bne	.L2896	@,
	ldr	r5, [r3], #4	@ temp.7583, <variable>.DPB.fs
	mov	r1, #1	@ i.7564,
	cmp	r5, #0	@ temp.7583,
	bne	.L2896	@,
	b	.L2900	@
.L2901:
	ldr	lr, [r2], #4	@ temp.7583, <variable>.DPB.fs
	cmp	lr, #0	@ temp.7583,
	beq	.L2900	@,
	ldr	r0, [r3, #4]	@ temp.7583, <variable>.DPB.fs
	add	r1, r1, #1	@ i.7564, i.7564,
	add	r3, r2, #4	@ ivtmp.7525, tmp434,
	cmp	r0, #0	@ temp.7583,
	beq	.L2900	@,
.L2896:
	add	r1, r1, #1	@ i.7564, i.7564,
	mov	r2, r3	@ tmp434, ivtmp.7525
	cmp	r1, ip	@ i.7564, temp.7593
	bcc	.L2901	@,
.L2900:
	movw	r3, #:lower16:11196168	@,
	movt	r3, #:upper16:11196168	@,
	add	r2, r4, r3	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmp	r0, #0	@,
	bne	.L2932	@,
	movw	ip, #:lower16:11168616	@ tmp381,
	movt	ip, #:upper16:11168616	@ tmp381,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r5, r2, #1	@ tmp384, <variable>.DPB.used_size,
	str	r5, [r4, ip]	@ tmp384, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r5, #0	@ ret,
	b	.L2903	@
.L2949:
	movw	lr, #:lower16:11199528	@ tmp234,
	movt	lr, #:upper16:11199528	@ tmp234,
	ldr	r8, [r4, lr]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r8, #1	@ <variable>.FirstFrameDisplayed,
	bne	.L2854	@,
.L2852:
	movw	ip, #:lower16:11197224	@ tmp237,
	movt	ip, #:upper16:11197224	@ tmp237,
	movw	r0, #:lower16:11196752	@ pOutPic,
	movt	r0, #:upper16:11196752	@ pOutPic,
	add	r8, r4, r0	@ pOutPic, pMvcCtx, pOutPic
	ldr	r5, [r4, ip]	@ pOutFrameStore, <variable>.LastPic.frame_store
	b	.L2855	@
.L2945:
	movw	r2, #:lower16:11199448	@ tmp330,
	movt	r2, #:upper16:11199448	@ tmp330,
	ldr	r5, [r4, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r5, #2	@ <variable>.OldDecMode,
	beq	.L2953	@,
.L2889:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	bne	.L2890	@,
	bl	vfmw_dprint_nothing	@
	b	.L2890	@
.L2952:
	movw	r5, #:lower16:11168620	@ tmp345,
	movt	r5, #:upper16:11168620	@ tmp345,
	ldr	r0, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r0, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L2893	@,
	movw	r7, #:lower16:11168484	@ ivtmp.7530,
	movt	r7, #:upper16:11168484	@ ivtmp.7530,
	add	r3, r4, r7	@ ivtmp.7530, pMvcCtx, ivtmp.7530
	movw	lr, #:lower16:11196648	@ tmp414,
	movw	r6, #:lower16:11196732	@ tmp415,
	movw	r7, #:lower16:11198000	@ tmp417,
	movt	lr, #:upper16:11196648	@ tmp414,
	movt	r6, #:upper16:11196732	@ tmp415,
	movt	r7, #:upper16:11198000	@ tmp417,
	mov	r8, r2	@ tmp416, i.7582
	b	.L2899	@
.L2897:
	ldr	r0, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.7530, ivtmp.7530,
	cmp	r0, r2	@ <variable>.DPB.ref_frames_in_buffer, i.7582
	bls	.L2893	@,
.L2899:
	ldr	r1, [r3, #0]	@ D.37731, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.7582, i.7582,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	ldr	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	ip, r0	@ <variable>.frame_num, <variable>.CurrPic.frame_num
	bne	.L2897	@,
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2897	@,
	strb	r8, [r1, #2]	@ tmp416, <variable>.is_reference
	movw	r1, #:lower16:2799480	@ tmp367,
	ldr	r0, [r3, #0]	@ tmp402, <variable>.DPB.fs_ref
	movt	r1, #:upper16:2799480	@ tmp367,
	ldrb	sl, [r0, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	sl, #1	@ <variable>.is_in_dpb,
	streq	sl, [r0, #612]	@ <variable>.is_in_dpb, <variable>.is_displayed
	ldreq	r0, [r3, #0]	@ tmp362, <variable>.DPB.fs_ref
	streqb	r8, [r0, #4]	@ tmp416, <variable>.is_in_dpb
	ldreq	r0, [r3, #0]	@ tmp402, <variable>.DPB.fs_ref
	ldr	sl, [r4, r7]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	ldr	ip, [r0, #628]	@ D.37742, <variable>.pmv_address_idc
	add	r1, ip, r1	@ tmp367, D.37742, tmp367
	cmp	ip, sl	@ D.37742, <variable>.TotalPmvNum
	add	r1, r4, r1, asl #2	@, tmp371, pMvcCtx, tmp367,
	strne	r8, [r1, #4]	@ tmp416, <variable>.PmvStoreUsedFlag
	strne	sl, [r0, #628]	@ <variable>.TotalPmvNum, <variable>.pmv_address_idc
	b	.L2897	@
.L2948:
	cmp	r0, #0	@ D.37683,
	bne	.L2889	@,
	b	.L2878	@
.L2951:
	bl	vfmw_dprint_nothing	@
	movw	r1, #:lower16:g_event_report	@ tmp255,
	movt	r1, #:upper16:g_event_report	@ tmp255,
	ldr	r3, [r1, #0]	@ g_event_report.544, g_event_report
	cmp	r3, #0	@ g_event_report.544,
	beq	.L2862	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	mov	r2, r8	@, tmp253
	mov	r1, #111	@,
	blx	r3	@ g_event_report.544
.L2862:
	ldr	r3, [r7, #180]	@ D.37627, <variable>.error_level
	cmp	r3, #0	@ D.37627,
	bne	.L2861	@,
	b	.L2860	@
.L2950:
	ldr	r2, [r5, #624]	@ <variable>.err_level, <variable>.err_level
	mov	ip, #3	@ tmp241,
	strb	ip, [r5, #1]	@ tmp241, <variable>.is_used
	ldr	lr, [r8, #532]	@ <variable>.err_level, <variable>.err_level
	add	r3, r2, lr	@ tmp245, <variable>.err_level, <variable>.err_level
	str	r3, [r5, #624]	@ tmp245, <variable>.err_level
	b	.L2858	@
.L2953:
	movw	r0, #:lower16:11196171	@ tmp332,
	movt	r0, #:upper16:11196171	@ tmp332,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L2889	@,
	movw	lr, #:lower16:11196640	@ tmp335,
	movt	lr, #:upper16:11196640	@ tmp335,
	movw	r1, #:lower16:11197376	@ tmp334,
	movt	r1, #:upper16:11197376	@ tmp334,
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	ip, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.pLastFieldBuf
	b	.L2889	@
.L2895:
	mov	r1, #0	@ i.7564,
	b	.L2900	@
.L2867:
	mov	r1, #0	@ i,
	b	.L2869	@
.L2942:
	movw	r6, #:lower16:g_event_report	@ tmp301,
	movt	r6, #:upper16:g_event_report	@ tmp301,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r6, #0]	@ g_event_report.7559, g_event_report
	cmp	r3, #0	@ g_event_report.7559,
	beq	.L2874	@,
	movw	lr, #:lower16:11199520	@ tmp302,
	movt	lr, #:upper16:11199520	@ tmp302,
	mov	r2, r5	@, <variable>.CurrPic.non_existing
	mov	r1, #104	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.7559
.L2874:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r1, #0	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearDPB	@
	bl	vfmw_dprint_nothing	@
	b	.L2840	@
.L2863:
	movw	r6, #:lower16:11199520	@ tmp273,
	movt	r6, #:upper16:11199520	@ tmp273,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	bl	vfmw_dprint_nothing	@
	b	.L2840	@
	.fnend
	.size	MVC_StorePicInDpb, .-MVC_StorePicInDpb
	.align	2
	.global	MVC_DEC_VDMPostProc
	.type	MVC_DEC_VDMPostProc, %function
MVC_DEC_VDMPostProc:
	.fnstart
.LFB1766:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldr	r5, [r0, #364]	@ <variable>.StartMode, <variable>.StartMode
	.pad #28
	sub	sp, sp, #28	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r5, #0	@ <variable>.StartMode,
	bne	.L2955	@,
	movw	r3, #:lower16:11196700	@ tmp142,
	movt	r3, #:upper16:11196700	@ tmp142,
	str	r1, [r0, r3]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	cmp	r0, #0	@ ret
	bne	.L2961	@,
	movw	lr, #:lower16:11198004	@ tmp150,
	movt	lr, #:upper16:11198004	@ tmp150,
	mov	r2, #1	@ tmp151,
	str	r2, [r4, lr]	@ tmp151, <variable>.AllowStartDec
	b	.L2957	@
.L2955:
	movw	r5, #:lower16:11196700	@ tmp152,
	movt	r5, #:upper16:11196700	@ tmp152,
	str	r1, [r0, r5]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	cmp	r0, #0	@,
	bne	.L2962	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L2963	@,
.L2959:
	movw	r1, #:lower16:11155236	@ tmp156,
	movt	r1, #:upper16:11155236	@ tmp156,
	movw	r8, #:lower16:11198004	@ tmp153,
	movw	r7, #:lower16:11164320	@ tmp158,
	ldr	r9, [r4, r1]	@, <variable>.MaxPpsNum
	movt	r7, #:upper16:11164320	@ tmp158,
	movt	r8, #:upper16:11198004	@ tmp153,
	movw	r2, #:lower16:11164304	@,
	movw	r6, #:lower16:11164305	@ tmp163,
	movt	r2, #:upper16:11164304	@,
	str	r9, [sp, #20]	@, %sfp
	movt	r6, #:upper16:11164305	@ tmp163,
	ldr	lr, [sp, #20]	@, %sfp
	movw	r9, #:lower16:11164312	@ tmp155,
	str	r2, [sp, #12]	@, %sfp
	movt	r9, #:upper16:11164312	@ tmp155,
	movw	r5, #:lower16:11164316	@ tmp166,
	movw	ip, #:lower16:11164306	@ tmp168,
	movt	r5, #:upper16:11164316	@ tmp166,
	movt	ip, #:upper16:11164306	@ tmp168,
	movw	r1, #:lower16:11164328	@ tmp171,
	movw	r2, #:lower16:11164332	@ tmp173,
	movt	r1, #:upper16:11164328	@ tmp171,
	movt	r2, #:upper16:11164332	@ tmp173,
	movw	sl, #:lower16:11164336	@ tmp175,
	movt	sl, #:upper16:11164336	@ tmp175,
	mov	r3, #0	@ tmp154,
	movw	fp, #:lower16:11164340	@,
	movw	r0, #:lower16:11164344	@,
	movt	fp, #:upper16:11164340	@,
	movt	r0, #:upper16:11164344	@,
	str	fp, [sp, #16]	@, %sfp
	str	r0, [sp, #4]	@, %sfp
	mov	fp, #3	@ tmp172,
	str	r3, [r4, sl]	@ tmp154, <variable>.PrevSlice.delta_pic_order_cnt
	movw	sl, #:lower16:88888	@ tmp159,
	str	lr, [r4, r9]	@, <variable>.PrevSlice.pic_parameter_set_id
	movt	sl, #:upper16:88888	@ tmp159,
	str	fp, [r4, r1]	@ tmp172, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	lr, #0	@ tmp174,
	str	sl, [r4, r7]	@ tmp159, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp164,
	str	r3, [r4, r8]	@ tmp154, <variable>.AllowStartDec
	mov	r1, #262144	@ tmp180,
	strb	r7, [r4, r6]	@ tmp164, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp167,
	str	lr, [r4, r2]	@ tmp174, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r0, r3	@ D.44597, tmp154
	str	r6, [r4, r5]	@ tmp167, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp169,
	strb	r5, [r4, ip]	@ tmp169, <variable>.PrevSlice.nal_unit_type
	ldr	ip, [sp, #4]	@, %sfp
	str	r1, [r4, ip]	@ tmp180, <variable>.PrevSlice.first_mb_in_slice
	ldr	fp, [sp, #12]	@, %sfp
	strb	r3, [r4, fp]	@ tmp154, <variable>.PrevSlice.field_pic_flag
	ldr	fp, [sp, #16]	@, %sfp
	str	r3, [r4, fp]	@ tmp154, <variable>.PrevSlice.delta_pic_order_cnt
.L2957:
	add	sp, sp, #28	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2961:
	movw	r6, #:lower16:11196640	@ tmp146,
	movt	r6, #:upper16:11196640	@ tmp146,
	movw	r1, #:lower16:11199520	@ tmp143,
	movt	r1, #:upper16:11199520	@ tmp143,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	str	r5, [r4, r6]	@ <variable>.StartMode, <variable>.CurrPic.frame_store
	mvn	r0, #0	@ D.44597,
	b	.L2957	@
.L2963:
	bl	vfmw_dprint_nothing	@
	b	.L2959	@
.L2962:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L2959	@,
	b	.L2963	@
	.fnend
	.size	MVC_DEC_VDMPostProc, .-MVC_DEC_VDMPostProc
	.global	__aeabi_idivmod
	.align	2
	.global	MVC_DecGap
	.type	MVC_DecGap, %function
MVC_DecGap:
	.fnstart
.LFB1706:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	ip, #:lower16:11168368	@ tmp164,
	movt	ip, #:upper16:11168368	@ tmp164,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ldr	r6, [r0, ip]	@ D.39771, <variable>.CurrMarkIdx
	movw	r9, #:lower16:11152036	@ tmp153,
	movt	r9, #:upper16:11152036	@ tmp153,
	movw	lr, #2004	@ tmp167,
	movw	r3, #:lower16:11164284	@ tmp157,
	ldr	ip, [r0, r9]	@ D.39762, <variable>.pCurrSPS
	movt	r3, #:upper16:11164284	@ tmp157,
	mul	lr, lr, r6	@ tmp166, tmp167, D.39771
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11168616	@ tmp177,
	movt	r2, #:upper16:11168616	@ tmp177,
	ldrb	r7, [ip, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	movw	r5, #:lower16:2790658	@ tmp154,
	movt	r5, #:upper16:2790658	@ tmp154,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r6, r1, r5	@ tmp154, <variable>.CurrSlice.voidx, tmp154
	movw	fp, #:lower16:11164360	@ tmp169,
	ldr	r5, [r0, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	movt	fp, #:upper16:11164360	@ tmp169,
	add	r0, lr, r0	@ tmp168, tmp166, pMvcCtx
	.pad #52
	sub	sp, sp, #52	@,,
	add	r2, r0, fp	@ tmp169, tmp168, tmp169
	cmp	r7, #1	@ <variable>.gaps_in_frame_num_value_allowed_flag,
	movw	r3, #:lower16:11164360	@ tmp174,
	movt	r3, #:upper16:11164360	@ tmp174,
	moveq	r7, #2	@,
	movne	r7, #0	@,
	add	r3, lr, r3	@ tmp174, tmp166, tmp174
	str	r7, [sp, #24]	@, %sfp
	ldrb	lr, [r2, #3]	@ zero_extendqisi2	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movw	r1, #:lower16:11162644	@ tmp152,
	movt	r1, #:upper16:11162644	@ tmp152,
	add	r0, r4, r6, asl #2	@, tmp160, pMvcCtx, tmp154,
	movw	r6, #:lower16:11161528	@ tmp162,
	movt	r6, #:upper16:11161528	@ tmp162,
	str	lr, [sp, #44]	@, %sfp
	movw	r7, #:lower16:11161532	@ tmp163,
	ldr	r2, [r4, r1]	@, <variable>.CurrSlice.frame_num
	movt	r7, #:upper16:11161532	@ tmp163,
	movw	fp, #:lower16:11196644	@ tmp171,
	movt	fp, #:upper16:11196644	@ tmp171,
	add	lr, r4, r3	@ tmp176, pMvcCtx, tmp174
	cmp	r5, #0	@ <variable>.DPB.used_size,
	str	r2, [sp, #16]	@, %sfp
	ldr	r1, [r4, r6]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [ip, #2896]	@ D.39763, <variable>.log2_max_frame_num_minus4
	ldr	r0, [r0, #4]	@ D.39767, <variable>.CurrSlice.prev_frame_num
	str	lr, [r4, fp]	@ tmp176, <variable>.CurrPic.pMarkPara
	str	r1, [sp, #40]	@, %sfp
	ldr	r3, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	str	r3, [sp, #36]	@, %sfp
	beq	.L2978	@,
	add	r3, r2, #4	@ tmp179, D.39763,
	mov	r1, #1	@ tmp180,
	mov	r5, r1, asl r3	@, tmp180,
	add	r0, r0, #1	@, D.39767,
	str	r5, [sp, #20]	@, %sfp
	mov	r1, r5	@,
	bl	__aeabi_uidivmod	@
	mov	r2, #0	@ tmp188,
	str	r2, [r4, r7]	@ tmp188, <variable>.CurrPOC.delta_pic_order_cnt
	str	r2, [r4, r6]	@ tmp188, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r5, r1	@ UnusedShortTermFrameNum,
	bl	vfmw_dprint_nothing	@
	bl	vfmw_dprint_nothing	@
	ldr	r0, [sp, #16]	@, %sfp
	cmp	r0, r5	@, UnusedShortTermFrameNum
	ble	.L2969	@,
	movw	sl, #:lower16:11196174	@ tmp279,
	movw	r6, #:lower16:11196640	@ tmp280,
	movw	r8, #:lower16:11196648	@ tmp281,
	movw	ip, #:lower16:11196656	@,
	movw	lr, #:lower16:11196170	@,
	movt	ip, #:upper16:11196656	@,
	movt	lr, #:upper16:11196170	@,
	movw	r7, #:lower16:11196732	@,
	movt	sl, #:upper16:11196174	@ tmp279,
	movt	r7, #:upper16:11196732	@,
	movt	r6, #:upper16:11196640	@ tmp280,
	str	r7, [sp, #12]	@, %sfp
	movt	r8, #:upper16:11196648	@ tmp281,
	movw	r7, #:lower16:11164280	@ tmp285,
	str	ip, [sp, #4]	@, %sfp
	movt	r7, #:upper16:11164280	@ tmp285,
	str	lr, [sp, #8]	@, %sfp
	b	.L2975	@
.L2971:
	movw	r3, #:lower16:11196172	@ tmp245,
	movt	r3, #:upper16:11196172	@ tmp245,
	mov	ip, #0	@ tmp246,
	mov	r0, r4	@, pMvcCtx
	strb	ip, [r4, r3]	@ tmp246, <variable>.CurrPic.is_long_term
	bl	MVC_StorePicInDpb	@
	movw	r2, #:lower16:11164284	@ tmp256,
	movw	r3, #:lower16:2790658	@ tmp253,
	movt	r2, #:upper16:11164284	@ tmp256,
	movt	r3, #:upper16:2790658	@ tmp253,
	ldr	r1, [sp, #20]	@, %sfp
	cmp	r0, #0	@,
	add	r0, r5, #1	@, UnusedShortTermFrameNum,
	bne	.L2977	@,
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	add	ip, r2, r3	@ tmp253, <variable>.CurrSlice.voidx, tmp253
	add	lr, r4, ip, asl #2	@, tmp259, pMvcCtx, tmp253,
	str	r5, [lr, #4]	@ UnusedShortTermFrameNum, <variable>.CurrSlice.prev_frame_num
	bl	__aeabi_idivmod	@
	mov	r5, r1	@ UnusedShortTermFrameNum,
	ldr	r1, [sp, #16]	@, %sfp
	cmp	r1, r5	@, UnusedShortTermFrameNum
	ble	.L2969	@,
.L2975:
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AllocFrameStore	@
	cmp	r0, #0	@ ret
	bne	.L2977	@,
	str	r0, [sp, #0]	@,
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #1	@ tmp197,
	strb	r3, [r4, sl]	@ tmp197, <variable>.CurrPic.nal_unit_type
	str	r5, [r2, #588]	@ UnusedShortTermFrameNum, <variable>.frame_num
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r5, [r4, r8]	@ UnusedShortTermFrameNum, <variable>.CurrPic.frame_num
	str	r5, [ip, #476]	@ UnusedShortTermFrameNum, <variable>.frame.pic_num
	ldr	r0, [sp, #24]	@, %sfp
	ldr	r1, [sp, #4]	@, %sfp
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r4, r1]	@, <variable>.CurrPic.nal_ref_idc
	ldr	r0, [sp, #0]	@,
	str	r0, [r2, #472]	@ ret, <variable>.frame.long_term_pic_num
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [ip, #612]	@ tmp197, <variable>.is_displayed
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [r1, #4]	@ ret, <variable>.is_in_dpb
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r2, #0]	@ tmp197, <variable>.non_existing
	ldr	ip, [sp, #8]	@, %sfp
	ldr	r1, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r2, [r4, fp]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	strb	r3, [r4, ip]	@ tmp197, <variable>.CurrPic.non_existing
	ldr	r3, [sp, #12]	@, %sfp
	str	r1, [r4, r3]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	strb	r0, [r2, #3]	@ ret, <variable>.adaptive_ref_pic_marking_mode_flag
	ldr	r2, [r4, r9]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldr	r0, [r2, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r0, #0	@ <variable>.pic_order_cnt_type,
	beq	.L2971	@,
	movw	lr, #:lower16:11161544	@ tmp232,
	movt	lr, #:upper16:11161544	@ tmp232,
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, lr]	@ UnusedShortTermFrameNum, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	movw	r1, #:lower16:11161520	@ tmp237,
	movt	r1, #:upper16:11161520	@ tmp237,
	movw	r0, #:lower16:11161524	@ tmp234,
	movw	r3, #:lower16:11161516	@ tmp243,
	movt	r0, #:upper16:11161524	@ tmp234,
	ldr	r1, [r4, r1]	@, <variable>.CurrPOC.framepoc
	movt	r3, #:upper16:11161516	@ tmp243,
	ldr	ip, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r2, #:lower16:11161512	@ tmp240,
	movw	r0, #:lower16:11196660	@ tmp233,
	movt	r2, #:upper16:11161512	@ tmp240,
	str	r1, [sp, #28]	@, %sfp
	movt	r0, #:upper16:11196660	@ tmp233,
	ldr	r3, [r4, r3]	@, <variable>.CurrPOC.bottompoc
	movw	r1, #:lower16:11196664	@ tmp236,
	ldr	lr, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movt	r1, #:upper16:11196664	@ tmp236,
	movw	r2, #:lower16:11196668	@ tmp239,
	movt	r2, #:upper16:11196668	@ tmp239,
	str	r3, [sp, #32]	@, %sfp
	movw	r3, #:lower16:11196672	@ tmp242,
	str	ip, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPic.thispoc
	movt	r3, #:upper16:11196672	@ tmp242,
	ldr	r0, [sp, #28]	@, %sfp
	str	lr, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPic.toppoc
	str	r0, [r4, r1]	@, <variable>.CurrPic.framepoc
	ldr	lr, [sp, #32]	@, %sfp
	str	lr, [r4, r3]	@, <variable>.CurrPic.bottompoc
	b	.L2971	@
.L2977:
	ldr	ip, [sp, #40]	@, %sfp
	movw	r2, #:lower16:11161528	@ tmp248,
	movt	r2, #:upper16:11161528	@ tmp248,
	movw	lr, #:lower16:11161532	@ tmp249,
	movt	lr, #:upper16:11161532	@ tmp249,
	movw	r3, #:lower16:11196644	@ tmp251,
	str	ip, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r3, #:upper16:11196644	@ tmp251,
	ldr	r0, [sp, #36]	@, %sfp
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	str	r0, [r4, lr]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [sp, #44]	@, %sfp
	strb	r2, [r1, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.39784,
.L2968:
	add	sp, sp, #52	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L2978:
	bl	vfmw_dprint_nothing	@
	mov	r0, r5	@ D.39784, <variable>.DPB.used_size
	b	.L2968	@
.L2969:
	ldr	ip, [sp, #40]	@, %sfp
	movw	r2, #:lower16:11161528	@ tmp266,
	movt	r2, #:upper16:11161528	@ tmp266,
	movw	r3, #:lower16:11161532	@ tmp267,
	movt	r3, #:upper16:11161532	@ tmp267,
	movw	r0, #:lower16:11196644	@ tmp269,
	str	ip, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r0, #:upper16:11196644	@ tmp269,
	ldr	lr, [sp, #36]	@, %sfp
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, #0	@ D.39784,
	str	lr, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r3, [sp, #44]	@, %sfp
	strb	r3, [r1, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	b	.L2968	@
	.fnend
	.size	MVC_DecGap, .-MVC_DecGap
	.align	2
	.global	MVC_InitPic
	.type	MVC_InitPic, %function
MVC_InitPic:
	.fnstart
.LFB1709:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	ip, #:lower16:11196168	@ tmp213,
	movt	ip, #:upper16:11196168	@ tmp213,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r1, #:lower16:11155244	@ tmp207,
	movw	r7, #:lower16:11162632	@ tmp208,
	movt	r1, #:upper16:11155244	@ tmp207,
	movt	r7, #:upper16:11162632	@ tmp208,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r0, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	.pad #84
	sub	sp, sp, #84	@,,
	ldr	r3, [r4, r1]	@ <variable>.PPS, <variable>.PPS
	mov	r5, #2240	@ tmp211,
	ldr	r2, [r4, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r0, #0	@ <variable>.CurrPic.state,
	mov	r1, #0	@ tmp206,
	str	r1, [sp, #76]	@ tmp206, dpb_changed
	mla	r5, r5, r2, r3	@ pPPS, tmp211, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L2980	@,
	movw	r6, #:lower16:11196640	@ tmp215,
	movt	r6, #:upper16:11196640	@ tmp215,
	ldr	r2, [r4, r6]	@ D.39954, <variable>.CurrPic.frame_store
	cmp	r2, r1	@ D.39954,
	beq	.L2981	@,
	ldrb	r7, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r7, r1	@ <variable>.is_used,
	beq	.L3084	@,
.L2981:
	movw	r7, #:lower16:11196168	@ tmp228,
	movt	r7, #:upper16:11196168	@ tmp228,
	mov	r0, #0	@ tmp229,
	strb	r0, [r4, r7]	@ tmp229, <variable>.CurrPic.state
.L2980:
	add	r1, sp, #76	@,,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetReRangeFlag	@
	movw	r1, #:lower16:11164272	@ tmp232,
	movt	r1, #:upper16:11164272	@ tmp232,
	ldr	r3, [r4, r1]	@ prephitmp.7799, <variable>.CurrSlice.svc_extension_flag
	cmn	r3, #1	@ prephitmp.7799,
	mov	r7, r0	@ D.39962,
	beq	.L3085	@,
.L2982:
	cmp	r3, #0	@ prephitmp.7799,
	bne	.L2986	@,
	movw	r2, #:lower16:11152048	@ tmp265,
	movt	r2, #:upper16:11152048	@ tmp265,
	ldr	r0, [r4, r2]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r0, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L3086	@,
	movw	r0, #:lower16:10814504	@ tmp288,
	movt	r0, #:upper16:10814504	@ tmp288,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, r0]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r3, r1	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	bne	.L3074	@,
	movw	lr, #:lower16:11152036	@ tmp291,
	movt	lr, #:upper16:11152036	@ tmp291,
	movw	r2, #:lower16:10814508	@ tmp293,
	movt	r2, #:upper16:10814508	@ tmp293,
	add	ip, r4, r2	@ tmp293, pMvcCtx, tmp293
	str	ip, [r4, lr]	@ tmp293, <variable>.pCurrSPS
.L2986:
	movw	r0, #:lower16:11159264	@ tmp294,
	movt	r0, #:upper16:11159264	@ tmp294,
	ldr	r1, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r3, [r4, r0]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r3, r1	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L3087	@,
.L2990:
	movw	r3, #:lower16:11152036	@ tmp300,
	movt	r3, #:upper16:11152036	@ tmp300,
	mov	r2, #0	@ tmp298,
	mov	r1, r5	@, pPPS
	strb	r2, [r5, #20]	@ tmp298, <variable>.is_refreshed
	ldr	r0, [r4, r3]	@, <variable>.pCurrSPS
	bl	mvc_assign_quant_params	@
	movw	ip, #:lower16:11159240	@,
	movt	ip, #:upper16:11159240	@,
	mov	r1, r5	@, pPPS
	add	r0, r4, ip	@, pMvcCtx,
	mov	r2, #2240	@,
	bl	memmove	@
.L2991:
	ldr	r1, [sp, #76]	@ dpb_changed, dpb_changed
	cmp	r1, #0	@ dpb_changed,
	beq	.L2992	@,
	ldr	r3, [r4, #0]	@ D.40009, <variable>.pstExtraData
	ldr	r0, [r3, #608]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r0, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L2993	@,
	ldr	lr, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	lr, #25	@ <variable>.eCapLevel,
	beq	.L3088	@,
.L2993:
	movw	r3, #:lower16:11199480	@ tmp342,
	movt	r3, #:upper16:11199480	@ tmp342,
	cmp	r7, #0	@ D.39962,
	ldr	lr, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r2, lr, #1	@ tmp345, <variable>.SeqCnt,
	str	r2, [r4, r3]	@ tmp345, <variable>.SeqCnt
	beq	.L3001	@,
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBackPicFromVOQueue	@
.L3002:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	subs	r6, r0, #0	@ ret.7771,
	bne	.L3074	@,
	cmp	r7, #0	@ D.39962,
	bne	.L3089	@,
.L2992:
	movw	lr, #:lower16:11159264	@ tmp369,
	movt	lr, #:upper16:11159264	@ tmp369,
	ldr	r8, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r3, [r4, lr]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r3, r8	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L3090	@,
.L3005:
	movw	r1, #:lower16:11159240	@,
	movt	r1, #:upper16:11159240	@,
	add	r0, r4, r1	@, pMvcCtx,
	mov	r2, #0	@ tmp373,
	mov	r1, r5	@, pPPS
	strb	r2, [r5, #20]	@ tmp373, <variable>.is_refreshed
	movw	r5, #:lower16:11164272	@ tmp377,
	movt	r5, #:upper16:11164272	@ tmp377,
	mov	r2, #2240	@,
	bl	memmove	@
	ldr	r0, [r4, r5]	@ prephitmp.7696, <variable>.CurrSlice.svc_extension_flag
	cmn	r0, #1	@ prephitmp.7696,
	beq	.L3091	@,
.L3007:
	cmp	r0, #0	@ prephitmp.7696,
	bne	.L3008	@,
	movw	lr, #:lower16:10818504	@ tmp381,
	movt	lr, #:upper16:10818504	@ tmp381,
	movw	r3, #:lower16:11164280	@ tmp383,
	movt	r3, #:upper16:11164280	@ tmp383,
	ldr	r2, [r4, lr]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	ip, [r4, r3]	@ D.40086, <variable>.CurrSlice.view_id
	adds	r5, r2, #1	@ temp.7794, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L3009	@,
	movw	r8, #:lower16:10818508	@ tmp384,
	movt	r8, #:upper16:10818508	@ tmp384,
	ldr	r1, [r4, r8]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	ip, r1	@ D.40086, <variable>.CurrSUBSPS.view_id
	beq	.L3009	@,
	tst	r2, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r2, #:lower16:10818512	@ ivtmp.7754,
	movt	r2, #:upper16:10818512	@ ivtmp.7754,
	add	r2, r4, r2	@ ivtmp.7754, pMvcCtx, ivtmp.7754
	beq	.L3010	@,
	ldr	r1, [r2], #4	@ temp.7884, <variable>.CurrSUBSPS.view_id
	mov	r0, #1	@ i,
	mov	r3, r0	@ i.611, i
	cmp	ip, r1	@ D.40086, temp.7884
	bne	.L3010	@,
	b	.L3011	@
.L3012:
	ldr	lr, [r1], #4	@ temp.7884, <variable>.CurrSUBSPS.view_id
	cmp	ip, lr	@ D.40086, temp.7884
	beq	.L3011	@,
	ldr	r8, [r2, #4]	@ temp.7884, <variable>.CurrSUBSPS.view_id
	mov	r3, r0	@ i.611, i
	add	r2, r1, #4	@ ivtmp.7754, tmp811,
	cmp	ip, r8	@ D.40086, temp.7884
	beq	.L3011	@,
.L3010:
	add	r3, r0, #1	@ i.611, i,
	mov	r1, r2	@ tmp811, ivtmp.7754
	cmp	r3, r5	@ i.611, temp.7794
	add	r0, r3, #1	@ i, i.611,
	bcc	.L3012	@,
.L3011:
	movw	ip, #:lower16:11164284	@ tmp387,
	movt	ip, #:upper16:11164284	@ tmp387,
	str	r3, [r4, ip]	@ i.611, <variable>.CurrSlice.voidx
.L3008:
	movw	r1, #:lower16:11162627	@ tmp390,
	movt	r1, #:upper16:11162627	@ tmp390,
	movw	r3, #:lower16:11152036	@ tmp389,
	movt	r3, #:upper16:11152036	@ tmp389,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r5, [r4, r3]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	ldr	r8, [r5, #2896]	@ D.40089, <variable>.log2_max_frame_num_minus4
	beq	.L3092	@,
.L3013:
	movw	lr, #:lower16:11199448	@ tmp402,
	movt	lr, #:upper16:11199448	@ tmp402,
	ldr	r2, [r4, lr]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r2, #2	@ <variable>.OldDecMode,
	beq	.L3014	@,
	ldr	r6, [r4, #0]	@ temp.7796, <variable>.pstExtraData
	ldr	ip, [r6, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	beq	.L3014	@,
	movw	lr, #:lower16:11164284	@ tmp410,
	movt	lr, #:upper16:11164284	@ tmp410,
	movw	r5, #:lower16:2790658	@ tmp407,
	movt	r5, #:upper16:2790658	@ tmp407,
	ldr	r1, [r4, lr]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11162644	@ tmp406,
	movt	r2, #:upper16:11162644	@ tmp406,
	add	r0, r1, r5	@ tmp407, <variable>.CurrSlice.voidx, tmp407
	ldr	r5, [r4, r2]	@ prephitmp.7698, <variable>.CurrSlice.frame_num
	add	r3, r4, r0, asl #2	@, tmp413, pMvcCtx, tmp407,
	ldr	r0, [r3, #4]	@ prephitmp.7798, <variable>.CurrSlice.prev_frame_num
	cmp	r5, r0	@ prephitmp.7698, prephitmp.7798
	beq	.L3016	@,
	mov	r7, #1	@ tmp416,
	add	r8, r8, #4	@ tmp415, D.40089,
	mov	r8, r7, asl r8	@ MaxFrameNum, tmp416,
	add	r0, r0, r7	@, prephitmp.7798,
	mov	r1, r8	@, MaxFrameNum
	bl	__aeabi_uidivmod	@
	cmp	r5, r1	@ prephitmp.7698,
	beq	.L3016	@,
	str	r7, [r6, #516]	@ tmp416, <variable>.s32MoreGapEnable
	ldr	r3, [r4, #0]	@ temp.7800, <variable>.pstExtraData
	ldr	ip, [r3, #516]	@ <variable>.s32MoreGapEnable, <variable>.s32MoreGapEnable
	cmp	ip, #0	@ <variable>.s32MoreGapEnable,
	bne	.L3017	@,
	ldr	r0, [r3, #540]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r0, r7	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L3093	@,
.L3018:
	movw	lr, #:lower16:11164284	@ tmp432,
	movt	lr, #:upper16:11164284	@ tmp432,
	movw	r3, #:lower16:2790658	@ tmp433,
	movt	r3, #:upper16:2790658	@ tmp433,
	ldr	r1, [r4, lr]	@ temp.7802, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11162644	@ tmp431,
	movt	r2, #:upper16:11162644	@ tmp431,
	add	r0, r1, r3	@ tmp433, temp.7802, tmp433
	ldr	r2, [r4, r2]	@ temp.7801, <variable>.CurrSlice.frame_num
	add	ip, r4, r0, asl #2	@, tmp437, pMvcCtx, tmp433,
	ldr	r3, [ip, #4]	@ D.40104, <variable>.CurrSlice.prev_frame_num
	cmp	r2, r3	@ temp.7801, D.40104
	bls	.L3019	@,
	movw	lr, #:lower16:11159220	@ tmp439,
	movt	lr, #:upper16:11159220	@ tmp439,
	rsb	ip, r3, r2	@ tmp440, D.40104, temp.7801
	ldr	r0, [r4, lr]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	cmp	r0, ip	@ <variable>.CurrSPS.dpb_size_plus1, tmp440
	bcs	.L3017	@,
.L3082:
	cmp	r3, #0	@ D.40104,
	beq	.L3017	@,
	movw	ip, #:lower16:11162624	@ tmp454,
	movt	ip, #:upper16:11162624	@ tmp454,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L3075	@,
	movw	r0, #:lower16:2790658	@ tmp456,
	movt	r0, #:upper16:2790658	@ tmp456,
	add	r3, r1, r0	@ tmp456, temp.7802, tmp456
	cmp	r2, #0	@ temp.7801,
	subeq	r2, r8, #1	@ iftmp.676, MaxFrameNum,
	subne	r2, r2, #1	@ iftmp.676, temp.7801,
	add	lr, r4, r3, asl #2	@, tmp460, pMvcCtx, tmp456,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	str	r2, [lr, #4]	@ iftmp.676, <variable>.CurrSlice.prev_frame_num
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L3074	@,
.L3017:
	movw	r2, #:lower16:11155267	@ tmp462,
	movt	r2, #:upper16:11155267	@ tmp462,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	cmp	r1, #0	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag,
	bne	.L3026	@,
	bl	vfmw_dprint_nothing	@
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r5, [ip, #520]	@ D.40161, <variable>.s32FastForwardBackwardSpeed
	cmp	r5, #0	@ D.40161,
	cmpne	r5, #1024	@, D.40161,
	bne	.L3014	@,
	movw	r3, #:lower16:11164280	@ tmp473,
	movt	r3, #:upper16:11164280	@ tmp473,
	ldr	lr, [r4, r3]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	lr, #0	@ <variable>.CurrSlice.view_id,
	bne	.L3014	@,
	movw	r1, #:lower16:11164284	@ tmp480,
	movt	r1, #:upper16:11164284	@ tmp480,
	movw	r5, #:lower16:2790658	@ tmp477,
	movt	r5, #:upper16:2790658	@ tmp477,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	lr, #:lower16:11162644	@ tmp476,
	movt	lr, #:upper16:11162644	@ tmp476,
	mov	r1, r8	@, MaxFrameNum
	add	ip, r3, r5	@ tmp477, <variable>.CurrSlice.voidx, tmp477
	ldr	r5, [r4, lr]	@ prephitmp.7698, <variable>.CurrSlice.frame_num
	add	r2, r4, ip, asl #2	@, tmp483, pMvcCtx, tmp477,
	ldr	r0, [r2, #4]	@ tmp486, <variable>.CurrSlice.prev_frame_num
	add	r0, r0, #1	@, tmp486,
	bl	__aeabi_uidivmod	@
	cmp	r5, r1	@ prephitmp.7698,
	bcs	.L3016	@,
	movw	r2, #:lower16:11162624	@ tmp493,
	movt	r2, #:upper16:11162624	@ tmp493,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L3016	@,
.L3075:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r1, #0	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearDPB	@
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.39997,
	b	.L2989	@
.L3026:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecGap	@
	cmp	r0, #0	@,
	bne	.L3074	@,
.L3014:
	movw	ip, #:lower16:11162644	@ tmp496,
	movt	ip, #:upper16:11162644	@ tmp496,
	ldr	r5, [r4, ip]	@ prephitmp.7698, <variable>.CurrSlice.frame_num
.L3016:
	movw	r3, #:lower16:11162656	@ tmp497,
	movt	r3, #:upper16:11162656	@ tmp497,
	ldr	lr, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L3094	@,
.L3030:
	movw	r1, #:lower16:11161544	@ tmp508,
	movt	r1, #:upper16:11161544	@ tmp508,
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, r1]	@ prephitmp.7698, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_AllocFrameStore	@
	cmp	r0, #0	@ ret.7817
	bne	.L3074	@,
	movw	r2, #:lower16:11161524	@ tmp526,
	movt	r2, #:upper16:11161524	@ tmp526,
	movw	r3, #:lower16:11162625	@ tmp560,
	movw	r6, #:lower16:11161520	@ tmp529,
	ldr	r8, [r4, r2]	@, <variable>.CurrPOC.ThisPOC
	movt	r3, #:upper16:11162625	@ tmp560,
	movt	r6, #:upper16:11161520	@ tmp529,
	movw	fp, #:lower16:11161512	@ tmp532,
	ldrb	sl, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	fp, #:upper16:11161512	@ tmp532,
	str	r8, [sp, #44]	@, %sfp
	movw	lr, #:lower16:11161516	@ tmp535,
	ldr	r7, [r4, r6]	@, <variable>.CurrPOC.framepoc
	movt	lr, #:upper16:11161516	@ tmp535,
	movw	r5, #:lower16:11162627	@ tmp516,
	movt	r5, #:upper16:11162627	@ tmp516,
	movw	ip, #:lower16:11162644	@ tmp520,
	movt	ip, #:upper16:11162644	@ tmp520,
	str	r7, [sp, #48]	@, %sfp
	movw	r9, #:lower16:11162656	@ tmp523,
	ldr	r2, [r4, fp]	@, <variable>.CurrPOC.toppoc
	movt	r9, #:upper16:11162656	@ tmp523,
	cmp	sl, #0	@ <variable>.CurrSlice.field_pic_flag,
	movw	r8, #:lower16:11196664	@,
	movt	r8, #:upper16:11196664	@,
	movw	r7, #:lower16:11196668	@,
	str	r2, [sp, #52]	@, %sfp
	movt	r7, #:upper16:11196668	@,
	ldr	r6, [r4, lr]	@, <variable>.CurrPOC.bottompoc
	movw	r1, #:lower16:11196175	@ tmp509,
	movw	r2, #:lower16:11196168	@ tmp512,
	movt	r1, #:upper16:11196175	@ tmp509,
	movt	r2, #:upper16:11196168	@ tmp512,
	str	r6, [sp, #56]	@, %sfp
	movw	r6, #:lower16:11196672	@,
	ldrb	fp, [r4, r5]	@ zero_extendqisi2	@, <variable>.CurrSlice.nal_unit_type
	movt	r6, #:upper16:11196672	@,
	movw	r5, #:lower16:11196676	@,
	movt	r5, #:upper16:11196676	@,
	str	fp, [sp, #60]	@, %sfp
	movw	fp, #:lower16:11196174	@ tmp515,
	ldr	lr, [r4, ip]	@, <variable>.CurrSlice.frame_num
	movt	fp, #:upper16:11196174	@ tmp515,
	movw	ip, #:lower16:11196660	@,
	movt	ip, #:upper16:11196660	@,
	str	lr, [sp, #64]	@, %sfp
	movw	lr, #:lower16:11196170	@,
	ldr	sl, [r4, r9]	@, <variable>.CurrSlice.nal_ref_idc
	movt	lr, #:upper16:11196170	@,
	str	r8, [sp, #24]	@, %sfp
	movw	r9, #:lower16:11196648	@ tmp519,
	ldr	r8, [sp, #60]	@, %sfp
	movt	r9, #:upper16:11196648	@ tmp519,
	str	sl, [sp, #68]	@, %sfp
	movw	sl, #:lower16:11196656	@ tmp522,
	str	r5, [sp, #12]	@, %sfp
	movt	sl, #:upper16:11196656	@ tmp522,
	str	ip, [sp, #20]	@, %sfp
	movw	ip, #:lower16:11196173	@,
	str	r7, [sp, #28]	@, %sfp
	movt	ip, #:upper16:11196173	@,
	str	r6, [sp, #32]	@, %sfp
	movw	r7, #:lower16:11196680	@ tmp540,
	str	lr, [sp, #36]	@, %sfp
	movt	r7, #:upper16:11196680	@ tmp540,
	str	ip, [sp, #40]	@, %sfp
	movw	r6, #:lower16:11196684	@ tmp543,
	strb	r8, [r4, fp]	@, <variable>.CurrPic.nal_unit_type
	movt	r6, #:upper16:11196684	@ tmp543,
	ldr	fp, [sp, #64]	@, %sfp
	movw	r5, #:lower16:11196688	@ tmp546,
	movw	lr, #:lower16:11196172	@ tmp555,
	movt	r5, #:upper16:11196688	@ tmp546,
	movt	lr, #:upper16:11196172	@ tmp555,
	movw	ip, #:lower16:11196720	@ tmp558,
	str	fp, [r4, r9]	@, <variable>.CurrPic.frame_num
	movt	ip, #:upper16:11196720	@ tmp558,
	ldr	r8, [sp, #68]	@, %sfp
	mov	r9, #1	@ tmp513,
	str	r8, [r4, sl]	@, <variable>.CurrPic.nal_ref_idc
	ldr	fp, [sp, #44]	@, %sfp
	ldr	sl, [sp, #12]	@, %sfp
	str	fp, [r4, sl]	@, <variable>.CurrPic.decthispoc
	ldr	r8, [sp, #48]	@, %sfp
	str	r8, [r4, r7]	@, <variable>.CurrPic.decframepoc
	ldr	r7, [sp, #52]	@, %sfp
	str	r7, [r4, r6]	@, <variable>.CurrPic.dectoppoc
	ldr	fp, [sp, #56]	@, %sfp
	strb	r9, [r4, r2]	@ tmp513, <variable>.CurrPic.state
	movw	r2, #:lower16:11152036	@ tmp565,
	strb	r0, [r4, lr]	@ ret.7817, <variable>.CurrPic.is_long_term
	movt	r2, #:upper16:11152036	@ tmp565,
	str	fp, [r4, r5]	@, <variable>.CurrPic.decbottompoc
	mvn	r5, #0	@ tmp559,
	strb	r0, [r4, r1]	@ ret.7817, <variable>.CurrPic.mode_skip_flag
	str	r5, [r4, ip]	@ tmp559, <variable>.CurrPic.stream_base_addr
	ldr	lr, [sp, #44]	@, %sfp
	ldr	r1, [sp, #20]	@, %sfp
	str	lr, [r4, r1]	@, <variable>.CurrPic.thispoc
	ldr	r1, [sp, #24]	@, %sfp
	str	r8, [r4, r1]	@, <variable>.CurrPic.framepoc
	moveq	r1, r9	@ prephitmp.7703, tmp513
	ldr	r6, [sp, #28]	@, %sfp
	movne	r1, #2	@ prephitmp.7703,
	str	r7, [r4, r6]	@, <variable>.CurrPic.toppoc
	movw	r7, #:lower16:11196708	@ tmp574,
	ldr	sl, [sp, #32]	@, %sfp
	movt	r7, #:upper16:11196708	@ tmp574,
	str	fp, [r4, sl]	@, <variable>.CurrPic.bottompoc
	movw	fp, #:lower16:11162625	@ tmp592,
	ldr	ip, [sp, #36]	@, %sfp
	movt	fp, #:upper16:11162625	@ tmp592,
	strb	r0, [r4, ip]	@ ret.7817, <variable>.CurrPic.non_existing
	ldr	r5, [sp, #40]	@, %sfp
	strneb	r9, [r4, r3]	@ tmp513, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r5]	@ ret.7817, <variable>.CurrPic.is_short_term
	ldr	r5, [r4, r2]	@ temp.7825, <variable>.pCurrSPS
	ldrb	r8, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	lr, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r0, r8, #2	@ tmp567, <variable>.frame_mbs_only_flag,
	mla	r0, lr, r0, r0	@, <variable>.pic_height_in_map_units_minus1, tmp567, tmp567
	bl	__aeabi_uidiv	@
	movw	ip, #:lower16:11196712	@ tmp576,
	movt	ip, #:upper16:11196712	@ tmp576,
	ldrb	r9, [r4, fp]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r3, #:lower16:11159240	@ tmp589,
	movt	r3, #:upper16:11159240	@ tmp589,
	cmp	r9, #0	@ <variable>.CurrSlice.field_pic_flag,
	movw	fp, #:lower16:11196704	@ tmp585,
	ldrb	r8, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	movt	fp, #:upper16:11196704	@ tmp585,
	str	r0, [r4, r7]	@ tmp573, <variable>.CurrPic.pic_height_in_mb
	movw	r7, #:lower16:11196176	@ tmp588,
	ldrb	r6, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movt	r7, #:upper16:11196176	@ tmp588,
	ldr	sl, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r1, r6, #2	@ tmp578, <variable>.frame_mbs_only_flag,
	mla	r2, sl, r1, r1	@ tmp581, <variable>.pic_height_in_map_units_minus1, tmp578, tmp578
	movw	sl, #:lower16:11196716	@ tmp586,
	movt	sl, #:upper16:11196716	@ tmp586,
	str	r2, [r4, ip]	@ tmp581, <variable>.CurrPic.frame_height_in_mb
	ldr	r6, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	strb	r8, [r4, r7]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPic.entropy_coding_mode_flag
	add	r1, r6, #1	@ D.40203, <variable>.pic_width_in_mbs_minus1,
	str	r1, [r4, fp]	@ D.40203, <variable>.CurrPic.pic_width_in_mb
	mul	r9, r1, r0	@ tmp587, D.40203, tmp573
	movne	r1, #0	@ prephitmp.7704,
	str	r9, [r4, sl]	@ tmp587, <variable>.CurrPic.pic_mbs
	beq	.L3095	@,
	movw	ip, #:lower16:11162656	@ tmp600,
	movt	ip, #:upper16:11162656	@ tmp600,
	movw	r3, #:lower16:11196177	@ tmp598,
	movt	r3, #:upper16:11196177	@ tmp598,
	ldr	r9, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	strb	r1, [r4, r3]	@ prephitmp.7704, <variable>.CurrPic.MbaffFrameFlag
	cmp	r9, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L3036	@,
.L3098:
	movw	r6, #:lower16:11164284	@ tmp605,
	movt	r6, #:upper16:11164284	@ tmp605,
	movw	sl, #:lower16:2790658	@ tmp602,
	movw	fp, #:lower16:11162644	@ tmp610,
	ldr	r7, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	sl, #:upper16:2790658	@ tmp602,
	movt	fp, #:upper16:11162644	@ tmp610,
	add	lr, r7, sl	@ tmp602, <variable>.CurrSlice.voidx, tmp602
	ldr	r1, [r4, fp]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	r5, r4, lr, asl #2	@, tmp608, pMvcCtx, tmp602,
	str	r1, [r5, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
.L3036:
	movw	r5, #:lower16:11164272	@ tmp612,
	movw	r1, #:lower16:11196640	@ tmp615,
	movt	r5, #:upper16:11164272	@ tmp612,
	movt	r1, #:upper16:11196640	@ tmp615,
	movw	r3, #:lower16:11196728	@ tmp613,
	movw	r2, #:lower16:11164276	@ tmp618,
	ldr	ip, [r4, r5]	@ D.39963, <variable>.CurrSlice.svc_extension_flag
	movt	r3, #:upper16:11196728	@ tmp613,
	ldr	r9, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r2, #:upper16:11164276	@ tmp618,
	mvn	r0, #0	@ tmp617,
	str	ip, [r4, r3]	@ D.39963, <variable>.CurrPic.svc_extension_flag
	movw	r3, #:lower16:11196732	@ tmp616,
	str	ip, [r9, #640]	@ D.39963, <variable>.svc_extension_flag
	movt	r3, #:upper16:11196732	@ tmp616,
	ldr	r8, [r4, r2]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	str	r0, [r4, r3]	@ tmp617, <variable>.CurrPic.view_id
	cmp	r8, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L3096	@,
.L3037:
	movw	r9, #:lower16:11168368	@ tmp633,
	movt	r9, #:upper16:11168368	@ tmp633,
	movw	ip, #2004	@ tmp636,
	movw	r3, #:lower16:11164284	@ tmp630,
	ldr	r1, [r4, r9]	@ <variable>.CurrMarkIdx, <variable>.CurrMarkIdx
	movt	r3, #:upper16:11164284	@ tmp630,
	ldr	r9, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r0, #:lower16:11196736	@ tmp629,
	ldr	lr, [r4, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r0, #:upper16:11196736	@ tmp629,
	mul	sl, ip, r1	@ tmp634, tmp636, <variable>.CurrMarkIdx
	movw	r7, #:lower16:11196644	@ tmp632,
	movw	r8, #:lower16:11164360	@ tmp637,
	movt	r7, #:upper16:11196644	@ tmp632,
	movt	r8, #:upper16:11164360	@ tmp637,
	str	lr, [r4, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrPic.voidx
	add	fp, sl, r8	@ tmp637, tmp634, tmp637
	movw	r5, #:lower16:11196192	@ tmp640,
	add	r6, r4, fp	@ tmp639, pMvcCtx, tmp637
	str	r6, [r4, r7]	@ tmp639, <variable>.CurrPic.pMarkPara
	ldrd	r6, [r9, #56]	@ <variable>.pts, <variable>.pstExtraData,
	movt	r5, #:upper16:11196192	@ tmp640,
	movw	r2, #:lower16:11196200	@ tmp643,
	movt	r2, #:upper16:11196200	@ tmp643,
	movw	r3, #:lower16:11196208	@ tmp646,
	movt	r3, #:upper16:11196208	@ tmp646,
	strd	r6, [r4, r5]	@ <variable>.pts, pMvcCtx, tmp640
	movw	r5, #:lower16:11152036	@ tmp653,
	ldrd	sl, [r9, #72]	@ <variable>.Usertag, <variable>.pstExtraData,
	movt	r5, #:upper16:11152036	@ tmp653,
	movw	r8, #:lower16:11196324	@ tmp667,
	movt	r8, #:upper16:11196324	@ tmp667,
	movw	r7, #:lower16:11196312	@ tmp709,
	movt	r7, #:upper16:11196312	@ tmp709,
	strd	sl, [r4, r2]	@ <variable>.Usertag, pMvcCtx, tmp643
	movw	sl, #8864	@ tmp668,
	ldrd	r0, [r9, #88]	@ <variable>.DispTime, <variable>.pstExtraData,
	movw	r6, #:lower16:11199520	@ tmp732,
	movt	r6, #:upper16:11199520	@ tmp732,
	strd	r0, [r4, r3]	@ <variable>.DispTime, pMvcCtx, tmp646
	mvn	r0, #0	@ tmp650,
	mvn	r1, #0	@,
	strd	r0, [r9, #56]	@ tmp650, <variable>.pstExtraData,
	bl	vfmw_dprint_nothing	@
	movw	r9, #:lower16:11196332	@ tmp658,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r2, #:lower16:11196328	@ tmp651,
	movt	r2, #:upper16:11196328	@ tmp651,
	movt	r9, #:upper16:11196332	@ tmp658,
	movw	r1, #:lower16:11155300	@ tmp665,
	ldr	lr, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movt	r1, #:upper16:11155300	@ tmp665,
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	add	ip, lr, #1	@ tmp654, <variable>.pic_width_in_mbs_minus1,
	ldr	r1, [r4, r1]	@ <variable>.CurrSPS.vui_seq_parameters.aspect_ratio, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio
	add	r0, r4, r0	@, pMvcCtx,
	mov	lr, ip, asl #4	@ tmp656, tmp654,
	str	lr, [r4, r2]	@ tmp656, <variable>.CurrPic.fs_image.image_width
	ldrb	ip, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	and	r1, r1, #7	@, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio,
	ldr	lr, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r2, ip, #2	@ tmp660, <variable>.frame_mbs_only_flag,
	str	sl, [r4, r8]	@ tmp668, <variable>.CurrPic.fs_image.format
	mla	ip, lr, r2, r2	@ tmp663, <variable>.pic_height_in_map_units_minus1, tmp660, tmp660
	mov	sl, ip, asl #4	@ tmp664, tmp663,
	str	sl, [r4, r9]	@ tmp664, <variable>.CurrPic.fs_image.image_height
	ldr	lr, [r3, #56]	@ <variable>.vui_seq_parameters.video_format, <variable>.vui_seq_parameters.video_format
	ldr	r2, [r3, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	ldrb	ip, [r3, #52]	@ zero_extendqisi2	@ tmp674, <variable>.vui_seq_parameters.aspect_ratio
	mov	r9, lr, asl #5	@ tmp671, <variable>.vui_seq_parameters.video_format,
	subs	sl, r2, #1	@ tmp681, <variable>.chroma_format_idc,
	movne	sl, #1	@ tmp681
	and	r3, r9, #255	@ tmp673, tmp671,
	orr	r9, r3, ip, asl #14	@, tmp677, tmp673, tmp674,
	orr	lr, r9, sl, asl #2	@, tmp683, tmp677, tmp681,
	str	lr, [r4, r8]	@ tmp683, <variable>.CurrPic.fs_image.format
	bl	SetAspectRatio	@
	movw	r3, #:lower16:11199480	@ tmp687,
	movt	r3, #:upper16:11199480	@ tmp687,
	ldr	sl, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r0, #:lower16:11196368	@ tmp686,
	movt	r0, #:upper16:11196368	@ tmp686,
	ldr	r2, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	movw	r3, #:lower16:11196640	@ tmp692,
	movt	r3, #:upper16:11196640	@ tmp692,
	ldr	ip, [r4, r8]	@, <variable>.CurrPic.fs_image.format
	movw	r1, #:lower16:11196344	@ tmp693,
	movt	r1, #:upper16:11196344	@ tmp693,
	str	r2, [r4, r0]	@ <variable>.SeqCnt, <variable>.CurrPic.fs_image.seq_cnt
	movw	r9, #:lower16:11196348	@ tmp698,
	ldr	r0, [sl, #3984]	@ D.40248, <variable>.disp_center_x
	movt	r9, #:upper16:11196348	@ tmp698,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	sl, #:lower16:11196336	@ tmp703,
	str	ip, [sp, #24]	@, %sfp
	movt	sl, #:upper16:11196336	@ tmp703,
	movw	lr, #:lower16:11196340	@ tmp708,
	movt	lr, #:upper16:11196340	@ tmp708,
	str	r0, [r2, #168]	@ D.40248, <variable>.fs_image.disp_center_x
	movw	r8, #:lower16:11196171	@ tmp710,
	ldr	fp, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r8, #:upper16:11196171	@ tmp710,
	str	r0, [r4, r1]	@ D.40248, <variable>.CurrPic.fs_image.disp_center_x
	movw	r1, #:lower16:11196404	@,
	movt	r1, #:upper16:11196404	@,
	movw	ip, #:lower16:11162644	@ tmp721,
	ldr	r0, [fp, #3988]	@, <variable>.disp_center_y
	movt	ip, #:upper16:11162644	@ tmp721,
	str	r1, [sp, #28]	@, %sfp
	movw	r2, #:lower16:11164280	@ tmp724,
	movt	r2, #:upper16:11164280	@ tmp724,
	str	r0, [sp, #20]	@, %sfp
	movw	r0, #:lower16:11196396	@ tmp722,
	ldr	r1, [sp, #20]	@, %sfp
	movt	r0, #:upper16:11196396	@ tmp722,
	ldr	fp, [r4, r3]	@, <variable>.CurrPic.frame_store
	str	r1, [fp, #172]	@, <variable>.fs_image.disp_center_y
	ldr	fp, [r4, r5]	@, <variable>.pCurrSPS
	str	r1, [r4, r9]	@, <variable>.CurrPic.fs_image.disp_center_y
	ldr	r9, [fp, #3976]	@ D.40252, <variable>.disp_width
	ldr	fp, [r4, r3]	@, <variable>.CurrPic.frame_store
	str	r9, [fp, #160]	@ D.40252, <variable>.fs_image.disp_width
	ldr	r1, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	str	r9, [r4, sl]	@ D.40252, <variable>.CurrPic.fs_image.disp_width
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r5, [r1, #3980]	@ D.40254, <variable>.disp_height
	str	r5, [sl, #164]	@ D.40254, <variable>.fs_image.disp_height
	str	r5, [r4, lr]	@ D.40254, <variable>.CurrPic.fs_image.disp_height
	ldr	r1, [sp, #24]	@, %sfp
	ldr	sl, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldrb	r8, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	str	r1, [sl, #148]	@, <variable>.fs_image.format
	subs	lr, r8, #0	@ tmp712, <variable>.CurrPic.structure,
	movne	lr, #1	@ tmp712
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	lr, [r4, r7]	@ tmp712, <variable>.CurrPic.fs_image.is_fld_save
	str	lr, [r5, #136]	@ tmp712, <variable>.fs_image.is_fld_save
	ldr	ip, [r4, ip]	@ temp.7871, <variable>.CurrSlice.frame_num
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	ip, [r4, r0]	@ temp.7871, <variable>.CurrPic.fs_image.frame_num
	ldr	r0, [sp, #28]	@, %sfp
	str	ip, [lr, #220]	@ temp.7871, <variable>.fs_image.frame_num
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r1, [r4, r0]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.fs_image.view_id
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	str	r1, [r5, #228]	@ <variable>.CurrSlice.view_id, <variable>.fs_image.view_id
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDispPhyFs	@
	subs	r2, r0, #0	@ pstDecFs,
	beq	.L3038	@,
	ldr	r5, [r4, r7]	@ <variable>.CurrPic.fs_image.is_fld_save, <variable>.CurrPic.fs_image.is_fld_save
	mov	r1, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	subs	r3, r5, r1	@, <variable>.CurrPic.fs_image.is_fld_save,
	movne	r3, #1	@
	ldr	r2, [r2, #4]	@, <variable>.PhyFsID
	bl	FSP_SetStoreType	@
.L3038:
	movw	ip, #:lower16:11198024	@ tmp744,
	movt	ip, #:upper16:11198024	@ tmp744,
	movw	r2, #:lower16:11196392	@ D.52262,
	movt	r2, #:upper16:11196392	@ D.52262,
	ldr	r6, [r4, ip]	@ prephitmp.7882, <variable>.TotalUsrDatNum
	movw	r0, #:lower16:11196376	@ ivtmp.7749,
	movw	r7, #:lower16:11198032	@ ivtmp.7740,
	movt	r0, #:upper16:11196376	@ ivtmp.7749,
	movt	r7, #:upper16:11198032	@ ivtmp.7740,
	movw	lr, #:lower16:11198028	@ tmp795,
	add	r2, r4, r2	@ D.52262, pMvcCtx, D.52262
	movt	lr, #:upper16:11198028	@ tmp795,
	add	r3, r4, r0	@ ivtmp.7749, pMvcCtx, ivtmp.7749
	add	r0, r4, r7	@ ivtmp.7740, pMvcCtx, ivtmp.7740
	mov	r7, #0	@ tmp797,
.L3043:
	ldr	r1, [r3, #0]	@ tmp747, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ tmp747,
	ldrne	r6, [r4, ip]	@ prephitmp.7882, <variable>.TotalUsrDatNum
	beq	.L3097	@,
.L3040:
	add	r3, r3, #4	@ ivtmp.7749, ivtmp.7749,
	cmp	r3, r2	@ ivtmp.7749, D.52262
	bne	.L3043	@,
	cmp	r6, #0	@ prephitmp.7882,
	beq	.L3044	@,
	ble	.L3044	@,
	movw	sl, #:lower16:2799506	@ tmp765,
	movt	sl, #:upper16:2799506	@ tmp765,
	add	r8, r6, sl	@ tmp765, prephitmp.7882, tmp765
	movw	r7, #:lower16:11199520	@ tmp793,
	movt	r7, #:upper16:11199520	@ tmp793,
	sub	r6, r6, #1	@ tmp799, prephitmp.7882,
	add	r5, r4, r8, asl #2	@, tmp768, pMvcCtx, tmp765,
	mov	r8, #0	@ tmp794,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	and	r9, r6, #1	@ tmp800, tmp799,
	mov	sl, r5	@ ivtmp.7737, tmp768
	ldr	r1, [sl], #4	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, r8	@ uidxpic,
	str	r8, [sl, #-4]	@ tmp794, <variable>.pUsrDatArray
	ble	.L3044	@,
	cmp	r9, #0	@ tmp800,
	beq	.L3045	@,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ uidxpic, uidxpic,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r8, [r5, #-4]!	@ tmp794, <variable>.pUsrDatArray
	ble	.L3044	@,
.L3045:
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	lr, r6, #1	@ tmp802, uidxpic,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	sub	r6, lr, #1	@ uidxpic, tmp802,
	bl	FreeUsdByDec	@
	str	r8, [r5, #-4]!	@ tmp794, <variable>.pUsrDatArray
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r8, [r5, #-4]!	@ tmp794, <variable>.pUsrDatArray
	bgt	.L3045	@,
.L3044:
	movw	r3, #:lower16:11198024	@ tmp773,
	movw	ip, #:lower16:11196692	@ tmp775,
	movt	r3, #:upper16:11198024	@ tmp773,
	movt	ip, #:upper16:11196692	@ tmp775,
	mov	r5, #0	@ tmp774,
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, r3]	@ tmp774, <variable>.TotalUsrDatNum
	str	r5, [r4, ip]	@ tmp774, <variable>.CurrPic.pic_type
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcPicNum	@
	mov	r0, r5	@ D.39997, tmp774
.L2989:
	add	sp, sp, #84	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3097:
	cmp	r6, #0	@ prephitmp.7882,
	beq	.L3040	@,
	ldr	r6, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r5, [r4, lr]	@ <variable>.pUsrDatArray, <variable>.pUsrDatArray
	subs	r6, r6, #1	@ D.40275, <variable>.TotalUsrDatNum,
	str	r5, [r3, #0]	@ <variable>.pUsrDatArray, <variable>.CurrPic.fs_image.p_usrdat
	beq	.L3041	@,
	ldr	r8, [r0, #0]	@ tmp754, <variable>.pUsrDatArray
	mov	r5, #1	@ uidxsei,
	cmp	r6, r5	@ D.40275, uidxsei
	sub	r1, r6, #1	@ tmp803, D.40275,
	and	sl, r1, r5	@ tmp805, tmp803,
	add	r1, r0, #4	@ ivtmp.7740, ivtmp.7740,
	str	r8, [r0, #-4]	@ tmp754, <variable>.pUsrDatArray
	bls	.L3041	@,
	cmp	sl, #0	@ tmp805,
	beq	.L3042	@,
	ldr	r8, [r0, #4]	@ tmp837, <variable>.pUsrDatArray
	mov	r5, #2	@ uidxsei,
	cmp	r6, r5	@ D.40275, uidxsei
	str	r8, [r1, #-4]	@ tmp837, <variable>.pUsrDatArray
	add	r1, r1, #4	@ ivtmp.7740, ivtmp.7740,
	bls	.L3041	@,
.L3042:
	ldr	sl, [r1, #0]	@ tmp818, <variable>.pUsrDatArray
	mov	r8, r1	@ tmp807, ivtmp.7740
	add	r5, r5, #2	@ uidxsei, uidxsei,
	cmp	r6, r5	@ D.40275, uidxsei
	str	sl, [r1, #-4]	@ tmp818, <variable>.pUsrDatArray
	ldr	r1, [r1, #4]	@ tmp820, <variable>.pUsrDatArray
	str	r1, [r8], #4	@ tmp820, <variable>.pUsrDatArray
	add	r1, r8, #4	@ ivtmp.7740, tmp807,
	bhi	.L3042	@,
.L3041:
	movw	r5, #:lower16:2799506	@ tmp755,
	movt	r5, #:upper16:2799506	@ tmp755,
	add	r1, r6, r5	@ tmp755, D.40275, tmp755
	ldr	r6, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r5, r4, r1, asl #2	@, tmp759, pMvcCtx, tmp755,
	sub	r6, r6, #1	@ prephitmp.7882, <variable>.TotalUsrDatNum,
	str	r6, [r4, ip]	@ prephitmp.7882, <variable>.TotalUsrDatNum
	str	r7, [r5, #4]	@ tmp797, <variable>.pUsrDatArray
	b	.L3040	@
.L3094:
	movw	r3, #:lower16:11164284	@ tmp502,
	movt	r3, #:upper16:11164284	@ tmp502,
	movw	ip, #:lower16:2790658	@ tmp499,
	movt	ip, #:upper16:2790658	@ tmp499,
	ldr	lr, [r4, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r0, #:lower16:11162644	@ tmp507,
	movt	r0, #:upper16:11162644	@ tmp507,
	add	r2, lr, ip	@ tmp499, <variable>.CurrSlice.voidx, tmp499
	add	r1, r4, r2, asl #2	@, tmp505, pMvcCtx, tmp499,
	str	r5, [r1, #4]	@ prephitmp.7698, <variable>.CurrSlice.prev_frame_num
	ldr	r5, [r4, r0]	@ prephitmp.7698, <variable>.CurrSlice.frame_num
	b	.L3030	@
.L3095:
	movw	ip, #:lower16:11162656	@ tmp600,
	movt	ip, #:upper16:11162656	@ tmp600,
	ldrb	r0, [r5, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movw	r3, #:lower16:11196177	@ tmp598,
	ldr	r9, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movt	r3, #:upper16:11196177	@ tmp598,
	subs	r1, r0, #0	@ prephitmp.7704, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.7704
	cmp	r9, #0	@ <variable>.CurrSlice.nal_ref_idc,
	strb	r1, [r4, r3]	@ prephitmp.7704, <variable>.CurrPic.MbaffFrameFlag
	beq	.L3036	@,
	b	.L3098	@
.L3096:
	movw	r2, #:lower16:11164280	@ tmp621,
	movw	r0, #:lower16:11164288	@ tmp624,
	movt	r2, #:upper16:11164280	@ tmp621,
	movt	r0, #:upper16:11164288	@ tmp624,
	movw	r8, #:lower16:11164292	@ tmp627,
	movt	r8, #:upper16:11164292	@ tmp627,
	ldr	lr, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r7, #:lower16:11196740	@ tmp623,
	ldr	r6, [r4, r0]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r7, #:upper16:11196740	@ tmp623,
	ldr	fp, [r4, r8]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	sl, #:lower16:11196744	@ tmp626,
	movt	sl, #:upper16:11196744	@ tmp626,
	str	lr, [r4, r3]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	str	r6, [r4, r7]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrPic.anchor_pic_flag
	str	fp, [r4, sl]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrPic.inter_view_flag
	b	.L3037	@
.L3090:
	ldrb	ip, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	ip, #0	@ <variable>.is_refreshed,
	bne	.L3005	@,
	movw	r5, #:lower16:11164272	@ tmp377,
	movt	r5, #:upper16:11164272	@ tmp377,
	ldr	r0, [r4, r5]	@ prephitmp.7696, <variable>.CurrSlice.svc_extension_flag
	cmn	r0, #1	@ prephitmp.7696,
	bne	.L3007	@,
.L3091:
	movw	r8, #:lower16:11164284	@ tmp378,
	movt	r8, #:upper16:11164284	@ tmp378,
	mov	r0, #0	@ tmp379,
	str	r0, [r4, r8]	@ tmp379, <variable>.CurrSlice.voidx
	b	.L3008	@
.L3087:
	ldrb	lr, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	lr, #0	@ <variable>.is_refreshed,
	beq	.L2991	@,
	b	.L2990	@
.L3085:
	movw	r0, #:lower16:11152048	@ tmp233,
	movt	r0, #:upper16:11152048	@ tmp233,
	mov	lr, #1	@ tmp234,
	movw	r1, #:lower16:10814500	@ tmp235,
	str	lr, [r4, r0]	@ tmp234, <variable>.Init_Subsps_Flag
	movt	r1, #:upper16:10814500	@ tmp235,
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #:lower16:11155240	@ tmp237,
	movt	ip, #:upper16:11155240	@ tmp237,
	movw	r0, #3992	@ tmp240,
	movw	r2, #:lower16:11155992	@ tmp242,
	movt	r2, #:upper16:11155992	@ tmp242,
	str	r3, [r4, r1]	@ <variable>.seq_parameter_set_id, <variable>.CurrSPSID
	ldr	lr, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, r2]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mla	r3, r0, r3, lr	@ pSPS, tmp240, <variable>.seq_parameter_set_id, <variable>.SPS
	ldr	r2, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	ip, r2	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.seq_parameter_set_id
	beq	.L3099	@,
.L2983:
	movw	lr, #:lower16:11199480	@ tmp246,
	movt	lr, #:upper16:11199480	@ tmp246,
	movw	r1, #:lower16:11155248	@,
	movt	r1, #:upper16:11155248	@,
	ldr	ip, [r4, lr]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r0, r4, r1	@, pMvcCtx,
	mov	r1, r3	@, pSPS
	add	r2, ip, #1	@ tmp249, <variable>.SeqCnt,
	mov	ip, #0	@ tmp250,
	str	r2, [r4, lr]	@ tmp249, <variable>.SeqCnt
	movw	r2, #3992	@,
	strb	ip, [r3, #26]	@ tmp250, <variable>.is_refreshed
	bl	memmove	@
.L2984:
	movw	ip, #:lower16:11164276	@ tmp257,
	movt	ip, #:upper16:11164276	@ tmp257,
	movw	r0, #:lower16:11152036	@ tmp254,
	movt	r0, #:upper16:11152036	@ tmp254,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movw	lr, #:lower16:11155248	@ tmp256,
	movt	lr, #:upper16:11155248	@ tmp256,
	cmp	r2, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	add	r3, r4, lr	@ tmp256, pMvcCtx, tmp256
	str	r3, [r4, r0]	@ tmp256, <variable>.pCurrSPS
	bne	.L2985	@,
	movw	r3, #:lower16:11155200	@ tmp259,
	movw	r0, #:lower16:11164272	@ tmp261,
	movt	r3, #:upper16:11155200	@ tmp259,
	movt	r0, #:upper16:11164272	@ tmp261,
	mov	r1, #1	@ tmp260,
	str	r1, [r4, r3]	@ tmp260, <variable>.OutFRMBuffer.num_views
	ldr	r3, [r4, r0]	@ prephitmp.7799, <variable>.CurrSlice.svc_extension_flag
	b	.L2982	@
.L3092:
	movw	r1, #:lower16:11164284	@ tmp395,
	movt	r1, #:upper16:11164284	@ tmp395,
	movw	r0, #:lower16:2790658	@ tmp392,
	movw	r5, #:lower16:11162644	@ tmp400,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r0, #:upper16:2790658	@ tmp392,
	movt	r5, #:upper16:11162644	@ tmp400,
	add	ip, r3, r0	@ tmp392, <variable>.CurrSlice.voidx, tmp392
	ldr	r2, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	lr, r4, ip, asl #2	@, tmp398, pMvcCtx, tmp392,
	str	r2, [lr, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
	b	.L3013	@
.L3001:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L3002	@,
.L3074:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.39997,
	b	.L2989	@
.L2985:
	movw	ip, #:lower16:11164272	@ tmp264,
	movw	r2, #:lower16:11155200	@ tmp262,
	movt	ip, #:upper16:11164272	@ tmp264,
	movt	r2, #:upper16:11155200	@ tmp262,
	mov	lr, #2	@ tmp263,
	ldr	r3, [r4, ip]	@ prephitmp.7799, <variable>.CurrSlice.svc_extension_flag
	str	lr, [r4, r2]	@ tmp263, <variable>.OutFRMBuffer.num_views
	b	.L2982	@
.L3099:
	ldrb	r2, [r3, #26]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r2, #0	@ <variable>.is_refreshed,
	beq	.L2984	@,
	b	.L2983	@
.L3089:
	movw	r8, #:lower16:11159200	@ tmp352,
	movt	r8, #:upper16:11159200	@ tmp352,
	movw	r3, #:lower16:11155268	@ tmp356,
	movt	r3, #:upper16:11155268	@ tmp356,
	ldr	r7, [r4, r8]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	r0, #:lower16:11159196	@ tmp349,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movt	r0, #:upper16:11159196	@ tmp349,
	add	r1, r7, #1	@ tmp353, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	movw	r3, #:lower16:11159220	@ tmp346,
	rsb	r8, r2, #2	@ tmp358, <variable>.CurrSPS.frame_mbs_only_flag,
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	mov	lr, r1, asl #4	@ tmp355, tmp353,
	movt	r3, #:upper16:11159220	@ tmp346,
	add	r7, ip, #1	@ tmp350, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	movw	r0, #:lower16:11198000	@ tmp348,
	mul	r8, r8, lr	@ ImageHeight.7783, tmp358, tmp355
	ldr	r2, [r4, r3]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movt	r0, #:upper16:11198000	@ tmp348,
	mov	r7, r7, asl #4	@ ImageWidth.7775, tmp350,
	movw	r1, #:lower16:11197996	@,
	movt	r1, #:upper16:11197996	@,
	mov	ip, r2, asl #1	@ D.40037, <variable>.CurrSPS.dpb_size_plus1,
	add	r3, r4, r1	@, pMvcCtx,
	str	ip, [r4, r0]	@ D.40037, <variable>.TotalPmvNum
	mov	r1, r7	@, ImageWidth.7775
	mov	r0, r4	@, pMvcCtx
	mov	r2, r8	@, ImageHeight.7783
	str	ip, [sp, #0]	@ D.40037,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	bne	.L3100	@,
	movw	lr, #:lower16:11159264	@ tmp369,
	movt	lr, #:upper16:11159264	@ tmp369,
	movw	r2, #13560	@ tmp365,
	movw	r1, #13564	@ tmp367,
	mov	r0, r8, lsr #4	@ tmp368, ImageHeight.7783,
	mov	r7, r7, lsr #4	@ tmp366, ImageWidth.7775,
	str	r0, [r4, r1]	@ tmp368, <variable>.CurHeightInMb
	str	r7, [r4, r2]	@ tmp366, <variable>.CurWidthInMb
	ldr	r3, [r4, lr]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	ldr	r8, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmp	r3, r8	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	bne	.L3005	@,
	b	.L3090	@
.L3084:
	movw	lr, #:lower16:11199520	@ tmp217,
	movt	lr, #:upper16:11199520	@ tmp217,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r3, #1]	@ <variable>.is_used, <variable>.is_used
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r2, #4]	@ <variable>.is_used, <variable>.is_in_dpb
	b	.L2981	@
.L3088:
	movw	r3, #:lower16:11199480	@ tmp307,
	movt	r3, #:upper16:11199480	@ tmp307,
	cmp	r7, #0	@ D.39962,
	ldr	r2, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	ip, r2, #1	@ tmp310, <variable>.SeqCnt,
	str	ip, [r4, r3]	@ tmp310, <variable>.SeqCnt
	bne	.L3101	@,
.L2994:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	bne	.L3074	@,
	movw	r1, #:lower16:11159200	@ tmp314,
	movt	r1, #:upper16:11159200	@ tmp314,
	movw	r2, #:lower16:11159196	@ tmp311,
	movw	r3, #:lower16:11155268	@ tmp318,
	ldr	r6, [r4, r1]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movt	r2, #:upper16:11159196	@ tmp311,
	movt	r3, #:upper16:11155268	@ tmp318,
	cmp	r7, #0	@ D.39962,
	add	lr, r6, #1	@ tmp315, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	ldr	ip, [r4, r2]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	add	r7, ip, #1	@ tmp312, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	r1, lr, asl #4	@ tmp317, tmp315,
	rsb	r6, r0, #2	@ tmp320, <variable>.CurrSPS.frame_mbs_only_flag,
	mov	r7, r7, asl #4	@ ImageWidth, tmp312,
	mul	r6, r6, r1	@ ImageHeight, tmp320, tmp317
	beq	.L2996	@,
	movw	lr, #13560	@ tmp321,
	ldr	r0, [r4, lr]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	cmp	r0, #0	@ <variable>.CurWidthInMb,
	bne	.L2996	@,
	movw	r2, #:lower16:11159220	@ tmp323,
	movt	r2, #:upper16:11159220	@ tmp323,
	ldr	r3, [r4, #0]	@ temp.7767, <variable>.pstExtraData
	movw	r0, #:lower16:11198000	@ tmp325,
	ldr	ip, [r4, r2]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movt	r0, #:upper16:11198000	@ tmp325,
	mov	ip, ip, asl #1	@ prephitmp.7717, <variable>.CurrSPS.dpb_size_plus1,
	str	ip, [r4, r0]	@ prephitmp.7717, <variable>.TotalPmvNum
	ldr	r1, [r3, #568]	@ prephitmp.7713, <variable>.stChanOption.s32MaxWidth
	cmp	r7, r1	@ ImageWidth, prephitmp.7713
	bhi	.L3074	@,
	ldr	r2, [r3, #572]	@ prephitmp.7885, <variable>.stChanOption.s32MaxHeight
	cmp	r6, r2	@ ImageHeight, prephitmp.7885
	bhi	.L3074	@,
	movw	lr, #:lower16:11168612	@ tmp326,
	movt	lr, #:upper16:11168612	@ tmp326,
	ldr	r8, [r3, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	lr, [r4, lr]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r8, lr	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.DPB.size
	bcc	.L3074	@,
	ldr	lr, [r3, #596]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	cmp	lr, #0	@ <variable>.stChanOption.s32SupportBFrame,
	moveq	ip, #1	@ tmp331,
	streq	ip, [r4, r0]	@ tmp331, <variable>.TotalPmvNum
	ldreq	r2, [r3, #572]	@ prephitmp.7885, <variable>.stChanOption.s32MaxHeight
	mov	r0, r4	@, pMvcCtx
	ldreq	r1, [r3, #568]	@ prephitmp.7713, <variable>.stChanOption.s32MaxWidth
	movw	r3, #:lower16:11197996	@,
	movt	r3, #:upper16:11197996	@,
	str	ip, [sp, #0]	@ prephitmp.7717,
	add	r3, r4, r3	@, pMvcCtx,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	beq	.L2996	@,
	movw	r0, #13560	@ tmp334,
	add	r1, r0, #4	@ tmp336, tmp336,
	mov	r5, #0	@ tmp335,
	str	r5, [r4, r0]	@ tmp335, <variable>.CurWidthInMb
	str	r5, [r4, r1]	@ tmp335, <variable>.CurHeightInMb
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp335
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39997,
	b	.L2989	@
.L3086:
	str	r3, [r4, r2]	@ prephitmp.7799, <variable>.Init_Subsps_Flag
	movw	r6, #:lower16:10814508	@ tmp269,
	ldr	lr, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	add	r2, r4, #13568	@ tmp271, pMvcCtx,
	movt	r6, #:upper16:10814508	@ tmp269,
	add	ip, r2, #32	@ tmp271, tmp271,
	add	r6, r4, r6	@ tmp269, pMvcCtx, tmp269
	movw	r2, #:lower16:337528	@ tmp274,
	movt	r2, #:upper16:337528	@ tmp274,
	mov	r0, r6	@, tmp269
	mla	r1, lr, r2, ip	@, <variable>.seq_parameter_set_id, tmp274, tmp271
	bl	memmove	@
	movw	r0, #:lower16:10815252	@ tmp282,
	movt	r0, #:upper16:10815252	@ tmp282,
	movw	r3, #:lower16:10818504	@ tmp285,
	movt	r3, #:upper16:10818504	@ tmp285,
	movw	r1, #:lower16:11152036	@ tmp278,
	ldr	ip, [r4, r0]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPS.sps.seq_parameter_set_id
	movt	r1, #:upper16:11152036	@ tmp278,
	ldr	r0, [r4, r3]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	movw	r2, #:lower16:10814504	@ tmp281,
	movw	r3, #:lower16:11155200	@ tmp284,
	movt	r2, #:upper16:10814504	@ tmp281,
	movt	r3, #:upper16:11155200	@ tmp284,
	str	r6, [r4, r1]	@ tmp269, <variable>.pCurrSPS
	str	ip, [r4, r2]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPSID
	add	r1, r0, #1	@ tmp287, <variable>.CurrSUBSPS.num_views_minus1,
	str	r1, [r4, r3]	@ tmp287, <variable>.OutFRMBuffer.num_views
	b	.L2986	@
.L2996:
	movw	ip, #13560	@ tmp338,
	movw	r8, #13564	@ tmp340,
	mov	r7, r7, lsr #4	@ tmp339, ImageWidth,
	mov	r6, r6, lsr #4	@ tmp341, ImageHeight,
	str	r7, [r4, ip]	@ tmp339, <variable>.CurWidthInMb
	str	r6, [r4, r8]	@ tmp341, <variable>.CurHeightInMb
	b	.L2992	@
.L3019:
	movw	r0, #:lower16:11159220	@ tmp450,
	movt	r0, #:upper16:11159220	@ tmp450,
	rsb	lr, r3, r2	@ tmp451, D.40104, temp.7801
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	add	r0, lr, r8	@ tmp452, tmp451, MaxFrameNum
	cmp	ip, r0	@ <variable>.CurrSPS.dpb_size_plus1, tmp452
	bcs	.L3017	@,
	b	.L3082	@
.L3101:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L2994	@,
	b	.L3074	@
.L3009:
	mov	r3, #0	@ i.611,
	b	.L3011	@
.L3093:
	ldr	r2, [r3, #536]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	r2, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L3018	@,
	ldr	r1, [r3, #544]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r1, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L3018	@,
	ldr	lr, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, lr, #1024	@ tmp429, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp429,
	bhi	.L3017	@,
	b	.L3018	@
.L3100:
	movw	ip, #13560	@ tmp361,
	movw	lr, #13564	@ tmp363,
	str	r6, [r4, ip]	@ ret.7771, <variable>.CurWidthInMb
	str	r6, [r4, lr]	@ ret.7771, <variable>.CurHeightInMb
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, ret.7771
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.39997,
	b	.L2989	@
	.fnend
	.size	MVC_InitPic, .-MVC_InitPic
	.align	2
	.global	mvc_se_v
	.type	mvc_se_v, %function
mvc_se_v:
	.fnstart
.LFB1612:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	add	r4, r0, #13504	@ D.35469, pMvcCtx,
	add	r4, r4, #24	@ D.35469, D.35469,
	mov	r1, #32	@,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r0, r4	@, D.35469
	bl	BsShow	@
	mov	r7, r0	@ D.35470,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r6, r0	@ zeros,
	bhi	.L3103	@,
	mov	r6, r0, asl #1	@ tmp148, zeros,
	mov	r0, r4	@, D.35469
	add	r6, r6, #1	@ NumBits, tmp148,
	rsb	r3, r6, #32	@ tmp149, NumBits,
	mov	r7, r7, lsr r3	@ D.35477, D.35470,
	mov	r1, r6	@, NumBits
	tst	r7, #1	@ D.35477,
	mov	r7, r7, lsr #1	@ tmp, D.35477,
	rsbne	r7, r7, #0	@ INFO, tmp
	bl	BsSkip	@
.L3106:
	ldr	ip, [r5, #368]	@ D.35501, <variable>.pCurrNal
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r6, lr, r6	@ tmp156, <variable>.nal_bitoffset, NumBits
	str	r6, [ip, #60]	@ tmp156, <variable>.nal_bitoffset
	bl	vfmw_dprint_nothing	@
	mov	r0, r7	@, INFO
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
.L3103:
	cmp	r0, #31	@ zeros,
	bls	.L3110	@,
	movw	r1, #:lower16:11199460	@ tmp153,
	movt	r1, #:upper16:11199460	@ tmp153,
	mov	r2, #1	@ tmp154,
	mvn	r7, #-2147483648	@ INFO,
	mov	r6, #32	@ NumBits,
	str	r2, [r5, r1]	@ tmp154, <variable>.SeErrFlg
	b	.L3106	@
.L3110:
	mov	r1, r6	@, zeros
	mov	r0, r4	@, D.35469
	bl	BsSkip	@
	mov	r1, r6	@, zeros
	mov	r0, r4	@, D.35469
	bl	BsGet	@
	mov	r1, #1	@,
	mov	r7, r0	@ INFO,
	mov	r0, r4	@, D.35469
	bl	BsGet	@
	tst	r0, #1	@,
	mov	r0, r6, asl #1	@ tmp152, zeros,
	rsbne	r7, r7, #0	@ INFO, INFO
	add	r6, r0, #1	@ NumBits, tmp152,
	b	.L3106	@
	.fnend
	.size	mvc_se_v, .-mvc_se_v
	.align	2
	.global	MVC_Scaling_List
	.type	MVC_Scaling_List, %function
MVC_Scaling_List:
	.fnstart
.LFB1731:
	@ args = 4, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	subs	r4, r3, #0	@ sizeOfScalingList, sizeOfScalingList
	.pad #20
	sub	sp, sp, #20	@,,
	mov	r5, r1	@ scalingList_Org, scalingList_Org
	mov	r7, r2	@ scalingList, scalingList
	str	r0, [sp, #8]	@ pMvcCtx, %sfp
	ble	.L3118	@,
	movw	r2, #:lower16:.LANCHOR0	@,
	movt	r2, #:upper16:.LANCHOR0	@,
	cmp	r4, #16	@ sizeOfScalingList,
	add	fp, r2, #16	@ tmp174,,
	sub	r0, r4, #1	@ tmp178, sizeOfScalingList,
	str	r2, [sp, #4]	@, %sfp
	and	r3, r0, #1	@, tmp178,
	mov	r9, #255	@ tmp177,
	str	r3, [sp, #12]	@, %sfp
	ldrneb	r6, [fp, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	beq	.L3145	@,
.L3133:
	ldr	r0, [sp, #8]	@, %sfp
	movw	r1, #:lower16:.LC3	@,
	movt	r1, #:upper16:.LC3	@,
	bl	mvc_se_v	@
	ldr	ip, [sp, #56]	@, UseDefaultScalingMatrix
	add	r0, r0, #264	@ tmp193,,
	mov	r2, r0, asr #31	@ tmp194, tmp193,
	mov	r1, r2, lsr #24	@ tmp195, tmp194,
	and	r2, r6, #252	@ tmp202, scanj,
	add	sl, r0, r1	@ tmp196, tmp193, tmp195
	add	r2, r7, r2	@ D.41789, scalingList, tmp202
	and	r3, sl, #255	@ tmp197, tmp196,
	and	sl, r6, #3	@ tmp204, scanj,
	cmp	r3, r1	@ tmp197, tmp195
	cmpeq	r6, #0	@, scanj,
	movne	r0, #0	@, tmp200
	moveq	r0, #1	@, tmp200
	subs	r3, r3, r1	@ nextScale, tmp197, tmp195
	str	r0, [ip, #0]	@ tmp200,
	mov	r0, sl, asl #3	@ D.41791, tmp204,
	moveq	r8, #8	@ tmpscale,
	movne	r8, r3	@ tmpscale, nextScale
	str	r8, [r5, r6, asl #2]	@ tmpscale,* scalingList_Org
	and	ip, r8, #255	@ tmp206, tmpscale,
	ldr	r1, [r2, #0]	@ tmp211,* D.41789
	mov	r6, #1	@ j,
	cmp	r4, r6	@ sizeOfScalingList, j
	mov	sl, r8	@ lastScale, tmpscale
	bic	r1, r1, r9, asl r0	@ tmp212, tmp211, tmp177,
	orr	r1, r1, ip, asl r0	@, tmp213, tmp212, tmp206,
	str	r1, [r2, #0]	@ tmp213,* D.41789
	ble	.L3118	@,
	ldr	r2, [sp, #12]	@, %sfp
	cmp	r2, #0	@,
	beq	.L3144	@,
	cmp	r4, #16	@ sizeOfScalingList,
	ldreq	r2, [sp, #4]	@, %sfp
	ldrneb	sl, [fp, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	ldreqb	sl, [r2, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	cmp	r3, #0	@ nextScale,
	bne	.L3138	@,
.L3124:
	mov	r3, #0	@ nextScale,
.L3139:
	and	r2, sl, #252	@ tmp228, scanj,
	and	r1, sl, #3	@ tmp230, scanj,
	add	r2, r7, r2	@ D.41789, scalingList, tmp228
	str	r8, [r5, sl, asl #2]	@ tmpscale,* scalingList_Org
	mov	r1, r1, asl #3	@ D.41791, tmp230,
	add	r6, r6, #1	@ j, j,
	ldr	lr, [r2, #0]	@ tmp237,* D.41789
	and	ip, r8, #255	@ tmp232, tmpscale,
	cmp	r4, r6	@ sizeOfScalingList, j
	mov	sl, r8	@ lastScale, tmpscale
	bic	r0, lr, r9, asl r1	@ tmp238, tmp237, tmp177,
	orr	lr, r0, ip, asl r1	@, tmp239, tmp238, tmp232,
	str	lr, [r2, #0]	@ tmp239,* D.41789
	ble	.L3118	@,
.L3144:
	mov	r8, r5	@ scalingList_Org, scalingList_Org
.L3117:
	cmp	r4, #16	@ sizeOfScalingList,
	ldreq	r2, [sp, #4]	@, %sfp
	ldrneb	r5, [fp, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	ldreqb	r5, [r2, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	cmp	r3, #0	@ nextScale,
	bne	.L3146	@,
.L3115:
	mov	r3, #0	@ nextScale,
.L3116:
	and	ip, r5, #3	@ tmp164, scanj,
	mov	lr, r5, lsr #2	@ tmp162, scanj,
	str	sl, [r8, r5, asl #2]	@ tmpscale,* scalingList_Org
	cmp	r4, #16	@ sizeOfScalingList,
	ldr	r2, [r7, lr, asl #2]	@ tmp171,* scalingList
	mov	r1, ip, asl #3	@ D.41791, tmp164,
	and	r0, sl, #255	@ tmp165, tmpscale,
	add	r6, r6, #1	@ tmp181, j,
	bic	ip, r2, r9, asl r1	@ tmp170, tmp171, tmp177,
	orr	r2, ip, r0, asl r1	@, tmp172, tmp170, tmp165,
	ldrneb	r5, [fp, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	str	r2, [r7, lr, asl #2]	@ tmp172,* scalingList
	beq	.L3147	@,
.L3140:
	cmp	r3, #0	@ nextScale,
	bne	.L3141	@,
.L3128:
	mov	r3, #0	@ nextScale,
.L3142:
	mov	r2, r5, lsr #2	@ tmp253, scanj,
	and	r1, r5, #3	@ tmp256, scanj,
	str	sl, [r8, r5, asl #2]	@ tmpscale,* scalingList_Org
	add	r6, r6, #1	@ j, tmp181,
	ldr	lr, [r7, r2, asl #2]	@ tmp263,* scalingList
	mov	r1, r1, asl #3	@ D.41791, tmp256,
	and	ip, sl, #255	@ tmp258, tmpscale,
	cmp	r4, r6	@ sizeOfScalingList, j
	bic	r0, lr, r9, asl r1	@ tmp264, tmp263, tmp177,
	orr	lr, r0, ip, asl r1	@, tmp265, tmp264, tmp258,
	str	lr, [r7, r2, asl #2]	@ tmp265,* scalingList
	bgt	.L3117	@,
.L3118:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3141:
	ldr	r0, [sp, #8]	@, %sfp
	movw	r1, #:lower16:.LC3	@,
	movt	r1, #:upper16:.LC3	@,
	bl	mvc_se_v	@
	add	r3, sl, #256	@ tmp244, tmpscale,
	add	ip, r3, r0	@ tmp245, tmp244,
	mov	r1, ip, asr #31	@ tmp246, tmp245,
	mov	r2, r1, lsr #24	@ tmp247, tmp246,
	ldr	r1, [sp, #56]	@, UseDefaultScalingMatrix
	add	r0, ip, r2	@ tmp248, tmp245, tmp247
	and	r3, r0, #255	@ tmp249, tmp248,
	cmp	r3, r2	@ tmp249, tmp247
	cmpeq	r5, #0	@, scanj,
	movne	ip, #0	@, tmp252
	moveq	ip, #1	@, tmp252
	subs	r3, r3, r2	@ nextScale, tmp249, tmp247
	str	ip, [r1, #0]	@ tmp252,
	beq	.L3128	@,
	mov	sl, r3	@ tmpscale, nextScale
	b	.L3142	@
.L3146:
	ldr	r0, [sp, #8]	@, %sfp
	movw	r1, #:lower16:.LC3	@,
	movt	r1, #:upper16:.LC3	@,
	bl	mvc_se_v	@
	add	r3, sl, #256	@ tmp150, lastScale,
	add	r1, r3, r0	@ tmp151, tmp150,
	mov	ip, r1, asr #31	@ tmp152, tmp151,
	mov	r2, ip, lsr #24	@ tmp153, tmp152,
	ldr	ip, [sp, #56]	@, UseDefaultScalingMatrix
	add	r0, r1, r2	@ tmp154, tmp151, tmp153
	and	r3, r0, #255	@ tmp155, tmp154,
	cmp	r3, r2	@ tmp155, tmp153
	cmpeq	r5, #0	@, scanj,
	movne	r1, #0	@, tmp161
	moveq	r1, #1	@, tmp161
	subs	r3, r3, r2	@ nextScale, tmp155, tmp153
	str	r1, [ip, #0]	@ tmp161,
	movne	sl, r3	@ tmpscale, nextScale
	bne	.L3116	@,
	b	.L3115	@
.L3147:
	ldr	r0, [sp, #4]	@, %sfp
	ldrb	r5, [r0, r6]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3140	@
.L3138:
	ldr	r0, [sp, #8]	@, %sfp
	movw	r1, #:lower16:.LC3	@,
	movt	r1, #:upper16:.LC3	@,
	bl	mvc_se_v	@
	add	r3, r8, #256	@ tmp218, tmpscale,
	add	r1, r3, r0	@ tmp219, tmp218,
	mov	r2, r1, asr #31	@ tmp220, tmp219,
	mov	r0, r2, lsr #24	@ tmp221, tmp220,
	add	ip, r1, r0	@ tmp222, tmp219, tmp221
	ldr	r1, [sp, #56]	@, UseDefaultScalingMatrix
	and	r3, ip, #255	@ tmp223, tmp222,
	cmp	r3, r0	@ tmp223, tmp221
	cmpeq	sl, #0	@, scanj,
	movne	ip, #0	@, tmp226
	moveq	ip, #1	@, tmp226
	subs	r3, r3, r0	@ nextScale, tmp223, tmp221
	str	ip, [r1, #0]	@ tmp226,
	beq	.L3124	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L3139	@
.L3145:
	ldr	sl, [sp, #4]	@, %sfp
	ldrb	r6, [sl, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3133	@
	.fnend
	.size	MVC_Scaling_List, .-MVC_Scaling_List
	.align	2
	.global	mvc_ue_v
	.type	mvc_ue_v, %function
mvc_ue_v:
	.fnstart
.LFB1611:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, lr}	@,
	.save {r3, r4, r5, r6, r7, lr}
	add	r4, r0, #13504	@ D.35436, pMvcCtx,
	add	r4, r4, #24	@ D.35436, D.35436,
	mov	r1, #32	@,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r0, r4	@, D.35436
	bl	BsShow	@
	mov	r7, r0	@ D.35437,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r6, r0	@ zeros,
	bls	.L3153	@,
	cmp	r0, #31	@ zeros,
	bls	.L3154	@,
	movw	r1, #:lower16:11199460	@ tmp150,
	movt	r1, #:upper16:11199460	@ tmp150,
	mov	r6, #32	@ NumBits,
	mvn	r7, #0	@ INFO,
	mov	r2, #1	@ tmp151,
	str	r2, [r5, r1]	@ tmp151, <variable>.SeErrFlg
.L3150:
	ldr	ip, [r5, #368]	@ D.35455, <variable>.pCurrNal
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r6, lr, r6	@ tmp153, <variable>.nal_bitoffset, NumBits
	str	r6, [ip, #60]	@ tmp153, <variable>.nal_bitoffset
	bl	vfmw_dprint_nothing	@
	mov	r0, r7	@, INFO
	ldmfd	sp!, {r3, r4, r5, r6, r7, pc}	@
.L3153:
	mov	r6, r0, asl #1	@ tmp146, zeros,
	mov	r0, r4	@, D.35436
	add	r6, r6, #1	@ NumBits, tmp146,
	rsb	r3, r6, #32	@ tmp147, NumBits,
	mov	r7, r7, lsr r3	@ tmp148, D.35437,
	mov	r1, r6	@, NumBits
	sub	r7, r7, #1	@ INFO, tmp148,
	bl	BsSkip	@
	b	.L3150	@
.L3154:
	add	r7, r0, #1	@ D.35451, zeros,
	mov	r1, r0	@, zeros
	mov	r0, r4	@, D.35436
	bl	BsSkip	@
	mov	r1, r7	@, D.35451
	mov	r0, r4	@, D.35436
	bl	BsShow	@
	mov	r1, r7	@, D.35451
	sub	r7, r0, #1	@ INFO,,
	mov	r0, r4	@, D.35436
	bl	BsSkip	@
	mov	r0, r6, asl #1	@ tmp149, zeros,
	add	r6, r0, #1	@ NumBits, tmp149,
	b	.L3150	@
	.fnend
	.size	mvc_ue_v, .-mvc_ue_v
	.align	2
	.global	MVC_DecFramePackingSEI
	.type	MVC_DecFramePackingSEI, %function
MVC_DecFramePackingSEI:
	.fnstart
.LFB1747:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	movw	r1, #:lower16:.LC4	@,
	movt	r1, #:upper16:.LC4	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11168396	@ tmp156,
	movt	ip, #:upper16:11168396	@ tmp156,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC5	@,
	movt	r2, #:upper16:.LC5	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168373	@ tmp158,
	movt	r3, #:upper16:11168373	@ tmp158,
	uxtb	r0, r0	@ D.43305,
	strb	r0, [r4, r3]	@ D.43305, <variable>.FramePackSEI.frame_packing_arrangement_cancel_flag
	cmp	r0, #0	@ D.43305,
	beq	.L3159	@,
.L3156:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC21	@,
	movt	r2, #:upper16:.LC21	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168374	@ tmp206,
	movw	r2, #:lower16:11168372	@ tmp208,
	movt	r3, #:upper16:11168374	@ tmp206,
	movt	r2, #:upper16:11168372	@ tmp208,
	mov	r1, #1	@ tmp209,
	strb	r1, [r4, r2]	@ tmp209, <variable>.FramePackSEI.frame_packing_dec_ok
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_extension_flag
	mov	r0, #0	@,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L3159:
	mov	r1, #7	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC6	@,
	movt	r2, #:upper16:.LC6	@,
	bl	mvc_u_v	@
	movw	r6, #:lower16:11168388	@ tmp161,
	movt	r6, #:upper16:11168388	@ tmp161,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC7	@,
	movt	r2, #:upper16:.LC7	@,
	movw	r5, #:lower16:11168375	@ tmp163,
	movt	r5, #:upper16:11168375	@ tmp163,
	str	r0, [r4, r6]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC8	@,
	movt	r2, #:upper16:.LC8	@,
	strb	r0, [r4, r5]	@, <variable>.FramePackSEI.quincunx_sampling_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168392	@ tmp166,
	movt	ip, #:upper16:11168392	@ tmp166,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC9	@,
	movt	r2, #:upper16:.LC9	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.content_interpretation_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168376	@ tmp168,
	movt	r3, #:upper16:11168376	@ tmp168,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC10	@,
	movt	r2, #:upper16:.LC10	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.spatial_flipping_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168377	@ tmp171,
	movt	ip, #:upper16:11168377	@ tmp171,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC11	@,
	movt	r2, #:upper16:.LC11	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_flipped_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168378	@ tmp174,
	movt	r3, #:upper16:11168378	@ tmp174,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC12	@,
	movt	r2, #:upper16:.LC12	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.field_views_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168379	@ tmp177,
	movt	ip, #:upper16:11168379	@ tmp177,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC13	@,
	movt	r2, #:upper16:.LC13	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.current_frame_is_frame0_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168380	@ tmp180,
	movt	r3, #:upper16:11168380	@ tmp180,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC14	@,
	movt	r2, #:upper16:.LC14	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_self_contained_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldrsb	r2, [r4, r5]	@ <variable>.FramePackSEI.quincunx_sampling_flag, <variable>.FramePackSEI.quincunx_sampling_flag
	movw	r1, #:lower16:11168381	@ tmp183,
	movt	r1, #:upper16:11168381	@ tmp183,
	cmp	r2, #0	@ <variable>.FramePackSEI.quincunx_sampling_flag,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_self_contained_flag
	bne	.L3157	@,
	ldr	lr, [r4, r6]	@ <variable>.FramePackSEI.frame_packing_arrangement_type, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	lr, #5	@ <variable>.FramePackSEI.frame_packing_arrangement_type,
	beq	.L3157	@,
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC15	@,
	movt	r2, #:upper16:.LC15	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168382	@ tmp190,
	movt	r3, #:upper16:11168382	@ tmp190,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC16	@,
	movt	r2, #:upper16:.LC16	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168383	@ tmp193,
	movt	ip, #:upper16:11168383	@ tmp193,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC17	@,
	movt	r2, #:upper16:.LC17	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_grid_position_y
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168384	@ tmp196,
	movt	r3, #:upper16:11168384	@ tmp196,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC18	@,
	movt	r2, #:upper16:.LC18	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame1_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:11168385	@ tmp199,
	movt	r1, #:upper16:11168385	@ tmp199,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_grid_position_y
.L3157:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC19	@,
	movt	r2, #:upper16:.LC19	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168400	@ tmp202,
	movt	ip, #:upper16:11168400	@ tmp202,
	movw	r1, #:lower16:.LC20	@,
	movt	r1, #:upper16:.LC20	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_reserved_byte
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r2, #:lower16:11168404	@ tmp204,
	movt	r2, #:upper16:11168404	@ tmp204,
	str	r0, [r4, r2]	@, <variable>.FramePackSEI.frame_packing_arrangement_repetition_period
	b	.L3156	@
	.fnend
	.size	MVC_DecFramePackingSEI, .-MVC_DecFramePackingSEI
	.align	2
	.global	MVC_DecSEI
	.type	MVC_DecSEI, %function
MVC_DecSEI:
	.fnstart
.LFB1749:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	add	r8, r0, #13504	@ D.43544, pMvcCtx,
	ldr	r2, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	.pad #52
	sub	sp, sp, #52	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	sl, sp, #48	@ tmp770,,
	mov	r0, #0	@ tmp219,
	add	r8, r8, #24	@ D.43544, D.43544,
	mov	r9, r0	@ payloadType, tmp219
	movw	r6, #13552	@ tmp861,
	movw	r5, #13544	@ tmp862,
	strb	r0, [sl, #-1]!	@ tmp219, byte_tmp
	mov	r3, #32	@ tmp222,
	str	r3, [r2, #20]	@ tmp222, <variable>.bitsoffset
.L3164:
	mov	r1, sl	@, tmp770
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r7, [r4, r6]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r5]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r7, #8	@ tmp226, <variable>.BS.TotalPos,
	ldrb	r7, [sp, #47]	@ zero_extendqisi2	@ byte_tmp.815, byte_tmp
	cmp	ip, r1, asl #3	@ tmp226, <variable>.BS.BsLen,
	mov	fp, r0	@ ret,
	ble	.L3533	@,
.L3532:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.43548,
.L3166:
	add	sp, sp, #52	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3533:
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	fp, #0	@ ret,
	add	r9, r9, r7	@ payloadType, payloadType, byte_tmp.815
	ble	.L3532	@,
	ldrb	fp, [sp, #47]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	fp, #255	@ byte_tmp,
	beq	.L3164	@,
	mov	r6, #0	@,
	movw	r5, #:lower16:11198024	@,
	str	r6, [sp, #32]	@, %sfp
	movt	r5, #:upper16:11198024	@,
	movw	r6, #13544	@ tmp853,
	str	r5, [sp, #20]	@, %sfp
	movw	r5, #13552	@ tmp852,
.L3276:
	mov	r7, #0	@ payloadSize,
.L3170:
	mov	r1, sl	@, tmp770
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldrb	r3, [sp, #47]	@ zero_extendqisi2	@ byte_tmp.8132, byte_tmp
	add	r2, r1, #8	@ tmp234, <variable>.BS.TotalPos,
	add	r7, r7, r3	@ payloadSize, payloadSize, byte_tmp.8132
	mov	fp, r0	@ ret.8131,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	cmp	r2, r0, asl #3	@ tmp234, <variable>.BS.BsLen,
	ble	.L3534	@,
.L3169:
	mov	r3, #1	@ prephitmp.8041,
.L3171:
	cmp	r7, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp244, prephitmp.8041
	cmp	r3, #0	@ tmp244,
	bne	.L3532	@,
	cmp	r9, #45	@ payloadType,
	ldrls	pc, [pc, r9, asl #2]	@ payloadType
	b	.L3173	@
.L3197:
	.word	.L3174
	.word	.L3175
	.word	.L3176
	.word	.L3177
	.word	.L3178
	.word	.L3179
	.word	.L3180
	.word	.L3181
	.word	.L3182
	.word	.L3183
	.word	.L3184
	.word	.L3185
	.word	.L3186
	.word	.L3187
	.word	.L3188
	.word	.L3189
	.word	.L3190
	.word	.L3191
	.word	.L3192
	.word	.L3193
	.word	.L3194
	.word	.L3195
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3173
	.word	.L3196
.L3534:
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	fp, #0	@ ret.8131,
	ble	.L3169	@,
	ldrb	lr, [sp, #47]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	lr, #255	@ byte_tmp,
	beq	.L3170	@,
	mov	r3, #0	@ prephitmp.8041,
	b	.L3171	@
.L3196:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	ldr	r9, [r4, r5]	@ bitpos.8313, <variable>.BS.TotalPos
	bl	MVC_DecFramePackingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8043, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ temp.8315, payloadSize,
	rsb	r9, r9, r3	@ bitpos.8314, bitpos.8313, prephitmp.8043
	cmp	r9, r2	@ bitpos.8314, temp.8315
	bge	.L3263	@,
	rsb	r1, r9, r2	@, bitpos.8314, temp.8315
	str	r1, [sp, #36]	@, %sfp
	cmp	r1, #0	@,
	add	lr, r1, #7	@ tmp725,,
	movge	lr, r1	@ temp.8417,
	mov	r2, lr, asr #3	@, temp.8417,
	str	r2, [sp, #24]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8323, <variable>.BS.BsLen,
	ble	.L3265	@,
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp731, prephitmp.8043,
	mov	r2, fp, asl #3	@ prephitmp.8323, <variable>.BS.BsLen,
	cmp	r0, r2	@ tmp731, prephitmp.8323
	bgt	.L3265	@,
	ldr	r2, [sp, #24]	@, %sfp
	mov	fp, #0	@ i.8318,
	tst	r2, #1	@,
	beq	.L3535	@,
.L3266:
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	bl	BsSkip	@
	ldr	r3, [sp, #24]	@, %sfp
	add	r9, fp, #1	@ tmp964, i.8318,
	mov	r0, r8	@, D.43544
	cmp	r9, r3	@ tmp964,
	add	fp, r9, #1	@ i.8318, tmp964,
	mov	r1, #8	@,
	bge	.L3472	@,
	ldr	r9, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8043, <variable>.BS.TotalPos
	mov	r2, r9, asl #3	@ prephitmp.8323, <variable>.BS.BsLen,
	add	ip, r3, #8	@ tmp735, prephitmp.8043,
	cmp	ip, r2	@ tmp735, prephitmp.8323
	bgt	.L3265	@,
	bl	BsSkip	@
.L3531:
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8043, <variable>.BS.TotalPos
	mov	r2, lr, asl #3	@ prephitmp.8323, <variable>.BS.BsLen,
	add	ip, r3, #8	@ tmp1296, prephitmp.8043,
	cmp	ip, r2	@ tmp1296, prephitmp.8323
	ble	.L3266	@,
.L3265:
	ldr	r9, [sp, #36]	@, %sfp
	mov	lr, r9, asr #31	@ tmp739,,
	mov	r1, lr, lsr #29	@ tmp740, tmp739,
	add	ip, r9, r1	@ tmp741,, tmp740
	and	fp, ip, #7	@ tmp742, tmp741,
	rsb	r1, r1, fp	@ tmp743, tmp740, tmp742
	add	r0, r3, r1	@ tmp744, prephitmp.8043, tmp743
	cmp	r0, r2	@ tmp744, prephitmp.8323
	ble	.L3536	@,
.L3263:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	b	.L3198	@
.L3195:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	fp, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, fp, #8	@ tmp711, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp711, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8312,
	bne	.L3261	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8312,
	cmp	r7, fp	@ payloadSize, i.8312
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1279, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1279, <variable>.BS.BsLen,
	ble	.L3261	@,
	b	.L3198	@
.L3262:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp717, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp717, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1285, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1285, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3261:
	add	r9, fp, #1	@ tmp960, i.8312,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8312, tmp960,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp960
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3262	@,
	b	.L3198	@
.L3194:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r3, #8	@ tmp699, <variable>.BS.TotalPos,
	cmp	fp, r0, asl #3	@ tmp699, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8305,
	bne	.L3259	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8305,
	cmp	r7, fp	@ payloadSize, i.8305
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1267, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1267, <variable>.BS.BsLen,
	ble	.L3259	@,
	b	.L3198	@
.L3260:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, lr, #8	@ tmp705, <variable>.BS.TotalPos,
	cmp	ip, r2, asl #3	@ tmp705, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1273, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1273, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3259:
	add	r9, fp, #1	@ tmp956, i.8305,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8305, tmp956,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp956
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3260	@,
	b	.L3198	@
.L3193:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r1, #8	@ tmp687, <variable>.BS.TotalPos,
	cmp	r3, fp, asl #3	@ tmp687, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8299,
	bne	.L3257	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8299,
	cmp	r7, fp	@ payloadSize, i.8299
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1255, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1255, <variable>.BS.BsLen,
	ble	.L3257	@,
	b	.L3198	@
.L3258:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, lr, #8	@ tmp693, <variable>.BS.TotalPos,
	cmp	ip, r2, asl #3	@ tmp693, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1261, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1261, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3257:
	add	r9, fp, #1	@ tmp952, i.8299,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8299, tmp952,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp952
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3258	@,
	b	.L3198	@
.L3192:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp675, <variable>.BS.TotalPos,
	cmp	r1, fp, asl #3	@ tmp675, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8292,
	bne	.L3255	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8292,
	cmp	r7, fp	@ payloadSize, i.8292
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1243, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1243, <variable>.BS.BsLen,
	ble	.L3255	@,
	b	.L3198	@
.L3256:
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, lr, #8	@ tmp681, <variable>.BS.TotalPos,
	cmp	ip, r2, asl #3	@ tmp681, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1249, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1249, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3255:
	add	r9, fp, #1	@ tmp948, i.8292,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8292, tmp948,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp948
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3256	@,
	b	.L3198	@
.L3191:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp663, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp663, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8286,
	bne	.L3253	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8286,
	cmp	r7, fp	@ payloadSize, i.8286
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1231, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1231, <variable>.BS.BsLen,
	ble	.L3253	@,
	b	.L3198	@
.L3254:
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp669, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp669, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1237, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1237, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3253:
	add	r9, fp, #1	@ tmp944, i.8286,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8286, tmp944,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp944
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3254	@,
	b	.L3198	@
.L3190:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	fp, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, fp, #8	@ tmp651, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp651, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8280,
	bne	.L3251	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8280,
	cmp	r7, fp	@ payloadSize, i.8280
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1219, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1219, <variable>.BS.BsLen,
	ble	.L3251	@,
	b	.L3198	@
.L3252:
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp657, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp657, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1225, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1225, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3251:
	add	r9, fp, #1	@ tmp940, i.8280,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8280, tmp940,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp940
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3252	@,
	b	.L3198	@
.L3189:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r1, #8	@ tmp639, <variable>.BS.TotalPos,
	cmp	fp, r2, asl #3	@ tmp639, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8274,
	bne	.L3249	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8274,
	cmp	r7, fp	@ payloadSize, i.8274
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1207, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1207, <variable>.BS.BsLen,
	ble	.L3249	@,
	b	.L3198	@
.L3250:
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp645, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp645, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1213, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1213, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3249:
	add	r9, fp, #1	@ tmp936, i.8274,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8274, tmp936,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp936
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3250	@,
	b	.L3198	@
.L3188:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp627, <variable>.BS.TotalPos,
	cmp	r1, fp, asl #3	@ tmp627, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8268,
	bne	.L3247	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8268,
	cmp	r7, fp	@ payloadSize, i.8268
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1195, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1195, <variable>.BS.BsLen,
	ble	.L3247	@,
	b	.L3198	@
.L3248:
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp633, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp633, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1201, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1201, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3247:
	add	r9, fp, #1	@ tmp932, i.8268,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8268, tmp932,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp932
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3248	@,
	b	.L3198	@
.L3187:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, ip, #8	@ tmp615, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp615, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8262,
	bne	.L3245	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8262,
	cmp	r7, fp	@ payloadSize, i.8262
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1183, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1183, <variable>.BS.BsLen,
	ble	.L3245	@,
	b	.L3198	@
.L3246:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp621, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp621, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1189, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1189, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3245:
	add	r9, fp, #1	@ tmp928, i.8262,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8262, tmp928,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp928
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3246	@,
	b	.L3198	@
.L3186:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	fp, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, fp, #8	@ tmp603, <variable>.BS.TotalPos,
	cmp	ip, r0, asl #3	@ tmp603, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8256,
	bne	.L3243	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8256,
	cmp	r7, fp	@ payloadSize, i.8256
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1171, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1171, <variable>.BS.BsLen,
	ble	.L3243	@,
	b	.L3198	@
.L3244:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp609, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp609, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1177, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1177, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3243:
	add	r9, fp, #1	@ tmp924, i.8256,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8256, tmp924,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp924
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3244	@,
	b	.L3198	@
.L3185:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r1, #8	@ tmp591, <variable>.BS.TotalPos,
	cmp	fp, ip, asl #3	@ tmp591, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8250,
	bne	.L3241	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8250,
	cmp	r7, fp	@ payloadSize, i.8250
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1159, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1159, <variable>.BS.BsLen,
	ble	.L3241	@,
	b	.L3198	@
.L3242:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp597, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp597, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1165, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1165, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3241:
	add	r9, fp, #1	@ tmp920, i.8250,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8250, tmp920,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp920
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3242	@,
	b	.L3198	@
.L3184:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp579, <variable>.BS.TotalPos,
	cmp	r1, fp, asl #3	@ tmp579, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8244,
	bne	.L3239	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8244,
	cmp	r7, fp	@ payloadSize, i.8244
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1147, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1147, <variable>.BS.BsLen,
	ble	.L3239	@,
	b	.L3198	@
.L3240:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp585, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp585, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1153, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1153, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3239:
	add	r9, fp, #1	@ tmp916, i.8244,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8244, tmp916,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp916
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3240	@,
	b	.L3198	@
.L3183:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp567, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp567, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8238,
	bne	.L3237	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8238,
	cmp	r7, fp	@ payloadSize, i.8238
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1135, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1135, <variable>.BS.BsLen,
	ble	.L3237	@,
	b	.L3198	@
.L3238:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp573, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp573, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1141, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1141, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3237:
	add	r9, fp, #1	@ tmp912, i.8238,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8238, tmp912,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp912
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3238	@,
	b	.L3198	@
.L3182:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	fp, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, fp, #8	@ tmp555, <variable>.BS.TotalPos,
	cmp	r3, r0, asl #3	@ tmp555, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8232,
	bne	.L3235	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8232,
	cmp	r7, fp	@ payloadSize, i.8232
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1123, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1123, <variable>.BS.BsLen,
	ble	.L3235	@,
	b	.L3198	@
.L3236:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp561, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp561, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1129, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1129, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3235:
	add	r9, fp, #1	@ tmp908, i.8232,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8232, tmp908,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp908
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3236	@,
	b	.L3198	@
.L3181:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r1, #8	@ tmp543, <variable>.BS.TotalPos,
	cmp	fp, r0, asl #3	@ tmp543, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8226,
	bne	.L3233	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8226,
	cmp	r7, fp	@ payloadSize, i.8226
	ble	.L3198	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1111, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1111, <variable>.BS.BsLen,
	ble	.L3233	@,
	b	.L3198	@
.L3234:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, ip, #8	@ tmp549, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp549, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1117, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1117, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3233:
	add	r9, fp, #1	@ tmp904, i.8226,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8226, tmp904,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp904
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3234	@,
	b	.L3198	@
.L3180:
	bl	vfmw_dprint_nothing	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3230	@,
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, lr, #8	@ tmp534, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp534, <variable>.BS.BsLen,
	bgt	.L3230	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8219,
	bne	.L3231	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8219,
	cmp	r7, fp	@ payloadSize, i.8219
	bgt	.L3529	@,
	b	.L3230	@
.L3231:
	add	r9, fp, #1	@ tmp900, i.8219,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8219, tmp900,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp900
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	ble	.L3230	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp537, <variable>.BS.TotalPos,
	cmp	ip, r2, asl #3	@ tmp537, <variable>.BS.BsLen,
	bgt	.L3230	@,
	bl	BsSkip	@
.L3529:
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r0, #8	@ tmp1105, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1105, <variable>.BS.BsLen,
	ble	.L3231	@,
.L3230:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	b	.L3198	@
.L3179:
	ldr	r9, [sp, #32]	@, %sfp
	cmp	r9, #0	@,
	bne	.L3178	@,
	bl	vfmw_dprint_nothing	@
.L3211:
	ldr	r0, [sp, #20]	@, %sfp
	movw	lr, #:lower16:11199520	@ tmp306,
	movt	lr, #:upper16:11199520	@ tmp306,
	ldr	r9, [r4, r0]	@ D.43589, <variable>.TotalUsrDatNum
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	GetUsd	@
	ldr	r2, [sp, #20]	@, %sfp
	movw	r3, #:lower16:2799506	@ tmp308,
	movt	r3, #:upper16:2799506	@ tmp308,
	ldr	r1, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, r9, r3	@ tmp308, D.43589, tmp308
	add	r3, r1, r3	@ tmp314, <variable>.TotalUsrDatNum, tmp314
	add	ip, r4, r2, asl #2	@, tmp312, pMvcCtx, tmp308,
	add	r3, r4, r3, asl #2	@, tmp320, pMvcCtx, tmp314,
	str	r0, [ip, #4]	@, <variable>.pUsrDatArray
	ldr	r1, [r3, #4]	@ prephitmp.8051, <variable>.pUsrDatArray
	cmp	r1, #0	@ prephitmp.8051,
	beq	.L3212	@,
	ldr	r3, [r4, #368]	@ temp.8163, <variable>.pCurrNal
	cmp	r7, #1024	@ payloadSize,
	movlt	ip, r7	@ D.43595, payloadSize
	movge	ip, #1024	@ D.43595,
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ segment_idx, <variable>.nal_used_segment
	ldr	r2, [r3, #64]	@ D.43563, <variable>.nal_segment
	cmp	lr, r2	@ segment_idx, D.43563
	movcs	r0, #0	@ prephitmp.8045,
	movcs	r3, r0	@ lenth_not_parse, prephitmp.8045
	bcs	.L3214	@,
	rsb	r9, lr, lr, asl #3	@, tmp324, segment_idx, segment_idx,
	mvn	fp, lr	@ tmp893, segment_idx
	add	r0, lr, #1	@ segment_idx, segment_idx,
	add	r9, r3, r9, asl #2	@, tmp326, temp.8163, tmp324,
	add	r3, fp, r2	@ tmp892, tmp893, D.43563
	and	lr, r3, #1	@, tmp892,
	str	lr, [sp, #24]	@, %sfp
	ldr	fp, [r9, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	cmp	r0, r2	@ segment_idx, D.43563
	add	lr, r9, #36	@ ivtmp.8088, tmp326,
	add	r3, fp, #7	@ tmp327, <variable>.bitsoffset,
	ldr	fp, [r9, #8]	@, <variable>.bitstream_length
	sub	r3, fp, r3, lsr #3	@ lenth_not_parse,, tmp327,
	beq	.L3429	@,
	ldr	fp, [sp, #24]	@, %sfp
	cmp	fp, #0	@,
	beq	.L3506	@,
	ldr	lr, [lr, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r0, r0, #1	@ segment_idx, segment_idx,
	ldr	fp, [r9, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r2	@ segment_idx, D.43563
	add	lr, lr, #7	@, <variable>.bitsoffset,
	str	lr, [sp, #24]	@, %sfp
	add	lr, r9, #64	@ ivtmp.8088, tmp326,
	ldr	r9, [sp, #24]	@, %sfp
	sub	fp, fp, r9, lsr #3	@ tmp1096, <variable>.bitstream_length,,
	add	r3, r3, fp	@ lenth_not_parse, lenth_not_parse, tmp1096
	beq	.L3429	@,
.L3506:
	str	r1, [sp, #4]	@ prephitmp.8051, %sfp
.L3215:
	ldr	r1, [lr, #12]	@, <variable>.bitsoffset
	mov	r9, lr	@ tmp895, ivtmp.8088
	ldr	fp, [r9], #28	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r0, r0, #2	@ segment_idx, segment_idx,
	add	r1, r1, #7	@,,
	str	r1, [sp, #24]	@, %sfp
	ldr	r1, [lr, #28]	@, <variable>.bitstream_length
	cmp	r0, r2	@ segment_idx, D.43563
	add	lr, lr, #56	@ ivtmp.8088, ivtmp.8088,
	str	r1, [sp, #36]	@, %sfp
	ldr	r1, [sp, #24]	@, %sfp
	ldr	r9, [r9, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	sub	fp, fp, r1, lsr #3	@ tmp976, <variable>.bitstream_length,,
	add	r9, r9, #7	@ tmp981, <variable>.bitsoffset,
	add	r1, r3, fp	@ lenth_not_parse, lenth_not_parse, tmp976
	ldr	fp, [sp, #36]	@, %sfp
	sub	r9, fp, r9, lsr #3	@ tmp984,, tmp981,
	add	r3, r1, r9	@ lenth_not_parse, lenth_not_parse, tmp984
	bne	.L3215	@,
	ldr	r1, [sp, #4]	@ prephitmp.8051, %sfp
.L3429:
	mov	r0, r3	@ prephitmp.8045, lenth_not_parse
.L3214:
	ldr	lr, [sp, #32]	@, %sfp
	cmp	ip, r0	@ D.43595, prephitmp.8045
	movle	r3, ip	@ lenth_not_parse, D.43595
	str	r3, [sp, #24]	@ lenth_not_parse, %sfp
	sxtb	r2, lr	@ registered_flag,
	cmp	r2, #1	@ registered_flag,
	movne	r9, #0	@ prephitmp.8052,
	movne	fp, r9	@ used_byte, prephitmp.8052
	beq	.L3537	@,
.L3222:
	ldr	r3, [sp, #24]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	str	ip, [sp, #12]	@,
	rsb	r2, r9, r3	@, prephitmp.8052,
	bl	MVC_GetBytes	@
	ldr	ip, [sp, #12]	@,
	subs	r9, r0, #0	@ ret.8180,
	ble	.L3538	@,
	rsb	lr, fp, ip	@ tmp443, used_byte, D.43595
	cmp	r9, lr	@ ret.8180, tmp443
	blt	.L3539	@,
	ldr	r1, [sp, #20]	@, %sfp
	movw	lr, #:lower16:2799506	@ tmp459,
	movt	lr, #:upper16:2799506	@ tmp459,
	cmp	ip, r7	@ D.43595, payloadSize
	rsb	fp, fp, r7	@ D.43641, used_byte, payloadSize
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r2, lr	@ tmp459, <variable>.TotalUsrDatNum, tmp459
	add	r0, r4, r3, asl #2	@, tmp466, pMvcCtx, tmp459,
	ldr	r9, [r0, #4]	@ tmp463, <variable>.pUsrDatArray
	str	fp, [r9, #1048]	@ D.43641, <variable>.data_size
	bcc	.L3540	@,
.L3227:
	cmp	fp, #0	@ D.43641,
	ble	.L3225	@,
	ldr	r7, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r9, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	ip, r9, #8	@ tmp473, <variable>.BS.TotalPos,
	cmp	ip, r7, asl #3	@ tmp473, <variable>.BS.BsLen,
	bgt	.L3225	@,
	tst	fp, #1	@ D.43641,
	mov	r9, #0	@ i.8199,
	bne	.L3228	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8199,
	cmp	fp, r9	@ D.43641, i.8199
	bgt	.L3527	@,
	b	.L3225	@
.L3228:
	add	r7, r9, #1	@ tmp891, i.8199,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	r9, r7, #1	@ i.8199, tmp891,
	bl	BsSkip	@
	cmp	fp, r7	@ D.43641, tmp891
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	ble	.L3225	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp476, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp476, <variable>.BS.BsLen,
	bgt	.L3225	@,
	bl	BsSkip	@
.L3527:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1088, <variable>.BS.TotalPos,
	cmp	r3, r0, asl #3	@ tmp1088, <variable>.BS.BsLen,
	ble	.L3228	@,
.L3225:
	ldr	fp, [sp, #20]	@, %sfp
	movw	r1, #:lower16:2799506	@ tmp481,
	movt	r1, #:upper16:2799506	@ tmp481,
	ldr	r7, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r2, #1056	@ tmp490,
	ldr	r3, [r4, fp]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	fp, #:lower16:2799506	@ tmp493,
	movt	fp, #:upper16:2799506	@ tmp493,
	add	r0, r3, r1	@ tmp481, <variable>.TotalUsrDatNum, tmp481
	mov	r3, fp	@ tmp503, tmp493
	add	r9, r4, r0, asl #2	@, tmp488, pMvcCtx, tmp481,
	ldrd	r0, [r7, #56]	@, <variable>.pstExtraData,
	movw	r7, #:lower16:11199480	@ tmp512,
	movt	r7, #:upper16:11199480	@ tmp512,
	ldr	lr, [r9, #4]	@ tmp485, <variable>.pUsrDatArray
	movw	r9, #:lower16:g_event_report	@ tmp514,
	movt	r9, #:upper16:g_event_report	@ tmp514,
	strd	r0, [lr, r2]	@, tmp485, tmp490
	ldr	r1, [sp, #20]	@, %sfp
	ldr	ip, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, ip, fp	@ tmp493, <variable>.TotalUsrDatNum, tmp493
	mov	ip, #8	@ tmp502,
	add	lr, r4, r2, asl #2	@, tmp500, pMvcCtx, tmp493,
	ldr	fp, [lr, #4]	@ tmp497, <variable>.pUsrDatArray
	str	ip, [fp, #1036]	@ tmp502, <variable>.from
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	fp, [r4, r7]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r3, r2, r3	@ tmp503, <variable>.TotalUsrDatNum, tmp503
	add	lr, r4, r3, asl #2	@, tmp510, pMvcCtx, tmp503,
	ldr	ip, [lr, #4]	@ tmp507, <variable>.pUsrDatArray
	str	fp, [ip, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r3, [r9, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3198	@,
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r1, #:lower16:2799506	@ tmp516,
	movt	r1, #:upper16:2799506	@ tmp516,
	movw	r0, #:lower16:11199520	@ tmp526,
	add	fp, r2, r1	@ tmp516, <variable>.TotalUsrDatNum, tmp516
	movt	r0, #:upper16:11199520	@ tmp526,
	add	r2, sp, #48	@ tmp528,,
	mov	r1, #6	@,
	add	lr, r4, fp, asl #2	@, tmp522, pMvcCtx, tmp516,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	ldr	ip, [lr, #4]	@ tmp524, <variable>.pUsrDatArray
	str	ip, [r2, #-8]!	@ tmp524, para
	blx	r3	@ g_event_report
	b	.L3198	@
.L3177:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	fp, r3, #8	@ tmp296, <variable>.BS.TotalPos,
	cmp	fp, r0, asl #3	@ tmp296, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8161,
	bne	.L3208	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8161,
	cmp	fp, r7	@ i.8161, payloadSize
	bge	.L3198	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp1064, <variable>.BS.TotalPos,
	cmp	r0, lr, asl #3	@ tmp1064, <variable>.BS.BsLen,
	ble	.L3208	@,
	b	.L3198	@
.L3209:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp299, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp299, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1070, <variable>.BS.TotalPos,
	cmp	r2, ip, asl #3	@ tmp1070, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3208:
	add	r9, fp, #1	@ tmp883, i.8161,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8161, tmp883,
	bl	BsSkip	@
	cmp	r9, r7	@ tmp883, payloadSize
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	blt	.L3209	@,
	b	.L3198	@
.L3176:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r1, #8	@ tmp284, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp284, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8155,
	bne	.L3206	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8155,
	cmp	fp, r7	@ i.8155, payloadSize
	bge	.L3198	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp1052, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1052, <variable>.BS.BsLen,
	ble	.L3206	@,
	b	.L3198	@
.L3207:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp287, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp287, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1058, <variable>.BS.TotalPos,
	cmp	r2, ip, asl #3	@ tmp1058, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3206:
	add	r9, fp, #1	@ tmp879, i.8155,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8155, tmp879,
	bl	BsSkip	@
	cmp	r9, r7	@ tmp879, payloadSize
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	blt	.L3207	@,
	b	.L3198	@
.L3175:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	ldr	r9, [r4, r5]	@ bitpos, <variable>.BS.TotalPos
	bl	MVC_DecPicTimingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8056, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ D.43573, payloadSize,
	rsb	r9, r9, r3	@ bitpos.8142, bitpos, prephitmp.8056
	cmp	r9, r2	@ bitpos.8142, D.43573
	blt	.L3541	@,
.L3201:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
.L3198:
	ldr	fp, [sp, #20]	@, %sfp
	ldr	r1, [r4, fp]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r1, #3	@ <variable>.TotalUsrDatNum,
	bhi	.L3532	@,
	mov	r9, #0	@ payloadType,
.L3274:
	mov	r1, sl	@, tmp770
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r7, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r7, #8	@ tmp761, <variable>.BS.TotalPos,
	ldrb	r7, [sp, #47]	@ zero_extendqisi2	@ byte_tmp.8332, byte_tmp
	mov	fp, r0	@ ret.8331,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	cmp	r3, r0, asl #3	@ tmp761, <variable>.BS.BsLen,
	ble	.L3542	@,
.L3273:
	mov	r0, #0	@ D.43548,
	b	.L3166	@
.L3174:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r3, #8	@ tmp246, <variable>.BS.TotalPos,
	cmp	fp, ip, asl #3	@ tmp246, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i,
	bne	.L3199	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i,
	cmp	fp, r7	@ i, payloadSize
	bge	.L3198	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp1032, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp1032, <variable>.BS.BsLen,
	ble	.L3199	@,
	b	.L3198	@
.L3200:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, ip, #8	@ tmp252, <variable>.BS.TotalPos,
	cmp	lr, r2, asl #3	@ tmp252, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp1038, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1038, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3199:
	add	r9, fp, #1	@ tmp871, i,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i, tmp871,
	bl	BsSkip	@
	cmp	r9, r7	@ tmp871, payloadSize
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	blt	.L3200	@,
	b	.L3198	@
.L3173:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3198	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp746, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp746, <variable>.BS.BsLen,
	bgt	.L3198	@,
	tst	r7, #1	@ payloadSize,
	mov	fp, #0	@ i.8329,
	bne	.L3268	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	fp, #1	@ i.8329,
	cmp	r7, fp	@ payloadSize, i.8329
	ble	.L3198	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp1020, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp1020, <variable>.BS.BsLen,
	ble	.L3268	@,
	b	.L3198	@
.L3269:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp752, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp752, <variable>.BS.BsLen,
	bgt	.L3198	@,
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r3, #8	@ tmp1026, <variable>.BS.TotalPos,
	cmp	r0, r1, asl #3	@ tmp1026, <variable>.BS.BsLen,
	bgt	.L3198	@,
.L3268:
	add	r9, fp, #1	@ tmp867, i.8329,
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	add	fp, r9, #1	@ i.8329, tmp867,
	bl	BsSkip	@
	cmp	r7, r9	@ payloadSize, tmp867
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bgt	.L3269	@,
	b	.L3198	@
.L3542:
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	fp, #0	@ ret.8331,
	add	r9, r9, r7	@ payloadType, payloadType, byte_tmp.8332
	ble	.L3273	@,
	ldrb	r3, [sp, #47]	@ zero_extendqisi2	@ byte_tmp.8338, byte_tmp
	cmp	r3, #255	@ byte_tmp.8338,
	beq	.L3274	@,
	cmp	r3, #128	@ byte_tmp.8338,
	bne	.L3276	@,
	mov	r0, #0	@ D.43548,
	b	.L3166	@
.L3178:
	bl	vfmw_dprint_nothing	@
	mov	r1, #1	@,
	str	r1, [sp, #32]	@, %sfp
	b	.L3211	@
.L3539:
	ldr	ip, [sp, #20]	@, %sfp
	movw	lr, #:lower16:2799506	@ tmp444,
	movt	lr, #:upper16:2799506	@ tmp444,
	sub	fp, r9, #1	@ tmp884, ret.8180,
	and	fp, fp, #1	@ tmp886, tmp884,
	ldr	r7, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r1, r7, lr	@ tmp444, <variable>.TotalUsrDatNum, tmp444
	add	r0, r4, r1, asl #2	@, tmp451, pMvcCtx, tmp444,
	ldr	r2, [r0, #4]	@ tmp448, <variable>.pUsrDatArray
	str	r9, [r2, #1048]	@ ret.8180, <variable>.data_size
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r7, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp454, <variable>.BS.TotalPos,
	cmp	ip, r7, asl #3	@ tmp454, <variable>.BS.BsLen,
	bgt	.L3225	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r7, #1	@ i.8191,
	cmp	r9, r7	@ ret.8180, i.8191
	ble	.L3225	@,
	cmp	fp, #0	@ tmp886,
	beq	.L3226	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	fp, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r7, lr, #8	@ tmp1076, <variable>.BS.TotalPos,
	cmp	r7, fp, asl #3	@ tmp1076, <variable>.BS.BsLen,
	bgt	.L3225	@,
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r7, #2	@ i.8191,
	cmp	r9, r7	@ ret.8180, i.8191
	bgt	.L3226	@,
	b	.L3225	@
.L3543:
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	mov	r0, r8	@, D.43544
	add	r2, r1, #8	@ tmp995, <variable>.BS.TotalPos,
	mov	r1, #8	@,
	cmp	r2, ip, asl #3	@ tmp995, <variable>.BS.BsLen,
	bgt	.L3225	@,
	bl	BsSkip	@
	cmp	r9, r7	@ ret.8180, i.8191
	ble	.L3225	@,
.L3226:
	ldr	fp, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	mov	r1, #8	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r7, #1	@ tmp887, i.8191,
	add	r3, fp, r1	@ tmp987, <variable>.BS.TotalPos,
	mov	r0, r8	@, D.43544
	add	r7, lr, #1	@ i.8191, tmp887,
	cmp	r3, r2, asl #3	@ tmp987, <variable>.BS.BsLen,
	ble	.L3543	@,
	b	.L3225	@
.L3541:
	rsb	r1, r9, r2	@, bitpos.8142, D.43573
	str	r1, [sp, #36]	@, %sfp
	ldr	r9, [sp, #36]	@, %sfp
	add	r0, r1, #7	@ tmp260,,
	cmp	r9, #0	@,
	movge	r0, r9	@ D.43577,
	mov	r2, r0, asr #3	@, D.43577,
	str	r2, [sp, #24]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8058, <variable>.BS.BsLen,
	ble	.L3203	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	fp, r3, #8	@ tmp266, prephitmp.8056,
	mov	r2, r2, asl #3	@ prephitmp.8058, <variable>.BS.BsLen,
	cmp	r2, fp	@ prephitmp.8058, tmp266
	blt	.L3203	@,
	ldr	r3, [sp, #24]	@, %sfp
	mov	fp, #0	@ i.8146,
	tst	r3, #1	@,
	beq	.L3544	@,
.L3204:
	mov	r1, #8	@,
	mov	r0, r8	@, D.43544
	bl	BsSkip	@
	ldr	r2, [sp, #24]	@, %sfp
	add	r9, fp, #1	@ tmp875, i.8146,
	mov	r0, r8	@, D.43544
	cmp	r9, r2	@ tmp875,
	add	fp, r9, #1	@ i.8146, tmp875,
	mov	r1, #8	@,
	bge	.L3471	@,
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8056, <variable>.BS.TotalPos
	mov	r2, ip, asl #3	@ prephitmp.8058, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp270, prephitmp.8056,
	cmp	lr, r2	@ tmp270, prephitmp.8058
	bgt	.L3203	@,
	bl	BsSkip	@
.L3525:
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8056, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8058, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1049, prephitmp.8056,
	cmp	lr, r2	@ tmp1049, prephitmp.8058
	ble	.L3204	@,
.L3203:
	ldr	r0, [sp, #36]	@, %sfp
	mov	fp, r0, asr #31	@ tmp274,,
	mov	r1, fp, lsr #29	@ tmp275, tmp274,
	add	ip, r0, r1	@ tmp276,, tmp275
	and	lr, ip, #7	@ tmp277, tmp276,
	rsb	r1, r1, lr	@ tmp278, tmp275, tmp277
	add	fp, r3, r1	@ tmp279, prephitmp.8056, tmp278
	cmp	fp, r2	@ tmp279, prephitmp.8058
	bgt	.L3201	@,
	mov	r0, r8	@, D.43544
	bl	BsSkip	@
	b	.L3201	@
.L3535:
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r9, [sp, #24]	@, %sfp
	mov	fp, #1	@ i.8318,
	cmp	fp, r9	@ i.8318,
	blt	.L3531	@,
.L3472:
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8043, <variable>.BS.TotalPos
	mov	r2, lr, asl #3	@ prephitmp.8323, <variable>.BS.BsLen,
	b	.L3265	@
.L3544:
	mov	r0, r8	@, D.43544
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	ip, [sp, #24]	@, %sfp
	mov	fp, #1	@ i.8146,
	cmp	fp, ip	@ i.8146,
	blt	.L3525	@,
.L3471:
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8056, <variable>.BS.TotalPos
	mov	r2, r0, asl #3	@ prephitmp.8058, <variable>.BS.BsLen,
	b	.L3203	@
.L3537:
	strb	r2, [r1, #1064]	@ registered_flag, <variable>.IsRegistered
	movw	r9, #:lower16:2799506	@ tmp335,
	ldr	r1, [sp, #20]	@, %sfp
	movt	r9, #:upper16:2799506	@ tmp335,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #8	@,
	add	r3, r2, r9	@ tmp335, <variable>.TotalUsrDatNum, tmp335
	movw	r2, #:lower16:.LC22	@,
	movt	r2, #:upper16:.LC22	@,
	add	lr, r4, r3, asl #2	@, tmp341, pMvcCtx, tmp335,
	ldr	fp, [lr, #4]	@ D.43592, <variable>.pUsrDatArray
	str	ip, [sp, #12]	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:2799506	@ tmp345,
	movt	r3, #:upper16:2799506	@ tmp345,
	strb	r0, [fp, #1065]	@, <variable>.itu_t_t35_country_code
	ldr	r9, [sp, #20]	@, %sfp
	ldr	fp, [r4, r9]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r0, fp, r3	@ tmp345, <variable>.TotalUsrDatNum, tmp345
	add	r2, r4, r0, asl #2	@, tmp351, pMvcCtx, tmp345,
	ldr	r3, [r2, #4]	@ temp.8167, <variable>.pUsrDatArray
	ldrb	ip, [r3, #1065]	@ zero_extendqisi2	@ <variable>.itu_t_t35_country_code, <variable>.itu_t_t35_country_code
	cmp	ip, #255	@ <variable>.itu_t_t35_country_code,
	ldr	ip, [sp, #12]	@,
	beq	.L3219	@,
	mov	r9, #3	@ prephitmp.8052,
	mov	r0, #0	@,
	mov	fp, r9	@ used_byte, prephitmp.8052
	strb	r0, [r3, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
.L3220:
	ldr	r1, [sp, #20]	@, %sfp
	movw	r0, #:lower16:2799506	@ tmp358,
	movt	r0, #:upper16:2799506	@ tmp358,
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	mov	r1, #16	@,
	add	r3, r2, r0	@ tmp358, <variable>.TotalUsrDatNum, tmp358
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC24	@,
	movt	r2, #:upper16:.LC24	@,
	add	lr, r4, r3, asl #2	@, tmp364, pMvcCtx, tmp358,
	ldr	r3, [lr, #4]	@, <variable>.pUsrDatArray
	str	ip, [sp, #12]	@,
	str	r3, [sp, #36]	@, %sfp
	bl	mvc_u_v	@
	ldr	lr, [sp, #36]	@, %sfp
	movw	r2, #1068	@ tmp367,
	mov	r1, r9	@, prephitmp.8052
	strh	r0, [lr, r2]	@ movhi	@, <variable>.itu_t_t35_provider_code
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	ldr	r3, [sp, #24]	@, %sfp
	ldr	ip, [sp, #12]	@,
	cmp	r3, r9	@, prephitmp.8052
	beq	.L3221	@,
	ldr	r1, [sp, #20]	@, %sfp
	movw	r0, #:lower16:2799506	@ tmp368,
	movt	r0, #:upper16:2799506	@ tmp368,
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r3, r2, r0	@ tmp368, <variable>.TotalUsrDatNum, tmp368
	add	lr, r4, r3, asl #2	@, tmp374, pMvcCtx, tmp368,
	ldr	r1, [lr, #4]	@ prephitmp.8051, <variable>.pUsrDatArray
	b	.L3222	@
.L3540:
	rsb	r1, ip, r7	@, D.43595, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	b	.L3227	@
.L3536:
	mov	r0, r8	@, D.43544
	bl	BsSkip	@
	b	.L3263	@
.L3221:
	ldr	r3, [sp, #20]	@, %sfp
	movw	r1, #:lower16:2799506	@ tmp376,
	movt	r1, #:upper16:2799506	@ tmp376,
	ldr	r9, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r2, #1056	@ tmp385,
	ldr	fp, [r4, r3]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r0, fp, r1	@ tmp376, <variable>.TotalUsrDatNum, tmp376
	movw	fp, #:lower16:2799506	@ tmp388,
	movt	fp, #:upper16:2799506	@ tmp388,
	add	r7, r4, r0, asl #2	@, tmp383, pMvcCtx, tmp376,
	ldrd	r0, [r9, #56]	@, <variable>.pstExtraData,
	mov	r3, fp	@ tmp398, tmp388
	movw	r9, #:lower16:g_event_report	@ tmp409,
	ldr	lr, [r7, #4]	@ tmp380, <variable>.pUsrDatArray
	movw	r7, #:lower16:11199480	@ tmp407,
	movt	r7, #:upper16:11199480	@ tmp407,
	movt	r9, #:upper16:g_event_report	@ tmp409,
	strd	r0, [lr, r2]	@, tmp380, tmp385
	ldr	r1, [sp, #20]	@, %sfp
	ldr	ip, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, ip, fp	@ tmp388, <variable>.TotalUsrDatNum, tmp388
	mov	ip, #8	@ tmp397,
	add	lr, r4, r2, asl #2	@, tmp395, pMvcCtx, tmp388,
	ldr	fp, [lr, #4]	@ tmp392, <variable>.pUsrDatArray
	str	ip, [fp, #1036]	@ tmp397, <variable>.from
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	fp, [r4, r7]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r3, r2, r3	@ tmp398, <variable>.TotalUsrDatNum, tmp398
	add	lr, r4, r3, asl #2	@, tmp405, pMvcCtx, tmp398,
	ldr	ip, [lr, #4]	@ tmp402, <variable>.pUsrDatArray
	str	fp, [ip, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r3, [r9, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3198	@,
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r1, #:lower16:2799506	@ tmp411,
	movt	r1, #:upper16:2799506	@ tmp411,
	movw	r0, #:lower16:11199520	@ tmp421,
	add	fp, r2, r1	@ tmp411, <variable>.TotalUsrDatNum, tmp411
	movt	r0, #:upper16:11199520	@ tmp421,
	add	r2, sp, #48	@ tmp422,,
	mov	r1, #6	@,
	add	lr, r4, fp, asl #2	@, tmp417, pMvcCtx, tmp411,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	ldr	ip, [lr, #4]	@ tmp419, <variable>.pUsrDatArray
	str	ip, [r2, #-8]!	@ tmp419, para
	blx	r3	@ g_event_report
	b	.L3198	@
.L3219:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC23	@,
	movt	r2, #:upper16:.LC23	@,
	str	ip, [sp, #12]	@,
	mov	r9, #4	@ prephitmp.8052,
	str	r3, [sp, #16]	@,
	bl	mvc_u_v	@
	ldr	ip, [sp, #16]	@,
	mov	fp, r9	@ used_byte, prephitmp.8052
	strb	r0, [ip, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	ldr	ip, [sp, #12]	@,
	b	.L3220	@
.L3538:
	movw	r5, #:lower16:11198024	@ tmp429,
	movt	r5, #:upper16:11198024	@ tmp429,
	bl	vfmw_dprint_nothing	@
	movw	r0, #:lower16:2799506	@ tmp426,
	ldr	r1, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movt	r0, #:upper16:2799506	@ tmp426,
	movw	r2, #:lower16:11199520	@ tmp425,
	movt	r2, #:upper16:11199520	@ tmp425,
	add	r3, r1, r0	@ tmp426, <variable>.TotalUsrDatNum, tmp426
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	add	ip, r4, r3, asl #2	@, tmp432, pMvcCtx, tmp426,
	ldr	r1, [ip, #4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	r2, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r0, #:lower16:2799506	@ tmp434,
	movt	r0, #:upper16:2799506	@ tmp434,
	add	r3, r2, r0	@ tmp434, <variable>.TotalUsrDatNum, tmp434
	mov	ip, #0	@ tmp442,
	mvn	r0, #0	@ D.43548,
	add	r1, r4, r3, asl #2	@, tmp440, pMvcCtx, tmp434,
	str	ip, [r1, #4]	@ tmp442, <variable>.pUsrDatArray
	b	.L3166	@
.L3212:
	mvn	r0, #0	@ D.43548,
	b	.L3166	@
	.fnend
	.size	MVC_DecSEI, .-MVC_DecSEI
	.align	2
	.global	MVC_ProcessSUBSPSMvcVuiExt
	.type	MVC_ProcessSUBSPSMvcVuiExt, %function
MVC_ProcessSUBSPSMvcVuiExt:
	.fnstart
.LFB1743:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	.pad #44
	sub	sp, sp, #44	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r1, [sp, #16]	@ pSubsps, %sfp
	movw	r1, #:lower16:.LC25	@,
	movt	r1, #:upper16:.LC25	@,
	bl	mvc_ue_v	@
	ldr	r2, [sp, #16]	@, %sfp
	movw	r3, #:lower16:278640	@ tmp194,
	movt	r3, #:upper16:278640	@ tmp194,
	adds	r1, r0, #1	@, D.43054,
	str	r1, [sp, #32]	@, %sfp
	str	r0, [r2, r3]	@ D.43054, <variable>.mvcvui_subseq_parameters.vui_mvc_num_ops_minus1
	beq	.L3546	@,
	movw	lr, #:lower16:316788	@,
	movw	fp, #:lower16:296564	@,
	movt	lr, #:upper16:316788	@,
	movt	fp, #:upper16:296564	@,
	movw	r6, #:lower16:317080	@ ivtmp.8482,
	movw	r5, #:lower16:296856	@ ivtmp.8489,
	movt	r6, #:upper16:317080	@ ivtmp.8482,
	movt	r5, #:upper16:296856	@ ivtmp.8489,
	add	ip, r2, lr	@,,
	add	r7, r2, fp	@,,
	add	r6, r2, r6	@ ivtmp.8482,, ivtmp.8482
	add	r5, r2, r5	@ ivtmp.8489,, ivtmp.8489
	movw	r0, #:lower16:11199460	@,
	mov	r2, #0	@,
	movt	r0, #:upper16:11199460	@,
	str	ip, [sp, #12]	@, %sfp
	str	r7, [sp, #8]	@, %sfp
	str	r2, [sp, #24]	@, %sfp
	str	r0, [sp, #36]	@, %sfp
	str	r2, [sp, #20]	@, %sfp
	str	r2, [sp, #4]	@, %sfp
.L3561:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC26	@,
	movt	r2, #:upper16:.LC26	@,
	bl	mvc_u_v	@
	ldr	r1, [sp, #20]	@, %sfp
	ldr	ip, [sp, #16]	@, %sfp
	add	r7, ip, r1	@ D.53029,,
	movw	r1, #:lower16:.LC27	@,
	add	fp, r7, #278528	@ tmp200, D.53029,
	movt	r1, #:upper16:.LC27	@,
	add	r3, fp, #116	@ tmp200, tmp200,
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	add	r2, r7, #278528	@ tmp203, D.53029,
	add	r1, r2, #372	@ tmp203, tmp203,
	adds	fp, r0, #1	@ num_target_output_views, D.43060,
	mov	r3, r0	@ D.43060,
	str	r0, [r1, #0]	@ D.43060, <variable>.mvcvui_subseq_parameters.vui_mvc_num_target_output_views_minus1
	beq	.L3547	@,
	ldr	r0, [sp, #4]	@, %sfp
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	and	r9, r3, #1	@, D.43060,
	ldr	sl, [sp, #16]	@, %sfp
	mov	r2, r0, asl #8	@ tmp206,,
	mov	r0, r4	@, pMvcCtx
	add	lr, r2, #278528	@ tmp207, tmp206,
	str	r9, [sp, #28]	@, %sfp
	add	r8, lr, #624	@ tmp207, tmp207,
	bl	mvc_ue_v	@
	add	r8, sl, r8	@ tmp209,, tmp207
	cmp	fp, #1	@ num_target_output_views,
	add	r3, r8, #4	@ ivtmp.8463, tmp209,
	mov	r9, #1	@ j,
	add	sl, r3, #4	@ ivtmp.8463, ivtmp.8463,
	str	r0, [r8, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3547	@,
	ldr	r0, [sp, #28]	@, %sfp
	cmp	r0, #0	@,
	beq	.L3548	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	str	r3, [sp, #0]	@,
	bl	mvc_ue_v	@
	ldr	r3, [sp, #0]	@,
	mov	r9, #2	@ j,
	cmp	fp, r9	@ num_target_output_views, j
	add	sl, sl, #4	@ ivtmp.8463, ivtmp.8463,
	str	r0, [r3, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3547	@,
.L3548:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	mov	r8, sl	@ tmp344, ivtmp.8463
	bl	mvc_ue_v	@
	add	r3, r9, #1	@ tmp343, j,
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	add	r9, r3, #1	@ j, tmp343,
	str	r0, [r8], #4	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	fp, r9	@ num_target_output_views, j
	str	r0, [sl, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	add	sl, r8, #4	@ ivtmp.8463, tmp344,
	bhi	.L3548	@,
.L3547:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC29	@,
	movt	r1, #:upper16:.LC29	@,
	bl	mvc_u_1	@
	add	r1, r7, #294912	@ tmp212, D.53029,
	add	ip, r1, #628	@ tmp212, tmp212,
	cmp	r0, #0	@ D.43064,
	str	r0, [ip, #0]	@ D.43064, <variable>.mvcvui_subseq_parameters.vui_mvc_timing_info_present_flag
	bne	.L3574	@,
.L3549:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC33	@,
	movt	r1, #:upper16:.LC33	@,
	bl	mvc_u_1	@
	ldr	ip, [sp, #8]	@, %sfp
	cmp	r0, #0	@ D.43073,
	str	r0, [ip, #0]	@ D.43073, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	beq	.L3550	@,
	ldr	r3, [sp, #24]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	lr, [sp, #16]	@, %sfp
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	add	fp, lr, r3	@ D.53057,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC35	@,
	movt	r2, #:upper16:.LC35	@,
	str	r0, [r5, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:296852	@ tmp226,
	movt	r2, #:upper16:296852	@ tmp226,
	mov	r1, #4	@,
	add	ip, fp, r2	@ tmp226, D.53057, tmp226
	movw	r2, #:lower16:.LC36	@,
	movt	r2, #:upper16:.LC36	@,
	strb	r0, [ip, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r1, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r3, #:lower16:296853	@ tmp230,
	movt	r3, #:upper16:296853	@ tmp230,
	add	r2, fp, r3	@ tmp230, D.53057, tmp230
	cmp	r1, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [r2, #0]	@, <variable>.cpb_size_scale
	bhi	.L3556	@,
	ldr	r0, [sp, #36]	@, %sfp
	ldr	sl, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3556	@,
	ldr	r2, [sp, #4]	@, %sfp
	mov	r8, #312	@ tmp237,
	ldr	r1, [sp, #16]	@, %sfp
	movw	r9, #:lower16:296820	@ ivtmp.8457,
	movt	r9, #:upper16:296820	@ ivtmp.8457,
	mla	ip, r8, r2, r1	@ tmp240, tmp237,,
	add	r8, ip, r9	@ ivtmp.8457, tmp240, ivtmp.8457
	mov	r9, r8	@ ivtmp.8459, ivtmp.8457
.L3554:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	add	sl, sl, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	str	r0, [r8, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	str	r0, [r8, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r3, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r8, r8, #4	@ ivtmp.8457, ivtmp.8457,
	cmp	r3, sl	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r9], #1	@, <variable>.cbr_flag
	bcs	.L3554	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC40	@,
	movt	r2, #:upper16:.LC40	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:297116	@ tmp252,
	movt	r2, #:upper16:297116	@ tmp252,
	mov	r1, #5	@,
	add	r3, fp, r2	@ tmp252, D.53057, tmp252
	movw	r2, #:lower16:.LC41	@,
	movt	r2, #:upper16:.LC41	@,
	str	r0, [r3, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, fp, #294912	@ tmp255, D.53057,
	add	ip, r1, #2208	@ tmp255, tmp255,
	movw	r2, #:lower16:.LC42	@,
	mov	r1, #5	@,
	movt	r2, #:upper16:.LC42	@,
	str	r0, [ip, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:297124	@ tmp258,
	movt	r2, #:upper16:297124	@ tmp258,
	mov	r1, #5	@,
	add	r3, fp, r2	@ tmp258, D.53057, tmp258
	movw	r2, #:lower16:.LC43	@,
	movt	r2, #:upper16:.LC43	@,
	str	r0, [r3, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:297128	@ tmp261,
	movt	r1, #:upper16:297128	@ tmp261,
	add	ip, fp, r1	@ tmp261, D.53057, tmp261
	str	r0, [ip, #0]	@, <variable>.time_offset_length
.L3550:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC44	@,
	movt	r1, #:upper16:.LC44	@,
	bl	mvc_u_1	@
	ldr	ip, [sp, #12]	@, %sfp
	cmp	r0, #0	@ D.43103,
	str	r0, [ip, #0]	@ D.43103, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	bne	.L3575	@,
.L3555:
	ldr	r0, [sp, #8]	@, %sfp
	ldr	lr, [r0, #0]	@ tmp303, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	cmp	lr, #0	@ tmp303,
	bne	.L3559	@,
	ldr	r1, [sp, #12]	@, %sfp
	ldr	ip, [r1, #0]	@ tmp304, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	cmp	ip, #0	@ tmp304,
	beq	.L3560	@,
.L3559:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC45	@,
	movt	r1, #:upper16:.LC45	@,
	bl	mvc_u_1	@
	movw	r2, #:lower16:337012	@ tmp306,
	movt	r2, #:upper16:337012	@ tmp306,
	add	r3, r7, r2	@ tmp306, D.53029, tmp306
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_low_delay_hrd_flag
.L3560:
	ldr	r2, [sp, #4]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC46	@,
	movt	r1, #:upper16:.LC46	@,
	add	lr, r2, #1	@,,
	str	lr, [sp, #4]	@, %sfp
	bl	mvc_u_1	@
	ldr	r2, [sp, #20]	@, %sfp
	ldr	ip, [sp, #32]	@, %sfp
	movw	r3, #:lower16:337268	@ tmp309,
	ldr	r1, [sp, #4]	@, %sfp
	movt	r3, #:upper16:337268	@ tmp309,
	add	r6, r6, #312	@ ivtmp.8482, ivtmp.8482,
	add	r5, r5, #312	@ ivtmp.8489, ivtmp.8489,
	cmp	ip, r1	@,
	add	r1, r2, #4	@,,
	ldr	r2, [sp, #12]	@, %sfp
	add	ip, r7, r3	@ tmp309, D.53029, tmp309
	str	r1, [sp, #20]	@, %sfp
	add	r1, r2, #4	@,,
	ldr	r2, [sp, #8]	@, %sfp
	str	r1, [sp, #12]	@, %sfp
	add	r1, r2, #4	@,,
	ldr	r2, [sp, #24]	@, %sfp
	str	r1, [sp, #8]	@, %sfp
	add	r1, r2, #312	@,,
	str	r1, [sp, #24]	@, %sfp
	str	r0, [ip, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_pic_struct_present_flag
	bhi	.L3561	@,
.L3546:
	mov	r0, #0	@ D.43089,
	b	.L3553	@
.L3574:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC30	@,
	movt	r2, #:upper16:.LC30	@,
	bl	mvc_u_v	@
	add	r1, r7, #294912	@ tmp215, D.53029,
	add	r3, r1, #884	@ tmp215, tmp215,
	movw	r2, #:lower16:.LC31	@,
	mov	r1, #32	@,
	movt	r2, #:upper16:.LC31	@,
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:296052	@ tmp218,
	movt	r2, #:upper16:296052	@ tmp218,
	movw	r1, #:lower16:.LC32	@,
	add	ip, r7, r2	@ tmp218, D.53029, tmp218
	movt	r1, #:upper16:.LC32	@,
	str	r0, [ip, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r3, #:lower16:296308	@ tmp221,
	movt	r3, #:upper16:296308	@ tmp221,
	add	r2, r7, r3	@ tmp221, D.53029, tmp221
	str	r0, [r2, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_fixed_frame_rate_flag
	b	.L3549	@
.L3575:
	ldr	lr, [sp, #24]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [sp, #16]	@, %sfp
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	add	fp, r2, lr	@ D.53045,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC35	@,
	movt	r2, #:upper16:.LC35	@,
	str	r0, [r6, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:317076	@ tmp266,
	movt	r3, #:upper16:317076	@ tmp266,
	mov	r1, #4	@,
	add	ip, fp, r3	@ tmp266, D.53045, tmp266
	movw	r2, #:lower16:.LC36	@,
	movt	r2, #:upper16:.LC36	@,
	strb	r0, [ip, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r2, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r3, #:lower16:317077	@ tmp270,
	movt	r3, #:upper16:317077	@ tmp270,
	add	r1, fp, r3	@ tmp270, D.53045, tmp270
	cmp	r2, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [r1, #0]	@, <variable>.cpb_size_scale
	bhi	.L3556	@,
	ldr	r0, [sp, #36]	@, %sfp
	ldr	sl, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3556	@,
	ldr	r1, [sp, #4]	@, %sfp
	mov	r8, #312	@ tmp277,
	ldr	r3, [sp, #16]	@, %sfp
	movw	r9, #:lower16:317044	@ ivtmp.8449,
	movt	r9, #:upper16:317044	@ ivtmp.8449,
	mla	ip, r8, r1, r3	@ tmp280, tmp277,,
	add	r8, ip, r9	@ ivtmp.8449, tmp280, ivtmp.8449
	mov	r9, r8	@ ivtmp.8451, ivtmp.8449
.L3558:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	add	sl, sl, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	str	r0, [r8, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC39	@,
	movt	r1, #:upper16:.LC39	@,
	str	r0, [r8, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r2, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r8, r8, #4	@ ivtmp.8449, ivtmp.8449,
	cmp	r2, sl	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r9], #1	@, <variable>.cbr_flag
	bcs	.L3558	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC40	@,
	movt	r2, #:upper16:.LC40	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:317340	@ tmp292,
	movt	r2, #:upper16:317340	@ tmp292,
	mov	r1, #5	@,
	add	r3, fp, r2	@ tmp292, D.53045, tmp292
	movw	r2, #:lower16:.LC41	@,
	movt	r2, #:upper16:.LC41	@,
	str	r0, [r3, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, fp, #315392	@ tmp295, D.53045,
	add	ip, r1, #1952	@ tmp295, tmp295,
	movw	r2, #:lower16:.LC42	@,
	mov	r1, #5	@,
	movt	r2, #:upper16:.LC42	@,
	str	r0, [ip, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:317348	@ tmp298,
	movt	r2, #:upper16:317348	@ tmp298,
	mov	r1, #5	@,
	add	r3, fp, r2	@ tmp298, D.53045, tmp298
	movw	r2, #:lower16:.LC43	@,
	movt	r2, #:upper16:.LC43	@,
	str	r0, [r3, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:317352	@ tmp301,
	movt	r1, #:upper16:317352	@ tmp301,
	add	ip, fp, r1	@ tmp301, D.53045, tmp301
	str	r0, [ip, #0]	@, <variable>.time_offset_length
	b	.L3555	@
.L3556:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.43089,
.L3553:
	add	sp, sp, #44	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	.fnend
	.size	MVC_ProcessSUBSPSMvcVuiExt, .-MVC_ProcessSUBSPSMvcVuiExt
	.align	2
	.global	MVC_ProcessSUBSPSMvcExt
	.type	MVC_ProcessSUBSPSMvcExt, %function
MVC_ProcessSUBSPSMvcExt:
	.fnstart
.LFB1742:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	subs	r5, r1, #0	@ pSubsps, pSubsps
	.pad #36
	sub	sp, sp, #36	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3635	@,
	movw	r1, #:lower16:.LC47	@,
	movt	r1, #:upper16:.LC47	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.42968,
	str	r0, [r5, #3996]	@ D.42968, <variable>.num_views_minus1
	bhi	.L3579	@,
	movw	r3, #:lower16:11199460	@ tmp180,
	movt	r3, #:upper16:11199460	@ tmp180,
	ldr	r7, [r4, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	addeq	r6, r5, #4000	@ tmp286, pSubsps,
	moveq	r8, r6	@ ivtmp.8580, tmp286
	bne	.L3579	@,
.L3581:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC48	@,
	movt	r1, #:upper16:.LC48	@,
	add	r7, r7, #1	@ i, i,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, r7	@ <variable>.num_views_minus1, i
	str	r0, [r8], #4	@, <variable>.view_id
	bcs	.L3581	@,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r2, #0	@ tmp185,
	str	r2, [r5, #4016]	@ tmp185, <variable>.num_anchor_refs
	str	r2, [r5, #4008]	@ tmp185, <variable>.num_anchor_refs
	beq	.L3582	@,
	movw	r9, #:lower16:11199460	@ tmp323,
	add	r6, r6, #12	@ ivtmp.8574, tmp286,
	movt	r9, #:upper16:11199460	@ tmp323,
	mov	r7, #1	@ i.8589,
	b	.L3591	@
.L3636:
	ldr	r8, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3635	@,
	cmp	r0, #0	@ D.42977,
	addne	sl, r7, #1004	@ tmp194, i.8589,
	addne	sl, sl, #2	@ tmp194, tmp194,
	addne	sl, r5, sl, asl #2	@, ivtmp.8568, pSubsps, tmp194,
	beq	.L3585	@,
.L3586:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC50	@,
	movt	r1, #:upper16:.LC50	@,
	add	r8, r8, #1	@ j.8585, j.8585,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #0]	@ tmp198, <variable>.num_anchor_refs
	cmp	ip, r8	@ tmp198, j.8585
	str	r0, [sl], #4	@, <variable>.anchor_ref
	bhi	.L3586	@,
.L3585:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC51	@,
	movt	r1, #:upper16:.LC51	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, #15	@ <variable>.num_views_minus1,
	movcc	r2, r3	@ tmp200, <variable>.num_views_minus1
	movcs	r2, #15	@ tmp200,
	cmp	r0, r2	@ D.42985, tmp200
	str	r0, [r6, #8]	@ D.42985, <variable>.num_anchor_refs
	bhi	.L3635	@,
	ldr	sl, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3635	@,
	cmp	r0, #0	@ D.42985,
	addne	r8, r7, #1004	@ tmp203, i.8589,
	addne	r8, r8, #2	@ tmp203, tmp203,
	addne	r8, r5, r8, asl #2	@, ivtmp.8565, pSubsps, tmp203,
	beq	.L3589	@,
.L3590:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC52	@,
	movt	r1, #:upper16:.LC52	@,
	add	sl, sl, #1	@ j.8588, j.8588,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #8]	@ tmp207, <variable>.num_anchor_refs
	cmp	r3, sl	@ tmp207, j.8588
	str	r0, [r8, #8]	@, <variable>.anchor_ref
	add	r8, r8, #4	@ ivtmp.8565, ivtmp.8565,
	bhi	.L3590	@,
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
.L3589:
	add	r7, r7, #1	@ i.8589, i.8589,
	add	r6, r6, #4	@ ivtmp.8574, ivtmp.8574,
	cmp	r7, r3	@ i.8589, <variable>.num_views_minus1
	bhi	.L3582	@,
.L3591:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC49	@,
	movt	r1, #:upper16:.LC49	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp190,
	cmp	r0, r1	@ D.42977, tmp190
	str	r0, [r6, #0]	@ D.42977, <variable>.num_anchor_refs
	bls	.L3636	@,
.L3635:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42967,
.L3578:
	add	sp, sp, #36	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3582:
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	lr, #0	@ tmp208,
	str	lr, [r5, #4048]	@ tmp208, <variable>.num_non_anchor_refs
	str	lr, [r5, #4040]	@ tmp208, <variable>.num_non_anchor_refs
	beq	.L3592	@,
	add	r6, r5, #4032	@ ivtmp.8557, pSubsps,
	movw	r9, #:lower16:11199460	@ tmp315,
	add	r6, r6, #12	@ ivtmp.8557, ivtmp.8557,
	movt	r9, #:upper16:11199460	@ tmp315,
	mov	r7, #1	@ i.8597,
	b	.L3601	@
.L3637:
	ldr	r8, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3635	@,
	cmp	r0, #0	@ D.42991,
	addne	sl, r7, #1012	@ tmp217, i.8597,
	addne	sl, sl, #2	@ tmp217, tmp217,
	addne	sl, r5, sl, asl #2	@, ivtmp.8551, pSubsps, tmp217,
	beq	.L3595	@,
.L3596:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC54	@,
	movt	r1, #:upper16:.LC54	@,
	add	r8, r8, #1	@ j.8593, j.8593,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #0]	@ tmp221, <variable>.num_non_anchor_refs
	cmp	ip, r8	@ tmp221, j.8593
	str	r0, [sl], #4	@, <variable>.non_anchor_ref
	bhi	.L3596	@,
.L3595:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC55	@,
	movt	r1, #:upper16:.LC55	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ prephitmp.8605, <variable>.num_views_minus1
	cmp	r3, #15	@ prephitmp.8605,
	movcc	r2, r3	@ tmp223, prephitmp.8605
	movcs	r2, #15	@ tmp223,
	cmp	r0, r2	@ D.42997, tmp223
	str	r0, [r6, #8]	@ D.42997, <variable>.num_non_anchor_refs
	bhi	.L3635	@,
	ldr	sl, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	sl, #0	@ <variable>.SeErrFlg,
	bne	.L3635	@,
	cmp	r0, #0	@ D.42997,
	addne	r8, r7, #1012	@ tmp226, i.8597,
	addne	r8, r8, #2	@ tmp226, tmp226,
	addne	r8, r5, r8, asl #2	@, ivtmp.8548, pSubsps, tmp226,
	beq	.L3599	@,
.L3600:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC56	@,
	movt	r1, #:upper16:.LC56	@,
	add	sl, sl, #1	@ j.8596, j.8596,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #8]	@ tmp230, <variable>.num_non_anchor_refs
	cmp	r3, sl	@ tmp230, j.8596
	str	r0, [r8, #8]	@, <variable>.non_anchor_ref
	add	r8, r8, #4	@ ivtmp.8548, ivtmp.8548,
	bhi	.L3600	@,
	ldr	r3, [r5, #3996]	@ prephitmp.8605, <variable>.num_views_minus1
.L3599:
	add	r7, r7, #1	@ i.8597, i.8597,
	add	r6, r6, #4	@ ivtmp.8557, ivtmp.8557,
	cmp	r7, r3	@ i.8597, prephitmp.8605
	bhi	.L3592	@,
.L3601:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC53	@,
	movt	r1, #:upper16:.LC53	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp213,
	cmp	r0, r1	@ D.42991, tmp213
	str	r0, [r6, #0]	@ D.42991, <variable>.num_non_anchor_refs
	bls	.L3637	@,
	b	.L3635	@
.L3579:
	movw	r0, #65534	@ tmp182,
	str	r0, [r5, #4072]	@ tmp182, <variable>.num_level_values_signalled_minus1
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42967,
	b	.L3578	@
.L3592:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC57	@,
	movt	r1, #:upper16:.LC57	@,
	bl	mvc_ue_v	@
	add	r2, r0, #1	@, D.43003,
	str	r2, [sp, #28]	@, %sfp
	cmp	r2, #16	@,
	str	r0, [r5, #4072]	@ D.43003, <variable>.num_level_values_signalled_minus1
	bhi	.L3602	@,
	movw	r7, #:lower16:11199460	@ tmp232,
	movt	r7, #:upper16:11199460	@ tmp232,
	ldr	r3, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3602	@,
	cmp	r2, #0	@,
	beq	.L3604	@,
	add	r1, r5, #4064	@, pSubsps,
	str	r3, [sp, #20]	@ <variable>.SeErrFlg, %sfp
	add	lr, r1, #12	@,,
	str	r5, [sp, #8]	@ pSubsps, %sfp
	str	lr, [sp, #24]	@, %sfp
.L3615:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC58	@,
	movt	r2, #:upper16:.LC58	@,
	bl	mvc_u_v	@
	ldr	r2, [sp, #24]	@, %sfp
	movw	r1, #:lower16:.LC59	@,
	movt	r1, #:upper16:.LC59	@,
	str	r0, [r2, #0]	@, <variable>.level_idc
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	ip, [sp, #24]	@, %sfp
	add	r2, r0, #1	@, D.43010,
	str	r2, [sp, #12]	@, %sfp
	cmp	r2, #64	@,
	str	r0, [ip, #64]	@ D.43010, <variable>.num_applicable_ops_minus1
	bhi	.L3605	@,
	ldr	r6, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r6, #0	@ <variable>.SeErrFlg,
	bne	.L3605	@,
	cmp	r2, #0	@,
	beq	.L3607	@,
	ldr	r2, [sp, #20]	@, %sfp
	ldr	r3, [sp, #8]	@, %sfp
	add	r9, r3, r2, asl #8	@, tmp250,,,
	mov	r0, r2, asl #6	@,,
	add	r5, r9, #4160	@ ivtmp.8531, tmp250,
	str	r0, [sp, #16]	@, %sfp
	add	r5, r5, #44	@ ivtmp.8531, ivtmp.8531,
.L3614:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC60	@,
	movt	r2, #:upper16:.LC60	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC61	@,
	movt	r1, #:upper16:.LC61	@,
	str	r0, [r5, #0]	@, <variable>.applicable_op_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	add	r1, r5, #4096	@ tmp253, ivtmp.8531,
	add	r9, r0, #1	@ applicable_op_num_target_views, D.43017,
	str	r0, [r1, #0]	@ D.43017, <variable>.applicable_op_num_target_views_minus1
	cmp	r9, #64	@ applicable_op_num_target_views,
	bhi	.L3608	@,
	ldr	lr, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3608	@,
	cmp	r9, #0	@ applicable_op_num_target_views,
	beq	.L3610	@,
	ldr	r0, [sp, #16]	@, %sfp
	sub	r3, r9, #1	@ tmp329, applicable_op_num_target_views,
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	add	ip, r0, r6	@ tmp266,, j
	mov	r0, r4	@, pMvcCtx
	and	r2, r3, #1	@, tmp329,
	ldr	sl, [sp, #8]	@, %sfp
	mov	lr, ip, asl #8	@ tmp267, tmp266,
	str	r2, [sp, #4]	@, %sfp
	add	r8, lr, #12352	@ tmp268, tmp267,
	bl	mvc_ue_v	@
	add	fp, r8, #40	@ tmp268, tmp268,
	mov	r8, #1	@ k,
	add	fp, sl, fp	@ tmp270,, tmp268
	cmp	r9, r8	@ applicable_op_num_target_views, k
	add	r3, fp, #4	@ ivtmp.8526, tmp270,
	add	sl, r3, #4	@ ivtmp.8526, ivtmp.8526,
	str	r0, [fp, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3610	@,
	ldr	lr, [sp, #4]	@, %sfp
	cmp	lr, #0	@,
	beq	.L3611	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	str	r3, [sp, #0]	@,
	bl	mvc_ue_v	@
	ldr	ip, [sp, #0]	@,
	mov	r8, #2	@ k,
	cmp	r9, r8	@ applicable_op_num_target_views, k
	add	sl, sl, #4	@ ivtmp.8526, ivtmp.8526,
	str	r0, [ip, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3610	@,
.L3611:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	mov	fp, sl	@ tmp333, ivtmp.8526
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	add	r8, r8, #1	@ tmp332, k,
	add	r8, r8, #1	@ k, tmp332,
	str	r0, [fp], #4	@, <variable>.applicable_op_target_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	r9, r8	@ applicable_op_num_target_views, k
	str	r0, [sl, #4]	@, <variable>.applicable_op_target_view_id
	add	sl, fp, #4	@ ivtmp.8526, tmp333,
	bhi	.L3611	@,
.L3610:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC63	@,
	movt	r1, #:upper16:.LC63	@,
	bl	mvc_ue_v	@
	movw	r2, #1023	@,
	add	r1, r5, #270336	@ tmp273, ivtmp.8531,
	cmp	r0, r2	@ D.43024,
	str	r0, [r1, #0]	@ D.43024, <variable>.applicable_op_num_views_minus1
	bhi	.L3635	@,
	ldr	r3, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3635	@,
	ldr	lr, [sp, #12]	@, %sfp
	add	r6, r6, #1	@ j, j,
	add	r5, r5, #4	@ ivtmp.8531, ivtmp.8531,
	cmp	lr, r6	@, j
	bhi	.L3614	@,
.L3607:
	ldr	r3, [sp, #20]	@, %sfp
	ldr	ip, [sp, #28]	@, %sfp
	add	r0, r3, #1	@,,
	ldr	r2, [sp, #24]	@, %sfp
	cmp	ip, r0	@,
	str	r0, [sp, #20]	@, %sfp
	add	r1, r2, #4	@,,
	str	r1, [sp, #24]	@, %sfp
	bhi	.L3615	@,
.L3604:
	mov	r0, #0	@ D.42967,
	b	.L3578	@
.L3608:
	ldr	ip, [sp, #20]	@, %sfp
	ldr	r5, [sp, #8]	@ pSubsps, %sfp
	add	r1, r6, ip, asl #6	@, tmp257, j,,
	movw	ip, #65534	@ tmp264,
	add	r3, r1, #2064	@ tmp258, tmp257,
	add	r2, r3, #10	@ tmp258, tmp258,
	add	r0, r5, r2, asl #2	@, tmp262, pSubsps, tmp258,
	str	ip, [r0, #4]	@ tmp264, <variable>.applicable_op_num_target_views_minus1
	b	.L3635	@
.L3602:
	movw	r0, #65534	@ tmp234,
	str	r0, [r5, #4072]	@ tmp234, <variable>.num_level_values_signalled_minus1
	b	.L3635	@
.L3605:
	ldr	ip, [sp, #20]	@, %sfp
	movw	r0, #65534	@ tmp246,
	ldr	r5, [sp, #8]	@ pSubsps, %sfp
	add	r1, ip, #1024	@ tmp240,,
	add	lr, r1, #10	@ tmp240, tmp240,
	add	r3, r5, lr, asl #2	@, tmp244, pSubsps, tmp240,
	str	r0, [r3, #4]	@ tmp246, <variable>.num_applicable_ops_minus1
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42967,
	b	.L3578	@
	.fnend
	.size	MVC_ProcessSUBSPSMvcExt, .-MVC_ProcessSUBSPSMvcExt
	.align	2
	.global	mvc_vui_parameters
	.type	mvc_vui_parameters, %function
mvc_vui_parameters:
	.fnstart
.LFB1735:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	mov	r5, r1	@ pVUI, pVUI
	movw	r1, #:lower16:.LC64	@,
	movt	r1, #:upper16:.LC64	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.42127,
	strb	r0, [r5, #0]	@ D.42127, <variable>.aspect_ratio_info_present_flag
	cmp	r0, #0	@ D.42127,
	streqb	r0, [r5, #15]	@ D.42127, <variable>.aspect_ratio_idc
	bne	.L3664	@,
.L3640:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC68	@,
	movt	r1, #:upper16:.LC68	@,
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.42142,
	strb	r2, [r5, #1]	@ D.42142, <variable>.overscan_info_present_flag
	cmp	r2, #0	@ D.42142,
	bne	.L3665	@,
.L3641:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC70	@,
	movt	r1, #:upper16:.LC70	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.42149,
	strb	r3, [r5, #3]	@ D.42149, <variable>.video_signal_type_present_flag
	cmp	r3, #0	@ D.42149,
	moveq	r3, #5	@ tmp229,
	streq	r3, [r5, #28]	@ tmp229, <variable>.video_format
	bne	.L3666	@,
.L3643:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC77	@,
	movt	r1, #:upper16:.LC77	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.42170,
	strb	r0, [r5, #6]	@ D.42170, <variable>.chroma_location_info_present_flag
	cmp	r0, #0	@ D.42170,
	bne	.L3667	@,
.L3644:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC80	@,
	movt	r1, #:upper16:.LC80	@,
	bl	mvc_u_1	@
	uxtb	r1, r0	@ D.42177,
	strb	r1, [r5, #8]	@ D.42177, <variable>.timing_info_present_flag
	cmp	r1, #0	@ D.42177,
	bne	.L3668	@,
.L3645:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC84	@,
	movt	r1, #:upper16:.LC84	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.42197,
	strb	r0, [r5, #7]	@ D.42197, <variable>.nal_hrd_parameters_present_flag
	cmp	r0, #0	@ D.42197,
	beq	.L3646	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC86	@,
	movt	r2, #:upper16:.LC86	@,
	str	r0, [r5, #96]	@, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC87	@,
	movt	r2, #:upper16:.LC87	@,
	strb	r0, [r5, #92]	@, <variable>.nal_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r1, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	cmp	r1, #31	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #93]	@, <variable>.nal_hrd_parameters.cpb_size_scale
	bhi	.L3652	@,
	movw	lr, #:lower16:11199460	@ tmp254,
	movt	lr, #:upper16:11199460	@ tmp254,
	ldr	r8, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.8652, pVUI
	moveq	r7, r5	@ ivtmp.8642, pVUI
	bne	.L3652	@,
.L3650:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC88	@,
	movt	r1, #:upper16:.LC88	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC89	@,
	movt	r1, #:upper16:.LC89	@,
	str	r0, [r6, #100]	@, <variable>.nal_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	str	r0, [r6, #228]	@, <variable>.nal_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r2, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.8652, ivtmp.8652,
	cmp	r2, r8	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #60]	@, <variable>.nal_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.8642, ivtmp.8642,
	bcs	.L3650	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC91	@,
	movt	r2, #:upper16:.LC91	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC92	@,
	movt	r2, #:upper16:.LC92	@,
	str	r0, [r5, #356]	@, <variable>.nal_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC93	@,
	movt	r2, #:upper16:.LC93	@,
	str	r0, [r5, #360]	@, <variable>.nal_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC94	@,
	movt	r2, #:upper16:.LC94	@,
	str	r0, [r5, #364]	@, <variable>.nal_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #368]	@, <variable>.nal_hrd_parameters.time_offset_length
.L3646:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC95	@,
	movt	r1, #:upper16:.LC95	@,
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.42226,
	strb	ip, [r5, #10]	@ D.42226, <variable>.vcl_hrd_parameters_present_flag
	cmp	ip, #0	@ D.42226,
	bne	.L3669	@,
.L3651:
	ldrb	lr, [r5, #7]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	lr, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L3655	@,
	ldrb	r2, [r5, #10]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	bne	.L3655	@,
.L3656:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC97	@,
	movt	r1, #:upper16:.LC97	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC98	@,
	movt	r1, #:upper16:.LC98	@,
	strb	r0, [r5, #11]	@, <variable>.pic_struct_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.42260,
	strb	ip, [r5, #12]	@ D.42260, <variable>.bitstream_restriction_flag
	cmp	ip, #0	@ D.42260,
	bne	.L3670	@,
	movw	lr, #:lower16:11199460	@ tmp302,
	movt	lr, #:upper16:11199460	@ tmp302,
	ldr	r0, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3658	@,
.L3659:
	mov	r0, #0	@ D.42211,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L3655:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC96	@,
	movt	r1, #:upper16:.LC96	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #14]	@, <variable>.low_delay_hrd_flag
	b	.L3656	@
.L3670:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC99	@,
	movt	r1, #:upper16:.LC99	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC100	@,
	movt	r1, #:upper16:.LC100	@,
	strb	r0, [r5, #13]	@, <variable>.motion_vectors_over_pic_boundaries_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC101	@,
	movt	r1, #:upper16:.LC101	@,
	str	r0, [r5, #684]	@, <variable>.max_bytes_per_pic_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC102	@,
	movt	r1, #:upper16:.LC102	@,
	str	r0, [r5, #688]	@, <variable>.max_bits_per_mb_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC103	@,
	movt	r1, #:upper16:.LC103	@,
	str	r0, [r5, #696]	@, <variable>.log2_max_mv_length_horizontal
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC104	@,
	movt	r1, #:upper16:.LC104	@,
	str	r0, [r5, #692]	@, <variable>.log2_max_mv_length_vertical
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC105	@,
	movt	r1, #:upper16:.LC105	@,
	str	r0, [r5, #700]	@, <variable>.num_reorder_frames
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11199460	@ tmp300,
	movt	r1, #:upper16:11199460	@ tmp300,
	str	r0, [r5, #704]	@, <variable>.max_dec_frame_buffering
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3659	@,
.L3658:
	mvn	r0, #0	@ D.42211,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L3664:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC65	@,
	movt	r2, #:upper16:.LC65	@,
	bl	mvc_u_v	@
	uxtb	r1, r0	@ D.42132,
	strb	r1, [r5, #15]	@ D.42132, <variable>.aspect_ratio_idc
	cmp	r1, #255	@ D.42132,
	bne	.L3640	@,
	mov	r1, #16	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC66	@,
	movt	r2, #:upper16:.LC66	@,
	bl	mvc_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC67	@,
	movt	r2, #:upper16:.LC67	@,
	str	r0, [r5, #16]	@, <variable>.sar_width
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #20]	@, <variable>.sar_height
	b	.L3640	@
.L3668:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC81	@,
	movt	r2, #:upper16:.LC81	@,
	bl	mvc_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC82	@,
	movt	r2, #:upper16:.LC82	@,
	str	r0, [r5, #52]	@, <variable>.num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC83	@,
	movt	r1, #:upper16:.LC83	@,
	str	r0, [r5, #56]	@, <variable>.time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.42186,
	strb	r2, [r5, #9]	@ D.42186, <variable>.fixed_frame_rate_flag
	cmp	r2, #1	@ D.42186,
	bne	.L3645	@,
	ldr	r1, [r5, #52]	@ D.42190, <variable>.num_units_in_tick
	cmp	r1, #0	@ D.42190,
	beq	.L3645	@,
	ldr	r0, [r5, #56]	@, <variable>.time_scale
	bl	__aeabi_uidiv	@
	movw	r3, #:lower16:11198020	@ tmp240,
	movt	r3, #:upper16:11198020	@ tmp240,
	mov	ip, r0, lsr #1	@ tmp245,,
	str	ip, [r4, r3]	@ tmp245, <variable>.frame_rate
	b	.L3645	@
.L3667:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC78	@,
	movt	r1, #:upper16:.LC78	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC79	@,
	movt	r1, #:upper16:.LC79	@,
	str	r0, [r5, #44]	@, <variable>.chroma_sample_loc_type_top_field
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	str	r0, [r5, #48]	@, <variable>.chroma_sample_loc_type_bottom_field
	b	.L3644	@
.L3666:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC71	@,
	movt	r2, #:upper16:.LC71	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC72	@,
	movt	r1, #:upper16:.LC72	@,
	str	r0, [r5, #28]	@, <variable>.video_format
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC73	@,
	movt	r1, #:upper16:.LC73	@,
	strb	r0, [r5, #4]	@, <variable>.video_full_range_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.42158,
	strb	ip, [r5, #5]	@ D.42158, <variable>.colour_description_present_flag
	cmp	ip, #0	@ D.42158,
	beq	.L3643	@,
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC74	@,
	movt	r2, #:upper16:.LC74	@,
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC75	@,
	movt	r2, #:upper16:.LC75	@,
	str	r0, [r5, #32]	@, <variable>.colour_primaries
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC76	@,
	movt	r2, #:upper16:.LC76	@,
	str	r0, [r5, #36]	@, <variable>.transfer_characteristics
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #40]	@, <variable>.matrix_coefficients
	b	.L3643	@
.L3665:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC69	@,
	movt	r1, #:upper16:.LC69	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.overscan_appropriate_flag
	b	.L3641	@
.L3669:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC86	@,
	movt	r2, #:upper16:.LC86	@,
	str	r0, [r5, #408]	@, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC87	@,
	movt	r2, #:upper16:.LC87	@,
	strb	r0, [r5, #404]	@, <variable>.vcl_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r3, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	cmp	r3, #31	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #405]	@, <variable>.vcl_hrd_parameters.cpb_size_scale
	bhi	.L3652	@,
	movw	r0, #:lower16:11199460	@ tmp273,
	movt	r0, #:upper16:11199460	@ tmp273,
	ldr	r8, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.8634, pVUI
	moveq	r7, r5	@ ivtmp.8647, pVUI
	bne	.L3652	@,
.L3654:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC88	@,
	movt	r1, #:upper16:.LC88	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC89	@,
	movt	r1, #:upper16:.LC89	@,
	str	r0, [r6, #412]	@, <variable>.vcl_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	str	r0, [r6, #540]	@, <variable>.vcl_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r1, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.8634, ivtmp.8634,
	cmp	r1, r8	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #372]	@, <variable>.vcl_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.8647, ivtmp.8647,
	bcs	.L3654	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC91	@,
	movt	r2, #:upper16:.LC91	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC92	@,
	movt	r2, #:upper16:.LC92	@,
	str	r0, [r5, #668]	@, <variable>.vcl_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC93	@,
	movt	r2, #:upper16:.LC93	@,
	str	r0, [r5, #672]	@, <variable>.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC94	@,
	movt	r2, #:upper16:.LC94	@,
	str	r0, [r5, #676]	@, <variable>.vcl_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #680]	@, <variable>.vcl_hrd_parameters.time_offset_length
	b	.L3651	@
.L3652:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42211,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	.fnend
	.size	mvc_vui_parameters, .-mvc_vui_parameters
	.align	2
	.global	MVC_ProcessSPS
	.type	MVC_ProcessSPS, %function
MVC_ProcessSPS:
	.fnstart
.LFB1738:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	subs	r5, r1, #0	@ pSPS, pSPS
	.pad #48
	sub	sp, sp, #48	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3717	@,
	ldr	r3, [r5, #736]	@ D.42541, <variable>.profile_idc
	cmp	r3, #100	@ D.42541,
	cmpne	r3, #110	@, D.42541,
	movne	r2, #0	@, tmp215
	moveq	r2, #1	@, tmp215
	beq	.L3674	@,
	cmp	r3, #122	@ D.42541,
	beq	.L3674	@,
	cmp	r3, #144	@ D.42541,
	beq	.L3674	@,
	cmp	r3, #118	@ D.42541,
	beq	.L3674	@,
	cmp	r3, #128	@ D.42541,
	strneb	r2, [r5, #27]	@ tmp215, <variable>.seq_scaling_matrix_present_flag
	movne	r3, #1	@ tmp379,
	strne	r3, [r5, #748]	@ tmp379, <variable>.chroma_format_idc
	bne	.L3684	@,
.L3674:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC106	@,
	movt	r1, #:upper16:.LC106	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.42550,
	str	r0, [r5, #748]	@ D.42550, <variable>.chroma_format_idc
	bhi	.L3717	@,
	movw	r6, #:lower16:11199460	@ tmp217,
	movt	r6, #:upper16:11199460	@ tmp217,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3717	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC107	@,
	movt	r1, #:upper16:.LC107	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3678	@,
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3678	@,
.L3679:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3680	@,
	movw	r2, #:lower16:11199460	@ tmp223,
	movt	r2, #:upper16:11199460	@ tmp223,
	ldr	r1, [r4, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3680	@,
.L3681:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC109	@,
	movt	r1, #:upper16:.LC109	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	bne	.L3717	@,
	movw	lr, #:lower16:11199460	@ tmp226,
	movt	lr, #:upper16:11199460	@ tmp226,
	ldr	ip, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3717	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC110	@,
	movt	r1, #:upper16:.LC110	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.42569,
	strb	r3, [r5, #27]	@ D.42569, <variable>.seq_scaling_matrix_present_flag
	cmp	r3, #1	@ D.42569,
	beq	.L3751	@,
.L3684:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC112	@,
	movt	r1, #:upper16:.LC112	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.42638,
	str	r0, [r5, #2896]	@ D.42638, <variable>.log2_max_frame_num_minus4
	bhi	.L3717	@,
	movw	r6, #:lower16:11199460	@ tmp383,
	movt	r6, #:upper16:11199460	@ tmp383,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3717	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC113	@,
	movt	r1, #:upper16:.LC113	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.42643,
	str	r0, [r5, #2900]	@ D.42643, <variable>.pic_order_cnt_type
	bhi	.L3717	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3717	@,
	cmp	r0, #0	@ D.42643,
	beq	.L3752	@,
	cmp	r0, #1	@ D.42643,
	beq	.L3753	@,
.L3706:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC120	@,
	movt	r1, #:upper16:.LC120	@,
	movw	r6, #:lower16:11199460	@ tmp411,
	bl	mvc_ue_v	@
	movt	r6, #:upper16:11199460	@ tmp411,
	str	r0, [r5, #3944]	@, <variable>.num_ref_frames
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	beq	.L3754	@,
.L3707:
	mvn	r0, #0	@ D.42537,
.L3673:
	add	sp, sp, #48	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
.L3680:
	bl	vfmw_dprint_nothing	@
	b	.L3681	@
.L3678:
	bl	vfmw_dprint_nothing	@
	b	.L3679	@
.L3752:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC114	@,
	movt	r1, #:upper16:.LC114	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.42650,
	str	r0, [r5, #2904]	@ D.42650, <variable>.log2_max_pic_order_cnt_lsb_minus4
	bhi	.L3717	@,
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3706	@,
.L3717:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42537,
	b	.L3673	@
.L3751:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	add	sl, r5, #752	@ D.42580, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2672	@ D.42583, pSPS,
	cmp	r0, #1	@ temp.8744,
	str	r0, [sp, #8]	@ temp.8744, q4x4defaultflag
	strb	r0, [r5, #6]	@ temp.8744, <variable>.seq_scaling_list_present_flag
	beq	.L3685	@,
.L3747:
	movw	ip, #:lower16:.LANCHOR2	@ tmp238,
	movt	ip, #:upper16:.LANCHOR2	@ tmp238,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp238,,,,
	stmia	r6, {r0, r1, r2, r3}	@ D.42583,,,,
.L3686:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8748,
	str	r0, [sp, #12]	@ temp.8748, q4x4defaultflag
	strb	r0, [r5, #7]	@ temp.8748, <variable>.seq_scaling_list_present_flag
	beq	.L3687	@,
	add	r7, r6, #16	@ tmp522, D.42583,
	mov	r1, r6	@, D.42583
	mov	r2, #16	@,
	mov	r0, r7	@, tmp522
	bl	memcpy	@
.L3688:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8756,
	str	r0, [sp, #16]	@ temp.8756, q4x4defaultflag
	strb	r0, [r5, #8]	@ temp.8756, <variable>.seq_scaling_list_present_flag
	beq	.L3689	@,
	mov	r1, r7	@, tmp522
	add	r0, r6, #32	@, D.42583,
	mov	r2, #16	@,
	bl	memcpy	@
.L3690:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8765,
	str	r0, [sp, #20]	@ temp.8765, q4x4defaultflag
	strb	r0, [r5, #9]	@ temp.8765, <variable>.seq_scaling_list_present_flag
	beq	.L3691	@,
	add	r7, r6, #48	@ tmp524, D.42583,
	ldr	r1, .L3761	@,
	mov	r2, #16	@,
	mov	r0, r7	@, tmp524
	bl	memcpy	@
.L3692:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8773,
	str	r0, [sp, #24]	@ temp.8773, q4x4defaultflag
	strb	r0, [r5, #10]	@ temp.8773, <variable>.seq_scaling_list_present_flag
	beq	.L3693	@,
	add	r8, r6, #64	@ tmp526, D.42583,
	mov	r1, r7	@, tmp524
	mov	r2, #16	@,
	mov	r0, r8	@, tmp526
	bl	memcpy	@
.L3694:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.42574,
	str	r0, [sp, #28]	@ D.42574, q4x4defaultflag
	strb	r0, [r5, #11]	@ D.42574, <variable>.seq_scaling_list_present_flag
	beq	.L3755	@,
	add	r0, r6, #80	@, D.42583,
	mov	r1, r8	@, tmp526
	mov	r2, #16	@,
	bl	memcpy	@
.L3696:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	add	r8, r5, #1136	@ D.42617, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2768	@ D.42620, pSPS,
	cmp	r0, #1	@ temp.8782,
	str	r0, [sp, #40]	@ temp.8782, q8x8defaultflag
	strb	r0, [r5, #12]	@ temp.8782, <variable>.seq_scaling_list_present_flag
	beq	.L3697	@,
	ldr	lr, .L3761+4	@ tmp348,
	mov	r7, r6	@ D.42620, D.42620
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp350,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.42620,,,,
	mov	ip, r7	@ D.42620, D.42620
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp531,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.42620,,,,
	mov	r7, ip	@ D.42620, D.42620
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp533,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.42620,,,,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp533,,,,
	stmia	r7, {r0, r1, r2, r3}	@ D.42620,,,,
.L3698:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.42610,
	str	r0, [sp, #44]	@ D.42610, q8x8defaultflag
	strb	r0, [r5, #13]	@ D.42610, <variable>.seq_scaling_list_present_flag
	beq	.L3756	@,
	add	r0, r6, #64	@, D.42620,
	ldr	r1, .L3761+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3684	@
.L3753:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #18]	@, <variable>.delta_pic_order_always_zero_flag
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2908]	@, <variable>.offset_for_non_ref_pic
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC117	@,
	movt	r1, #:upper16:.LC117	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2912]	@, <variable>.offset_for_top_to_bottom_field
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC118	@,
	movt	r1, #:upper16:.LC118	@,
	bl	mvc_ue_v	@
	cmp	r0, #255	@ prephitmp.8679,
	mov	r3, r0	@ prephitmp.8679,
	str	r0, [r5, #2916]	@ prephitmp.8679, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bhi	.L3717	@,
	movw	r8, #:lower16:11199460	@ tmp402,
	movt	r8, #:upper16:11199460	@ tmp402,
	ldr	r7, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	addeq	r6, r5, #2912	@ ivtmp.8696, pSPS,
	addeq	r6, r6, #8	@ ivtmp.8696, ivtmp.8696,
	beq	.L3709	@,
	b	.L3717	@
.L3710:
	bl	mvc_se_v	@
	str	r0, [r6], #4	@, <variable>.offset_for_ref_frame
	ldr	r1, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	ldr	r3, [r5, #2916]	@ prephitmp.8679, <variable>.num_ref_frames_in_pic_order_cnt_cycle
.L3709:
	cmp	r7, r3	@ i, prephitmp.8679
	movw	r1, #:lower16:.LC119	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC119	@,
	add	r7, r7, #1	@ i, i,
	bcc	.L3710	@,
	movw	r0, #:lower16:11199460	@ tmp408,
	movt	r0, #:upper16:11199460	@ tmp408,
	ldr	lr, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	b	.L3706	@
.L3754:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC121	@,
	movt	r1, #:upper16:.LC121	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #19]	@, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC122	@,
	movt	r1, #:upper16:.LC122	@,
	movw	r7, #509	@ tmp419,
	bl	mvc_ue_v	@
	sub	r3, r0, #1	@ tmp418, D.42685,
	str	r0, [r5, #3948]	@ D.42685, <variable>.pic_width_in_mbs_minus1
	cmp	r3, r7	@ tmp418, tmp419
	bhi	.L3717	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3717	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC123	@,
	movt	r1, #:upper16:.LC123	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #3952]	@, <variable>.pic_height_in_map_units_minus1
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC124	@,
	movt	r1, #:upper16:.LC124	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.42695,
	strb	r0, [r5, #20]	@ D.42695, <variable>.frame_mbs_only_flag
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	cmp	r0, #0	@ D.42695,
	bne	.L3713	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC125	@,
	movt	r1, #:upper16:.LC125	@,
	bl	mvc_u_1	@
	ldr	r2, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r3, r2, #1	@ prephitmp.8725, <variable>.pic_height_in_map_units_minus1,
	cmp	r3, #255	@ prephitmp.8725,
	strb	r0, [r5, #21]	@, <variable>.mb_adaptive_frame_field_flag
	bhi	.L3717	@,
	ldr	r8, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	r8, r8, #1	@ prephitmp.8673, <variable>.pic_width_in_mbs_minus1,
	cmp	r8, #3	@ prephitmp.8673,
	bls	.L3717	@,
	cmp	r3, #1	@ prephitmp.8725,
	movhi	sl, #2	@ temp,
	bls	.L3717	@,
.L3745:
	mul	r1, sl, r3	@ tmp433, temp, prephitmp.8725
	mov	r8, r8, asl #4	@ PicWidthInSmp, prephitmp.8673,
	mov	lr, #3	@ tmp436,
	mov	r6, r1, asl #4	@ PicHeightInSmp, tmp433,
	mul	r3, r8, r6	@ tmp434, PicWidthInSmp, PicHeightInSmp
	mov	ip, r3, lsr #1	@ tmp435, tmp434,
	mul	r1, lr, ip	@ pic_size, tmp436, tmp435
	cmp	r1, #100663296	@ pic_size,
	bhi	.L3717	@,
	ldr	r2, [r5, #740]	@ <variable>.level_idc, <variable>.level_idc
	sub	r0, r2, #10	@ tmp438, <variable>.level_idc,
	cmp	r0, #31	@ tmp438,
	ldrls	pc, [pc, r0, asl #2]	@ tmp438
	b	.L3717	@
.L3726:
	.word	.L3718
	.word	.L3719
	.word	.L3720
	.word	.L3720
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3720
	.word	.L3721
	.word	.L3722
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3722
	.word	.L3723
	.word	.L3724
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3717
	.word	.L3725
	.word	.L3725
.L3756:
	add	r6, r6, #64	@ tmp525, D.42620,
	add	r1, r8, #256	@, D.42617,
	mov	r0, r4	@, pMvcCtx
	mov	r3, #64	@,
	mov	r2, r6	@, tmp525
	add	ip, sp, #44	@ tmp363,,
	str	ip, [sp, #0]	@ tmp363,
	bl	MVC_Scaling_List	@
	ldr	r2, [sp, #44]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r2, #1	@ q8x8defaultflag,
	bne	.L3684	@,
	mov	r0, r6	@, tmp525
	ldr	r1, .L3761+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3684	@
.L3691:
	add	r7, r6, #48	@ tmp524, D.42583,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #192	@, D.42580,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp524
	add	ip, sp, #20	@ tmp293,,
	str	ip, [sp, #0]	@ tmp293,
	bl	MVC_Scaling_List	@
	ldr	r2, [sp, #20]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r2, #1	@ q4x4defaultflag,
	bne	.L3692	@,
	mov	r0, r7	@, tmp524
	ldr	r1, .L3761	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3692	@
.L3689:
	add	r7, r6, #32	@ tmp523, D.42583,
	add	r1, sl, #128	@, D.42580,
	mov	r3, #16	@,
	mov	r0, r4	@, pMvcCtx
	mov	r2, r7	@, tmp523
	add	r8, sp, r3	@ tmp272,,
	str	r8, [sp, #0]	@ tmp272,
	bl	MVC_Scaling_List	@
	ldr	r1, [sp, #16]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r1, #1	@ q4x4defaultflag,
	bne	.L3690	@,
	mov	r0, r7	@, tmp523
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r2, #16	@,
	movt	r1, #:upper16:.LANCHOR2	@,
	bl	memcpy	@
	b	.L3690	@
.L3687:
	add	r7, r6, #16	@ tmp522, D.42583,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #64	@, D.42580,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp522
	add	lr, sp, #12	@ tmp252,,
	str	lr, [sp, #0]	@ tmp252,
	bl	MVC_Scaling_List	@
	ldr	r0, [sp, #12]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3688	@,
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r0, r7	@, tmp522
	movt	r1, #:upper16:.LANCHOR2	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3688	@
.L3685:
	mov	r0, r4	@, pMvcCtx
	mov	r1, sl	@, D.42580
	mov	r2, r6	@, D.42583
	mov	r3, #16	@,
	add	r8, sp, #8	@ tmp236,,
	str	r8, [sp, #0]	@ tmp236,
	bl	MVC_Scaling_List	@
	ldr	r7, [sp, #8]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r7, #1	@ q4x4defaultflag,
	bne	.L3686	@,
	b	.L3747	@
.L3755:
	add	r6, r6, #80	@ tmp527, D.42583,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #320	@, D.42580,
	mov	r3, #16	@,
	mov	r2, r6	@, tmp527
	add	r8, sp, #28	@ tmp329,,
	str	r8, [sp, #0]	@ tmp329,
	bl	MVC_Scaling_List	@
	ldr	r0, [sp, #28]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3696	@,
	mov	r0, r6	@, tmp527
	ldr	r1, .L3761	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3696	@
.L3693:
	add	r8, r6, #64	@ tmp526, D.42583,
	mov	r3, #16	@,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #256	@, D.42580,
	mov	r2, r8	@, tmp526
	add	lr, sp, #24	@ tmp314,,
	str	lr, [sp, #0]	@ tmp314,
	bl	MVC_Scaling_List	@
	ldr	r3, [sp, #24]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r3, #1	@ q4x4defaultflag,
	bne	.L3694	@,
	mov	r0, r8	@, tmp526
	ldr	r1, .L3761	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3694	@
.L3697:
	mov	r1, r8	@, D.42617
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, D.42620
	mov	r3, #64	@,
	add	lr, sp, #40	@ tmp351,,
	str	lr, [sp, #0]	@ tmp351,
	bl	MVC_Scaling_List	@
	ldr	r1, [sp, #40]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r1, #1	@ q8x8defaultflag,
	bne	.L3698	@,
	ldr	ip, .L3761+4	@ tmp354,
	mov	lr, r6	@ D.42620, D.42620
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp356,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.42620,,,,
	mov	r7, lr	@ D.42620, D.42620
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp535,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.42620,,,,
	mov	lr, r7	@ D.42620, D.42620
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp537,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.42620,,,,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp537,,,,
	stmia	lr, {r0, r1, r2, r3}	@ D.42620,,,,
	b	.L3698	@
.L3724:
	mov	r0, #7864320	@ size,
.L3727:
	bl	__aeabi_uidiv	@
	cmp	r0, #16	@,
	movcc	r7, r0	@ size.8702,
	movcs	r7, #16	@ size.8702,
	bl	vfmw_dprint_nothing	@
	ldr	r9, [r5, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	cmp	r9, r7	@ <variable>.num_ref_frames, size.8702
	bhi	.L3728	@,
	movw	ip, #:lower16:11199460	@ tmp443,
	movt	ip, #:upper16:11199460	@ tmp443,
	ldr	lr, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L3729	@,
.L3728:
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r5, #3944]	@ temp.8729, <variable>.num_ref_frames
	cmp	r3, #16	@ temp.8729,
	bhi	.L3748	@,
	cmp	r7, r3	@ size.8702, temp.8729
	movcc	r7, r3	@ size.8702, temp.8729
.L3748:
	str	r7, [r5, #3944]	@ size.8702, <variable>.num_ref_frames
.L3729:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC126	@,
	movt	r1, #:upper16:.LC126	@,
	movw	r9, #:lower16:11199460	@ tmp447,
	bl	mvc_u_1	@
	movt	r9, #:upper16:11199460	@ tmp447,
	strb	r0, [r5, #22]	@, <variable>.direct_8x8_inference_flag
	ldr	r3, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC127	@,
	movt	r1, #:upper16:.LC127	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.42741,
	strb	r0, [r5, #23]	@ D.42741, <variable>.frame_cropping_flag
	ldr	r1, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	cmp	r0, #0	@ D.42741,
	bne	.L3757	@,
.L3731:
	mov	r3, r8, lsr #1	@ tmp479, PicWidthInSmp,
	mov	lr, r6, lsr #1	@ tmp480, PicHeightInSmp,
	str	r8, [r5, #3976]	@ PicWidthInSmp, <variable>.disp_width
	str	r3, [r5, #3984]	@ tmp479, <variable>.disp_center_x
	str	lr, [r5, #3988]	@ tmp480, <variable>.disp_center_y
	str	r6, [r5, #3980]	@ PicHeightInSmp, <variable>.disp_height
.L3733:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC132	@,
	movt	r1, #:upper16:.LC132	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:11199460	@ tmp483,
	movt	r1, #:upper16:11199460	@ tmp483,
	uxtb	r2, r0	@ D.42779,
	strb	r2, [r5, #24]	@ D.42779, <variable>.vui_parameters_present_flag
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3707	@,
	cmp	r2, #0	@ D.42779,
	add	ip, r3, #2	@ tmp485, tmp485,
	str	ip, [r5, #68]	@ tmp485, <variable>.vui_seq_parameters.matrix_coefficients
	bne	.L3758	@,
	mov	r0, r2	@ prephitmp.8677, D.42779
	mov	lr, #5	@ tmp491,
	strb	r2, [r5, #43]	@ D.42779, <variable>.vui_seq_parameters.aspect_ratio_idc
	str	lr, [r5, #56]	@ tmp491, <variable>.vui_seq_parameters.video_format
.L3736:
	str	r6, [sp, #0]	@ PicHeightInSmp,
	mov	r3, r8	@, PicWidthInSmp
	ldr	r1, [r5, #44]	@, <variable>.vui_seq_parameters.sar_width
	ldr	r2, [r5, #48]	@, <variable>.vui_seq_parameters.sar_height
	bl	MVC_GetDar	@
	ldr	r3, [r5, #3944]	@ temp.8739, <variable>.num_ref_frames
	cmp	r3, #0	@ temp.8739,
	str	r0, [r5, #52]	@, <variable>.vui_seq_parameters.aspect_ratio
	beq	.L3740	@,
	cmp	r7, r3	@ size.8702, temp.8739
	movcs	r7, r3	@ size.8702, temp.8739
.L3740:
	ldr	r2, [r4, #0]	@ D.42810, <variable>.pstExtraData
	cmp	r7, #16	@ size.8702,
	movcs	r7, #16	@ size.8703,
	ldr	r0, [r2, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L3759	@,
.L3741:
	cmp	r6, #1920	@ PicHeightInSmp,
	bcc	.L3743	@,
	cmp	r7, #4	@ size.8703,
	movcs	r7, #4	@ size.8703,
.L3743:
	add	r7, r7, #1	@ tmp514, size.8703,
	mov	r0, #0	@ D.42537,
	str	r7, [r5, #3972]	@ tmp514, <variable>.dpb_size_plus1
	b	.L3673	@
.L3759:
	ldr	r3, [r2, #608]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r3, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3741	@,
	ldr	r1, [r2, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	ip, [r2, #568]	@ MaxWidth, <variable>.stChanOption.s32MaxWidth
	cmp	r7, r1	@ size.8703, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r0, [r2, #572]	@ MaxHeight, <variable>.stChanOption.s32MaxHeight
	bhi	.L3760	@,
	cmp	ip, r8	@ MaxWidth, PicWidthInSmp
	cmpcs	r0, r6	@, MaxHeight, PicHeightInSmp
	bcs	.L3741	@,
	movw	r2, #:lower16:g_event_report	@ tmp510,
	movt	r2, #:upper16:g_event_report	@ tmp510,
	ldr	r3, [r2, #0]	@ g_event_report.8742, g_event_report
	cmp	r3, #0	@ g_event_report.8742,
	beq	.L3707	@,
	movw	lr, #:lower16:11199520	@ tmp511,
	movt	lr, #:upper16:11199520	@ tmp511,
	strh	r8, [sp, #32]	@ movhi	@ PicWidthInSmp, para
	mov	r1, #107	@,
	strh	r6, [sp, #34]	@ movhi	@ PicHeightInSmp, para
	add	r2, sp, #32	@,,
	strh	ip, [sp, #36]	@ movhi	@ MaxWidth, para
	strh	r0, [sp, #38]	@ movhi	@ MaxHeight, para
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.8742
	mvn	r0, #0	@ D.42537,
	b	.L3673	@
.L3758:
	mov	r0, r4	@, pMvcCtx
	add	r1, r5, #28	@, pSPS,
	bl	mvc_vui_parameters	@
	cmp	r0, #0	@,
	bne	.L3750	@,
	ldrb	r2, [r5, #40]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.bitstream_restriction_flag, <variable>.vui_seq_parameters.bitstream_restriction_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.bitstream_restriction_flag,
	beq	.L3750	@,
	ldr	r3, [r5, #732]	@ D.42795, <variable>.vui_seq_parameters.max_dec_frame_buffering
	cmp	r7, r3	@ size.8702, D.42795
	bcc	.L3738	@,
	cmp	r3, #0	@ D.42795,
	bne	.L3739	@,
.L3738:
	bl	vfmw_dprint_nothing	@
.L3750:
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.8677, <variable>.vui_seq_parameters.aspect_ratio_idc
	b	.L3736	@
.L3757:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC128	@,
	movt	r1, #:upper16:.LC128	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC129	@,
	movt	r1, #:upper16:.LC129	@,
	str	r0, [r5, #3956]	@, <variable>.frame_crop_left_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC130	@,
	movt	r1, #:upper16:.LC130	@,
	str	r0, [r5, #3960]	@, <variable>.frame_crop_right_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC131	@,
	movt	r1, #:upper16:.LC131	@,
	str	r0, [r5, #3964]	@, <variable>.frame_crop_top_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	ip, [r5, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r1, [r5, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	mov	r3, sl, asl #1	@ tmp464, temp,
	ldr	r2, [r5, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	mov	ip, ip, asl #1	@ tmp461, <variable>.frame_crop_top_offset,
	mov	r1, r1, asl #1	@ D.42751, <variable>.frame_crop_left_offset,
	mul	sl, sl, ip	@ D.42756, temp, tmp461
	rsb	ip, r1, r8	@ tmp458, D.42751, PicWidthInSmp
	sub	r2, ip, r2, asl #1	@ D.42754, tmp458, <variable>.frame_crop_right_offset,
	rsb	ip, sl, r6	@ tmp463, D.42756, PicHeightInSmp
	mls	r3, r0, r3, ip	@ D.42760, D.42750, tmp464, tmp463
	str	r0, [r5, #3968]	@ D.42750, <variable>.frame_crop_bottom_offset
	cmp	r2, #0	@ D.42754,
	cmpgt	r3, #0	@, D.42760,
	ble	.L3731	@,
	add	r0, r1, r2, lsr #1	@, tmp476, D.42751, D.42754,
	add	sl, sl, r3, lsr #1	@, tmp478, D.42756, D.42760,
	str	r0, [r5, #3984]	@ tmp476, <variable>.disp_center_x
	str	sl, [r5, #3988]	@ tmp478, <variable>.disp_center_y
	str	r2, [r5, #3976]	@ D.42754, <variable>.disp_width
	str	r3, [r5, #3980]	@ D.42760, <variable>.disp_height
	b	.L3733	@
.L3760:
	movw	ip, #:lower16:g_event_report	@ tmp495,
	movt	ip, #:upper16:g_event_report	@ tmp495,
	ldr	r3, [ip, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3707	@,
	str	r7, [sp, #32]	@ size.8703, para
	movw	r0, #:lower16:11199520	@ tmp500,
	ldr	lr, [r2, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	movt	r0, #:upper16:11199520	@ tmp500,
	mov	r1, #106	@,
	add	r2, sp, #32	@,,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	str	lr, [sp, #36]	@ <variable>.stChanOption.s32MaxRefFrameNum, para
	blx	r3	@ g_event_report
	mvn	r0, #0	@ D.42537,
	b	.L3673	@
.L3739:
	ldr	r7, [r5, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.8677, <variable>.vui_seq_parameters.aspect_ratio_idc
	cmp	r3, r7	@ D.42795, <variable>.num_ref_frames
	movcs	r7, r3	@ size.8702, D.42795
	b	.L3736	@
.L3722:
	movw	r0, #:lower16:3110400	@ size,
	movt	r0, #:upper16:3110400	@ size,
	b	.L3727	@
.L3721:
	movw	r0, #:lower16:1824768	@ size,
	movt	r0, #:upper16:1824768	@ size,
	b	.L3727	@
.L3725:
	mov	r0, #12582912	@ size,
	b	.L3727	@
.L3723:
	movw	r0, #:lower16:6912000	@ size,
	movt	r0, #:upper16:6912000	@ size,
	b	.L3727	@
.L3720:
	movw	r0, #:lower16:912384	@ size,
	movt	r0, #:upper16:912384	@ size,
	b	.L3727	@
.L3719:
	movw	r0, #:lower16:345600	@ size,
	movt	r0, #:upper16:345600	@ size,
	b	.L3727	@
.L3718:
	movw	r0, #:lower16:152064	@ size,
	movt	r0, #:upper16:152064	@ size,
	b	.L3727	@
.L3713:
	ldr	r3, [r5, #3952]	@ temp.8726, <variable>.pic_height_in_map_units_minus1
	strb	r2, [r5, #21]	@ <variable>.SeErrFlg, <variable>.mb_adaptive_frame_field_flag
	sub	r1, r3, #1	@ tmp518, temp.8726,
	cmp	r1, r7	@ tmp518, tmp419
	bhi	.L3717	@,
	ldr	r6, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mov	sl, #1	@ temp,
	add	r3, r3, #1	@ prephitmp.8725, temp.8726,
	add	r8, r6, sl	@ prephitmp.8673, <variable>.pic_width_in_mbs_minus1,
	b	.L3745	@
.L3762:
	.align	2
.L3761:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.fnend
	.size	MVC_ProcessSPS, .-MVC_ProcessSPS
	.align	2
	.global	MVC_DecSubSPS
	.type	MVC_DecSubSPS, %function
MVC_DecSubSPS:
	.fnstart
.LFB1744:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r1, #8	@,
	.pad #20
	sub	sp, sp, #20	@,,
	movw	r2, #:lower16:.LC133	@,
	movt	r2, #:upper16:.LC133	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC134	@,
	movt	r1, #:upper16:.LC134	@,
	mov	r5, r0	@ D.43161,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC135	@,
	movt	r1, #:upper16:.LC135	@,
	mov	r8, r0	@ constrained_set0_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC136	@,
	movt	r1, #:upper16:.LC136	@,
	mov	r6, r0	@ constrained_set1_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC137	@,
	movt	r1, #:upper16:.LC137	@,
	mov	fp, r0	@ constrained_set2_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC138	@,
	movt	r1, #:upper16:.LC138	@,
	str	r0, [sp, #8]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC139	@,
	movt	r1, #:upper16:.LC139	@,
	str	r0, [sp, #4]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC140	@,
	movt	r2, #:upper16:.LC140	@,
	mov	r7, r0	@ constrained_set5_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC141	@,
	movt	r2, #:upper16:.LC141	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC142	@,
	movt	r1, #:upper16:.LC142	@,
	mov	sl, r0	@ D.43168,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	mov	r9, r0	@ seq_parameter_set_id,
	movw	r0, #:lower16:11199460	@ tmp163,
	movt	r0, #:upper16:11199460	@ tmp163,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3778	@,
	cmp	r9, #31	@ seq_parameter_set_id,
	bhi	.L3779	@,
	sub	r1, r5, #66	@ tmp165, D.43161,
	cmp	r1, #78	@ tmp165,
	ldrls	pc, [pc, r1, asl #2]	@ tmp165
	b	.L3767	@
.L3772:
	.word	.L3771
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3769
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3771
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3769
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3771
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3769
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3771
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3769
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3767
	.word	.L3771
.L3771:
	bl	vfmw_dprint_nothing	@
.L3769:
	cmp	sl, #41	@ level_idc,
	mov	r2, sl	@ level_idc, D.43168
	bhi	.L3780	@,
.L3773:
	movw	r0, #:lower16:337528	@ tmp168,
	movt	r0, #:upper16:337528	@ tmp168,
	mul	sl, r0, r9	@ tmp167, tmp168, seq_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	add	lr, sl, #13568	@ tmp219, tmp167,
	add	sl, sl, r4	@ tmp169, tmp167, pMvcCtx
	add	r3, sl, #13568	@ tmp175, tmp169,
	add	r1, lr, #32	@ tmp219, tmp219,
	add	lr, r3, #32	@ tmp175, tmp175,
	add	ip, r4, r1	@, pMvcCtx, tmp219
	movw	r1, #13600	@ tmp171,
	str	ip, [sp, #12]	@, %sfp
	add	ip, sl, #14336	@ tmp170, tmp169,
	strb	r8, [sl, r1]	@ constrained_set0_flag, <variable>.sps.constrained_set0_flag
	strb	r7, [lr, #5]	@ constrained_set5_flag, <variable>.sps.constrained_set5_flag
	ldr	r1, [sp, #12]	@, %sfp
	str	r2, [ip, #4]	@ level_idc, <variable>.sps.level_idc
	strb	r6, [lr, #1]	@ constrained_set1_flag, <variable>.sps.constrained_set1_flag
	strb	fp, [lr, #2]	@, <variable>.sps.constrained_set2_flag
	ldr	r2, [sp, #8]	@, %sfp
	strb	r2, [lr, #3]	@, <variable>.sps.constrained_set3_flag
	movw	r2, #14344	@ tmp212,
	ldr	r6, [sp, #4]	@, %sfp
	str	r9, [sl, r2]	@ seq_parameter_set_id, <variable>.sps.seq_parameter_set_id
	str	r5, [ip, #0]	@ D.43161, <variable>.sps.profile_idc
	strb	r6, [lr, #4]	@, <variable>.sps.constrained_set4_flag
	bl	MVC_ProcessSPS	@
	subs	r6, r0, #0	@ D.43196,
	bne	.L3781	@,
	add	r2, sl, #13568	@ tmp239, tmp169,
	cmp	r5, #118	@ D.43161,
	cmpne	r5, #128	@, D.43161,
	add	r0, r2, #56	@ tmp239, tmp239,
	mov	lr, #1	@ tmp240,
	strb	lr, [r0, #1]	@ tmp240, <variable>.sps.is_valid
	beq	.L3782	@,
.L3775:
	movw	ip, #:lower16:337528	@ tmp279,
	movt	ip, #:upper16:337528	@ tmp279,
	mov	r0, #0	@ D.43173,
	mov	lr, #1	@ tmp282,
	mla	r2, ip, r9, r4	@ tmp280, tmp279, seq_parameter_set_id, pMvcCtx
	add	r4, r2, #348160	@ tmp281, tmp280,
	add	r4, r4, #2960	@ tmp281, tmp281,
	str	lr, [r4, #4]	@ tmp282, <variable>.is_valid
.L3765:
	add	sp, sp, #20	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3779:
	bl	vfmw_dprint_nothing	@
.L3778:
	mvn	r0, #0	@ D.43173,
	b	.L3765	@
.L3767:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.43173,
	b	.L3765	@
.L3780:
	bl	vfmw_dprint_nothing	@
	mov	r2, #41	@ level_idc,
	b	.L3773	@
.L3782:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC143	@,
	movt	r1, #:upper16:.LC143	@,
	movw	r5, #17592	@ tmp250,
	bl	mvc_u_1	@
	ldr	r1, [sp, #12]	@, %sfp
	str	r0, [sl, r5]	@, <variable>.bit_equal_to_one
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcExt	@
	subs	r5, r0, #0	@ D.43208,
	bne	.L3783	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC144	@,
	movt	r1, #:upper16:.LC144	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:292232	@ tmp270,
	movt	r1, #:upper16:292232	@ tmp270,
	add	ip, sl, r1	@ tmp270, tmp169, tmp270
	cmp	r0, #0	@ D.43211,
	str	r0, [ip, #4]	@ D.43211, <variable>.mvc_vui_parameters_present_flag
	beq	.L3775	@,
	ldr	r1, [sp, #12]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcVuiExt	@
	cmp	r0, #0	@,
	beq	.L3775	@,
	bl	vfmw_dprint_nothing	@
	add	r3, sl, #348160	@ tmp275, tmp169,
	add	sl, r3, #2960	@ tmp275, tmp275,
	mvn	r0, #0	@ D.43173,
	str	r5, [sl, #4]	@ D.43208, <variable>.is_valid
	b	.L3765	@
.L3781:
	bl	vfmw_dprint_nothing	@
	add	r3, sl, #13568	@ tmp232, tmp169,
	add	r1, sl, #348160	@ tmp226, tmp169,
	add	ip, r3, #56	@ tmp232, tmp232,
	add	sl, r1, #2960	@ tmp226, tmp226,
	mov	r2, #0	@ tmp227,
	mvn	r0, #0	@ D.43173,
	strb	r2, [ip, #1]	@ tmp227, <variable>.sps.is_valid
	str	r2, [sl, #4]	@ tmp227, <variable>.is_valid
	b	.L3765	@
.L3783:
	add	sl, sl, #348160	@ tmp263, tmp169,
	bl	vfmw_dprint_nothing	@
	add	sl, sl, #2960	@ tmp263, tmp263,
	mvn	r0, #0	@ D.43173,
	str	r6, [sl, #4]	@ D.43196, <variable>.is_valid
	b	.L3765	@
	.fnend
	.size	MVC_DecSubSPS, .-MVC_DecSubSPS
	.align	2
	.global	MVC_DecSPS
	.type	MVC_DecSPS, %function
MVC_DecSPS:
	.fnstart
.LFB1739:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r1, #8	@,
	.pad #36
	sub	sp, sp, #36	@,,
	movw	r2, #:lower16:.LC145	@,
	movt	r2, #:upper16:.LC145	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC146	@,
	movt	r1, #:upper16:.LC146	@,
	mov	r9, r0	@ D.42865,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC147	@,
	movt	r1, #:upper16:.LC147	@,
	mov	r7, r0	@ constrained_set0_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC148	@,
	movt	r1, #:upper16:.LC148	@,
	mov	r6, r0	@ constrained_set1_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC149	@,
	movt	r1, #:upper16:.LC149	@,
	str	r0, [sp, #20]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC150	@,
	movt	r1, #:upper16:.LC150	@,
	str	r0, [sp, #16]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC151	@,
	movt	r1, #:upper16:.LC151	@,
	str	r0, [sp, #12]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC152	@,
	movt	r2, #:upper16:.LC152	@,
	str	r0, [sp, #8]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC153	@,
	movt	r2, #:upper16:.LC153	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC154	@,
	movt	r1, #:upper16:.LC154	@,
	mov	r5, r0	@ D.42872,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	mov	fp, r0	@ seq_parameter_set_id,
	movw	r0, #:lower16:11199460	@ tmp163,
	movt	r0, #:upper16:11199460	@ tmp163,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3785	@,
	movw	r8, #:lower16:11155232	@ tmp165,
	movt	r8, #:upper16:11155232	@ tmp165,
	ldr	r2, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r1, r2, #1	@ tmp166, <variable>.MaxSpsNum,
	cmp	fp, r1	@ seq_parameter_set_id, tmp166
	bhi	.L3802	@,
	cmp	r9, #100	@ profile_idc,
	beq	.L3790	@,
	bhi	.L3793	@,
	cmp	r9, #77	@ profile_idc,
	beq	.L3790	@,
	cmp	r9, #88	@ profile_idc,
	beq	.L3792	@,
	cmp	r9, #66	@ profile_idc,
	bne	.L3788	@,
.L3792:
	bl	vfmw_dprint_nothing	@
.L3790:
	cmp	r5, #9	@ level_idc,
	mov	r3, r5	@ level_idc, D.42872
	bls	.L3801	@,
.L3794:
	cmp	r5, #41	@ level_idc,
	bhi	.L3801	@,
.L3795:
	movw	r2, #3992	@ tmp176,
	movw	r8, #:lower16:11155240	@ tmp177,
	mul	r5, r2, fp	@ D.42895, tmp176, seq_parameter_set_id
	movt	r8, #:upper16:11155240	@ tmp177,
	ldr	sl, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r1, r5, sl	@ D.42896, D.42895, <variable>.SPS
	ldrb	sl, [r1, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	sl, #0	@ <variable>.is_valid,
	beq	.L3796	@,
	movw	sl, #:lower16:.LANCHOR1	@ tmp180,
	movt	sl, #:upper16:.LANCHOR1	@ tmp180,
	ldr	lr, [sp, #16]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	strb	r6, [sl, #73]	@ constrained_set1_flag, sps_tmp.constrained_set1_flag
	add	r1, sl, #72	@, tmp180,
	ldr	r6, [sp, #20]	@, %sfp
	ldr	ip, [sp, #12]	@, %sfp
	str	r9, [sl, #808]	@ profile_idc, sps_tmp.profile_idc
	strb	r6, [sl, #74]	@, sps_tmp.constrained_set2_flag
	ldr	r6, [sp, #8]	@, %sfp
	strb	r7, [sl, #72]	@ constrained_set0_flag, sps_tmp.constrained_set0_flag
	strb	lr, [sl, #75]	@, sps_tmp.constrained_set3_flag
	strb	r6, [sl, #77]	@, sps_tmp.constrained_set5_flag
	strb	ip, [sl, #76]	@, sps_tmp.constrained_set4_flag
	str	r3, [sl, #812]	@ level_idc, sps_tmp.level_idc
	str	fp, [sl, #816]	@ seq_parameter_set_id, sps_tmp.seq_parameter_set_id
	str	r2, [sp, #4]	@,
	bl	MVC_ProcessSPS	@
	ldr	r2, [sp, #4]	@,
	subs	r6, r0, #0	@ D.42906,
	bne	.L3803	@,
	ldr	r3, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r0, sl, #72	@, tmp180,
	str	r2, [sp, #4]	@,
	add	r1, r5, r3	@, D.42895, <variable>.SPS
	bl	MVC_SPSEqual	@
	ldr	r2, [sp, #4]	@,
	cmp	r0, #0	@ D.42909
	bne	.L3804	@,
.L3787:
	add	sp, sp, #36	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3801:
	bl	vfmw_dprint_nothing	@
	mov	r3, #41	@ level_idc,
	b	.L3795	@
.L3785:
	mvn	r0, #0	@ D.42877,
	b	.L3787	@
.L3796:
	str	r9, [r1, #736]	@ profile_idc, <variable>.profile_idc
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	mov	r9, #1	@ tmp218,
	strb	r7, [r1, r5]	@ constrained_set0_flag, <variable>.constrained_set0_flag
	ldr	ip, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r2, ip, r5	@ tmp219, <variable>.SPS, D.42895
	strb	r6, [r2, #1]	@ constrained_set1_flag, <variable>.constrained_set1_flag
	ldr	lr, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	ldr	ip, [sp, #20]	@, %sfp
	add	r1, lr, r5	@ tmp225, <variable>.SPS, D.42895
	strb	ip, [r1, #2]	@, <variable>.constrained_set2_flag
	ldr	r2, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [sp, #16]	@, %sfp
	add	r1, r2, r5	@ tmp231, <variable>.SPS, D.42895
	strb	lr, [r1, #3]	@, <variable>.constrained_set3_flag
	ldr	ip, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [sp, #12]	@, %sfp
	add	r2, ip, r5	@ tmp237, <variable>.SPS, D.42895
	strb	lr, [r2, #4]	@, <variable>.constrained_set4_flag
	ldr	r1, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	ldr	ip, [sp, #8]	@, %sfp
	add	lr, r1, r5	@ tmp243, <variable>.SPS, D.42895
	strb	ip, [lr, #5]	@, <variable>.constrained_set5_flag
	ldr	r2, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r1, r2, r5	@ tmp249, <variable>.SPS, D.42895
	str	r3, [r1, #740]	@ level_idc, <variable>.level_idc
	ldr	lr, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	ip, lr, r5	@ tmp254, <variable>.SPS, D.42895
	str	fp, [ip, #744]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r2, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r1, r5, r2	@, D.42895, <variable>.SPS
	bl	MVC_ProcessSPS	@
	cmp	r0, #0	@ D.42914
	bne	.L3805	@,
	ldr	r3, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r1, r3, r5	@ tmp276, <variable>.SPS, D.42895
	strb	r9, [r1, #26]	@ tmp218, <variable>.is_refreshed
	ldr	lr, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r5, lr, r5	@ tmp283, <variable>.SPS, D.42895
	strb	r9, [r5, #25]	@ tmp218, <variable>.is_valid
	b	.L3787	@
.L3793:
	cmp	r9, #122	@ profile_idc,
	beq	.L3792	@,
	cmp	r9, #144	@ profile_idc,
	beq	.L3792	@,
	cmp	r9, #110	@ profile_idc,
	beq	.L3792	@,
.L3788:
	bl	vfmw_dprint_nothing	@
	cmp	r5, #9	@ level_idc,
	mov	r9, #100	@ profile_idc,
	mov	r3, r5	@ level_idc, D.42872
	bhi	.L3794	@,
	b	.L3801	@
.L3804:
	mov	r1, #1	@ tmp203,
	strb	r1, [sl, #97]	@ tmp203, sps_tmp.is_valid
	strb	r1, [sl, #98]	@ tmp203, sps_tmp.is_refreshed
	add	r1, sl, #72	@, tmp180,
	ldr	r0, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r0, r5, r0	@, D.42895, <variable>.SPS
	bl	memmove	@
	mov	r0, r6	@ D.42877, D.42906
	b	.L3787	@
.L3803:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.42877,
	b	.L3787	@
.L3802:
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, r2, #1	@ tmp169, <variable>.MaxSpsNum,
	cmp	fp, ip	@ seq_parameter_set_id, tmp169
	bls	.L3785	@,
	movw	lr, #:lower16:g_event_report	@ tmp171,
	movt	lr, #:upper16:g_event_report	@ tmp171,
	ldr	r3, [lr, #0]	@ g_event_report.792, g_event_report
	cmp	r3, #0	@ g_event_report.792,
	beq	.L3785	@,
	movw	r0, #:lower16:11199520	@ tmp174,
	movt	r0, #:upper16:11199520	@ tmp174,
	str	r2, [sp, #28]	@ <variable>.MaxSpsNum, para
	mov	r1, #109	@,
	str	fp, [sp, #24]	@ seq_parameter_set_id, para
	add	r2, sp, #24	@,,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.792
	mvn	r0, #0	@ D.42877,
	b	.L3787	@
.L3805:
	bl	vfmw_dprint_nothing	@
	ldr	ip, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	mvn	r0, #0	@ D.42877,
	add	r2, ip, r5	@ tmp262, <variable>.SPS, D.42895
	strb	r9, [r2, #26]	@ tmp218, <variable>.is_refreshed
	ldr	r3, [r4, r8]	@ <variable>.SPS, <variable>.SPS
	add	r5, r3, r5	@ tmp269, <variable>.SPS, D.42895
	strb	sl, [r5, #25]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3787	@
	.fnend
	.size	MVC_DecSPS, .-MVC_DecSPS
	.align	2
	.global	MVC_ProcessPPS
	.type	MVC_ProcessPPS, %function
MVC_ProcessPPS:
	.fnstart
.LFB1733:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	mov	r5, r1	@ pPPS, pPPS
	.pad #60
	sub	sp, sp, #60	@,,
	movw	r1, #:lower16:.LC155	@,
	movt	r1, #:upper16:.LC155	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	movw	r6, #:lower16:11199460	@ tmp187,
	movt	r6, #:upper16:11199460	@ tmp187,
	strb	r0, [r5, #0]	@, <variable>.entropy_coding_mode_flag
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3843	@,
.L3807:
	mvn	r0, #0	@ D.41863,
.L3810:
	add	sp, sp, #60	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
.L3843:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC156	@,
	movt	r1, #:upper16:.LC156	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #1]	@, <variable>.pic_order_present_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3807	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC157	@,
	movt	r1, #:upper16:.LC157	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@ D.41868,
	str	r0, [r5, #32]	@ D.41868, <variable>.num_slice_groups_minus1
	bne	.L3808	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3808	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC158	@,
	movt	r1, #:upper16:.LC158	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.41877,
	str	r0, [r5, #36]	@ D.41877, <variable>.num_ref_idx_l0_active_minus1
	bhi	.L3838	@,
	ldr	lr, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3838	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC159	@,
	movt	r1, #:upper16:.LC159	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.41882,
	str	r0, [r5, #40]	@ D.41882, <variable>.num_ref_idx_l1_active_minus1
	bhi	.L3838	@,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3814	@,
.L3838:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41863,
	b	.L3810	@
.L3814:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC160	@,
	movt	r1, #:upper16:.LC160	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.weighted_pred_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3807	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC161	@,
	movt	r2, #:upper16:.LC161	@,
	bl	mvc_u_v	@
	cmp	r0, #2	@ D.41891,
	str	r0, [r5, #44]	@ D.41891, <variable>.weighted_bipred_idc
	bhi	.L3838	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC162	@,
	movt	r1, #:upper16:.LC162	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC163	@,
	movt	r1, #:upper16:.LC163	@,
	str	r0, [r5, #48]	@, <variable>.pic_init_qp_minus26
	mov	r0, r4	@, pMvcCtx
	bl	mvc_se_v	@
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC164	@,
	movt	r1, #:upper16:.LC164	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC165	@,
	movt	r1, #:upper16:.LC165	@,
	str	r0, [r5, #52]	@, <variable>.chroma_qp_index_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC166	@,
	movt	r1, #:upper16:.LC166	@,
	strb	r0, [r5, #3]	@, <variable>.deblocking_filter_control_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	strb	r0, [r5, #4]	@, <variable>.constrained_intra_pred_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r8, r0	@ D.41903,
	strb	r8, [r5, #17]	@ D.41903, <variable>.redundant_pic_cnt_present_flag
	cmp	r8, #0	@ D.41903,
	beq	.L3816	@,
	bl	vfmw_dprint_nothing	@
.L3816:
	ldr	lr, [r5, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	add	r3, r4, #13504	@, pMvcCtx,
	mov	r8, #0	@ tmp219,
	add	r0, r3, #24	@,,
	str	r8, [r5, #60]	@ tmp219, <variable>.transform_8x8_mode_flag
	str	lr, [r5, #56]	@ <variable>.chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	strb	r8, [r5, #18]	@ tmp219, <variable>.pic_scaling_matrix_present_flag
	bl	BsResidBits	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r1, r2, #3	@ tmp225, <variable>.nal_trail_zero_bit_num,
	cmp	r0, r1	@, tmp225
	movcc	r0, #0	@ D.41863,
	bcc	.L3810	@
.L3844:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC168	@,
	movt	r1, #:upper16:.LC168	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC169	@,
	movt	r1, #:upper16:.LC169	@,
	str	r0, [r5, #60]	@, <variable>.transform_8x8_mode_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.41917,
	strb	r0, [r5, #18]	@ D.41917, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, #1	@ D.41917,
	beq	.L3845	@,
.L3818:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC171	@,
	movt	r1, #:upper16:.LC171	@,
	bl	mvc_se_v	@
	add	ip, r0, #12	@ tmp306, D.42003,
	str	r0, [r5, #56]	@ D.42003, <variable>.second_chroma_qp_index_offset
	cmp	ip, #24	@ tmp306,
	bhi	.L3838	@,
	movw	lr, #:lower16:11199460	@ tmp307,
	movt	lr, #:upper16:11199460	@ tmp307,
	ldr	r2, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3838	@,
	mov	r0, #0	@ D.41863,
	b	.L3810	@
.L3808:
	bl	vfmw_dprint_nothing	@
	movw	r2, #:lower16:g_event_report	@ tmp196,
	movt	r2, #:upper16:g_event_report	@ tmp196,
	ldr	r3, [r2, #0]	@ g_event_report.747, g_event_report
	cmp	r3, #0	@ g_event_report.747,
	beq	.L3807	@,
	movw	ip, #:lower16:11199520	@ tmp197,
	movt	ip, #:upper16:11199520	@ tmp197,
	mov	r1, #102	@,
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.747
	mvn	r0, #0	@ D.41863,
	b	.L3810	@
.L3845:
	add	r6, r5, #2016	@, pPPS,
	movw	sl, #:lower16:11155240	@ tmp330,
	movw	r9, #:lower16:.LANCHOR2	@ tmp333,
	movt	sl, #:upper16:11155240	@ tmp330,
	movt	r9, #:upper16:.LANCHOR2	@ tmp333,
	add	r7, sp, #24	@ ivtmp.8925,,
	add	fp, r5, #64	@, pPPS,
	str	r6, [sp, #16]	@, %sfp
	str	fp, [sp, #20]	@, %sfp
	mov	fp, r6	@ ivtmp.8956,
	str	r6, [sp, #12]	@, %sfp
	mov	r6, r8	@ i.8944, ivtmp.8931
.L3827:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	mvc_u_1	@
	add	r1, r5, r6	@ tmp231, pPPS, i.8944
	ldr	r2, [sp, #16]	@, %sfp
	mov	r3, r0	@ D.41922,
	str	r0, [r7, #0]	@ D.41922, q4x4defaultflag
	strb	r3, [r1, #5]	@ D.41922, <variable>.pic_scaling_list_present_flag
	add	r0, r8, r2	@, ivtmp.8931,
	ldr	r3, [r7, #0]	@ tmp233, q4x4defaultflag
	mov	r2, #16	@,
	cmp	r3, #1	@ tmp233,
	beq	.L3846	@,
	rsbs	ip, r6, #1	@ D.41945, i.8944
	movcc	ip, #0	@ D.41945
	cmp	r6, #0	@ i.8944,
	cmpne	r6, #3	@, i.8944,
	bne	.L3823	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	lr, #3992	@,
	ldr	r3, [r4, sl]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, lr, r3	@ D.41953, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	lr, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3847	@,
	cmp	ip, #0	@ D.41945,
	ldr	r1, .L3851	@,
	movne	r1, r9	@, tmp333
	bl	memcpy	@
.L3820:
	add	r6, r6, #1	@ i.8944, i.8944,
	ldr	lr, [sp, #12]	@, %sfp
	ldr	r3, [sp, #20]	@, %sfp
	cmp	r6, #6	@ i.8944,
	add	r1, lr, #16	@,,
	add	r7, r7, #4	@ ivtmp.8925, ivtmp.8925,
	add	r0, r3, #64	@,,
	str	r1, [sp, #12]	@, %sfp
	add	r8, r8, #16	@ ivtmp.8931, ivtmp.8931,
	add	fp, fp, #16	@ ivtmp.8956, ivtmp.8956,
	str	r0, [sp, #20]	@, %sfp
	bne	.L3827	@,
	add	r8, r5, #2112	@, pPPS,
	mov	r6, #0	@ ivtmp.8910,
	movw	sl, #:lower16:11155240	@ tmp323,
	add	fp, r5, #448	@ ivtmp.8913, pPPS,
	movt	sl, #:upper16:11155240	@ tmp323,
	add	r7, sp, #48	@ ivtmp.8915,,
	str	r8, [sp, #12]	@, %sfp
	mov	r9, r8	@ ivtmp.8909,
	mov	r8, r6	@ i, ivtmp.8910
	str	r5, [sp, #16]	@ pPPS, %sfp
.L3837:
	ldr	r2, [r5, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	mov	r3, #0	@ prephitmp.8891,
	cmp	r2, #1	@ <variable>.transform_8x8_mode_flag,
	movne	lr, #0	@,
	strne	lr, [r7, #0]	@, q8x8defaultflag
	beq	.L3848	@,
.L3829:
	ldr	r1, [sp, #16]	@, %sfp
	mov	r2, #64	@,
	ldr	lr, [sp, #12]	@, %sfp
	strb	r3, [r1, #11]	@ prephitmp.8891, <variable>.pic_scaling_list_present_flag
	add	r0, lr, r6	@,, ivtmp.8910
	ldr	ip, [r7, #0]	@ tmp277, q8x8defaultflag
	cmp	ip, #1	@ tmp277,
	beq	.L3849	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #3992	@,
	ldr	lr, [r4, sl]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, ip, lr	@ temp.8950, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	ip, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	ip, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L3850	@,
	ldr	r3, .L3851+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3851+8	@,
	movne	r1, r3	@,
	bl	memcpy	@
.L3831:
	add	r8, r8, #1	@ i, i,
	ldr	r1, [sp, #16]	@, %sfp
	cmp	r8, #2	@ i,
	add	r9, r9, #64	@ ivtmp.8909, ivtmp.8909,
	add	r0, r1, #1	@,,
	add	r6, r6, #64	@ ivtmp.8910, ivtmp.8910,
	add	fp, fp, #256	@ ivtmp.8913, ivtmp.8913,
	add	r7, r7, #4	@ ivtmp.8915, ivtmp.8915,
	str	r0, [sp, #16]	@, %sfp
	beq	.L3818	@,
	b	.L3837	@
.L3823:
	mov	r0, fp	@, ivtmp.8956
	sub	r1, fp, #16	@, ivtmp.8956,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3820	@
.L3847:
	ldr	ip, [sp, #16]	@, %sfp
	add	r2, r3, #2672	@ tmp255, D.41953,
	add	r1, r2, r8	@, tmp255, ivtmp.8931
	mov	r2, #16	@,
	add	r0, r8, ip	@, ivtmp.8931,
	bl	memcpy	@
	b	.L3820	@
.L3846:
	ldr	r1, [sp, #20]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [sp, #12]	@, %sfp
	add	r3, r3, #15	@,,
	str	r7, [sp, #0]	@ ivtmp.8925,
	bl	MVC_Scaling_List	@
	ldr	ip, [r7, #0]	@ tmp234, q4x4defaultflag
	cmp	ip, #1	@ tmp234,
	bne	.L3820	@,
	cmp	r6, #2	@ i.8944,
	ldr	r1, .L3851	@,
	ldr	r0, [sp, #12]	@, %sfp
	mov	r2, #16	@,
	movls	r1, r9	@, tmp333
	bl	memcpy	@
	b	.L3820	@
.L3850:
	ldr	lr, [sp, #12]	@, %sfp
	add	r2, r3, #2768	@ tmp292, temp.8950,
	add	r1, r2, r6	@, tmp292, ivtmp.8910
	mov	r2, #64	@,
	add	r0, lr, r6	@,, ivtmp.8910
	bl	memcpy	@
	b	.L3831	@
.L3849:
	mov	r3, r2	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, fp	@, ivtmp.8913
	mov	r2, r9	@, ivtmp.8909
	str	r7, [sp, #0]	@ ivtmp.8915,
	bl	MVC_Scaling_List	@
	ldr	r0, [r7, #0]	@ tmp278, q8x8defaultflag
	cmp	r0, #1	@ tmp278,
	bne	.L3831	@,
	ldr	r3, .L3851+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L3851+8	@,
	mov	r2, #64	@,
	mov	r0, r9	@, ivtmp.8909
	movne	r1, r3	@,
	bl	memcpy	@
	b	.L3831	@
.L3848:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC170	@,
	movt	r1, #:upper16:.LC170	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ prephitmp.8891, D.41971
	str	r0, [r7, #0]	@ D.41971, q8x8defaultflag
	b	.L3829	@
.L3852:
	.align	2
.L3851:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+96
	.word	.LANCHOR2+32
	.fnend
	.size	MVC_ProcessPPS, .-MVC_ProcessPPS
	.align	2
	.global	MVC_DecPPS
	.type	MVC_DecPPS, %function
MVC_DecPPS:
	.fnstart
.LFB1732:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, sl, lr}
	movw	r1, #:lower16:.LC172	@,
	.pad #12
	sub	sp, sp, #12	@,,
	movt	r1, #:upper16:.LC172	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r5, #:lower16:11155236	@ tmp145,
	movt	r5, #:upper16:11155236	@ tmp145,
	mov	r6, r0	@ pic_parameter_set_id,
	ldr	r0, [r4, r5]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp146, <variable>.MaxPpsNum,
	cmp	r6, r3	@ pic_parameter_set_id, tmp146
	bhi	.L3864	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC173	@,
	movt	r1, #:upper16:.LC173	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11155232	@ tmp157,
	movt	r1, #:upper16:11155232	@ tmp157,
	mov	r3, r0	@ seq_parameter_set_id,
	ldr	r0, [r4, r1]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r2, r0, #1	@ tmp158, <variable>.MaxSpsNum,
	cmp	r3, r2	@ seq_parameter_set_id, tmp158
	bhi	.L3863	@,
	mov	sl, #2240	@ tmp160,
	movw	r7, #:lower16:11155244	@ tmp161,
	mul	r5, sl, r6	@ D.41828, tmp160, pic_parameter_set_id
	movt	r7, #:upper16:11155244	@ tmp161,
	ldr	r8, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r2, r5, r8	@ D.41829, D.41828, <variable>.PPS
	ldrb	r8, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r8, #0	@ <variable>.is_valid,
	bne	.L3865	@,
	str	r6, [r2, #24]	@ pic_parameter_set_id, <variable>.pic_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	ldr	ip, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r1, ip, r5	@ tmp187, <variable>.PPS, D.41828
	str	r3, [r1, #28]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r2, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r1, r5, r2	@, D.41828, <variable>.PPS
	bl	MVC_ProcessPPS	@
	cmp	r0, #0	@ D.41841
	bne	.L3866	@,
	ldr	r1, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	mov	lr, #1	@ tmp211,
	add	r2, r1, r5	@ tmp209, <variable>.PPS, D.41828
	strb	lr, [r2, #20]	@ tmp211, <variable>.is_refreshed
	ldr	r3, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r5, r3, r5	@ tmp216, <variable>.PPS, D.41828
	strb	lr, [r5, #19]	@ tmp211, <variable>.is_valid
.L3856:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, sl, pc}
.L3865:
	movw	r8, #:lower16:.LANCHOR1	@ tmp164,
	movt	r8, #:upper16:.LANCHOR1	@ tmp164,
	mov	r0, r4	@, pMvcCtx
	add	r1, r8, #4064	@, tmp164,
	str	r6, [r8, #4088]	@ pic_parameter_set_id, pps_tmp.pic_parameter_set_id
	str	r3, [r8, #4092]	@ seq_parameter_set_id, pps_tmp.seq_parameter_set_id
	bl	MVC_ProcessPPS	@
	subs	r6, r0, #0	@ D.41833,
	bne	.L3863	@,
	ldr	r3, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r0, r8, #4064	@, tmp164,
	add	r1, r5, r3	@, D.41828, <variable>.PPS
	bl	MVC_PPSEqual	@
	cmp	r0, #0	@ D.41836
	beq	.L3856	@,
	mov	lr, #1	@ tmp174,
	strb	lr, [r8, #4083]	@ tmp174, pps_tmp.is_valid
	strb	lr, [r8, #4084]	@ tmp174, pps_tmp.is_refreshed
	add	r1, r8, #4064	@, tmp164,
	ldr	ip, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	mov	r2, sl	@, tmp160
	add	r0, r5, ip	@, D.41828, <variable>.PPS
	bl	memmove	@
	mov	r0, r6	@ D.41820, D.41833
	b	.L3856	@
.L3864:
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, r5]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r1, r2, #1	@ tmp149, <variable>.MaxPpsNum,
	cmp	r6, r1	@ pic_parameter_set_id, tmp149
	bhi	.L3867	@,
.L3855:
	mvn	r0, #0	@ D.41820,
	b	.L3856	@
.L3867:
	movw	ip, #:lower16:g_event_report	@ tmp151,
	movt	ip, #:upper16:g_event_report	@ tmp151,
	ldr	r3, [ip, #0]	@ g_event_report.745, g_event_report
	cmp	r3, #0	@ g_event_report.745,
	beq	.L3855	@,
	movw	lr, #:lower16:11199520	@ tmp154,
	movt	lr, #:upper16:11199520	@ tmp154,
	str	r2, [sp, #4]	@ <variable>.MaxPpsNum, para
	mov	r1, #110	@,
	str	r6, [sp, #0]	@ pic_parameter_set_id, para
	mov	r2, sp	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.745
	mvn	r0, #0	@ D.41820,
	b	.L3856	@
.L3863:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41820,
	b	.L3856	@
.L3866:
	bl	vfmw_dprint_nothing	@
	ldr	ip, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	mov	r2, #1	@ tmp197,
	mvn	r0, #0	@ D.41820,
	add	r1, ip, r5	@ tmp195, <variable>.PPS, D.41828
	strb	r2, [r1, #20]	@ tmp197, <variable>.is_refreshed
	ldr	r3, [r4, r7]	@ <variable>.PPS, <variable>.PPS
	add	r5, r3, r5	@ tmp202, <variable>.PPS, D.41828
	strb	r8, [r5, #19]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3856	@
	.fnend
	.size	MVC_DecPPS, .-MVC_DecPPS
	.align	2
	.global	MVC_ProcessSliceHeaderFirstPart
	.type	MVC_ProcessSliceHeaderFirstPart, %function
MVC_ProcessSliceHeaderFirstPart:
	.fnstart
.LFB1725:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movw	r1, #:lower16:.LC174	@,
	movt	r1, #:upper16:.LC174	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11155236	@ tmp161,
	movt	r1, #:upper16:11155236	@ tmp161,
	mov	r6, r0	@ tmp_pic_parameter_set_id,
	ldr	r0, [r4, r1]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp162, <variable>.MaxPpsNum,
	cmp	r6, r3	@ tmp_pic_parameter_set_id, tmp162
	bhi	.L3895	@,
	movw	r5, #:lower16:11199460	@ tmp164,
	movt	r5, #:upper16:11199460	@ tmp164,
	ldr	r2, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3895	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, tmp_pic_parameter_set_id
	bl	MVC_PPSSPSCheckTmpId	@
	cmp	r0, #0	@,
	bne	.L3895	@,
	movw	ip, #:lower16:11162632	@ tmp166,
	movt	ip, #:upper16:11162632	@ tmp166,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, ip]	@ tmp_pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L3895	@,
	movw	r8, #:lower16:11152040	@ tmp168,
	movt	r8, #:upper16:11152040	@ tmp168,
	movw	ip, #:lower16:11152044	@ tmp167,
	movt	ip, #:upper16:11152044	@ tmp167,
	ldr	r6, [r4, r8]	@ pSPS, <variable>.pSPS
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC175	@,
	movt	r2, #:upper16:.LC175	@,
	ldr	r8, [r4, ip]	@ pPPS, <variable>.pPPS
	ldr	lr, [r6, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r1, lr, #4	@, <variable>.log2_max_frame_num_minus4,
	bl	mvc_u_v	@
	ldr	r1, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	r3, #:lower16:11162644	@ tmp172,
	movt	r3, #:upper16:11162644	@ tmp172,
	cmp	r1, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, r3]	@ D.41292, <variable>.CurrSlice.frame_num
	bne	.L3874	@,
	movw	r7, #:lower16:11162627	@ tmp175,
	movt	r7, #:upper16:11162627	@ tmp175,
	ldrb	r5, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3896	@,
.L3875:
	movw	r5, #:lower16:11162625	@ tmp179,
	movw	r7, #:lower16:11162626	@ tmp182,
	movt	r5, #:upper16:11162625	@ tmp179,
	movt	r7, #:upper16:11162626	@ tmp182,
	mov	r3, #0	@ tmp180,
	strb	r3, [r4, r5]	@ tmp180, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, r7]	@ tmp180, <variable>.CurrSlice.bottom_field_flag
	ldrb	r1, [r6, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r1, r3	@ <variable>.frame_mbs_only_flag,
	beq	.L3897	@,
	ldr	r0, [r6, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r1, [r6, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	ip, r0, #1	@ tmp261, <variable>.pic_height_in_map_units_minus1,
	mla	r2, r1, ip, ip	@ D.41321, <variable>.pic_width_in_mbs_minus1, tmp261, tmp261
.L3893:
	mov	ip, #1	@ iftmp.716,
.L3880:
	cmp	r3, #0	@ prephitmp.9044,
	mul	ip, ip, r2	@ pic_size, iftmp.716, D.41321
	movne	r1, #0	@ prephitmp.9016,
	bne	.L3882	@,
	ldrb	r2, [r6, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	subs	r1, r2, #0	@ prephitmp.9016, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.9016
.L3882:
	movw	r3, #:lower16:11162625	@ tmp203,
	movt	r3, #:upper16:11162625	@ tmp203,
	movw	r0, #:lower16:11162628	@ tmp201,
	movt	r0, #:upper16:11162628	@ tmp201,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	strb	r1, [r4, r0]	@ prephitmp.9016, <variable>.CurrSlice.MbaffFrameFlag
	cmp	lr, #1	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L3883	@,
	cmp	r1, #1	@ prephitmp.9016,
	beq	.L3883	@,
	movw	r0, #:lower16:11162676	@ tmp208,
	movt	r0, #:upper16:11162676	@ tmp208,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	ip, lr	@ pic_size, <variable>.CurrSlice.first_mb_in_slice
	bls	.L3895	@,
.L3885:
	movw	r7, #:lower16:11162627	@ tmp210,
	movt	r7, #:upper16:11162627	@ tmp210,
	ldrb	r5, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3898	@,
.L3886:
	movw	r5, #:lower16:11161480	@ tmp217,
	movw	r7, #:lower16:11161484	@ tmp219,
	movt	r5, #:upper16:11161480	@ tmp217,
	movt	r7, #:upper16:11161484	@ tmp219,
	mov	lr, #0	@ tmp218,
	str	lr, [r4, r5]	@ tmp218, <variable>.CurrPOC.pic_order_cnt_lsb
	str	lr, [r4, r7]	@ tmp218, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	ldr	r2, [r6, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ <variable>.pic_order_cnt_type,
	beq	.L3899	@,
.L3888:
	movw	r5, #:lower16:11161528	@ tmp231,
	movw	r7, #:lower16:11161532	@ tmp233,
	movt	r5, #:upper16:11161528	@ tmp231,
	movt	r7, #:upper16:11161532	@ tmp233,
	mov	r2, #0	@ tmp232,
	str	r2, [r4, r5]	@ tmp232, <variable>.CurrPOC.delta_pic_order_cnt
	str	r2, [r4, r7]	@ tmp232, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r6, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r1, #1	@ <variable>.pic_order_cnt_type,
	beq	.L3900	@,
.L3889:
	movw	r5, #:lower16:11199460	@ tmp244,
	movt	r5, #:upper16:11199460	@ tmp244,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3874	@,
	ldrb	r1, [r8, #17]	@ zero_extendqisi2	@ <variable>.redundant_pic_cnt_present_flag, <variable>.redundant_pic_cnt_present_flag
	cmp	r1, #0	@ <variable>.redundant_pic_cnt_present_flag,
	beq	.L3890	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC183	@,
	movt	r1, #:upper16:.LC183	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3891	@,
	ldr	r2, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3891	@,
.L3890:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsNewPic	@
	movw	r3, #:lower16:11162629	@ tmp252,
	movt	r3, #:upper16:11162629	@ tmp252,
	uxtb	ip, r0	@ D.41389,
	strb	ip, [r4, r3]	@ D.41389, <variable>.CurrSlice.new_pic_flag
	cmp	ip, #0	@ D.41389,
	bne	.L3892	@,
	movw	r2, #:lower16:11162676	@ tmp254,
	movw	lr, #:lower16:11164344	@ tmp255,
	movt	r2, #:upper16:11162676	@ tmp254,
	movt	lr, #:upper16:11164344	@ tmp255,
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	ldr	r0, [r4, lr]	@ <variable>.PrevSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	cmp	r1, r0	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	bls	.L3895	@,
.L3892:
	mov	r0, #0	@ D.41283,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L3883:
	movw	r2, #:lower16:11162676	@ tmp206,
	movt	r2, #:upper16:11162676	@ tmp206,
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r1, ip, lsr #1	@ <variable>.CurrSlice.first_mb_in_slice, pic_size,
	bcc	.L3885	@,
.L3895:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41283,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L3874:
	mvn	r0, #0	@ D.41283,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L3897:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.41311,
	strb	r3, [r4, r5]	@ D.41311, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ D.41311,
	bne	.L3901	@,
.L3878:
	ldrb	ip, [r6, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r0, [r6, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r1, [r6, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	cmp	ip, #0	@ <variable>.frame_mbs_only_flag,
	add	lr, r0, #1	@ tmp195, <variable>.pic_width_in_mbs_minus1,
	moveq	ip, #2	@ iftmp.716,
	mla	r2, r1, lr, lr	@ D.41321, <variable>.pic_height_in_map_units_minus1, tmp195, tmp195
	beq	.L3880	@,
	movw	r3, #:lower16:11162625	@ tmp198,
	movt	r3, #:upper16:11162625	@ tmp198,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9044, <variable>.CurrSlice.field_pic_flag
	b	.L3893	@
.L3896:
	cmp	r0, #0	@ D.41292,
	beq	.L3875	@,
	movw	r2, #:lower16:11164280	@ tmp177,
	movt	r2, #:upper16:11164280	@ tmp177,
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r0, #0	@ <variable>.CurrSlice.view_id,
	bgt	.L3875	@,
	bl	vfmw_dprint_nothing	@
	b	.L3875	@
.L3899:
	ldr	ip, [r6, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC179	@,
	movt	r2, #:upper16:.LC179	@,
	add	r1, ip, #4	@, <variable>.log2_max_pic_order_cnt_lsb_minus4,
	bl	mvc_u_v	@
	str	r0, [r4, r5]	@, <variable>.CurrPOC.pic_order_cnt_lsb
	ldrb	r0, [r8, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #0	@ <variable>.pic_order_present_flag,
	beq	.L3888	@,
	movw	r3, #:lower16:11162625	@ tmp227,
	movt	r3, #:upper16:11162625	@ tmp227,
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L3888	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC180	@,
	movt	r1, #:upper16:.LC180	@,
	bl	mvc_se_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	b	.L3888	@
.L3900:
	ldrb	lr, [r6, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	cmp	lr, #0	@ <variable>.delta_pic_order_always_zero_flag,
	bne	.L3889	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC181	@,
	movt	r1, #:upper16:.LC181	@,
	bl	mvc_se_v	@
	str	r0, [r4, r5]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldrb	r0, [r8, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #1	@ <variable>.pic_order_present_flag,
	bne	.L3889	@,
	movw	r5, #:lower16:11162625	@ tmp240,
	movt	r5, #:upper16:11162625	@ tmp240,
	ldrb	ip, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L3889	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC182	@,
	movt	r1, #:upper16:.LC182	@,
	bl	mvc_se_v	@
	str	r0, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	b	.L3889	@
.L3898:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC178	@,
	movt	r1, #:upper16:.LC178	@,
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11162664	@ tmp213,
	movt	ip, #:upper16:11162664	@ tmp213,
	cmp	r0, #65536	@ D.41346,
	str	r0, [r4, ip]	@ D.41346, <variable>.CurrSlice.idr_pic_id
	bcs	.L3887	@,
	movw	r1, #:lower16:11199460	@ tmp215,
	movt	r1, #:upper16:11199460	@ tmp215,
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3886	@,
.L3887:
	bl	vfmw_dprint_nothing	@
	b	.L3886	@
.L3901:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	bl	mvc_u_1	@
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.9044, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r7]	@, <variable>.CurrSlice.bottom_field_flag
	b	.L3878	@
.L3891:
	bl	vfmw_dprint_nothing	@
	movw	r0, #:lower16:g_event_report	@ tmp250,
	movt	r0, #:upper16:g_event_report	@ tmp250,
	ldr	r3, [r0, #0]	@ g_event_report.719, g_event_report
	cmp	r3, #0	@ g_event_report.719,
	beq	.L3874	@,
	movw	lr, #:lower16:11199520	@ tmp251,
	movt	lr, #:upper16:11199520	@ tmp251,
	mov	r1, #102	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.719
	mvn	r0, #0	@ D.41283,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
	.fnend
	.size	MVC_ProcessSliceHeaderFirstPart, .-MVC_ProcessSliceHeaderFirstPart
	.align	2
	.global	MVC_DecMMCO
	.type	MVC_DecMMCO, %function
MVC_DecMMCO:
	.fnstart
.LFB1723:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	cmp	r1, #0	@ save
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movweq	r6, #:lower16:11199460	@ tmp297,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	moveq	r7, r1	@ MMCONum.9085, save
	movteq	r6, #:upper16:11199460	@ tmp297,
	beq	.L3904	@,
	movw	sl, #:lower16:11168368	@ tmp283,
	movw	r9, #:lower16:11199460	@ tmp291,
	movt	sl, #:upper16:11168368	@ tmp283,
	movt	r9, #:upper16:11199460	@ tmp291,
	mov	r5, #0	@ MMCONum,
	movw	r8, #2004	@ tmp286,
	b	.L3905	@
.L3907:
	cmp	r2, #2	@ prephitmp.9061,
	beq	.L3938	@,
.L3908:
	cmp	r2, #3	@ prephitmp.9061,
	cmpne	r2, #6	@, prephitmp.9061,
	beq	.L3939	@,
.L3909:
	cmp	r2, #4	@ prephitmp.9061,
	beq	.L3940	@,
.L3910:
	cmp	r2, #6	@ prephitmp.9061,
	bhi	.L3911	@,
.L3941:
	ldr	lr, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3911	@,
	cmp	r2, #0	@ prephitmp.9061,
	beq	.L3914	@,
	add	r5, r5, #1	@ MMCONum, MMCONum,
	cmp	r5, #100	@ MMCONum,
	beq	.L3911	@,
.L3905:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC184	@,
	movt	r1, #:upper16:.LC184	@,
	ldr	r7, [r4, sl]	@ D.41148, <variable>.CurrMarkIdx
	bl	mvc_ue_v	@
	mov	r6, r5, asl #2	@ tmp279, MMCONum,
	add	r1, r6, r5	@ tmp152, tmp279, MMCONum
	movw	fp, #:lower16:11164360	@ tmp158,
	mul	ip, r8, r7	@ tmp154, tmp286, D.41148
	movt	fp, #:upper16:11164360	@ tmp158,
	mov	r2, r0	@ prephitmp.9061,
	cmp	r0, #1	@ prephitmp.9061,
	cmpne	r0, #3	@, prephitmp.9061,
	add	r0, ip, r1, asl #2	@, tmp156, tmp154, tmp152,
	add	r3, r0, r4	@ tmp157, tmp156, pMvcCtx
	add	fp, r3, fp	@ tmp158, tmp157, tmp158
	str	r2, [fp, #4]	@ prephitmp.9061, <variable>.memory_management_control_operation
	bne	.L3907	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC185	@,
	movt	r1, #:upper16:.LC185	@,
	bl	mvc_ue_v	@
	ldr	r2, [fp, #4]	@ prephitmp.9061, <variable>.memory_management_control_operation
	cmp	r2, #2	@ prephitmp.9061,
	str	r0, [fp, #8]	@, <variable>.difference_of_pic_nums_minus1
	bne	.L3908	@,
.L3938:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC186	@,
	movt	r1, #:upper16:.LC186	@,
	bl	mvc_ue_v	@
	mul	ip, r8, r7	@ tmp193, tmp286, D.41148
	add	r1, r6, r5	@ tmp191, tmp279, MMCONum
	movw	r2, #:lower16:11164360	@ tmp207,
	movt	r2, #:upper16:11164360	@ tmp207,
	movw	r3, #:lower16:11164368	@ tmp197,
	movt	r3, #:upper16:11164368	@ tmp197,
	add	r1, ip, r1, asl #2	@, tmp195, tmp193, tmp191,
	add	ip, r1, r4	@ tmp196, tmp195, pMvcCtx
	add	r2, ip, r2	@ tmp207, tmp196, tmp207
	add	r3, ip, r3	@ tmp197, tmp196, tmp197
	ldr	r2, [r2, #4]	@ prephitmp.9061, <variable>.memory_management_control_operation
	cmp	r2, #3	@ prephitmp.9061,
	cmpne	r2, #6	@, prephitmp.9061,
	str	r0, [r3, #4]	@, <variable>.long_term_pic_num
	bne	.L3909	@,
.L3939:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC187	@,
	movt	r1, #:upper16:.LC187	@,
	bl	mvc_ue_v	@
	mul	ip, r8, r7	@ tmp221, tmp286, D.41148
	add	r1, r6, r5	@ tmp219, tmp279, MMCONum
	movw	r2, #:lower16:11164360	@ tmp235,
	movt	r2, #:upper16:11164360	@ tmp235,
	movw	r3, #:lower16:11164368	@ tmp225,
	movt	r3, #:upper16:11164368	@ tmp225,
	add	r1, ip, r1, asl #2	@, tmp223, tmp221, tmp219,
	add	r1, r1, r4	@ tmp224, tmp223, pMvcCtx
	add	r2, r1, r2	@ tmp235, tmp224, tmp235
	add	r3, r1, r3	@ tmp225, tmp224, tmp225
	ldr	r2, [r2, #4]	@ prephitmp.9061, <variable>.memory_management_control_operation
	cmp	r2, #4	@ prephitmp.9061,
	str	r0, [r3, #8]	@, <variable>.long_term_frame_idx
	bne	.L3910	@,
.L3940:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC188	@,
	movt	r1, #:upper16:.LC188	@,
	bl	mvc_ue_v	@
	mul	r7, r8, r7	@ tmp242, tmp286, D.41148
	add	r3, r6, r5	@ tmp240, tmp279, MMCONum
	movw	ip, #:lower16:11164360	@ tmp256,
	movt	ip, #:upper16:11164360	@ tmp256,
	movw	r1, #:lower16:11164376	@ tmp246,
	movt	r1, #:upper16:11164376	@ tmp246,
	add	r6, r7, r3, asl #2	@, tmp244, tmp242, tmp240,
	add	r6, r6, r4	@ tmp245, tmp244, pMvcCtx
	add	r2, r6, ip	@ tmp256, tmp245, tmp256
	add	r3, r6, r1	@ tmp246, tmp245, tmp246
	ldr	r2, [r2, #4]	@ prephitmp.9061, <variable>.memory_management_control_operation
	cmp	r2, #6	@ prephitmp.9061,
	str	r0, [r3, #4]	@, <variable>.max_long_term_frame_idx_plus1
	bls	.L3941	@,
.L3911:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41147,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L3914:
	mov	r0, #0	@ D.41147,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L3904:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC184	@,
	movt	r1, #:upper16:.LC184	@,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.41190
	moveq	r8, #1	@, D.41190
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r5, r0	@ memory_management_control_operation,
	beq	.L3942	@,
.L3915:
	cmp	r5, #2	@ memory_management_control_operation,
	beq	.L3943	@,
.L3916:
	cmp	r5, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp273, D.41190
	cmp	r8, #0	@ tmp273,
	bne	.L3944	@,
.L3917:
	cmp	r5, #4	@ memory_management_control_operation,
	beq	.L3945	@,
	cmp	r5, #6	@ memory_management_control_operation,
	bhi	.L3920	@,
.L3919:
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3920	@,
	cmp	r5, #0	@ memory_management_control_operation,
	beq	.L3914	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC184	@,
	movt	r1, #:upper16:.LC184	@,
	add	r7, r7, #1	@ tmp298, MMCONum.9085,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.41190
	moveq	r8, #1	@, D.41190
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r5, r0	@ memory_management_control_operation,
	beq	.L3946	@,
.L3926:
	cmp	r5, #2	@ memory_management_control_operation,
	beq	.L3947	@,
.L3927:
	cmp	r5, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp311, D.41190
	cmp	r8, #0	@ tmp311,
	bne	.L3948	@,
.L3928:
	cmp	r5, #4	@ memory_management_control_operation,
	beq	.L3934	@,
	cmp	r5, #6	@ memory_management_control_operation,
	bhi	.L3920	@,
.L3935:
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3920	@,
	cmp	r5, #0	@ memory_management_control_operation,
	beq	.L3914	@,
	add	r7, r7, #1	@ MMCONum.9085, tmp298,
	cmp	r7, #100	@ MMCONum.9085,
	bne	.L3904	@,
.L3937:
	mvn	r0, #0	@ D.41147,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L3944:
	movw	r1, #:lower16:.LC187	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC187	@,
	bl	mvc_ue_v	@
	b	.L3917	@
.L3942:
	movw	r1, #:lower16:.LC185	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC185	@,
	bl	mvc_ue_v	@
	b	.L3915	@
.L3948:
	movw	r1, #:lower16:.LC187	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC187	@,
	bl	mvc_ue_v	@
	b	.L3928	@
.L3946:
	movw	r1, #:lower16:.LC185	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC185	@,
	bl	mvc_ue_v	@
	b	.L3926	@
.L3945:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC188	@,
	movt	r1, #:upper16:.LC188	@,
	bl	mvc_ue_v	@
	b	.L3919	@
.L3943:
	movw	r1, #:lower16:.LC186	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC186	@,
	bl	mvc_ue_v	@
	b	.L3916	@
.L3947:
	movw	r1, #:lower16:.LC186	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC186	@,
	bl	mvc_ue_v	@
	b	.L3927	@
.L3934:
	movw	r1, #:lower16:.LC188	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC188	@,
	bl	mvc_ue_v	@
	b	.L3935	@
.L3920:
	bl	vfmw_dprint_nothing	@
	b	.L3937	@
	.fnend
	.size	MVC_DecMMCO, .-MVC_DecMMCO
	.align	2
	.global	mvc_dec_ref_pic_marking
	.type	mvc_dec_ref_pic_marking, %function
mvc_dec_ref_pic_marking:
	.fnstart
.LFB1724:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r2, #:lower16:11162629	@ tmp149,
	movt	r2, #:upper16:11162629	@ tmp149,
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	ldrb	r8, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	r3, #:lower16:11168368	@ tmp148,
	movt	r3, #:upper16:11168368	@ tmp148,
	cmp	r8, #0	@ <variable>.CurrSlice.new_pic_flag,
	.pad #8
	sub	sp, sp, #8	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r6, [r0, r3]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	bne	.L3950	@,
	movw	r7, #2004	@ tmp157,
	movw	r1, #:lower16:11164360	@ tmp155,
	mla	ip, r7, r6, r0	@ tmp158, tmp157, tmpMarkIdx, pMvcCtx
	movt	r1, #:upper16:11164360	@ tmp155,
	mov	r7, r6	@ tmpMarkIdx.9109, tmpMarkIdx
	add	r5, ip, r1	@ tmp159, tmp158, tmp159
	ldrb	r3, [ip, r1]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L3953	@,
	movw	lr, #:lower16:11162627	@ tmp161,
	movt	lr, #:upper16:11162627	@ tmp161,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3963	@,
.L3954:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC191	@,
	movt	r1, #:upper16:.LC191	@,
	movw	r5, #:lower16:11164360	@ tmp182,
	bl	mvc_u_1	@
	movw	r1, #2004	@ tmp180,
	mla	r7, r1, r7, r4	@ tmp181, tmp180, tmpMarkIdx.9109, pMvcCtx
	movt	r5, #:upper16:11164360	@ tmp182,
	add	r5, r7, r5	@ tmp182, tmp181, tmp182
	strb	r0, [r5, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	vfmw_dprint_nothing	@
	ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r3, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L3964	@,
.L3956:
	mov	r0, #0	@ D.41246,
.L3955:
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
.L3950:
	movw	lr, #:lower16:11162627	@ tmp161,
	movt	lr, #:upper16:11162627	@ tmp161,
	rsbs	r7, r6, #1	@ tmpMarkIdx.9109, tmpMarkIdx
	movcc	r7, #0	@ tmpMarkIdx.9109
	str	r7, [r0, r3]	@ tmpMarkIdx.9109, <variable>.CurrMarkIdx
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L3954	@,
.L3963:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC189	@,
	movt	r1, #:upper16:.LC189	@,
	movw	r5, #:lower16:11164360	@ tmp168,
	bl	mvc_u_1	@
	movw	r2, #2004	@ tmp166,
	mla	r7, r2, r7, r4	@ tmp167, tmp166, tmpMarkIdx.9109, pMvcCtx
	movt	r5, #:upper16:11164360	@ tmp168,
	movw	r1, #:lower16:.LC190	@,
	movt	r1, #:upper16:.LC190	@,
	add	r5, r7, r5	@ tmp168, tmp167, tmp168
	strb	r0, [r5, #1]	@, <variable>.no_output_of_prior_pics_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.long_term_reference_flag
	bl	vfmw_dprint_nothing	@
	mov	r0, #0	@ D.41246,
	b	.L3955	@
.L3953:
	movw	r2, #:lower16:11162627	@ tmp205,
	movt	r2, #:upper16:11162627	@ tmp205,
	ldrb	r6, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r6, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L3965	@,
	movw	r1, #:lower16:.LC191	@,
	movt	r1, #:upper16:.LC191	@,
	ldrb	r6, [r5, #3]	@ zero_extendqisi2	@ D.41260, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.41260,
	bne	.L3966	@,
	ldrb	r0, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r0, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L3956	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r8	@, <variable>.CurrSlice.new_pic_flag
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
	b	MVC_DecMMCO	@
.L3964:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_DecMMCO	@
	cmn	r0, #1	@ D.41243,
	movne	r3, #1	@ tmp203,
	movne	r0, #0	@ D.41246,
	strneb	r3, [r5, #0]	@ tmp203, <variable>.is_valid
	bne	.L3955	@,
	movw	ip, #:lower16:11168368	@ tmp197,
	movt	ip, #:upper16:11168368	@ tmp197,
	mov	lr, #0	@ tmp195,
	strb	lr, [r5, #0]	@ tmp195, <variable>.is_valid
	str	r6, [r4, ip]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	str	r0, [sp, #4]	@,
	bl	vfmw_dprint_nothing	@
	ldr	r0, [sp, #4]	@,
	b	.L3955	@
.L3965:
	movw	r1, #:lower16:.LC189	@,
	movt	r1, #:upper16:.LC189	@,
	ldrb	r6, [r5, #1]	@ zero_extendqisi2	@ D.41250, <variable>.no_output_of_prior_pics_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.41250,
	bne	.L3962	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC190	@,
	movt	r1, #:upper16:.LC190	@,
	ldrb	r4, [r5, #2]	@ zero_extendqisi2	@ D.41255, <variable>.long_term_reference_flag
	bl	mvc_u_1	@
	cmp	r4, r0	@ D.41255,
	beq	.L3956	@,
.L3962:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41246,
	b	.L3955	@
.L3966:
	bl	vfmw_dprint_nothing	@
	b	.L3962	@
	.fnend
	.size	mvc_dec_ref_pic_marking, .-mvc_dec_ref_pic_marking
	.align	2
	.global	mvc_pred_weight_table
	.type	mvc_pred_weight_table, %function
mvc_pred_weight_table:
	.fnstart
.LFB1722:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	movw	r2, #:lower16:11152040	@ tmp163,
	movw	r3, #:lower16:11152044	@ tmp162,
	movt	r2, #:upper16:11152040	@ tmp163,
	movt	r3, #:upper16:11152044	@ tmp162,
	movw	r1, #:lower16:.LC192	@,
	movt	r1, #:upper16:.LC192	@,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r7, [r0, r2]	@ pSPS, <variable>.pSPS
	movw	r4, #:lower16:11162688	@ tmp165,
	ldr	fp, [r0, r3]	@ pPPS, <variable>.pPPS
	bl	mvc_ue_v	@
	movt	r4, #:upper16:11162688	@ tmp165,
	mov	r6, #1	@ tmp166,
	str	r0, [r5, r4]	@ prephitmp.9128, <variable>.CurrSlice.luma_log2_weight_denom
	mov	sl, r6, asl r0	@ y_default_weight, tmp166,
	ldr	r9, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r9, #0	@ <variable>.chroma_format_idc,
	bne	.L3990	@,
.L3969:
	cmp	r0, #7	@ prephitmp.9128,
	bhi	.L3970	@,
	movw	lr, #:lower16:11162692	@ tmp172,
	movt	lr, #:upper16:11162692	@ tmp172,
	ldr	r0, [r5, lr]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	cmp	r0, #7	@ <variable>.CurrSlice.chroma_log2_weight_denom,
	bhi	.L3970	@,
	movw	r3, #:lower16:11199460	@ tmp174,
	movt	r3, #:upper16:11199460	@ tmp174,
	ldr	r6, [r5, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r6, #0	@ <variable>.SeErrFlg,
	bne	.L3970	@,
	movw	r4, #:lower16:11162696	@ ivtmp.9157,
	movt	r4, #:upper16:11162696	@ ivtmp.9157,
	movw	r8, #:lower16:11162680	@ tmp238,
	add	r4, r5, r4	@ ivtmp.9157, pMvcCtx, ivtmp.9157
	movt	r8, #:upper16:11162680	@ tmp238,
	b	.L3978	@
.L3974:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L3991	@,
.L3975:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_v
.L3977:
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.9157, ivtmp.9157,
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcc	.L3992	@,
.L3978:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC194	@,
	movt	r1, #:upper16:.LC194	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.41085
	streq	r0, [r4, #768]	@ D.41085, <variable>.CurrSlice.wp_offset_l0_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l0_y
	beq	.L3974	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC195	@,
	movt	r1, #:upper16:.LC195	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC196	@,
	movt	r1, #:upper16:.LC196	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l0_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l0_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L3975	@,
.L3991:
	movw	r1, #:lower16:.LC197	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC197	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.41094
	bne	.L3993	@,
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	str	r0, [r4, #1024]	@ D.41094, <variable>.CurrSlice.wp_offset_l0_v
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_u
	str	r0, [r4, #896]	@ D.41094, <variable>.CurrSlice.wp_offset_l0_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_v
	add	r4, r4, #4	@ ivtmp.9157, ivtmp.9157,
	bcs	.L3978	@,
.L3992:
	ldr	r1, [fp, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r1, #1	@ <variable>.weighted_bipred_idc,
	beq	.L3994	@,
.L3979:
	movw	r3, #:lower16:11199460	@ tmp217,
	movt	r3, #:upper16:11199460	@ tmp217,
	ldr	r0, [r5, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@, D.41084,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L3970:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41084,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}	@
.L3993:
	movw	r1, #:lower16:.LC198	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC198	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC198	@,
	movt	r1, #:upper16:.LC198	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l0_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l0_v
	b	.L3977	@
.L3990:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC193	@,
	movt	r1, #:upper16:.LC193	@,
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11162692	@ tmp169,
	movt	ip, #:upper16:11162692	@ tmp169,
	mov	r1, r0	@ D.41076,
	ldr	r0, [r5, r4]	@ prephitmp.9128, <variable>.CurrSlice.luma_log2_weight_denom
	mov	r9, r6, asl r1	@ uv_default_weight, tmp166,
	str	r1, [r5, ip]	@ D.41076, <variable>.CurrSlice.chroma_log2_weight_denom
	b	.L3969	@
.L3994:
	movw	r0, #:lower16:11162624	@ tmp196,
	movt	r0, #:upper16:11162624	@ tmp196,
	ldrb	ip, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L3979	@,
	movw	r6, #:lower16:11163080	@ ivtmp.9147,
	movt	r6, #:upper16:11163080	@ ivtmp.9147,
	add	r4, r5, r6	@ ivtmp.9147, pMvcCtx, ivtmp.9147
	movw	r8, #:lower16:11162684	@ tmp231,
	mov	r6, #0	@ i.9161,
	movt	r8, #:upper16:11162684	@ tmp231,
	b	.L3985	@
.L3981:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L3995	@,
.L3982:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_v
.L3984:
	ldr	lr, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r6, r6, #1	@ i.9161, i.9161,
	add	r4, r4, #4	@ ivtmp.9147, ivtmp.9147,
	cmp	lr, r6	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.9161
	bcc	.L3979	@,
.L3985:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC200	@,
	movt	r1, #:upper16:.LC200	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.41110
	streq	r0, [r4, #768]	@ D.41110, <variable>.CurrSlice.wp_offset_l1_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l1_y
	beq	.L3981	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC201	@,
	movt	r1, #:upper16:.LC201	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC202	@,
	movt	r1, #:upper16:.LC202	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l1_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l1_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L3982	@,
.L3995:
	movw	r1, #:lower16:.LC203	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC203	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.41118
	bne	.L3996	@,
	str	r0, [r4, #1024]	@ D.41118, <variable>.CurrSlice.wp_offset_l1_v
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_u
	str	r0, [r4, #896]	@ D.41118, <variable>.CurrSlice.wp_offset_l1_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_v
	b	.L3984	@
.L3996:
	movw	r1, #:lower16:.LC204	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC204	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC204	@,
	movt	r1, #:upper16:.LC204	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l1_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l1_v
	b	.L3984	@
	.fnend
	.size	mvc_pred_weight_table, .-mvc_pred_weight_table
	.align	2
	.global	mvc_ref_pic_list_reordering
	.type	mvc_ref_pic_list_reordering, %function
mvc_ref_pic_list_reordering:
	.fnstart
.LFB1721:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	movw	r1, #:lower16:11164276	@ tmp158,
	movt	r1, #:upper16:11164276	@ tmp158,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	movw	r3, #:lower16:11162625	@ tmp167,
	ldr	r8, [r0, r1]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movt	r3, #:upper16:11162625	@ tmp167,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r9, #:lower16:11152040	@ tmp160,
	ldrb	r0, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r8, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	movt	r9, #:upper16:11152040	@ tmp160,
	movw	r2, #:lower16:11161572	@ tmp161,
	movw	ip, #:lower16:11161573	@ tmp164,
	movt	r2, #:upper16:11161572	@ tmp161,
	movt	ip, #:upper16:11161573	@ tmp164,
	movne	r8, #5	@ max_reorder_num,
	moveq	r8, #3	@ max_reorder_num,
	cmp	r0, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	r0, [r4, r9]	@ pSPS, <variable>.pSPS
	mov	r5, #0	@ tmp162,
	strb	r5, [r4, r2]	@ tmp162, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	mov	r9, #1	@ tmp174,
	strb	r5, [r4, ip]	@ tmp162, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	movw	r5, #:lower16:11162624	@ tmp175,
	movt	r5, #:upper16:11162624	@ tmp175,
	ldr	r1, [r0, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	addne	r1, r1, #5	@ tmp169, <variable>.log2_max_frame_num_minus4,
	addeq	r1, r1, #4	@ tmp172, <variable>.log2_max_frame_num_minus4,
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	mov	r9, r9, asl r1	@ MaxPicNum, tmp174,
	bls	.L4036	@,
.L4002:
	movw	r3, #:lower16:11199460	@ tmp230,
	movt	r3, #:upper16:11199460	@ tmp230,
	ldr	r2, [r4, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@ D.40995,
	ldmnefd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L4020:
	mov	r0, #0	@ D.40995,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L4036:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC206	@,
	movt	r1, #:upper16:.LC206	@,
	bl	mvc_u_1	@
	movw	r3, #:lower16:11161572	@ tmp178,
	movt	r3, #:upper16:11161572	@ tmp178,
	uxtb	r0, r0	@ D.40984,
	strb	r0, [r4, r3]	@ D.40984, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r0, #0	@ D.40984,
	ldreqb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.9178, <variable>.CurrSlice.slice_type
	beq	.L4004	@,
	movw	sl, #:lower16:11162680	@ tmp181,
	movt	sl, #:upper16:11162680	@ tmp181,
	ldr	r6, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmn	r6, #2	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	beq	.L4005	@,
	movw	r7, #:lower16:11161576	@ ivtmp.9201,
	movt	r7, #:upper16:11161576	@ ivtmp.9201,
	add	r5, r4, r7	@ ivtmp.9201, pMvcCtx, ivtmp.9201
	mov	r6, #0	@ i.9211,
	movw	r7, #:lower16:11199460	@ tmp248,
	movt	r7, #:upper16:11199460	@ tmp248,
	b	.L4015	@
.L4011:
	cmp	r0, #2	@ D.40989,
	beq	.L4037	@,
	sub	r0, r0, #4	@ tmp193, D.40989,
	cmp	r0, #1	@ tmp193,
	bls	.L4038	@,
.L4013:
	ldr	r1, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i.9211, i.9211,
	add	r5, r5, #4	@ ivtmp.9201, ivtmp.9201,
	add	r3, r1, #2	@ prephitmp.9180, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	cmp	r3, r6	@ prephitmp.9180, i.9211
	bls	.L4010	@,
.L4015:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC207	@,
	movt	r1, #:upper16:.LC207	@,
	bl	mvc_ue_v	@
	cmp	r8, r0	@ max_reorder_num, D.40989
	str	r0, [r5, #0]	@ D.40989, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	bcc	.L4035	@,
	ldr	lr, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4035	@,
	cmp	r0, #3	@ D.40989,
	beq	.L4039	@,
	cmp	r0, #1	@ D.40989,
	bhi	.L4011	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	bl	mvc_ue_v	@
	cmp	r9, r0	@ MaxPicNum, D.40999
	str	r0, [r5, #264]	@ D.40999, <variable>.CurrReorder.abs_diff_pic_num_minus1_l0
	bls	.L4035	@,
	ldr	r3, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4013	@,
.L4035:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.40995,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}	@
.L4039:
	movw	r2, #:lower16:11162680	@ tmp187,
	movt	r2, #:upper16:11162680	@ tmp187,
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r3, ip, #2	@ prephitmp.9180, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
.L4010:
	cmp	r6, r3	@ i.9211, prephitmp.9180
	beq	.L4016	@,
.L4034:
	movw	r1, #:lower16:11162624	@ tmp205,
	movt	r1, #:upper16:11162624	@ tmp205,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.9178, <variable>.CurrSlice.slice_type
.L4004:
	cmp	r3, #1	@ prephitmp.9178,
	bne	.L4002	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC211	@,
	movt	r1, #:upper16:.LC211	@,
	bl	mvc_u_1	@
	movw	ip, #:lower16:11161573	@ tmp207,
	movt	ip, #:upper16:11161573	@ tmp207,
	uxtb	r0, r0	@ D.41022,
	strb	r0, [r4, ip]	@ D.41022, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r0, #0	@ D.41022,
	beq	.L4002	@,
	movw	sl, #:lower16:11162684	@ tmp209,
	movt	sl, #:upper16:11162684	@ tmp209,
	ldr	lr, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmn	lr, #2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	beq	.L4002	@,
	movw	r5, #:lower16:11161708	@ ivtmp.9193,
	movt	r5, #:upper16:11161708	@ ivtmp.9193,
	add	r6, r4, r5	@ ivtmp.9193, pMvcCtx, ivtmp.9193
	movw	r7, #:lower16:11199460	@ tmp242,
	mov	r5, #0	@ i,
	movt	r7, #:upper16:11199460	@ tmp242,
	b	.L4026	@
.L4025:
	add	r5, r5, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.9193, ivtmp.9193,
	cmp	r3, r5	@ D.41049, i
	bls	.L4002	@,
.L4026:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC212	@,
	movt	r1, #:upper16:.LC212	@,
	bl	mvc_ue_v	@
	cmp	r8, r0	@ max_reorder_num, D.41026
	str	r0, [r6, #0]	@ D.41026, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	bcc	.L4035	@,
	ldr	r2, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L4035	@,
	cmp	r0, #3	@ D.41026,
	beq	.L4020	@,
	cmp	r0, #1	@ D.41026,
	bls	.L4040	@,
	cmp	r0, #2	@ D.41026,
	beq	.L4041	@,
	sub	r0, r0, #4	@ tmp219, D.41026,
	cmp	r0, #1	@ tmp219,
	bls	.L4042	@,
.L4023:
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r3, r2, #2	@ D.41049, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r3, r5	@ D.41049, i
	bne	.L4025	@,
	movw	ip, #:lower16:2790428	@ tmp223,
	movt	ip, #:upper16:2790428	@ tmp223,
	add	lr, r2, ip	@ tmp223, <variable>.CurrSlice.num_ref_idx_l1_active_minus1, tmp223
	add	r1, r4, lr, asl #2	@, tmp227, pMvcCtx, tmp223,
	ldr	ip, [r1, #4]	@ tmp229, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	cmp	ip, #3	@ tmp229,
	beq	.L4025	@,
	b	.L4035	@
.L4040:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC213	@,
	movt	r1, #:upper16:.LC213	@,
	bl	mvc_ue_v	@
	cmp	r9, r0	@ MaxPicNum, D.41034
	str	r0, [r6, #264]	@ D.41034, <variable>.CurrReorder.abs_diff_pic_num_minus1_l1
	bls	.L4035	@,
	ldr	r3, [r4, r7]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4023	@,
	b	.L4035	@
.L4041:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC214	@,
	movt	r1, #:upper16:.LC214	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #524]	@, <variable>.CurrReorder.long_term_pic_idx_l1
	b	.L4023	@
.L4042:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC215	@,
	movt	r1, #:upper16:.LC215	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l1
	b	.L4023	@
.L4037:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC209	@,
	movt	r1, #:upper16:.LC209	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #528]	@, <variable>.CurrReorder.long_term_pic_idx_l0
	b	.L4013	@
.L4038:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l0
	b	.L4013	@
.L4005:
	mov	r6, #0	@ i.9211,
.L4016:
	movw	r3, #:lower16:2790392	@ tmp198,
	movt	r3, #:upper16:2790392	@ tmp198,
	add	r2, r6, r3	@ tmp198, i.9211, tmp198
	add	ip, r4, r2, asl #2	@, tmp202, pMvcCtx, tmp198,
	ldr	lr, [ip, #8]	@ tmp204, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	cmp	lr, #3	@ tmp204,
	beq	.L4034	@,
	b	.L4035	@
	.fnend
	.size	mvc_ref_pic_list_reordering, .-mvc_ref_pic_list_reordering
	.align	2
	.global	MVC_ProcessSliceHeaderSecondPart
	.type	MVC_ProcessSliceHeaderSecondPart, %function
MVC_ProcessSliceHeaderSecondPart:
	.fnstart
.LFB1726:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	movw	lr, #:lower16:11155236	@ tmp153,
	movt	lr, #:upper16:11155236	@ tmp153,
	movw	ip, #:lower16:11162632	@ tmp156,
	movt	ip, #:upper16:11162632	@ tmp156,
	movw	r3, #:lower16:11152044	@ tmp152,
	ldr	r5, [r0, lr]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movt	r3, #:upper16:11152044	@ tmp152,
	ldr	r2, [r0, ip]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	sub	r1, r5, #1	@ tmp154, <variable>.MaxPpsNum,
	ldr	r5, [r0, r3]	@ pPPS, <variable>.pPPS
	cmp	r1, r2	@ tmp154, <variable>.CurrSlice.pic_parameter_set_id
	bcc	.L4072	@,
	movw	r2, #:lower16:11199460	@ tmp158,
	movt	r2, #:upper16:11199460	@ tmp158,
	ldr	r1, [r0, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L4072	@,
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L4072	@,
	movw	r6, #:lower16:11162624	@ tmp160,
	movt	r6, #:upper16:11162624	@ tmp160,
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L4078	@,
.L4048:
	ldr	ip, [r5, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movw	r7, #:lower16:11162624	@ tmp169,
	movt	r7, #:upper16:11162624	@ tmp169,
	movw	r6, #:lower16:11162680	@ tmp165,
	movt	r6, #:upper16:11162680	@ tmp165,
	movw	r8, #:lower16:11162684	@ tmp167,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ prephitmp.9253, <variable>.CurrSlice.slice_type
	movt	r8, #:upper16:11162684	@ tmp167,
	str	ip, [r4, r6]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	ldr	r2, [r5, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r3, #1	@ prephitmp.9253,
	str	r2, [r4, r8]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bls	.L4079	@,
.L4049:
	cmp	r3, #2	@ prephitmp.9253,
	beq	.L4080	@,
.L4057:
	cmp	r3, #1	@ prephitmp.9253,
	mov	r0, r4	@, pMvcCtx
	movwne	r3, #:lower16:11162684	@ tmp198,
	movtne	r3, #:upper16:11162684	@ tmp198,
	movne	r2, #32	@ tmp199,
	strne	r2, [r4, r3]	@ tmp199, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	mvc_ref_pic_list_reordering	@
	cmp	r0, #0	@,
	bne	.L4072	@,
	ldrb	r2, [r5, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r2, #0	@ <variable>.weighted_pred_flag,
	beq	.L4060	@,
	movw	r6, #:lower16:11162624	@ tmp201,
	movt	r6, #:upper16:11162624	@ tmp201,
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #0	@ <variable>.CurrSlice.slice_type,
	moveq	r3, #1	@ prephitmp.9229,
	bne	.L4060	@,
.L4061:
	movw	r6, #:lower16:11162631	@ tmp207,
	movt	r6, #:upper16:11162631	@ tmp207,
	strb	r3, [r4, r6]	@ prephitmp.9229, <variable>.CurrSlice.apply_weights_flag
	bl	vfmw_dprint_nothing	@
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.apply_weights_flag, <variable>.CurrSlice.apply_weights_flag
	movw	r2, #:lower16:11162688	@ tmp209,
	movw	r3, #:lower16:11162692	@ tmp211,
	movt	r2, #:upper16:11162688	@ tmp209,
	movt	r3, #:upper16:11162692	@ tmp211,
	cmp	r0, #0	@ <variable>.CurrSlice.apply_weights_flag,
	mov	r1, #0	@ tmp210,
	str	r1, [r4, r2]	@ tmp210, <variable>.CurrSlice.luma_log2_weight_denom
	str	r1, [r4, r3]	@ tmp210, <variable>.CurrSlice.chroma_log2_weight_denom
	bne	.L4081	@,
	movw	ip, #:lower16:11162656	@ tmp215,
	movt	ip, #:upper16:11162656	@ tmp215,
	ldr	lr, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L4082	@,
.L4064:
	movw	r6, #:lower16:11164232	@ tmp217,
	movt	r6, #:upper16:11164232	@ tmp217,
	mov	r3, #0	@ tmp218,
	str	r3, [r4, r6]	@ tmp218, <variable>.CurrSlice.cabac_init_idc
	ldrb	r1, [r5, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r1, #0	@ <variable>.entropy_coding_mode_flag,
	beq	.L4065	@,
	movw	r0, #:lower16:11162624	@ tmp220,
	movt	r0, #:upper16:11162624	@ tmp220,
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	bls	.L4083	@,
.L4065:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC221	@,
	movt	r1, #:upper16:.LC221	@,
	movw	r6, #:lower16:11164240	@ tmp228,
	bl	mvc_se_v	@
	movt	r6, #:upper16:11164240	@ tmp228,
	movw	r2, #:lower16:11164236	@ tmp227,
	movw	r7, #:lower16:11164244	@ tmp230,
	movt	r2, #:upper16:11164236	@ tmp227,
	movt	r7, #:upper16:11164244	@ tmp230,
	movw	r8, #:lower16:11164248	@ tmp232,
	movt	r8, #:upper16:11164248	@ tmp232,
	mov	r1, #0	@ tmp229,
	str	r1, [r4, r6]	@ tmp229, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r1, [r4, r8]	@ tmp229, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r4, r7]	@ tmp229, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r4, r2]	@, <variable>.CurrSlice.slice_qp_delta
	ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r3, r1	@ <variable>.deblocking_filter_control_present_flag,
	bne	.L4084	@,
.L4067:
	mov	r0, #0	@ D.41409,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L4060:
	ldr	r3, [r5, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r3, #1	@ <variable>.weighted_bipred_idc,
	movne	r3, #0	@ prephitmp.9229,
	bne	.L4061	@,
	movw	ip, #:lower16:11162624	@ tmp204,
	movt	ip, #:upper16:11162624	@ tmp204,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	movne	r3, #0	@, prephitmp.9229
	moveq	r3, #1	@, prephitmp.9229
	b	.L4061	@
.L4084:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC222	@,
	movt	r1, #:upper16:.LC222	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.41488,
	str	r0, [r4, r6]	@ D.41488, <variable>.CurrSlice.disable_deblocking_filter_idc
	bhi	.L4072	@,
	movw	r5, #:lower16:11199460	@ tmp237,
	movt	r5, #:upper16:11199460	@ tmp237,
	ldr	lr, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4072	@,
	cmp	r0, #1	@ D.41488,
	beq	.L4067	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC223	@,
	movt	r1, #:upper16:.LC223	@,
	bl	mvc_se_v	@
	add	ip, r0, #6	@ tmp241, D.41495,
	str	r0, [r4, r7]	@ D.41495, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	cmp	ip, #12	@ tmp241,
	bhi	.L4072	@,
	ldr	r0, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4072	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC224	@,
	movt	r1, #:upper16:.LC224	@,
	bl	mvc_se_v	@
	add	r1, r0, #6	@ tmp246, D.41502,
	str	r0, [r4, r8]	@ D.41502, <variable>.CurrSlice.slice_beta_offset_div2
	cmp	r1, #12	@ tmp246,
	bhi	.L4072	@,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4067	@,
.L4072:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41409,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}	@
.L4081:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_pred_weight_table	@
	cmp	r0, #0	@,
	bne	.L4072	@,
	movw	ip, #:lower16:11162656	@ tmp215,
	movt	ip, #:upper16:11162656	@ tmp215,
	ldr	lr, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L4064	@,
.L4082:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_dec_ref_pic_marking	@
	cmp	r0, #0	@,
	beq	.L4064	@,
	b	.L4072	@
.L4080:
	movw	r3, #:lower16:11162624	@ tmp197,
	movw	r2, #:lower16:11162680	@ tmp195,
	movt	r3, #:upper16:11162624	@ tmp197,
	movt	r2, #:upper16:11162680	@ tmp195,
	mov	lr, #32	@ tmp196,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9253, <variable>.CurrSlice.slice_type
	str	lr, [r4, r2]	@ tmp196, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	b	.L4057	@
.L4078:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC216	@,
	movt	r1, #:upper16:.LC216	@,
	movw	r7, #:lower16:11162630	@ tmp163,
	bl	mvc_u_1	@
	movt	r7, #:upper16:11162630	@ tmp163,
	strb	r0, [r4, r7]	@, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	b	.L4048	@
.L4079:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	ldreq	r3, [r4, r6]	@ prephitmp.9231, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4085	@,
.L4051:
	movw	lr, #:lower16:11162625	@ tmp179,
	movt	lr, #:upper16:11162625	@ tmp179,
	ldrb	r2, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4052	@,
	cmp	r3, #15	@ prephitmp.9231,
	bhi	.L4072	@,
	movw	r0, #:lower16:11162684	@ tmp181,
	movt	r0, #:upper16:11162684	@ tmp181,
	ldr	r3, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r3, #15	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bhi	.L4076	@,
.L4056:
	movw	ip, #:lower16:11199460	@ tmp192,
	movt	ip, #:upper16:11199460	@ tmp192,
	ldr	r0, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4072	@,
	movw	r1, #:lower16:11162624	@ tmp194,
	movt	r1, #:upper16:11162624	@ tmp194,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.9253, <variable>.CurrSlice.slice_type
	b	.L4049	@
.L4052:
	cmp	r3, #31	@ prephitmp.9231,
	bhi	.L4072	@,
	movw	r1, #:lower16:11162684	@ tmp188,
	movt	r1, #:upper16:11162684	@ tmp188,
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	ip, #31	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L4056	@,
.L4076:
	movw	r3, #:lower16:11162624	@ tmp190,
	movt	r3, #:upper16:11162624	@ tmp190,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	lr, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4056	@,
	b	.L4072	@
.L4083:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC220	@,
	movt	r1, #:upper16:.LC220	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.41479,
	str	r0, [r4, r6]	@ D.41479, <variable>.CurrSlice.cabac_init_idc
	bhi	.L4072	@,
	movw	ip, #:lower16:11199460	@ tmp224,
	movt	ip, #:upper16:11199460	@ tmp224,
	ldr	lr, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L4065	@,
	b	.L4072	@
.L4085:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC218	@,
	movt	r1, #:upper16:.LC218	@,
	bl	mvc_ue_v	@
	ldrb	r1, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	mov	r3, r0	@ prephitmp.9231,
	str	r0, [r4, r6]	@ prephitmp.9231, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4051	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	bl	mvc_ue_v	@
	ldr	r3, [r4, r6]	@ prephitmp.9231, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	str	r0, [r4, r8]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	b	.L4051	@
	.fnend
	.size	MVC_ProcessSliceHeaderSecondPart, .-MVC_ProcessSliceHeaderSecondPart
	.align	2
	.global	MVC_DecSlice
	.type	MVC_DecSlice, %function
MVC_DecSlice:
	.fnstart
.LFB1730:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, lr}	@,
	.save {r4, r5, r6, r7, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	.pad #12
	sub	sp, sp, #12	@,,
	bl	vfmw_dprint_nothing	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r2, #:lower16:11162627	@ tmp162,
	movt	r2, #:upper16:11162627	@ tmp162,
	movw	r3, #:lower16:11162656	@ tmp166,
	movt	r3, #:upper16:11162656	@ tmp166,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	mov	r0, r4	@, pMvcCtx
	strb	ip, [r4, r2]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r2, [r1, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r2, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4090	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderSecondPart	@
	cmp	r0, #0	@,
	bne	.L4090	@,
	movw	lr, #:lower16:11199444	@ tmp173,
	movt	lr, #:upper16:11199444	@ tmp173,
	ldr	r5, [r4, lr]	@ temp.9306, <variable>.SliceParaNum
	cmp	r5, #0	@ temp.9306,
	moveq	r7, r5	@ Size, temp.9306
	beq	.L4092	@,
	movw	lr, #:lower16:11197380	@ tmp179,
	movt	lr, #:upper16:11197380	@ tmp179,
	add	r3, r4, lr	@ tmp179, pMvcCtx, tmp179
	mov	r5, r5, asl #2	@ D.53965, temp.9306,
	sub	r7, r5, #4	@ tmp245, D.53965,
	ldr	r2, [r3, #0]	@ D.41665, <variable>.pSliceNal
	ubfx	r1, r7, #2, #1	@ tmp246, tmp245,,
	ldr	lr, [r2, #4]	@ Addr0, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r6, [r2, #8]	@ Size0, <variable>.bitstream_length
	beq	.L4171	@,
.L4143:
	ldr	r3, [r2, #32]	@ Addr1, <variable>.streamBuffer
	cmp	r3, #0	@ Addr1,
	ldrne	r2, [r2, #36]	@ Size1, <variable>.bitstream_length
	moveq	r2, r3	@ Size1, Addr1
	cmp	r3, #0	@ Addr1,
	add	r7, r6, r2	@ Size, Size0, Size1
	movne	lr, r3	@ PrevNalAddr, Addr1
	movne	r6, r2	@ PrevNalSize, Size1
	mov	r2, #4	@ ivtmp.9287,
	cmp	r2, r5	@ ivtmp.9287, D.53965
	beq	.L4092	@,
	cmp	r1, #0	@ tmp246,
	beq	.L4104	@,
	movw	r1, #:lower16:11197384	@ tmp277,
	movt	r1, #:upper16:11197384	@ tmp277,
	add	r0, r4, r1	@ tmp277, pMvcCtx, tmp277
	ldr	r1, [r0, #0]	@ D.41665, <variable>.pSliceNal
	ldr	r0, [r1, #4]	@ Addr0, <variable>.streamBuffer
	ldr	r3, [r1, #32]	@ Addr1, <variable>.streamBuffer
	cmp	r0, #0	@ Addr0,
	ldrne	ip, [r1, #8]	@ Size0, <variable>.bitstream_length
	moveq	ip, r0	@ Size0, Addr0
	cmp	r3, #0	@ Addr1,
	ldrne	r1, [r1, #36]	@ Size1, <variable>.bitstream_length
	moveq	r1, r3	@ Size1, Addr1
	cmp	lr, #0	@ PrevNalAddr,
	addeq	r7, ip, r7	@ D.41685, Size0, Size
	addeq	r7, r7, r1	@ Size, D.41685, Size1
	beq	.L4153	@,
	cmp	lr, r0	@ PrevNalAddr, Addr0
	bcs	.L4172	@,
	rsb	r6, r6, r0	@ tmp287, PrevNalSize, Addr0
	rsb	lr, lr, r6	@ tmp288, PrevNalAddr, tmp287
	add	lr, lr, ip	@ Size0.9289, tmp288, Size0
.L4155:
	add	r7, r1, r7	@ Size.9294, Size1, Size
	add	r7, r7, lr	@ Size, Size.9294, Size0.9289
.L4153:
	cmp	r3, #0	@ Addr1,
	moveq	lr, r0	@ PrevNalAddr, Addr0
	moveq	r6, ip	@ PrevNalSize, Size0
	bne	.L4165	@,
.L4166:
	add	r2, r2, #4	@ ivtmp.9287, tmp247,
	cmp	r2, r5	@ ivtmp.9287, D.53965
	beq	.L4092	@,
.L4104:
	add	r0, r4, r2	@ tmp250, pMvcCtx, ivtmp.9287
	movw	r1, #:lower16:11197380	@ tmp252,
	movt	r1, #:upper16:11197380	@ tmp252,
	add	r3, r0, r1	@ tmp252, tmp250, tmp252
	ldr	r0, [r3, #0]	@ D.41665, <variable>.pSliceNal
	ldr	ip, [r0, #4]	@ Addr0, <variable>.streamBuffer
	ldr	r1, [r0, #32]	@ Addr1, <variable>.streamBuffer
	cmp	ip, #0	@ Addr0,
	ldrne	r3, [r0, #8]	@ Size0, <variable>.bitstream_length
	moveq	r3, ip	@ Size0, Addr0
	cmp	r1, #0	@ Addr1,
	moveq	r0, r1	@ Size1, Addr1
	ldrne	r0, [r0, #36]	@ Size1, <variable>.bitstream_length
	cmp	lr, #0	@ PrevNalAddr,
	addeq	r7, r3, r7	@ D.41685, Size0, Size
	addeq	lr, r7, r0	@ Size, D.41685, Size1
	beq	.L4101	@,
	cmp	lr, ip	@ PrevNalAddr, Addr0
	add	r7, r0, r7	@ Size.9294, Size1, Size
	rsbcc	lr, lr, ip	@ tmp182, PrevNalAddr, Addr0
	rsbcc	r6, r6, lr	@ tmp183, PrevNalSize, tmp182
	movcs	r6, r3	@ Size0.9289, Size0
	addcc	r6, r6, r3	@ Size0.9289, tmp183, Size0
	add	lr, r7, r6	@ Size, Size.9294, Size0.9289
.L4101:
	cmp	r1, #0	@ Addr1,
	add	r2, r2, #4	@ tmp247, ivtmp.9287,
	movne	ip, r1	@ PrevNalAddr, Addr1
	movne	r7, r0	@ PrevNalSize, Size1
	add	r1, r4, r2	@ tmp261, pMvcCtx, tmp247
	movw	r0, #:lower16:11197380	@ tmp263,
	movt	r0, #:upper16:11197380	@ tmp263,
	moveq	r7, r3	@ PrevNalSize, Size0
	add	r3, r1, r0	@ tmp263, tmp261, tmp263
	ldr	r1, [r3, #0]	@ D.41665, <variable>.pSliceNal
	ldr	r0, [r1, #4]	@ Addr0, <variable>.streamBuffer
	cmp	r0, #0	@ Addr0,
	ldrne	r6, [r1, #8]	@ Size0, <variable>.bitstream_length
	moveq	r6, r0	@ Size0, Addr0
.L4158:
	ldr	r3, [r1, #32]	@ Addr1, <variable>.streamBuffer
	cmp	r3, #0	@ Addr1,
	ldrne	r1, [r1, #36]	@ Size1, <variable>.bitstream_length
	moveq	r1, r3	@ Size1, Addr1
	cmp	ip, #0	@ PrevNalAddr,
	addeq	r7, r6, lr	@ D.41685, Size0, Size
	addeq	r7, r7, r1	@ Size, D.41685, Size1
	beq	.L4162	@,
	cmp	ip, r0	@ PrevNalAddr, Addr0
	bcs	.L4173	@,
	rsb	r7, r7, r0	@ tmp296, PrevNalSize, Addr0
	rsb	ip, ip, r7	@ tmp297, PrevNalAddr, tmp296
	add	ip, ip, r6	@ Size0.9289, tmp297, Size0
.L4164:
	add	r7, r1, lr	@ Size.9294, Size1, Size
	add	r7, r7, ip	@ Size, Size.9294, Size0.9289
.L4162:
	cmp	r3, #0	@ Addr1,
	moveq	lr, r0	@ PrevNalAddr, Addr0
	beq	.L4166	@,
.L4165:
	add	r2, r2, #4	@ ivtmp.9287, tmp247,
	mov	lr, r3	@ PrevNalAddr, Addr1
	cmp	r2, r5	@ ivtmp.9287, D.53965
	mov	r6, r1	@ PrevNalSize, Size1
	bne	.L4104	@,
.L4092:
	movw	r2, #:lower16:11196708	@ tmp185,
	movw	r1, #:lower16:11196704	@ tmp186,
	movt	r2, #:upper16:11196708	@ tmp185,
	movt	r1, #:upper16:11196704	@ tmp186,
	movw	r3, #:lower16:11199504	@ tmp184,
	movt	r3, #:upper16:11199504	@ tmp184,
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movw	r2, #1620	@ tmp189,
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	str	r7, [r4, r3]	@ Size, <variable>.MaxBytesReceived
	mul	r3, lr, ip	@ TotalMbs, <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_height_in_mb
	cmp	r3, r2	@ TotalMbs, tmp189
	movgt	r0, r3, asl #7	@ MaxStreamThr, TotalMbs,
	ble	.L4174	@,
.L4106:
	movw	ip, #:lower16:11199444	@ tmp195,
	movw	r3, #:lower16:11155228	@ tmp196,
	movt	ip, #:upper16:11199444	@ tmp195,
	movt	r3, #:upper16:11155228	@ tmp196,
	ldr	r1, [r4, ip]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	ldr	r2, [r4, r3]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r2	@ <variable>.SliceParaNum, <variable>.MaxSliceNum
	bcs	.L4108	@,
	cmp	r7, r0	@ Size, MaxStreamThr
	bhi	.L4108	@,
	movw	r3, #:lower16:11162629	@ tmp207,
	movt	r3, #:upper16:11162629	@ tmp207,
	ldrb	r1, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	cmp	r1, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L4175	@,
.L4111:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PicTypeStatistic	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecList	@
	cmp	r0, #0	@,
	bne	.L4168	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsRefListWrong	@
	subs	r5, r0, #0	@ ret.9298,
	bne	.L4176	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcStreamBits	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WriteSliceMsg	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ExitSlice	@
	movw	r3, #:lower16:11199500	@ tmp232,
	movt	r3, #:upper16:11199500	@ tmp232,
	movw	r2, #:lower16:11198004	@ tmp230,
	movt	r2, #:upper16:11198004	@ tmp230,
	mov	r0, r5	@ D.41658, ret.9298
	ldr	r1, [r4, r3]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	mov	ip, #1	@ tmp231,
	str	ip, [r4, r2]	@ tmp231, <variable>.AllowStartDec
	add	r2, r1, ip	@ tmp235, <variable>.SliceNumInPic,
	str	r2, [r4, r3]	@ tmp235, <variable>.SliceNumInPic
.L4089:
	add	sp, sp, #12	@,,
	ldmfd	sp!, {r4, r5, r6, r7, pc}
.L4173:
	mov	ip, r6	@ Size0.9289, Size0
	b	.L4164	@
.L4174:
	add	lr, r3, r3, asl #1	@, tmp192, TotalMbs, TotalMbs,
	movw	ip, #32769	@ tmp194,
	mov	r0, lr, asl #8	@ tmp193, tmp192,
	cmp	r0, ip	@ tmp193, tmp194
	movgt	r0, r0, asr #1	@ MaxStreamThr, tmp193,
	movle	r0, #16384	@ MaxStreamThr,
	b	.L4106	@
.L4171:
	mov	r6, lr	@ Size0, Addr0
	b	.L4143	@
.L4175:
	bl	vfmw_dprint_nothing	@
	movw	r2, #:lower16:11162627	@ tmp209,
	movt	r2, #:upper16:11162627	@ tmp209,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4177	@,
.L4112:
	movw	lr, #:lower16:11196171	@ tmp220,
	movt	lr, #:upper16:11196171	@ tmp220,
	movw	r3, #:lower16:11199484	@ tmp216,
	movt	r3, #:upper16:11199484	@ tmp216,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r2, #:lower16:11199500	@ tmp214,
	ldr	ip, [r4, r3]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movt	r2, #:upper16:11199500	@ tmp214,
	cmp	r0, #0	@ <variable>.CurrPic.structure,
	mov	r1, #0	@ tmp215,
	add	lr, ip, #1	@ tmp219, <variable>.TotalPicNum,
	str	lr, [r4, r3]	@ tmp219, <variable>.TotalPicNum
	movweq	r3, #:lower16:11199488	@ tmp222,
	movwne	r3, #:lower16:11199492	@ tmp226,
	movteq	r3, #:upper16:11199488	@ tmp222,
	movtne	r3, #:upper16:11199492	@ tmp226,
	str	r1, [r4, r2]	@ tmp215, <variable>.SliceNumInPic
	ldr	r2, [r4, r3]	@ <variable>.TotalFieldNum,
	add	r0, r2, #1	@ tmp229, <variable>.TotalFieldNum,
	str	r0, [r4, r3]	@ tmp229,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitPic	@
	cmp	r0, #0	@,
	bne	.L4168	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WritePicMsg	@
	b	.L4111	@
.L4172:
	mov	lr, ip	@ Size0.9289, Size0
	b	.L4155	@
.L4177:
	movw	r1, #:lower16:11199484	@ tmp212,
	movt	r1, #:upper16:11199484	@ tmp212,
	movw	ip, #:lower16:11199496	@ tmp211,
	movt	ip, #:upper16:11199496	@ tmp211,
	ldr	lr, [r4, r1]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	str	lr, [r4, ip]	@ <variable>.TotalPicNum, <variable>.IDRPicOfCurrPic
	b	.L4112	@
.L4168:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.41658,
	b	.L4089	@
.L4108:
	bl	vfmw_dprint_nothing	@
	movw	r2, #:lower16:11199444	@ tmp199,
	movw	r0, #:lower16:11155228	@ tmp200,
	movt	r2, #:upper16:11199444	@ tmp199,
	movt	r0, #:upper16:11155228	@ tmp200,
	ldr	r1, [r4, r2]	@ temp.9299, <variable>.SliceParaNum
	ldr	r2, [r4, r0]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r2	@ temp.9299, <variable>.MaxSliceNum
	bcc	.L4110	@,
	movw	lr, #:lower16:g_event_report	@ tmp202,
	movt	lr, #:upper16:g_event_report	@ tmp202,
	ldr	r3, [lr, #0]	@ g_event_report.9302, g_event_report
	cmp	r3, #0	@ g_event_report.9302,
	beq	.L4110	@,
	movw	ip, #:lower16:11199520	@ tmp205,
	movt	ip, #:upper16:11199520	@ tmp205,
	str	r1, [sp, #0]	@ temp.9299, para
	mov	r1, #108	@,
	str	r2, [sp, #4]	@ <variable>.MaxSliceNum, para
	mov	r2, sp	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9302
.L4110:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41658,
	b	.L4089	@
.L4090:
	bl	vfmw_dprint_nothing	@
	movw	r0, #:lower16:g_event_report	@ tmp174,
	movt	r0, #:upper16:g_event_report	@ tmp174,
	ldr	r3, [r0, #0]	@ g_event_report.9292, g_event_report
	cmp	r3, #0	@ g_event_report.9292,
	beq	.L4167	@,
	add	r2, sp, #8	@ tmp177,,
	movw	r1, #:lower16:11199520	@ tmp176,
	movt	r1, #:upper16:11199520	@ tmp176,
	mvn	ip, #0	@ tmp175,
	str	ip, [r2, #-8]!	@ tmp175,
	mov	r2, sp	@,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r1, #100	@,
	blx	r3	@ g_event_report.9292
.L4167:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.41658,
	b	.L4089	@
.L4176:
	bl	vfmw_dprint_nothing	@
	b	.L4167	@
	.fnend
	.size	MVC_DecSlice, .-MVC_DecSlice
	.align	2
	.global	MVC_SliceCheck
	.type	MVC_SliceCheck, %function
MVC_SliceCheck:
	.fnstart
.LFB1717:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, lr}	@,
	.save {r4, r5, r6, lr}
	movw	r1, #:lower16:.LC225	@,
	movt	r1, #:upper16:.LC225	@,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r4, #:lower16:11199460	@ tmp140,
	movt	r4, #:upper16:11199460	@ tmp140,
	movw	r3, #:lower16:11162676	@ tmp139,
	movt	r3, #:upper16:11162676	@ tmp139,
	ldr	r2, [r5, r4]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	str	r0, [r5, r3]	@ D.40801, <variable>.CurrSlice.first_mb_in_slice
	bne	.L4179	@,
	cmp	r0, #262144	@ D.40801,
	bcs	.L4182	@,
	movw	r1, #13560	@ tmp144,
	movw	r3, #13564	@ tmp143,
	ldr	r2, [r5, r1]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	lr, [r5, r3]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mul	ip, r2, lr	@ tmp145, <variable>.CurWidthInMb, <variable>.CurHeightInMb
	sub	r1, ip, #1	@ tmp148, tmp145,
	cmp	r0, r1	@ D.40801, tmp148
	bls	.L4187	@,
.L4179:
	mvn	r0, #0	@ D.40805,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L4187:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC226	@,
	movt	r1, #:upper16:.LC226	@,
	bl	mvc_ue_v	@
	mov	r6, r0	@ SliceType,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r5, r4]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L4179	@,
	cmp	r6, #9	@ SliceType,
	bhi	.L4182	@,
	mov	r2, #1	@ tmp153,
	mov	r6, r2, asl r6	@ tmp152, tmp153,
	ands	r1, r6, #660	@ tmp154, tmp152,
	bne	.L4185	@,
	movw	r0, #:lower16:297	@ tmp155,
	movt	r0, #:upper16:297	@ tmp155,
	and	r0, r6, r0	@ tmp155, tmp152, tmp155
	cmp	r0, #0	@ tmp155,
	bne	.L4183	@,
	tst	r6, #66	@ tmp152,
	movwne	r3, #:lower16:11162624	@ tmp164,
	movtne	r3, #:upper16:11162624	@ tmp164,
	strneb	r2, [r5, r3]	@ tmp153, <variable>.CurrSlice.slice_type
	ldmnefd	sp!, {r4, r5, r6, pc}	@
.L4182:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.40805,
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L4185:
	movw	ip, #:lower16:11162624	@ tmp158,
	movt	ip, #:upper16:11162624	@ tmp158,
	mov	lr, #2	@ tmp159,
	mov	r0, r3	@ D.40805, <variable>.SeErrFlg
	strb	lr, [r5, ip]	@ tmp159, <variable>.CurrSlice.slice_type
	ldmfd	sp!, {r4, r5, r6, pc}	@
.L4183:
	movw	r2, #:lower16:11162624	@ tmp161,
	movt	r2, #:upper16:11162624	@ tmp161,
	mov	r0, r1	@ D.40805, tmp154
	strb	r1, [r5, r2]	@ tmp154, <variable>.CurrSlice.slice_type
	ldmfd	sp!, {r4, r5, r6, pc}	@
	.fnend
	.size	MVC_SliceCheck, .-MVC_SliceCheck
	.align	2
	.global	MVC_InquireSliceProperty
	.type	MVC_InquireSliceProperty, %function
MVC_InquireSliceProperty:
	.fnstart
.LFB1759:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}	@,
	.save {r3, r4, r5, r6, r7, r8, sl, lr}
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ MVC_IsNewPic, MVC_IsNewPic
	mov	r6, r2	@ IsSizeChanged, IsSizeChanged
	bl	vfmw_dprint_nothing	@
	mov	r0, #0	@ tmp149,
	str	r0, [r6, #0]	@ tmp149,* IsSizeChanged
	movw	r7, #:lower16:11162627	@ tmp151,
	str	r0, [r5, #0]	@ tmp149,* MVC_IsNewPic
	movt	r7, #:upper16:11162627	@ tmp151,
	ldr	ip, [r4, #368]	@ D.44160, <variable>.pCurrNal
	mov	r3, #13568	@ tmp161,
	movw	lr, #:lower16:11162656	@ tmp154,
	movt	lr, #:upper16:11162656	@ tmp154,
	ldr	r8, [r4, r3]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11164272	@ tmp156,
	ldrb	sl, [ip, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	r1, #:upper16:11164272	@ tmp156,
	movw	r2, #:lower16:11164276	@ tmp157,
	movw	r3, #:lower16:11164280	@ tmp159,
	movt	r2, #:upper16:11164276	@ tmp157,
	movt	r3, #:upper16:11164280	@ tmp159,
	strb	sl, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r8, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	ldr	r7, [ip, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r7, [r4, lr]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldr	ip, [ip, #88]	@ D.44163, <variable>.svc_extension_flag
	str	r0, [r4, r2]	@ tmp149, <variable>.CurrSlice.mvcinfo_flag
	mvn	r0, #0	@ tmp160,
	str	r0, [r4, r3]	@ tmp160, <variable>.CurrSlice.view_id
	str	ip, [r4, r1]	@ D.44163, <variable>.CurrSlice.svc_extension_flag
	beq	.L4216	@,
	cmn	ip, #1	@ D.44163,
	beq	.L4217	@,
.L4190:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	cmp	r0, #0	@,
	beq	.L4196	@,
.L4214:
	mvn	r0, #0	@ D.44193,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L4196:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4215	@,
	movw	r3, #:lower16:11162629	@ tmp202,
	movt	r3, #:upper16:11162629	@ tmp202,
	movw	r1, #:lower16:11164272	@ tmp211,
	movt	r1, #:upper16:11164272	@ tmp211,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	lr, #:lower16:11155244	@ tmp205,
	movw	r2, #:lower16:11162632	@ tmp206,
	movt	lr, #:upper16:11155244	@ tmp205,
	movt	r2, #:upper16:11162632	@ tmp206,
	cmp	ip, #1	@ <variable>.CurrSlice.new_pic_flag,
	movne	r0, #0	@, tmp204
	moveq	r0, #1	@, tmp204
	str	r0, [r5, #0]	@ tmp204,* MVC_IsNewPic
	mov	ip, #2240	@ tmp209,
	ldr	r1, [r4, r1]	@ D.44171, <variable>.CurrSlice.svc_extension_flag
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r3, [r4, lr]	@ <variable>.PPS, <variable>.PPS
	cmn	r1, #1	@ D.44171,
	mla	r2, ip, r2, r3	@ pPPS, tmp209, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L4218	@,
	cmp	r1, #0	@ D.44171,
	bne	.L4201	@,
	movw	r3, #:lower16:11152048	@ tmp217,
	movt	r3, #:upper16:11152048	@ tmp217,
	ldr	ip, [r4, r3]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	ip, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L4219	@,
	movw	r3, #:lower16:10814504	@ tmp224,
	movt	r3, #:upper16:10814504	@ tmp224,
	ldr	lr, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, r3]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r3, lr	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r3, #:lower16:10814508	@ pSPS,
	movteq	r3, #:upper16:10814508	@ pSPS,
	addeq	r3, r4, r3	@ pSPS, pMvcCtx, pSPS
	bne	.L4215	@,
.L4200:
	ldrb	r1, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movw	lr, #13560	@ tmp237,
	ldr	r0, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movw	ip, #13564	@ tmp228,
	rsb	r2, r1, #2	@ tmp230, <variable>.frame_mbs_only_flag,
	ldr	r1, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	ip, [r4, ip]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mla	r2, r0, r2, r2	@ tmp233, <variable>.pic_height_in_map_units_minus1, tmp230, tmp230
	ldr	r0, [r4, lr]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	add	lr, r1, #1	@ tmp238, <variable>.pic_width_in_mbs_minus1,
	cmp	r0, lr	@ <variable>.CurWidthInMb, tmp238
	cmpeq	ip, r2	@, <variable>.CurHeightInMb, tmp233
	movw	r2, #:lower16:11168612	@ tmp246,
	movt	r2, #:upper16:11168612	@ tmp246,
	ldreq	lr, [r6, #0]	@ cstore.9343,* IsSizeChanged
	movne	lr, #1	@ cstore.9343,
	str	lr, [r6, #0]	@ cstore.9343,* IsSizeChanged
	ldr	r1, [r4, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r0, [r3, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	add	ip, r1, #1	@ tmp247, <variable>.DPB.size,
	cmp	r0, ip	@ <variable>.dpb_size_plus1, tmp247
	mov	r0, #0	@ D.44193,
	movhi	ip, #1	@ tmp250,
	strhi	ip, [r6, #0]	@ tmp250,* IsSizeChanged
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L4216:
	movw	r0, #13580	@ tmp166,
	movw	ip, #13588	@ tmp169,
	movw	r1, #13592	@ tmp172,
	ldr	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldr	lr, [r4, ip]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11164288	@ tmp168,
	ldr	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11164288	@ tmp168,
	movw	r1, #:lower16:11164292	@ tmp171,
	movt	r1, #:upper16:11164292	@ tmp171,
	str	r8, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r7, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	str	lr, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	str	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	b	.L4190	@
.L4217:
	movw	r3, #:lower16:10814496	@ tmp174,
	movt	r3, #:upper16:10814496	@ tmp174,
	ldr	r2, [r4, r3]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	r2, #0	@ <variable>.TotalSUBSPS,
	beq	.L4190	@,
	movw	r1, #:lower16:10818504	@ tmp176,
	movt	r1, #:upper16:10818504	@ tmp176,
	ldr	lr, [r4, r1]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	lr, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	bne	.L4191	@,
	movw	ip, #:lower16:11152032	@ tmp178,
	movt	ip, #:upper16:11152032	@ tmp178,
	ldr	r0, [r4, ip]	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r0, #0	@ <variable>.CurrSUBSPS.is_valid,
	bne	.L4191	@,
	add	r2, r4, #17408	@ ivtmp.9380, pMvcCtx,
	add	r3, r2, #188	@ ivtmp.9380, ivtmp.9380,
.L4194:
	ldr	lr, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	movw	ip, #:lower16:337528	@ ivtmp.9380,
	movw	r1, #:lower16:333528	@ tmp182,
	movt	ip, #:upper16:337528	@ ivtmp.9380,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	movt	r1, #:upper16:333528	@ tmp182,
	add	r2, r3, ip	@ ivtmp.9380, ivtmp.9380, ivtmp.9380
	add	r1, r3, r1	@ tmp182, ivtmp.9380, tmp182
	beq	.L4192	@,
	ldr	lr, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	bne	.L4212	@,
.L4192:
	ldr	r1, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r0, r0, #1	@ i, i,
	cmp	r1, #0	@ <variable>.num_views_minus1,
	mov	r1, r0	@ tmp258, i
	beq	.L4209	@,
	add	ip, r3, #667648	@ tmp261, ivtmp.9380,
	add	lr, ip, #3408	@ tmp261, tmp261,
	ldr	r3, [lr, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L4212	@,
.L4209:
	add	r0, r1, #1	@ i, tmp258,
	movw	r1, #:lower16:337528	@ ivtmp.9380,
	cmp	r0, #32	@ i,
	movt	r1, #:upper16:337528	@ ivtmp.9380,
	add	r3, r2, r1	@ ivtmp.9380, ivtmp.9380, ivtmp.9380
	bne	.L4194	@,
	mvn	r2, #0	@ baseviewid,
.L4193:
	movw	ip, #:lower16:11164280	@ tmp191,
	movt	ip, #:upper16:11164280	@ tmp191,
	str	r2, [r4, ip]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4195	@
.L4219:
	ldr	r2, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #:lower16:337528	@ tmp220,
	movt	ip, #:upper16:337528	@ tmp220,
	mul	r0, r2, ip	@ tmp219, <variable>.seq_parameter_set_id, tmp220
	add	r1, r0, #13568	@ tmp222, tmp219,
	add	lr, r1, #32	@ tmp222, tmp222,
	add	r3, r4, lr	@ pSPS, pMvcCtx, tmp222
	b	.L4200	@
.L4191:
	movw	r0, #:lower16:10818508	@ tmp192,
	movt	r0, #:upper16:10818508	@ tmp192,
	movw	lr, #:lower16:11164280	@ tmp193,
	movt	lr, #:upper16:11164280	@ tmp193,
	ldr	r2, [r4, r0]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, lr]	@ baseviewid, <variable>.CurrSlice.view_id
.L4195:
	cmn	r2, #1	@ baseviewid,
	beq	.L4190	@,
	movw	lr, #:lower16:11162627	@ tmp199,
	movt	lr, #:upper16:11162627	@ tmp199,
	movw	r3, #:lower16:11164276	@ tmp194,
	movw	r1, #:lower16:11164292	@ tmp196,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r3, #:upper16:11164276	@ tmp194,
	movt	r1, #:upper16:11164292	@ tmp196,
	movw	r2, #:lower16:11164288	@ tmp198,
	movt	r2, #:upper16:11164288	@ tmp198,
	mov	lr, #1	@ tmp195,
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	ip, #0	@, tmp201
	moveq	ip, #1	@, tmp201
	str	lr, [r4, r1]	@ tmp195, <variable>.CurrSlice.inter_view_flag
	str	ip, [r4, r2]	@ tmp201, <variable>.CurrSlice.anchor_pic_flag
	str	lr, [r4, r3]	@ tmp195, <variable>.CurrSlice.mvcinfo_flag
	b	.L4190	@
.L4218:
	movw	r0, #:lower16:11155240	@ tmp212,
	movt	r0, #:upper16:11155240	@ tmp212,
	ldr	lr, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #3992	@ tmp215,
	ldr	r2, [r4, r0]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, lr, r2	@ pSPS, tmp215, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L4200	@
.L4215:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.44193,
	ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}	@
.L4212:
	movw	r2, #:lower16:337528	@ tmp187,
	movt	r2, #:upper16:337528	@ tmp187,
	mla	r3, r2, r0, r4	@ tmp188, tmp187, i, pMvcCtx
	movw	r0, #17600	@ tmp185,
	ldr	r2, [r3, r0]	@ baseviewid, <variable>.view_id
	b	.L4193	@
.L4201:
	bl	vfmw_dprint_nothing	@
	b	.L4214	@
	.fnend
	.size	MVC_InquireSliceProperty, .-MVC_InquireSliceProperty
	.align	2
	.global	MVC_DecOneNal
	.type	MVC_DecOneNal, %function
MVC_DecOneNal:
	.fnstart
.LFB1753:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, lr}	@,
	.save {r4, r5, r6, r7, r8, lr}
	ldr	r2, [r0, #368]	@ temp.9456, <variable>.pCurrNal
	.pad #8
	sub	sp, sp, #8	@,,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r7, r1	@ NalMode, NalMode
	ldr	r3, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r3, #0	@ <variable>.nal_segment,
	beq	.L4221	@,
	movw	r0, #:lower16:11199504	@ tmp186,
	movt	r0, #:upper16:11199504	@ tmp186,
	mov	r3, #0	@ i,
	ldr	r1, [r4, r0]	@ prephitmp.9409, <variable>.MaxBytesReceived
	mov	ip, r0	@ tmp414, tmp186
.L4222:
	rsb	lr, r3, r3, asl #3	@, tmp189, i, i,
	add	r3, r3, #1	@ i, i,
	add	r8, r2, lr, asl #2	@, tmp191, temp.9456, tmp189,
	ldr	r6, [r8, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r1, r1, r6	@ prephitmp.9409, prephitmp.9409, <variable>.bitstream_length
	str	r1, [r4, ip]	@ prephitmp.9409, <variable>.MaxBytesReceived
	ldr	r5, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r5, r3	@ <variable>.nal_segment, i
	bhi	.L4222	@,
.L4221:
	add	r5, r4, #13504	@ D.43800, pMvcCtx,
	mov	r6, #0	@ tmp195,
	add	r5, r5, #24	@ D.43800, D.43800,
	strb	r6, [r2, #0]	@ tmp195, <variable>.nal_used_segment
	mov	r1, #32	@,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #:lower16:11199460	@ tmp210,
	movt	r3, #:upper16:11199460	@ tmp210,
	and	ip, r0, #31	@ tmp200, nal_header,
	strb	ip, [r2, #2]	@ tmp200, <variable>.nal_unit_type
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r8, r0	@ nal_header,
	ubfx	r0, r0, #5, #2	@ tmp204, nal_header,,
	ubfx	r1, r8, #7, #1	@ tmp207, nal_header,,
	str	r0, [r2, #72]	@ tmp204, <variable>.nal_ref_idc
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r1, [ip, #76]	@ tmp207, <variable>.forbidden_bit
	ldr	r2, [r4, #368]	@ temp.9434, <variable>.pCurrNal
	ldr	r1, [r2, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r0, r1, #32	@ tmp209, <variable>.nal_bitoffset,
	str	r0, [r2, #60]	@ tmp209, <variable>.nal_bitoffset
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r4, r3]	@ tmp195, <variable>.SeErrFlg
	mvn	r3, #0	@ tmp213,
	str	r3, [ip, #88]	@ tmp213, <variable>.svc_extension_flag
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r1, [r2, #2]	@ zero_extendqisi2	@ D.43810, <variable>.nal_unit_type
	cmp	r1, #14	@ D.43810,
	cmpne	r1, #20	@, D.43810,
	beq	.L4285	@,
	movw	r6, #:lower16:11199464	@ tmp252,
	movt	r6, #:upper16:11199464	@ tmp252,
	bl	vfmw_dprint_nothing	@
	movw	r3, #371	@ tmp253,
	ldr	r2, [r4, r6]	@ prephitmp.9404, <variable>.TotalNal
	cmp	r2, r3	@ prephitmp.9404, tmp253
	beq	.L4286	@,
.L4227:
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r0, #:lower16:11199464	@ tmp255,
	movt	r0, #:upper16:11199464	@ tmp255,
	add	r2, r2, #1	@ tmp256, prephitmp.9404,
	str	r2, [r4, r0]	@ tmp256, <variable>.TotalNal
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	sub	lr, ip, #1	@ tmp259, <variable>.nal_unit_type,
	cmp	lr, #29	@ tmp259,
	ldrls	pc, [pc, lr, asl #2]	@ tmp259
	b	.L4228	@
.L4242:
	.word	.L4229
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4229
	.word	.L4230
	.word	.L4231
	.word	.L4232
	.word	.L4237
	.word	.L4240
	.word	.L4235
	.word	.L4237
	.word	.L4237
	.word	.L4240
	.word	.L4239
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4240
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4228
	.word	.L4241
.L4237:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.43885,
.L4254:
	add	sp, sp, #8	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
.L4240:
	bl	vfmw_dprint_nothing	@
.L4275:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.43885,
	b	.L4254	@
.L4285:
	mov	r1, #24	@,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r8, r0	@ nal_header,
	ubfx	r0, r0, #23, #1	@ tmp224, nal_header,,
	str	r0, [r3, #88]	@ tmp224, <variable>.svc_extension_flag
	ldr	r3, [r4, #368]	@ prephitmp.9407, <variable>.pCurrNal
	ldr	r1, [r3, #88]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r1, r6	@ <variable>.svc_extension_flag,
	bne	.L4224	@,
	mov	r2, #13568	@ tmp226,
	mov	r1, #1	@ tmp227,
	movw	ip, #13572	@ tmp229,
	str	r1, [r4, r2]	@ tmp227, <variable>.CurrNalMvcInfo.is_valid
	movw	lr, #13576	@ tmp230,
	movw	r1, #13580	@ tmp233,
	ubfx	r0, r8, #16, #6	@ tmp232, nal_header,,
	ubfx	r2, r8, #22, #1	@ D.43824, nal_header,,
	str	r0, [r4, lr]	@ tmp232, <variable>.CurrNalMvcInfo.priority_id
	movw	lr, #13584	@ tmp237,
	str	r2, [r4, ip]	@ D.43824, <variable>.CurrNalMvcInfo.non_idr_flag
	ubfx	ip, r8, #6, #10	@ tmp235, nal_header,,
	str	ip, [r4, r1]	@ tmp235, <variable>.CurrNalMvcInfo.view_id
	movw	r1, #13588	@ tmp240,
	ubfx	r0, r8, #3, #3	@ tmp239, nal_header,,
	ubfx	ip, r8, #2, #1	@ tmp242, nal_header,,
	str	r0, [r4, lr]	@ tmp239, <variable>.CurrNalMvcInfo.temporal_id
	movw	lr, #13592	@ tmp243,
	str	ip, [r4, r1]	@ tmp242, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r1, #13596	@ tmp246,
	ubfx	r0, r8, #1, #1	@ tmp245, nal_header,,
	and	ip, r8, #1	@ tmp247, nal_header,
	str	r0, [r4, lr]	@ tmp245, <variable>.CurrNalMvcInfo.inter_view_flag
	str	ip, [r4, r1]	@ tmp247, <variable>.CurrNalMvcInfo.reserved_one_bit
	ldrb	lr, [r3, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	lr, #20	@ <variable>.nal_unit_type,
	beq	.L4287	@,
.L4224:
	ldr	r0, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r6, r0, #24	@ tmp251, <variable>.nal_bitoffset,
	str	r6, [r3, #60]	@ tmp251, <variable>.nal_bitoffset
	movw	r6, #:lower16:11199464	@ tmp252,
	movt	r6, #:upper16:11199464	@ tmp252,
	bl	vfmw_dprint_nothing	@
	movw	r3, #371	@ tmp253,
	ldr	r2, [r4, r6]	@ prephitmp.9404, <variable>.TotalNal
	cmp	r2, r3	@ prephitmp.9404, tmp253
	bne	.L4227	@,
.L4286:
	bl	vfmw_dprint_nothing	@
	ldr	r2, [r4, r6]	@ prephitmp.9404, <variable>.TotalNal
	b	.L4227	@
.L4228:
	bl	vfmw_dprint_nothing	@
	cmp	r8, #256	@ nal_header,
	beq	.L4263	@,
	bl	vfmw_dprint_nothing	@
.L4263:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
.L4282:
	movw	r3, #:lower16:g_event_report	@ tmp402,
	movt	r3, #:upper16:g_event_report	@ tmp402,
	ldr	r3, [r3, #0]	@ g_event_report.9482, g_event_report
	cmp	r3, #0	@ g_event_report.9482,
	beq	.L4255	@,
	movw	ip, #:lower16:11199520	@ tmp403,
	movt	ip, #:upper16:11199520	@ tmp403,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9482
	mov	r0, #0	@ D.43885,
	b	.L4254	@
.L4229:
	bl	vfmw_dprint_nothing	@
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r7, #:lower16:11162627	@ tmp260,
	movt	r7, #:upper16:11162627	@ tmp260,
	movw	ip, #:lower16:11162656	@ tmp264,
	mov	lr, #13568	@ tmp273,
	ldrb	r5, [r0, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	ip, #:upper16:11162656	@ tmp264,
	ldr	r6, [r4, lr]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11164272	@ tmp268,
	movw	r2, #:lower16:11164276	@ tmp269,
	movt	r1, #:upper16:11164272	@ tmp268,
	strb	r5, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r2, #:upper16:11164276	@ tmp269,
	ldr	r7, [r0, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	movw	r3, #:lower16:11164280	@ tmp271,
	cmp	r6, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	movt	r3, #:upper16:11164280	@ tmp271,
	mov	r5, #0	@ tmp270,
	str	r7, [r4, ip]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	mvn	ip, #0	@ tmp272,
	ldr	r0, [r0, #88]	@ temp.9445, <variable>.svc_extension_flag
	str	ip, [r4, r3]	@ tmp272, <variable>.CurrSlice.view_id
	str	r5, [r4, r2]	@ tmp270, <variable>.CurrSlice.mvcinfo_flag
	str	r0, [r4, r1]	@ temp.9445, <variable>.CurrSlice.svc_extension_flag
	beq	.L4288	@,
	cmn	r0, #1	@ temp.9445,
	beq	.L4289	@,
.L4244:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	subs	r5, r0, #0	@ ret,
	bne	.L4290	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSlice	@
	cmp	r0, #0	@,
	bne	.L4291	@,
.L4255:
	mov	r0, #0	@ D.43885,
	b	.L4254	@
.L4241:
	bl	vfmw_dprint_nothing	@
	cmp	r7, #0	@ NalMode,
	beq	.L4292	@,
.L4261:
	mov	r1, #32	@,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r6, r0	@ D.43936,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	ldr	r3, .L4296	@ tmp383,
	and	r5, r6, #65280	@ tmp373, D.43936,
	mov	r1, r6, asl #24	@ tmp371, D.43936,
	orr	r1, r1, r6, lsr #24	@, tmp372, tmp371, D.43936,
	and	r6, r6, #16711680	@ tmp369, D.43936,
	orr	r1, r1, r5, asl #8	@, D.43944, tmp372, tmp373,
	orr	r6, r1, r6, lsr #8	@, tmp387, D.43944, tmp369,
	and	ip, r0, #65280	@ tmp379, D.43937,
	mov	r2, r0, asl #24	@ tmp377, D.43937,
	orr	r2, r2, r0, lsr #24	@, tmp378, tmp377, D.43937,
	and	r0, r0, #16711680	@ tmp375, D.43937,
	orr	ip, r2, ip, asl #8	@, D.43952, tmp378, tmp379,
	ldmib	r3, {r2, r3}	@ phole ldm
	orr	r0, ip, r0, lsr #8	@, tmp381, D.43952, tmp375,
	cmp	r0, r3	@ tmp381, tmp385
	cmpeq	r6, r2	@, tmp387, tmp391
	bne	.L4255	@,
	movw	r5, #:lower16:g_event_report	@ tmp418,
	movt	r5, #:upper16:g_event_report	@ tmp418,
	ldr	r3, [r5, #0]	@ g_event_report.9477, g_event_report
	cmp	r3, #0	@ g_event_report.9477,
	beq	.L4262	@,
	movw	lr, #:lower16:11199520	@ tmp397,
	movt	lr, #:upper16:11199520	@ tmp397,
	mov	r1, #112	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9477
.L4262:
	mov	r6, #0	@ tmp399,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, #364]	@ tmp399, <variable>.StartMode
	bl	MVC_DecVDM	@
	cmp	r0, r6	@,
	beq	.L4255	@,
.L4280:
	ldr	r3, [r5, #0]	@ g_event_report.9480, g_event_report
	cmp	r3, r6	@ g_event_report.9480,
	bne	.L4293	@,
.L4253:
	mvn	r0, #0	@ D.43885,
	b	.L4254	@
.L4231:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSPS	@
	mov	r7, r0	@ ret.9454,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9454,
	bne	.L4284	@,
	movw	r3, #:lower16:11199468	@ tmp336,
	movt	r3, #:upper16:11199468	@ tmp336,
	mov	r0, r7	@ D.43885, ret.9454
	ldr	r1, [r4, r3]	@ <variable>.TotalSPS,
	add	ip, r1, #1	@ tmp339, <variable>.TotalSPS,
	str	ip, [r4, r3]	@ tmp339,
	b	.L4254	@
.L4239:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSubSPS	@
	mov	r7, r0	@ ret.9469,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9469,
	bne	.L4294	@,
	movw	ip, #:lower16:10814496	@ tmp365,
	movt	ip, #:upper16:10814496	@ tmp365,
	mov	r0, r7	@ D.43885, ret.9469
	ldr	lr, [r4, ip]	@ <variable>.TotalSUBSPS,
	add	r2, lr, #1	@ tmp368, <variable>.TotalSUBSPS,
	str	r2, [r4, ip]	@ tmp368,
	b	.L4254	@
.L4235:
	bl	vfmw_dprint_nothing	@
	mov	r1, #32	@,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r6, r0	@ D.43914,
	mov	r0, r5	@, D.43800
	bl	BsGet	@
	movw	r2, #:lower16:1128615492	@ tmp344,
	movw	ip, #:lower16:1213419593	@ tmp347,
	movt	r2, #:upper16:1128615492	@ tmp344,
	movt	ip, #:upper16:1213419593	@ tmp347,
	cmp	r0, r2	@, tmp344
	cmpeq	r6, ip	@, D.43914, tmp347
	bne	.L4275	@,
	movw	r5, #:lower16:g_event_report	@ tmp409,
	movt	r5, #:upper16:g_event_report	@ tmp409,
	movw	r0, #13556	@ tmp352,
	mov	r6, #1	@ tmp353,
	strb	r6, [r4, r0]	@ tmp353, <variable>.IsStreamEndFlag
	ldr	r3, [r5, #0]	@ g_event_report.9464, g_event_report
	cmp	r3, #0	@ g_event_report.9464,
	beq	.L4259	@,
	movw	lr, #:lower16:11199520	@ tmp356,
	movt	lr, #:upper16:11199520	@ tmp356,
	mov	r1, #112	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9464
.L4259:
	mov	r6, #0	@ tmp358,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, #364]	@ tmp358, <variable>.StartMode
	bl	MVC_DecVDM	@
	cmp	r0, r6	@,
	beq	.L4275	@,
	b	.L4280	@
.L4230:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSEI	@
	mov	r5, r0	@ ret.9461,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r5, #0	@ ret.9461,
	beq	.L4255	@,
	bl	vfmw_dprint_nothing	@
	b	.L4282	@
.L4232:
	bl	vfmw_dprint_nothing	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecPPS	@
	mov	r7, r0	@ ret.9449,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9449,
	bne	.L4284	@,
	movw	lr, #:lower16:11199472	@ tmp326,
	movt	lr, #:upper16:11199472	@ tmp326,
	mov	r0, r7	@ D.43885, ret.9449
	ldr	r2, [r4, lr]	@ <variable>.TotalPPS,
	add	r1, r2, #1	@ tmp329, <variable>.TotalPPS,
	str	r1, [r4, lr]	@ tmp329,
	b	.L4254	@
.L4287:
	cmp	r2, r6	@ D.43824,
	movne	r2, #1	@ iftmp.854,
	moveq	r2, #5	@ iftmp.854,
	strb	r2, [r3, #2]	@ iftmp.854, <variable>.nal_unit_type
	ldr	r3, [r4, #368]	@ prephitmp.9407, <variable>.pCurrNal
	b	.L4224	@
.L4289:
	movw	r2, #:lower16:10814496	@ tmp288,
	movt	r2, #:upper16:10814496	@ tmp288,
	ldr	lr, [r4, r2]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	lr, #0	@ <variable>.TotalSUBSPS,
	beq	.L4244	@,
	movw	r0, #:lower16:10818504	@ tmp290,
	movt	r0, #:upper16:10818504	@ tmp290,
	ldr	r5, [r4, r0]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	r5, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L4247	@,
	movw	ip, #:lower16:11152032	@ tmp293,
	movt	ip, #:upper16:11152032	@ tmp293,
	ldr	r1, [r4, ip]	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r1, #1	@ <variable>.CurrSUBSPS.is_valid,
	beq	.L4295	@,
.L4247:
	add	r3, r4, #17408	@ ivtmp.9426, pMvcCtx,
	mov	r0, #0	@ i,
	add	r3, r3, #188	@ ivtmp.9426, ivtmp.9426,
.L4246:
	ldr	lr, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	movw	r2, #:lower16:337528	@ ivtmp.9426,
	movw	r5, #:lower16:333528	@ tmp296,
	movt	r2, #:upper16:337528	@ ivtmp.9426,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	movt	r5, #:upper16:333528	@ tmp296,
	add	r2, r3, r2	@ ivtmp.9426, ivtmp.9426, ivtmp.9426
	add	r1, r3, r5	@ tmp296, ivtmp.9426, tmp296
	beq	.L4249	@,
	ldr	r1, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L4271	@,
.L4249:
	ldr	lr, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r0, r0, #1	@ i, i,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	mov	r1, r0	@ tmp415, i
	beq	.L4267	@,
	add	r3, r3, #667648	@ tmp419, ivtmp.9426,
	add	lr, r3, #3408	@ tmp419, tmp419,
	ldr	r5, [lr, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r5, #0	@ <variable>.is_valid,
	bne	.L4271	@,
.L4267:
	add	r0, r1, #1	@ i, tmp415,
	movw	r1, #:lower16:337528	@ ivtmp.9426,
	cmp	r0, #32	@ i,
	movt	r1, #:upper16:337528	@ ivtmp.9426,
	add	r3, r2, r1	@ ivtmp.9426, ivtmp.9426, ivtmp.9426
	bne	.L4246	@,
	mvn	r2, #0	@ baseviewid,
.L4250:
	movw	r5, #:lower16:11164280	@ tmp305,
	movt	r5, #:upper16:11164280	@ tmp305,
	str	r2, [r4, r5]	@ baseviewid, <variable>.CurrSlice.view_id
.L4251:
	cmn	r2, #1	@ baseviewid,
	beq	.L4244	@,
	movw	r2, #:lower16:11162627	@ tmp313,
	movt	r2, #:upper16:11162627	@ tmp313,
	movw	r3, #:lower16:11164276	@ tmp308,
	movw	r1, #:lower16:11164292	@ tmp310,
	movt	r3, #:upper16:11164276	@ tmp308,
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r1, #:upper16:11164292	@ tmp310,
	movw	lr, #:lower16:11164288	@ tmp312,
	movt	lr, #:upper16:11164288	@ tmp312,
	mov	r0, #1	@ tmp309,
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	ip, #0	@, tmp315
	moveq	ip, #1	@, tmp315
	str	r0, [r4, r1]	@ tmp309, <variable>.CurrSlice.inter_view_flag
	str	ip, [r4, lr]	@ tmp315, <variable>.CurrSlice.anchor_pic_flag
	str	r0, [r4, r3]	@ tmp309, <variable>.CurrSlice.mvcinfo_flag
	b	.L4244	@
.L4291:
	movw	r3, #:lower16:g_event_report	@ tmp318,
	movt	r3, #:upper16:g_event_report	@ tmp318,
	ldr	r3, [r3, #0]	@ g_event_report.9447, g_event_report
	cmp	r3, #0	@ g_event_report.9447,
	beq	.L4253	@,
	movw	ip, #:lower16:11199520	@ tmp319,
	movt	ip, #:upper16:11199520	@ tmp319,
	mov	r2, r5	@, ret
	mov	r1, #113	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9447
	mvn	r0, #0	@ D.43885,
	b	.L4254	@
.L4293:
	movw	r0, #:lower16:11199520	@ tmp401,
	movt	r0, #:upper16:11199520	@ tmp401,
	mov	r2, r6	@, tmp399
	mov	r1, #113	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9480
	mvn	r0, #0	@ D.43885,
	b	.L4254	@
.L4292:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	b	.L4261	@
.L4288:
	movw	r7, #13580	@ tmp278,
	movw	ip, #13588	@ tmp281,
	movw	r1, #13592	@ tmp284,
	ldr	r8, [r4, r7]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldr	r7, [r4, ip]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11164288	@ tmp280,
	ldr	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11164288	@ tmp280,
	movw	r1, #:lower16:11164292	@ tmp283,
	movt	r1, #:upper16:11164292	@ tmp283,
	str	r6, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r8, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	str	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	str	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	str	r5, [r4, lr]	@ tmp270, <variable>.CurrNalMvcInfo.is_valid
	b	.L4244	@
.L4290:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	movw	r0, #:lower16:g_event_report	@ tmp316,
	movt	r0, #:upper16:g_event_report	@ tmp316,
	ldr	r3, [r0, #0]	@ g_event_report.856, g_event_report
	cmp	r3, #0	@ g_event_report.856,
	beq	.L4253	@,
	movw	lr, #:lower16:11199520	@ tmp317,
	movt	lr, #:upper16:11199520	@ tmp317,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.856
	mvn	r0, #0	@ D.43885,
	b	.L4254	@
.L4284:
	movw	r6, #:lower16:g_event_report	@ tmp330,
	movt	r6, #:upper16:g_event_report	@ tmp330,
	bl	vfmw_dprint_nothing	@
	ldr	r3, [r6, #0]	@ g_event_report.9455, g_event_report
	cmp	r3, #0	@ g_event_report.9455,
	beq	.L4253	@,
	add	r2, sp, #8	@ tmp333,,
	movw	r5, #:lower16:11199520	@ tmp332,
	movt	r5, #:upper16:11199520	@ tmp332,
	mvn	r7, #0	@ tmp331,
	mov	r1, #100	@,
	str	r7, [r2, #-4]!	@ tmp331,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9455
	ldr	r3, [r6, #0]	@ g_event_report.9458, g_event_report
	cmp	r3, #0	@ g_event_report.9458,
	beq	.L4253	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.9458
	mov	r0, r7	@ D.43885, tmp331
	b	.L4254	@
.L4271:
	movw	ip, #:lower16:337528	@ tmp301,
	movt	ip, #:upper16:337528	@ tmp301,
	mla	r3, ip, r0, r4	@ tmp302, tmp301, i, pMvcCtx
	movw	r0, #17600	@ tmp299,
	ldr	r2, [r3, r0]	@ baseviewid, <variable>.view_id
	b	.L4250	@
.L4294:
	bl	vfmw_dprint_nothing	@
	movw	r3, #:lower16:g_event_report	@ tmp361,
	movt	r3, #:upper16:g_event_report	@ tmp361,
	ldr	r3, [r3, #0]	@ g_event_report.9470, g_event_report
	cmp	r3, #0	@ g_event_report.9470,
	beq	.L4253	@,
	add	r2, sp, #8	@ tmp364,,
	movw	r1, #:lower16:11199520	@ tmp363,
	movt	r1, #:upper16:11199520	@ tmp363,
	mvn	r5, #0	@ tmp362,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r1, #100	@,
	str	r5, [r2, #-4]!	@ tmp362, para
	blx	r3	@ g_event_report.9470
	mov	r0, r5	@ D.43885, tmp362
	b	.L4254	@
.L4295:
	movw	r2, #:lower16:10818508	@ tmp306,
	movt	r2, #:upper16:10818508	@ tmp306,
	ldr	r2, [r4, r2]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, r3]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4251	@
.L4297:
	.align	2
.L4296:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DecOneNal, .-MVC_DecOneNal
	.align	2
	.global	MVC_DEC_DecodePacket
	.type	MVC_DEC_DecodePacket, %function
MVC_DEC_DecodePacket:
	.fnstart
.LFB1764:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}	@,
	.save {r4, r5, r6, r7, r8, r9, sl, lr}
	cmp	r1, #0	@ pPacket,
	.pad #24
	sub	sp, sp, #24	@,,
	mov	r5, #0	@ tmp156,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r5, [sp, #12]	@ tmp156, NewNum
	str	r5, [sp, #16]	@ tmp156, ReadNum
	str	r5, [sp, #20]	@ tmp156, RefNum
	beq	.L4325	@,
	ldr	r2, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r7, #:lower16:11199508	@ tmp159,
	movt	r7, #:upper16:11199508	@ tmp159,
	movw	r6, #:lower16:11198008	@ tmp172,
	movt	r6, #:upper16:11198008	@ tmp172,
	movw	ip, #:lower16:11199512	@ tmp164,
	ldr	r8, [r2, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	movt	ip, #:upper16:11199512	@ tmp164,
	ldr	r9, [r0, r6]	@ <variable>.HaveNalNotDecoded, <variable>.HaveNalNotDecoded
	movw	sl, #:lower16:11199516	@ tmp167,
	movw	r3, #:lower16:11199460	@ tmp170,
	movt	sl, #:upper16:11199516	@ tmp167,
	mov	r8, r8, asl #16	@ tmp161, <variable>.s32DecMode,
	movt	r3, #:upper16:11199460	@ tmp170,
	and	r8, r8, #196608	@ tmp163, tmp161,
	str	r8, [r0, r7]	@ tmp163, <variable>.advanced_cfg
	ldr	r7, [r2, #0]	@ <variable>.s32RefErrThr, <variable>.s32RefErrThr
	cmp	r9, #1	@ <variable>.HaveNalNotDecoded,
	str	r7, [r0, ip]	@ <variable>.s32RefErrThr, <variable>.ref_error_thr
	ldr	r2, [r2, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	str	r5, [r0, r3]	@ tmp156, <variable>.SeErrFlg
	str	r2, [r0, sl]	@ <variable>.s32OutErrThr, <variable>.out_error_thr
	beq	.L4301	@,
	bl	MVC_ReceivePacket	@
	str	r5, [r4, r6]	@ tmp156, <variable>.HaveNalNotDecoded
	cmp	r0, #0	@,
	ldreq	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	beq	.L4302	@,
.L4303:
	mov	r0, #0	@ D.44456,
.L4300:
	add	sp, sp, #24	@,,
	ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
.L4301:
	ldr	r0, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r0, #0	@ <variable>.pCurrNal,
	strne	r5, [r4, r6]	@ tmp156, <variable>.HaveNalNotDecoded
	beq	.L4327	@,
.L4302:
	mov	lr, #0	@ tmp178,
	add	r5, r4, #13504	@ D.44478, pMvcCtx,
	str	lr, [r0, #60]	@ tmp178, <variable>.nal_bitoffset
	add	r5, r5, #24	@ D.44478, D.44478,
	ldr	r6, [r4, #368]	@ temp.9514, <variable>.pCurrNal
	mov	r0, r5	@, D.44478
	ldmib	r6, {r1, r2}	@ phole ldm
	bl	BsInit	@
	mov	r1, #32	@,
	mov	r0, r5	@, D.44478
	bl	BsGet	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	and	r6, r0, #31	@ nal_unit_type, D.44482,
	strb	r6, [r2, #2]	@ nal_unit_type, <variable>.nal_unit_type
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #5, #2	@ tmp186, D.44482,,
	mvn	r2, #0	@ tmp188,
	str	ip, [r1, #72]	@ tmp186, <variable>.nal_ref_idc
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [r3, #88]	@ tmp188, <variable>.svc_extension_flag
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	r0, #20	@ <variable>.nal_unit_type,
	beq	.L4306	@,
.L4324:
	cmp	r6, #5	@ nal_unit_type,
	movne	r3, #0	@, prephitmp.9537
	moveq	r3, #1	@, prephitmp.9537
	cmp	r6, #1	@ nal_unit_type,
	movne	r6, #0	@, prephitmp.9500
	moveq	r6, #1	@, prephitmp.9500
.L4307:
	orr	r1, r6, r3	@ tmp221, prephitmp.9500, prephitmp.9537
	movw	r2, #:lower16:11199460	@ tmp218,
	tst	r1, #255	@ tmp221
	movt	r2, #:upper16:11199460	@ tmp218,
	mov	r6, #0	@ tmp219,
	str	r6, [r4, r2]	@ tmp219, <variable>.SeErrFlg
	beq	.L4311	@,
	mov	r0, r4	@, pMvcCtx
	add	r1, sp, #8	@,,
	add	r2, sp, #4	@,,
	bl	MVC_InquireSliceProperty	@
	cmp	r0, r6	@,
	bne	.L4312	@,
	ldr	lr, [sp, #8]	@ MVC_IsNewPic, MVC_IsNewPic
	movw	r3, #:lower16:11199536	@ tmp225,
	movt	r3, #:upper16:11199536	@ tmp225,
	cmp	lr, #1	@ MVC_IsNewPic,
	ldr	r0, [r4, r3]	@ <variable>.PicCounter, <variable>.PicCounter
	addeq	r0, r0, #1	@, tmp231, <variable>.PicCounter
	str	r0, [r4, r3]	@ tmp231, <variable>.PicCounter
	beq	.L4328	@,
.L4313:
	ldr	r6, [sp, #4]	@ IsSizeChanged, IsSizeChanged
	cmp	r6, #1	@ IsSizeChanged,
	beq	.L4329	@,
.L4311:
	mov	r0, r4	@, pMvcCtx
	mov	r6, #0	@ tmp273,
	bl	MVC_FindTrailZeros	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r0, r5	@, D.44478
	str	r6, [r1, #60]	@ tmp273, <variable>.nal_bitoffset
	ldr	ip, [r4, #368]	@ temp.9532, <variable>.pCurrNal
	ldmib	ip, {r1, r2}	@ phole ldm
	bl	BsInit	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, tmp273
	bl	MVC_DecOneNal	@
	cmp	r0, r6	@,
	beq	.L4303	@,
.L4325:
	bl	vfmw_dprint_nothing	@
	mvn	r0, #0	@ D.44456,
	b	.L4300	@
.L4327:
	str	r0, [r4, r6]	@ <variable>.pCurrNal, <variable>.HaveNalNotDecoded
	b	.L4300	@
.L4328:
	movw	lr, #:lower16:11162625	@ tmp233,
	movt	lr, #:upper16:11162625	@ tmp233,
	movw	r0, #:lower16:11199540	@ tmp235,
	movw	r2, #:lower16:11199444	@ tmp244,
	movt	r0, #:upper16:11199540	@ tmp235,
	movt	r2, #:upper16:11199444	@ tmp244,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	ldr	r1, [r4, r0]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldr	ip, [r4, r2]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #1	@ <variable>.CurrSlice.field_pic_flag,
	addeq	r1, r1, #1	@ tmp238, <variable>.NewPicCounter,
	addne	r1, r1, #2	@ tmp242, <variable>.NewPicCounter,
	cmp	ip, #0	@ <variable>.SliceParaNum,
	str	r1, [r4, r0]	@ tmp242, <variable>.NewPicCounter
	beq	.L4313	@,
	ldr	lr, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp247,
	mov	r2, #12	@,
	mov	r0, r5	@, D.44478
	ldr	r1, .L4331	@,
	str	r3, [lr, #60]	@ tmp247, <variable>.nal_bitoffset
	bl	BsInit	@
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecOneNal	@
	movw	ip, #:lower16:11162625	@ tmp250,
	movw	r0, #:lower16:11199540	@ tmp252,
	movt	ip, #:upper16:11162625	@ tmp250,
	movt	r0, #:upper16:11199540	@ tmp252,
	movw	r2, #:lower16:11198008	@ tmp260,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	r2, #:upper16:11198008	@ tmp260,
	ldr	r1, [r4, r0]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	mov	ip, #1	@ tmp261,
	cmp	r3, #1	@ <variable>.CurrSlice.field_pic_flag,
	str	ip, [r4, r2]	@ tmp261, <variable>.HaveNalNotDecoded
	subeq	r1, r1, #1	@ tmp255, <variable>.NewPicCounter,
	subne	r1, r1, #2	@ tmp259, <variable>.NewPicCounter,
	str	r1, [r4, r0]	@ tmp259, <variable>.NewPicCounter
	mvn	r0, #1	@ D.44456,
	b	.L4300	@
.L4306:
	mov	r0, r5	@, D.44478
	mov	r1, #24	@,
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #23, #1	@ tmp197, D.44489,,
	str	ip, [r3, #88]	@ tmp197, <variable>.svc_extension_flag
	ldr	r2, [r4, #368]	@ temp.9521, <variable>.pCurrNal
	ldr	r3, [r2, #88]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r3, #0	@ <variable>.svc_extension_flag,
	bne	.L4324	@,
	movw	ip, #13572	@ tmp206,
	ubfx	r1, r0, #22, #1	@ D.44497, D.44489,,
	movw	r6, #13592	@ tmp214,
	str	r1, [r4, ip]	@ D.44497, <variable>.CurrNalMvcInfo.non_idr_flag
	mov	ip, #13568	@ tmp203,
	cmp	r1, #0	@ D.44497,
	ubfx	lr, r0, #1, #1	@ tmp216, D.44489,,
	str	lr, [r4, r6]	@ tmp216, <variable>.CurrNalMvcInfo.inter_view_flag
	mov	r6, #1	@ tmp204,
	str	r6, [r4, ip]	@ tmp204, <variable>.CurrNalMvcInfo.is_valid
	movw	ip, #13580	@ tmp207,
	ubfx	lr, r0, #6, #10	@ tmp209, D.44489,,
	str	lr, [r4, ip]	@ tmp209, <variable>.CurrNalMvcInfo.view_id
	movw	lr, #13588	@ tmp211,
	ubfx	r0, r0, #2, #1	@ tmp213, D.44489,,
	moveq	r3, r6	@ prephitmp.9537, tmp204
	str	r0, [r4, lr]	@ tmp213, <variable>.CurrNalMvcInfo.anchor_pic_flag
	moveq	r6, r1	@ prephitmp.9500, D.44497
	movne	r1, r6	@ prephitmp.9499, prephitmp.9500
	moveq	r1, #5	@ prephitmp.9499,
	strb	r1, [r2, #2]	@ prephitmp.9499, <variable>.nal_unit_type
	b	.L4307	@
.L4329:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L4330	@,
.L4318:
	movw	r6, #:lower16:11199520	@ tmp263,
	movt	r6, #:upper16:11199520	@ tmp263,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	bne	.L4311	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	add	r1, sp, #20	@,,
	add	r2, sp, #16	@,,
	add	r3, sp, #12	@,,
	bl	VCTRL_GetChanImgNum	@
	b	.L4311	@
.L4330:
	bl	vfmw_dprint_nothing	@
	b	.L4318	@
.L4312:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	movw	r2, #:lower16:g_event_report	@ tmp270,
	movt	r2, #:upper16:g_event_report	@ tmp270,
	ldr	r3, [r2, #0]	@ g_event_report.896, g_event_report
	cmp	r3, #0	@ g_event_report.896,
	mvneq	r0, #0	@ D.44456,
	beq	.L4300	@
.L4319:
	movw	r0, #:lower16:11199520	@ tmp271,
	movt	r0, #:upper16:11199520	@ tmp271,
	mov	r2, r6	@, tmp219
	mov	r1, #113	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.896
	mvn	r0, #0	@ D.44456,
	b	.L4300	@
.L4332:
	.align	2
.L4331:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DEC_DecodePacket, .-MVC_DEC_DecodePacket
	.global	MVC_g_NalTypeEOPIC
	.global	MVC_g_AspecRatioIdc
	.global	MVC_CalcZeroNum
	.global	MVC_g_ZZ_SCAN
	.global	MVC_g_ZZ_SCAN8
	.global	MVC_quant_intra_default
	.global	MVC_quant_inter_default
	.global	MVC_quant8_intra_default
	.global	MVC_quant8_inter_default
	.global	MVC_quant_org
	.global	MVC_quant8_org
	.global	MvcTmpBuf
	.section	.rodata
	.align	2
.LANCHOR0 = . + 0
	.type	MVC_g_ZZ_SCAN, %object
	.size	MVC_g_ZZ_SCAN, 16
MVC_g_ZZ_SCAN:
	.byte	0
	.byte	1
	.byte	4
	.byte	8
	.byte	5
	.byte	2
	.byte	3
	.byte	6
	.byte	9
	.byte	12
	.byte	13
	.byte	10
	.byte	7
	.byte	11
	.byte	14
	.byte	15
	.type	MVC_g_ZZ_SCAN8, %object
	.size	MVC_g_ZZ_SCAN8, 64
MVC_g_ZZ_SCAN8:
	.byte	0
	.byte	1
	.byte	8
	.byte	16
	.byte	9
	.byte	2
	.byte	3
	.byte	10
	.byte	17
	.byte	24
	.byte	32
	.byte	25
	.byte	18
	.byte	11
	.byte	4
	.byte	5
	.byte	12
	.byte	19
	.byte	26
	.byte	33
	.byte	40
	.byte	48
	.byte	41
	.byte	34
	.byte	27
	.byte	20
	.byte	13
	.byte	6
	.byte	7
	.byte	14
	.byte	21
	.byte	28
	.byte	35
	.byte	42
	.byte	49
	.byte	56
	.byte	57
	.byte	50
	.byte	43
	.byte	36
	.byte	29
	.byte	22
	.byte	15
	.byte	23
	.byte	30
	.byte	37
	.byte	44
	.byte	51
	.byte	58
	.byte	59
	.byte	52
	.byte	45
	.byte	38
	.byte	31
	.byte	39
	.byte	46
	.byte	53
	.byte	60
	.byte	61
	.byte	54
	.byte	47
	.byte	55
	.byte	62
	.byte	63
	.type	MVC_SarTable.42423, %object
	.size	MVC_SarTable.42423, 136
MVC_SarTable.42423:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.word	4
	.word	3
	.word	3
	.word	2
	.word	2
	.word	1
	.data
	.align	2
.LANCHOR2 = . + 0
	.type	MVC_quant_intra_default, %object
	.size	MVC_quant_intra_default, 16
MVC_quant_intra_default:
	.word	471076102
	.word	538711053
	.word	622861332
	.word	707076124
	.type	MVC_quant_inter_default, %object
	.size	MVC_quant_inter_default, 16
MVC_quant_inter_default:
	.word	403967498
	.word	454562830
	.word	505092116
	.word	572398360
	.type	MVC_quant8_intra_default, %object
	.size	MVC_quant8_intra_default, 64
MVC_quant8_intra_default:
	.word	269289990
	.word	454629138
	.word	303041290
	.word	488315159
	.word	387059725
	.word	522001177
	.word	420942352
	.word	555687195
	.word	454629138
	.word	606150429
	.word	488315159
	.word	639901983
	.word	522001177
	.word	673588257
	.word	555687195
	.word	707274276
	.type	MVC_quant8_inter_default, %object
	.size	MVC_quant8_inter_default, 256
MVC_quant8_inter_default:
	.word	286199049
	.word	404100371
	.word	319884557
	.word	421008917
	.word	353571087
	.word	454629398
	.word	370479889
	.word	471537944
	.word	404100371
	.word	505158425
	.word	421008917
	.word	538844187
	.word	454629398
	.word	555752988
	.word	471537944
	.word	589373470
	.space	192
	.type	MVC_quant_org, %object
	.size	MVC_quant_org, 16
MVC_quant_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_quant8_org, %object
	.size	MVC_quant8_org, 64
MVC_quant8_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_g_NalTypeEOPIC, %object
	.size	MVC_g_NalTypeEOPIC, 12
MVC_g_NalTypeEOPIC:
	.byte	0
	.byte	0
	.byte	1
	.byte	30
	.byte	72
	.byte	83
	.byte	80
	.byte	73
	.byte	67
	.byte	69
	.byte	78
	.byte	68
	.type	MVC_g_AspecRatioIdc, %object
	.size	MVC_g_AspecRatioIdc, 112
MVC_g_AspecRatioIdc:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.type	MVC_CalcZeroNum, %object
	.size	MVC_CalcZeroNum, 256
MVC_CalcZeroNum:
	.byte	8
	.byte	7
	.byte	6
	.byte	6
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"SEI: cpb_removal_delay\000"
	.space	1
.LC1:
	.ascii	"SEI: dpb_output_delay\000"
	.space	2
.LC2:
	.ascii	"pic_struct\000"
	.space	1
.LC3:
	.ascii	"   : delta_sl   \000"
	.space	3
.LC4:
	.ascii	"SEI: frame_packing_arrangement_id\000"
	.space	2
.LC5:
	.ascii	"SEI: frame_packing_arrangement_cancel_flag\000"
	.space	1
.LC6:
	.ascii	"SEI: frame_packing_arrangement_type\000"
.LC7:
	.ascii	"SEI: quincunx_sampling_flag\000"
.LC8:
	.ascii	"SEI: content_interpretation_type\000"
	.space	3
.LC9:
	.ascii	"SEI: spatial_flipping_flag\000"
	.space	1
.LC10:
	.ascii	"SEI: frame0_flipped_flag\000"
	.space	3
.LC11:
	.ascii	"SEI: field_views_flag\000"
	.space	2
.LC12:
	.ascii	"SEI: current_frame_is_frame0_flag\000"
	.space	2
.LC13:
	.ascii	"SEI: frame0_self_contained_flag\000"
.LC14:
	.ascii	"SEI: frame1_self_contained_flag\000"
.LC15:
	.ascii	"SEI: frame0_grid_position_x\000"
.LC16:
	.ascii	"SEI: frame0_grid_position_y\000"
.LC17:
	.ascii	"SEI: frame1_grid_position_x\000"
.LC18:
	.ascii	"SEI: frame1_grid_position_y\000"
.LC19:
	.ascii	"SEI: frame_packing_arrangement_reserved_byte\000"
	.space	3
.LC20:
	.ascii	"SEI: frame_packing_arrangement_repetition_period\000"
	.space	3
.LC21:
	.ascii	"SEI: frame_packing_arrangement_extension_flag\000"
	.space	2
.LC22:
	.ascii	"SEI: itu_t_t35_country_code\000"
.LC23:
	.ascii	"SEI: itu_t_t35_country_code_extension_byte\000"
	.space	1
.LC24:
	.ascii	"SEI: itu_t_t35_provider_code\000"
	.space	3
.LC25:
	.ascii	"MVC VUI: vui_mvc_num_ops_minus1\000"
.LC26:
	.ascii	"MVC VUI: vui_mvc_temporal_id[]\000"
	.space	1
.LC27:
	.ascii	"SUBSPS VUI: vui_mvc_num_target_output_views_minus1["
	.ascii	"]\000"
	.space	3
.LC28:
	.ascii	"MVC VUI: vui_mvc_view_id[][]\000"
	.space	3
.LC29:
	.ascii	"MVC VUI: vui_mvc_timing_info_present_flag\000"
	.space	2
.LC30:
	.ascii	"MVC VUI: vui_mvc_num_units_in_tick\000"
	.space	1
.LC31:
	.ascii	"MVC VUI: vui_mvc_time_scale[]\000"
	.space	2
.LC32:
	.ascii	"MVC VUI: vui_mvc_fixed_frame_rate_flag\000"
	.space	1
.LC33:
	.ascii	"MVC VUI: vui_mvc_nal_hrd_parameters_present_flag[]\000"
	.space	1
.LC34:
	.ascii	"MVC VUI: cpb_cnt_minus1\000"
.LC35:
	.ascii	"MVC VUI: bit_rate_scale\000"
.LC36:
	.ascii	"MVC VUI: cpb_size_scale\000"
.LC37:
	.ascii	"MVC VUI: bit_rate_value_minus1\000"
	.space	1
.LC38:
	.ascii	"MVC VUI: cpb_size_value_minus1\000"
	.space	1
.LC39:
	.ascii	"MVC VUI: cbr_flag\000"
	.space	2
.LC40:
	.ascii	"MVC VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC41:
	.ascii	"MVC VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC42:
	.ascii	"MVC VUI: dpb_output_delay_length_minus1\000"
.LC43:
	.ascii	"MVC VUI: time_offset_length\000"
.LC44:
	.ascii	"MVC VUI: vui_mvc_vcl_hrd_parameters_present_flag[]\000"
	.space	1
.LC45:
	.ascii	"MVC VUI: vui_mvc_low_delay_hrd_flag[]\000"
	.space	2
.LC46:
	.ascii	"MVC VUI: vui_mvc_pic_struct_present_flag[]\000"
	.space	1
.LC47:
	.ascii	"SUBSPS: num_views_minus1\000"
	.space	3
.LC48:
	.ascii	"SUBSPS: view_id[]\000"
	.space	2
.LC49:
	.ascii	"SUBSPS: num_anchor_refs_l0[]\000"
	.space	3
.LC50:
	.ascii	"SUBSPS: anchor_ref_l0[][]\000"
	.space	2
.LC51:
	.ascii	"SUBSPS: num_anchor_refs_l1[]\000"
	.space	3
.LC52:
	.ascii	"SUBSPS: anchor_ref_l1[][]\000"
	.space	2
.LC53:
	.ascii	"SUBSPS: num_non_anchor_refs_l0[]\000"
	.space	3
.LC54:
	.ascii	"SUBSPS: non_anchor_ref_l0[][]\000"
	.space	2
.LC55:
	.ascii	"SUBSPS: num_non_anchor_refs_l1[]\000"
	.space	3
.LC56:
	.ascii	"SUBSPS: non_anchor_ref_l1[][]\000"
	.space	2
.LC57:
	.ascii	"SUBSPS: num_level_values_signalled_minus1\000"
	.space	2
.LC58:
	.ascii	"SUBSPS: level_idc[]\000"
.LC59:
	.ascii	"SUBSPS: num_applicable_ops_minus1\000"
	.space	2
.LC60:
	.ascii	"SUBSPS: applicable_op_temporal_id[][]\000"
	.space	2
.LC61:
	.ascii	"SUBSPS: applicable_op_num_target_views_minus1[][]\000"
	.space	2
.LC62:
	.ascii	"SUBSPS: applicable_op_target_view_id[][][]\000"
	.space	1
.LC63:
	.ascii	"SUBSPS: applicable_op_num_views_minus1\000"
	.space	1
.LC64:
	.ascii	"VUI: aspect_ratio_info_present_flag\000"
.LC65:
	.ascii	"VUI: aspect_ratio_idc\000"
	.space	2
.LC66:
	.ascii	"VUI: sar_width\000"
	.space	1
.LC67:
	.ascii	"VUI: sar_height\000"
.LC68:
	.ascii	"VUI: overscan_info_present_flag\000"
.LC69:
	.ascii	"VUI: overscan_appropriate_flag\000"
	.space	1
.LC70:
	.ascii	"VUI: video_signal_type_present_flag\000"
.LC71:
	.ascii	"VUI: video_format\000"
	.space	2
.LC72:
	.ascii	"VUI: video_full_range_flag\000"
	.space	1
.LC73:
	.ascii	"VUI: color_description_present_flag\000"
.LC74:
	.ascii	"VUI: colour_primaries\000"
	.space	2
.LC75:
	.ascii	"VUI: transfer_characteristics\000"
	.space	2
.LC76:
	.ascii	"VUI: matrix_coefficients\000"
	.space	3
.LC77:
	.ascii	"VUI: chroma_loc_info_present_flag\000"
	.space	2
.LC78:
	.ascii	"VUI: chroma_sample_loc_type_top_field\000"
	.space	2
.LC79:
	.ascii	"VUI: chroma_sample_loc_type_bottom_field\000"
	.space	3
.LC80:
	.ascii	"VUI: timing_info_present_flag\000"
	.space	2
.LC81:
	.ascii	"VUI: num_units_in_tick\000"
	.space	1
.LC82:
	.ascii	"VUI: time_scale\000"
.LC83:
	.ascii	"VUI: fixed_frame_rate_flag\000"
	.space	1
.LC84:
	.ascii	"VUI: nal_hrd_parameters_present_flag\000"
	.space	3
.LC85:
	.ascii	"VUI: cpb_cnt_minus1\000"
.LC86:
	.ascii	"VUI: bit_rate_scale\000"
.LC87:
	.ascii	"VUI: cpb_size_scale\000"
.LC88:
	.ascii	"VUI: bit_rate_value_minus1\000"
	.space	1
.LC89:
	.ascii	"VUI: cpb_size_value_minus1\000"
	.space	1
.LC90:
	.ascii	"VUI: cbr_flag\000"
	.space	2
.LC91:
	.ascii	"VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC92:
	.ascii	"VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC93:
	.ascii	"VUI: dpb_output_delay_length_minus1\000"
.LC94:
	.ascii	"VUI: time_offset_length\000"
.LC95:
	.ascii	"VUI: vcl_hrd_parameters_present_flag\000"
	.space	3
.LC96:
	.ascii	"VUI: low_delay_hrd_flag\000"
.LC97:
	.ascii	"VUI: pic_struct_present_flag\000"
	.space	3
.LC98:
	.ascii	"VUI: bitstream_restriction_flag\000"
.LC99:
	.ascii	"VUI: motion_vectors_over_pic_boundaries_flag\000"
	.space	3
.LC100:
	.ascii	"VUI: max_bytes_per_pic_denom\000"
	.space	3
.LC101:
	.ascii	"VUI: max_bits_per_mb_denom\000"
	.space	1
.LC102:
	.ascii	"VUI: log2_max_mv_length_horizontal\000"
	.space	1
.LC103:
	.ascii	"VUI: log2_max_mv_length_vertical\000"
	.space	3
.LC104:
	.ascii	"VUI: num_reorder_frames\000"
.LC105:
	.ascii	"VUI: max_dec_frame_buffering\000"
	.space	3
.LC106:
	.ascii	"SPS: chroma_format_idc\000"
	.space	1
.LC107:
	.ascii	"SPS: bit_depth_luma_minus8\000"
	.space	1
.LC108:
	.ascii	"SPS: bit_depth_chroma_minus8\000"
	.space	3
.LC109:
	.ascii	"SPS: qpprime_y_zero_trans_bypass_flag\000"
	.space	2
.LC110:
	.ascii	"SPS: seq_scaling_matrix_present_flag\000"
	.space	3
.LC111:
	.ascii	"SPS: seq_scaling_list_present_flag\000"
	.space	1
.LC112:
	.ascii	"SPS: log2_max_frame_num_minus4\000"
	.space	1
.LC113:
	.ascii	"SPS: pic_order_cnt_type\000"
.LC114:
	.ascii	"SPS: log2_max_pic_order_cnt_lsb_minus4\000"
	.space	1
.LC115:
	.ascii	"SPS: delta_pic_order_always_zero_flag\000"
	.space	2
.LC116:
	.ascii	"SPS: offset_for_non_ref_pic\000"
.LC117:
	.ascii	"SPS: offset_for_top_to_bottom_field\000"
.LC118:
	.ascii	"SPS: num_ref_frames_in_pic_order_cnt_cycle\000"
	.space	1
.LC119:
	.ascii	"SPS: offset_for_ref_frame[i]\000"
	.space	3
.LC120:
	.ascii	"SPS: num_ref_frames\000"
.LC121:
	.ascii	"SPS: gaps_in_frame_num_value_allowed_flag\000"
	.space	2
.LC122:
	.ascii	"SPS: pic_width_in_mbs_minus1\000"
	.space	3
.LC123:
	.ascii	"SPS: pic_height_in_map_units_minus1\000"
.LC124:
	.ascii	"SPS: frame_mbs_only_flag\000"
	.space	3
.LC125:
	.ascii	"SPS: mb_adaptive_frame_field_flag\000"
	.space	2
.LC126:
	.ascii	"SPS: direct_8x8_inference_flag\000"
	.space	1
.LC127:
	.ascii	"SPS: frame_cropping_flag\000"
	.space	3
.LC128:
	.ascii	"SPS: frame_cropping_rect_left_offset\000"
	.space	3
.LC129:
	.ascii	"SPS: frame_cropping_rect_right_offset\000"
	.space	2
.LC130:
	.ascii	"SPS: frame_cropping_rect_top_offset\000"
.LC131:
	.ascii	"SPS: frame_cropping_rect_bottom_offset\000"
	.space	1
.LC132:
	.ascii	"SPS: vui_parameters_present_flag\000"
	.space	3
.LC133:
	.ascii	"SUBSPS: profile_idc\000"
.LC134:
	.ascii	"SUBSPS: constrained_set0_flag\000"
	.space	2
.LC135:
	.ascii	"SUBSPS: constrained_set1_flag\000"
	.space	2
.LC136:
	.ascii	"SUBSPS: constrained_set2_flag\000"
	.space	2
.LC137:
	.ascii	"SUBSPS: constrained_set3_flag\000"
	.space	2
.LC138:
	.ascii	"SUBSPS: constrained_set4_flag\000"
	.space	2
.LC139:
	.ascii	"SUBSPS: constrained_set5_flag\000"
	.space	2
.LC140:
	.ascii	"SUBSPS: reserved_zero_2bits\000"
.LC141:
	.ascii	"SUBSPS: level_idc\000"
	.space	2
.LC142:
	.ascii	"SUBSPS: seq_parameter_set_id\000"
	.space	3
.LC143:
	.ascii	"SUBSPS: bit_equal_to_one\000"
	.space	3
.LC144:
	.ascii	"SUBSPS: mvc_vui_parameters_present_flag\000"
.LC145:
	.ascii	"SPS: profile_idc\000"
	.space	3
.LC146:
	.ascii	"SPS: constrained_set0_flag\000"
	.space	1
.LC147:
	.ascii	"SPS: constrained_set1_flag\000"
	.space	1
.LC148:
	.ascii	"SPS: constrained_set2_flag\000"
	.space	1
.LC149:
	.ascii	"SPS: constrained_set3_flag\000"
	.space	1
.LC150:
	.ascii	"SPS: constrained_set4_flag\000"
	.space	1
.LC151:
	.ascii	"SPS: constrained_set5_flag\000"
	.space	1
.LC152:
	.ascii	"SPS: reserved_zero_2bits\000"
	.space	3
.LC153:
	.ascii	"SPS: level_idc\000"
	.space	1
.LC154:
	.ascii	"SPS: seq_parameter_set_id\000"
	.space	2
.LC155:
	.ascii	"PPS: entropy_coding_mode_flag\000"
	.space	2
.LC156:
	.ascii	"PPS: pic_order_present_flag\000"
.LC157:
	.ascii	"PPS: num_slice_groups_minus1\000"
	.space	3
.LC158:
	.ascii	"PPS: num_ref_idx_l0_active_minus1\000"
	.space	2
.LC159:
	.ascii	"PPS: num_ref_idx_l1_active_minus1\000"
	.space	2
.LC160:
	.ascii	"PPS: weighted prediction flag\000"
	.space	2
.LC161:
	.ascii	"PPS: weighted_bipred_idc\000"
	.space	3
.LC162:
	.ascii	"PPS: pic_init_qp_minus26\000"
	.space	3
.LC163:
	.ascii	"PPS: pic_init_qs_minus26\000"
	.space	3
.LC164:
	.ascii	"PPS: chroma_qp_index_offset\000"
.LC165:
	.ascii	"PPS: deblocking_filter_control_present_flag\000"
.LC166:
	.ascii	"PPS: constrained_intra_pred_flag\000"
	.space	3
.LC167:
	.ascii	"PPS: redundant_pic_cnt_present_flag\000"
.LC168:
	.ascii	"PPS: transform_8x8_mode_flag\000"
	.space	3
.LC169:
	.ascii	"PPS: pic_scaling_matrix_present_flag\000"
	.space	3
.LC170:
	.ascii	"PPS: pic_scaling_list_present_flag\000"
	.space	1
.LC171:
	.ascii	"PPS: second_chroma_qp_index_offset\000"
	.space	1
.LC172:
	.ascii	"PPS: pic_parameter_set_id\000"
	.space	2
.LC173:
	.ascii	"PPS: seq_parameter_set_id\000"
	.space	2
.LC174:
	.ascii	"SH: pic_parameter_set_id\000"
	.space	3
.LC175:
	.ascii	"SH: frame_num\000"
	.space	2
.LC176:
	.ascii	"SH: field_pic_flag\000"
	.space	1
.LC177:
	.ascii	"SH: bottom_field_flag\000"
	.space	2
.LC178:
	.ascii	"SH: idr_pic_id\000"
	.space	1
.LC179:
	.ascii	"SH: pic_order_cnt_lsb\000"
	.space	2
.LC180:
	.ascii	"SH: delta_pic_order_cnt_bottom\000"
	.space	1
.LC181:
	.ascii	"SH: delta_pic_order_cnt[0]\000"
	.space	1
.LC182:
	.ascii	"SH: delta_pic_order_cnt[1]\000"
	.space	1
.LC183:
	.ascii	"SH: redundant_pic_cnt\000"
	.space	2
.LC184:
	.ascii	"SH: memory_management_control_operation\000"
.LC185:
	.ascii	"SH: difference_of_pic_nums_minus1\000"
	.space	2
.LC186:
	.ascii	"SH: long_term_pic_num\000"
	.space	2
.LC187:
	.ascii	"SH: long_term_frame_idx\000"
.LC188:
	.ascii	"SH: max_long_term_frame_idx_plus1\000"
	.space	2
.LC189:
	.ascii	"SH: no_output_of_prior_pics_flag\000"
	.space	3
.LC190:
	.ascii	"SH: long_term_reference_flag\000"
	.space	3
.LC191:
	.ascii	"SH: adaptive_ref_pic_marking_mode_flag\000"
	.space	1
.LC192:
	.ascii	"SH: luma_log2_weight_denom\000"
	.space	1
.LC193:
	.ascii	"SH: chroma_log2_weight_denom\000"
	.space	3
.LC194:
	.ascii	"SH: luma_weight_flag_l0\000"
.LC195:
	.ascii	"SH: luma_weight_l0\000"
	.space	1
.LC196:
	.ascii	"SH: luma_offset_l0\000"
	.space	1
.LC197:
	.ascii	"SH: chroma_weight_flag_l0\000"
	.space	2
.LC198:
	.ascii	"SH: chroma_weight_l0\000"
	.space	3
.LC199:
	.ascii	"SH: chroma_offset_l0\000"
	.space	3
.LC200:
	.ascii	"SH: luma_weight_flag_l1\000"
.LC201:
	.ascii	"SH: luma_weight_l1\000"
	.space	1
.LC202:
	.ascii	"SH: luma_offset_l1\000"
	.space	1
.LC203:
	.ascii	"SH: chroma_weight_flag_l1\000"
	.space	2
.LC204:
	.ascii	"SH: chroma_weight_l1\000"
	.space	3
.LC205:
	.ascii	"SH: chroma_offset_l1\000"
	.space	3
.LC206:
	.ascii	"SH: ref_pic_list_reordering_flag_l0\000"
.LC207:
	.ascii	"SH: reordering_of_pic_nums_idc_l0\000"
	.space	2
.LC208:
	.ascii	"SH: abs_diff_pic_num_minus1_l0\000"
	.space	1
.LC209:
	.ascii	"SH: long_term_pic_idx_l0\000"
	.space	3
.LC210:
	.ascii	"SH: abs_diff_view_idx_minus1_l0\000"
.LC211:
	.ascii	"SH: ref_pic_list_reordering_flag_l1\000"
.LC212:
	.ascii	"SH: reordering_of_pic_nums_idc_l1\000"
	.space	2
.LC213:
	.ascii	"SH: abs_diff_pic_num_minus1_l1\000"
	.space	1
.LC214:
	.ascii	"SH: long_term_pic_idx_l1\000"
	.space	3
.LC215:
	.ascii	"SH: abs_diff_view_idx_minus1_l1\000"
.LC216:
	.ascii	"SH: direct_spatial_mv_pred_flag\000"
.LC217:
	.ascii	"SH: num_ref_idx_override_flag\000"
	.space	2
.LC218:
	.ascii	"SH: num_ref_idx_l0_active_minus1\000"
	.space	3
.LC219:
	.ascii	"SH: num_ref_idx_l1_active_minus1\000"
	.space	3
.LC220:
	.ascii	"SH: cabac_init_idc\000"
	.space	1
.LC221:
	.ascii	"SH: slice_qp_delta\000"
	.space	1
.LC222:
	.ascii	"SH: disable_deblocking_filter_idc\000"
	.space	2
.LC223:
	.ascii	"SH: slice_alpha_c0_offset_div2\000"
	.space	1
.LC224:
	.ascii	"SH: slice_beta_offset_div2\000"
	.space	1
.LC225:
	.ascii	"SH: first_mb_in_slice\000"
	.space	2
.LC226:
	.ascii	"SH: slice_type\000"
	.bss
	.align	2
.LANCHOR1 = . + 0
	.type	MvcTmpBuf, %object
	.size	MvcTmpBuf, 68
MvcTmpBuf:
	.space	68
	.type	cnt.36785, %object
	.size	cnt.36785, 4
cnt.36785:
	.space	4
	.type	sps_tmp.42845, %object
	.size	sps_tmp.42845, 3992
sps_tmp.42845:
	.space	3992
	.type	pps_tmp.41803, %object
	.size	pps_tmp.41803, 2240
pps_tmp.41803:
	.space	2240
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
