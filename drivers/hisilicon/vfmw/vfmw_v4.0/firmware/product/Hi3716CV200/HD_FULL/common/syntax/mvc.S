	.arch armv7-a
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 2
	.eabi_attribute 18, 4
	.file	"mvc.c"
@ GNU C (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) version 4.4.1 (arm-hisiv200-linux-gnueabi)
@	compiled by GNU C version 4.1.1 20061011 (Red Hat 4.1.1-30), GMP version 4.3.1, MPFR version 2.4.2.
@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
@ options passed:  -nostdinc
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/include
@ -Iarch/arm/include/generated
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include
@ -Iinclude
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/include/uapi
@ -Iarch/arm/include/generated/uapi
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include/uapi
@ -Iinclude/generated/uapi
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0
@ -Idrivers/msp/vfmw/vfmw_v4.0
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/arch/arm/mach-s40/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/common/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/common/drv/include
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/drv/memmap
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/model/scd
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/softlib
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common/syntax
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiSCDV200
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV100
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R001
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R002
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R003
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiVDHV200R004
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/model/rawpacket
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3716CV200/osal/linux_kernel
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/product/Hi3716CV200
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiDNR
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/driver/HiBTLV100
@ -I/release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/../../../source/msp/drv/vfmw/vfmw_v4.0/firmware/common_test/vdecko
@ -imultilib armv7a_soft -iprefix
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/
@ -isysroot /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../target
@ -D__KERNEL__ -D__LINUX_ARM_ARCH__=7 -Uarm -DCHIP_TYPE_hi3716cv200
@ -DSDK_VERSION=HiSTBLinuxV100R002C01SPC020 -DHI_GPIOI2C_SUPPORT
@ -DHI_LOG_SUPPORT=1 -DHI_LOG_LEVEL=4 -DHI_PROC_SUPPORT=1
@ -DHI_KEYLED_SUPPORT -DHI_HDCP_SUPPORT -DHI_SCI_SUPPORT -DHI_VI_SUPPORT
@ -DHI_VENC_SUPPORT -DHI_AENC_SUPPORT -DHI_PQ_SUPPORT -DENV_ARMLINUX_KERNEL
@ -DDNR_DISABLE -DSCD_MP4_SLICE_ENABLE -DSUPPORT_JPEG_444
@ -DVFMW_EXTRA_TYPE_DEFINE -DPRODUCT_STB -D__VFMW_REGISTER_ISR__
@ -DVFMW_VDH_V200R004_SUPPORT -DVFMW_H264_SUPPORT -DVFMW_MVC_SUPPORT
@ -DVFMW_MPEG2_SUPPORT -DVFMW_MPEG4_SUPPORT -DVFMW_AVS_SUPPORT
@ -DVFMW_VC1_SUPPORT -DVFMW_BPD_H_SUPPORT -DVFMW_REAL8_SUPPORT
@ -DVFMW_REAL9_SUPPORT -DVFMW_VP6_SUPPORT -DVFMW_VP8_SUPPORT
@ -DVFMW_DIVX3_SUPPORT -DVFMW_H263_SUPPORT -DVFMW_JPEG_SUPPORT
@ -DVFMW_RAW_SUPPORT -DVFMW_USER_SUPPORT -DCFG_MAX_CHAN_NUM=16
@ -DCFG_MAX_CHAN_NUM=16 -DVFMW_DPRINT_SUPPORT -DVFMW_SCD_LOWDLY_SUPPORT
@ -DVFMW_AVSPLUS_SUPPORT -DVFMW_MODULE_LOWDLY_SUPPORT
@ -DVFMW_SYSTEM_REG_DISABLE -DHI_VDEC_SVDEC_BUILTIN -DKBUILD_STR(s)=#s
@ -DKBUILD_BASENAME=KBUILD_STR(mvc) -DKBUILD_MODNAME=KBUILD_STR(hi_vfmw)
@ -isystem
@ /opt/hisi-linux/x86-arm/arm-hisiv200-linux/bin/../lib/gcc/arm-hisiv200-linux-gnueabi/4.4.1/include
@ -include
@ /release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/include/linux/kconfig.h
@ -MD drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/.mvc.o.d
@ /release/HiSTBLinuxV100R002C01SPC020/source/kernel/linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.c
@ -mlittle-endian -mapcs -mno-sched-prolog -mabi=aapcs-linux
@ -mno-thumb-interwork -marm -march=armv7-a -msoft-float -auxbase-strip
@ drivers/msp/vfmw/vfmw_v4.0/firmware/common/syntax/mvc.o -O2 -Wall -Wundef
@ -Wstrict-prototypes -Wno-trigraphs -Werror-implicit-function-declaration
@ -Wno-format-security -Wframe-larger-than=1024
@ -Wdeclaration-after-statement -Wno-pointer-sign -p -fno-strict-aliasing
@ -fno-common -fno-delete-null-pointer-checks -fno-dwarf2-cfi-asm
@ -fstack-protector -funwind-tables -fno-omit-frame-pointer
@ -fno-optimize-sibling-calls -fno-strict-overflow -fconserve-stack
@ -fno-pic -fverbose-asm
@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
@ -fbranch-count-reg -fcaller-saves -fcprop-registers -fcrossjumping
@ -fcse-follow-jumps -fdefer-pop -fearly-inlining
@ -feliminate-unused-debug-types -fexpensive-optimizations
@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm
@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
@ -findirect-inlining -finline -finline-functions-called-once
@ -finline-small-functions -fipa-cp -fipa-pure-const -fipa-reference
@ -fira-share-save-slots -fira-share-spill-slots -fivopts
@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
@ -fmerge-debug-strings -fmove-loop-invariants -foptimize-register-move
@ -fpeephole -fpeephole2 -fprofile -fpromote-loop-indices
@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
@ -freorder-functions -frerun-cse-after-loop -fsched-interblock
@ -fsched-spec -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
@ -fsection-anchors -fsigned-zeros -fsplit-ivs-in-unroller
@ -fsplit-wide-types -fstack-protector -fthread-jumps -ftoplevel-reorder
@ -ftrapping-math -ftree-builtin-call-dce -ftree-ccp -ftree-ch
@ -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
@ -ftree-dominator-opts -ftree-dse -ftree-fre -ftree-loop-im
@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-parallelize-loops=
@ -ftree-pre -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-sra
@ -ftree-switch-conversion -ftree-ter -ftree-vect-loop-version -ftree-vrp
@ -funit-at-a-time -funroll-loops -funwind-tables -fverbose-asm -fweb
@ -fzero-initialized-in-bss -mapcs-frame -mglibc -mlittle-endian

@ Compiler executable checksum: fa59e0bd179ef45b3a3c3e6f3383fdac

	.text
	.align	2
	.global	MVC_FrameStoreRefFlg
	.type	MVC_FrameStoreRefFlg, %function
MVC_FrameStoreRefFlg:
	.fnstart
.LFB1525:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	subs	r0, r0, #0	@, <variable>.is_reference,
	movne	r0, #1	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FrameStoreRefFlg, .-MVC_FrameStoreRefFlg
	.align	2
	.global	MVC_NonLongTermRefFlg
	.type	MVC_NonLongTermRefFlg, %function
MVC_NonLongTermRefFlg:
	.fnstart
.LFB1526:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.36776, <variable>.is_reference
	cmp	r3, #3	@ D.36776,
	beq	.L12	@,
	tst	r3, #1	@ D.36776,
	bne	.L6	@,
.L7:
	ands	r3, r3, #2	@ tmp141, D.36776,
	moveq	r0, r3	@ D.36782, tmp141
	ldmeqfd	sp, {fp, sp, pc}	@
	ldrb	r0, [r0, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	rsbs	r0, r0, #1	@ D.36782, <variable>.bottom_field.is_long_term
	movcc	r0, #0	@ D.36782
	ldmfd	sp, {fp, sp, pc}	@
.L12:
	ldrb	r2, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r2, #0	@ <variable>.frame.is_long_term,
	beq	.L5	@,
.L6:
	ldrb	r1, [r0, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r1, #0	@ <variable>.top_field.is_long_term,
	bne	.L7	@,
.L5:
	mov	r0, #1	@ D.36782,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_NonLongTermRefFlg, .-MVC_NonLongTermRefFlg
	.align	2
	.global	MVC_ShortTermRefFlg
	.type	MVC_ShortTermRefFlg, %function
MVC_ShortTermRefFlg:
	.fnstart
.LFB1527:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.36800, <variable>.is_reference
	cmp	r3, #3	@ D.36800,
	beq	.L21	@,
	tst	r3, #1	@ D.36800,
	bne	.L16	@,
.L17:
	ands	r3, r3, #2	@ tmp145, D.36800,
	moveq	r0, r3	@ D.36807, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #544]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #65536	@ tmp146,
	movne	r0, #0	@, D.36807
	moveq	r0, #1	@, D.36807
	ldmfd	sp, {fp, sp, pc}	@
.L21:
	ldr	ip, [r0, #464]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #65536	@ tmp138,
	beq	.L15	@,
.L16:
	ldr	ip, [r0, #504]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #65536	@ tmp142,
	bne	.L17	@,
.L15:
	mov	r0, #1	@ D.36807,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_ShortTermRefFlg, .-MVC_ShortTermRefFlg
	.align	2
	.global	MVC_LongTermRefFlg
	.type	MVC_LongTermRefFlg, %function
MVC_LongTermRefFlg:
	.fnstart
.LFB1528:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.36827, <variable>.is_reference
	cmp	r3, #3	@ D.36827,
	beq	.L30	@,
	tst	r3, #1	@ D.36827,
	bne	.L25	@,
.L26:
	ands	r3, r3, #2	@ tmp145, D.36827,
	moveq	r0, r3	@ D.36834, tmp145
	ldmeqfd	sp, {fp, sp, pc}	@
	ldr	r1, [r0, #544]	@ tmp148,
	bic	r2, r1, #-16777216	@ tmp146, tmp148,
	bic	r0, r2, #255	@ tmp146, tmp146,
	cmp	r0, #256	@ tmp146,
	movne	r0, #0	@, D.36834
	moveq	r0, #1	@, D.36834
	ldmfd	sp, {fp, sp, pc}	@
.L30:
	ldr	ip, [r0, #464]	@ tmp140,
	bic	r1, ip, #-16777216	@ tmp138, tmp140,
	bic	r2, r1, #255	@ tmp138, tmp138,
	cmp	r2, #256	@ tmp138,
	beq	.L24	@,
.L25:
	ldr	ip, [r0, #504]	@ tmp144,
	bic	r1, ip, #-16777216	@ tmp142, tmp144,
	bic	r2, r1, #255	@ tmp142, tmp142,
	cmp	r2, #256	@ tmp142,
	bne	.L26	@,
.L24:
	mov	r0, #1	@ D.36834,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_LongTermRefFlg, .-MVC_LongTermRefFlg
	.align	2
	.global	MVC_UpdateLTReflist
	.type	MVC_UpdateLTReflist, %function
MVC_UpdateLTReflist:
	.fnstart
.LFB1529:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11168612	@ tmp170,
	movt	r8, #:upper16:11168612	@ tmp170,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L33	@,
	movw	r5, #:lower16:11168420	@ ivtmp.1055,
	mov	sl, #0	@ j,
	movt	r5, #:upper16:11168420	@ ivtmp.1055,
	movw	r9, #:lower16:11196732	@ tmp193,
	add	r5, r0, r5	@ ivtmp.1055, pMvcCtx, ivtmp.1055
	movt	r9, #:upper16:11196732	@ tmp193,
	mov	r6, sl	@ i, j
	b	.L35	@
.L34:
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r2, r6	@ <variable>.DPB.size, i
	bls	.L33	@,
.L35:
	ldr	r4, [r5, #0]	@ D.36863, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1055, ivtmp.1055,
	cmp	r4, #0	@ D.36863,
	mov	r0, r4	@, D.36863
	beq	.L34	@,
	bl	MVC_LongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L34	@,
	ldr	r2, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L34	@,
	movw	ip, #:lower16:2792136	@ tmp176,
	movt	ip, #:upper16:2792136	@ tmp176,
	add	r1, sl, ip	@ tmp176, j, tmp176
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	add	sl, sl, #1	@ j, j,
	add	r0, r7, r1, asl #2	@, tmp180, pMvcCtx, tmp176,
	cmp	r2, r6	@ <variable>.DPB.size, i
	str	r4, [r0, #4]	@ D.36863, <variable>.DPB.fs_ltref
	bhi	.L35	@,
.L33:
	movw	r1, #:lower16:11168612	@ tmp185,
	movt	r1, #:upper16:11168612	@ tmp185,
	movw	r3, #:lower16:11168624	@ tmp184,
	movt	r3, #:upper16:11168624	@ tmp184,
	ldr	r0, [r7, r1]	@ temp.1058, <variable>.DPB.size
	str	sl, [r7, r3]	@ j, <variable>.DPB.ltref_frames_in_buffer
	cmp	r0, sl	@ temp.1058, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r2, #:lower16:2792136	@ tmp186,
	movt	r2, #:upper16:2792136	@ tmp186,
	add	r3, sl, r2	@ tmp186, j, tmp186
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1058, j
	mvn	ip, sl	@ tmp196, j
	add	r7, r7, r3, asl #2	@, tmp189, pMvcCtx, tmp186,
	add	sl, ip, r0	@ tmp195, tmp196, temp.1058
	add	r7, r7, #4	@ ivtmp.1050, tmp189,
	mov	r1, #0	@ tmp192,
	and	sl, sl, #1	@ tmp197, tmp195,
	str	r1, [r7], #4	@ tmp192, <variable>.DPB.fs_ltref
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	sl, #0	@ tmp197,
	beq	.L37	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp192, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.1058, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L37:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp199, ivtmp.1050
	cmp	r0, r2	@ temp.1058, j
	str	r1, [ip], #4	@ tmp192, <variable>.DPB.fs_ltref
	str	r1, [r7, #4]	@ tmp192, <variable>.DPB.fs_ltref
	add	r7, ip, #4	@ ivtmp.1050, tmp199,
	bhi	.L37	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateLTReflist, .-MVC_UpdateLTReflist
	.align	2
	.global	MVC_UpdateReflist
	.type	MVC_UpdateReflist, %function
MVC_UpdateReflist:
	.fnstart
.LFB1530:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11168612	@ tmp141,
	movt	r8, #:upper16:11168612	@ tmp141,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, #0	@ <variable>.DPB.size,
	beq	.L48	@,
	movw	r5, #:lower16:11168420	@ ivtmp.1093,
	mov	sl, #0	@ j,
	movt	r5, #:upper16:11168420	@ ivtmp.1093,
	movw	r9, #:lower16:11196732	@ tmp164,
	add	r5, r0, r5	@ ivtmp.1093, pMvcCtx, ivtmp.1093
	movt	r9, #:upper16:11196732	@ tmp164,
	mov	r6, sl	@ i, j
	b	.L50	@
.L49:
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r2, r6	@ <variable>.DPB.size, i
	bls	.L48	@,
.L50:
	ldr	r4, [r5, #0]	@ D.36887, <variable>.DPB.fs
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.1093, ivtmp.1093,
	cmp	r4, #0	@ D.36887,
	mov	r0, r4	@, D.36887
	beq	.L49	@,
	bl	MVC_ShortTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L49	@,
	ldr	r2, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r7, r9]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L49	@,
	movw	ip, #:lower16:2792120	@ tmp147,
	movt	ip, #:upper16:2792120	@ tmp147,
	add	r1, sl, ip	@ tmp147, j, tmp147
	ldr	r2, [r7, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	add	sl, sl, #1	@ j, j,
	add	r0, r7, r1, asl #2	@, tmp151, pMvcCtx, tmp147,
	cmp	r2, r6	@ <variable>.DPB.size, i
	str	r4, [r0, #4]	@ D.36887, <variable>.DPB.fs_ref
	bhi	.L50	@,
.L48:
	movw	r1, #:lower16:11168612	@ tmp156,
	movt	r1, #:upper16:11168612	@ tmp156,
	movw	r3, #:lower16:11168620	@ tmp155,
	movt	r3, #:upper16:11168620	@ tmp155,
	ldr	r0, [r7, r1]	@ temp.1096, <variable>.DPB.size
	str	sl, [r7, r3]	@ j, <variable>.DPB.ref_frames_in_buffer
	cmp	r0, sl	@ temp.1096, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r2, #:lower16:2792120	@ tmp157,
	movt	r2, #:upper16:2792120	@ tmp157,
	add	r3, sl, r2	@ tmp157, j, tmp157
	add	r2, sl, #1	@ j, j,
	cmp	r0, r2	@ temp.1096, j
	mvn	ip, sl	@ tmp167, j
	add	r7, r7, r3, asl #2	@, tmp160, pMvcCtx, tmp157,
	add	sl, ip, r0	@ tmp166, tmp167, temp.1096
	add	r7, r7, #4	@ ivtmp.1089, tmp160,
	mov	r1, #0	@ tmp163,
	and	sl, sl, #1	@ tmp168, tmp166,
	str	r1, [r7], #4	@ tmp163, <variable>.DPB.fs_ref
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	sl, #0	@ tmp168,
	beq	.L52	@,
	add	r2, r2, #1	@ j, j,
	str	r1, [r7], #4	@ tmp163, <variable>.DPB.fs_ref
	cmp	r0, r2	@ temp.1096, j
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L52:
	add	r2, r2, #2	@ j, j,
	mov	ip, r7	@ tmp170, ivtmp.1089
	cmp	r0, r2	@ temp.1096, j
	str	r1, [ip], #4	@ tmp163, <variable>.DPB.fs_ref
	str	r1, [r7, #4]	@ tmp163, <variable>.DPB.fs_ref
	add	r7, ip, #4	@ ivtmp.1089, tmp170,
	bhi	.L52	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateReflist, .-MVC_UpdateReflist
	.align	2
	.global	MVC_GetPicNumX
	.type	MVC_GetPicNumX, %function
MVC_GetPicNumX:
	.fnstart
.LFB1531:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r0, [r0, #480]	@ CurrPicNum, <variable>.frame_num
	mvn	r1, r1	@ tmp141, difference_of_pic_nums_minus1
	cmp	r3, #0	@ <variable>.structure,
	movne	r0, r0, asl #1	@ tmp138, <variable>.frame_num,
	addne	r0, r0, #1	@ CurrPicNum, tmp138,
	add	r0, r0, r1	@, CurrPicNum, tmp141
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetPicNumX, .-MVC_GetPicNumX
	.align	2
	.global	MVC_MarkPicLTRef
	.type	MVC_MarkPicLTRef, %function
MVC_MarkPicLTRef:
	.fnstart
.LFB1537:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r3, #3]	@ zero_extendqisi2	@ D.37163, <variable>.structure
	mov	r9, r1	@ long_term_frame_idx, long_term_frame_idx
	cmp	r3, #0	@ D.37163,
	beq	.L66	@,
	movw	r1, #:lower16:11168620	@ tmp155,
	movt	r1, #:upper16:11168620	@ tmp155,
	ldr	r8, [r0, r1]	@ D.37183, <variable>.DPB.ref_frames_in_buffer
	cmp	r8, #0	@ D.37183,
	beq	.L76	@,
	movw	r6, #:lower16:11168484	@ ivtmp.1158,
	movt	r6, #:upper16:11168484	@ ivtmp.1158,
	add	r6, r0, r6	@ ivtmp.1158, pMvcCtx, ivtmp.1158
	sub	r7, r8, #1	@ tmp359, D.37183,
	and	r7, r7, #1	@, tmp359,
	str	r7, [fp, #-48]	@, %sfp
	ldr	r1, [r6, #0]	@ temp.1168, <variable>.DPB.fs_ref
	movw	sl, #:lower16:11196732	@ tmp353,
	mov	ip, #0	@ i.1178,
	movt	sl, #:upper16:11196732	@ tmp353,
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ D.37185, <variable>.is_reference
	tst	r4, #1	@ D.37185,
	beq	.L86	@,
	ldr	r5, [r1, #504]	@ tmp402,
	bic	r5, r5, #-16777216	@ tmp403, tmp402,
	bic	r5, r5, #255	@ tmp403, tmp403,
	cmp	r5, #65536	@ tmp403,
	beq	.L115	@,
.L86:
	tst	r4, #2	@ D.37185,
	beq	.L87	@,
	ldr	r4, [r1, #544]	@ tmp394,
	bic	r4, r4, #-16777216	@ tmp395, tmp394,
	bic	r4, r4, #255	@ tmp395, tmp395,
	cmp	r4, #65536	@ tmp395,
	beq	.L116	@,
.L87:
	mov	ip, #1	@ i.1178,
	cmp	r8, ip	@ D.37183, i.1178
	add	r6, r6, #4	@ ivtmp.1158, ivtmp.1158,
	bls	.L76	@,
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #0	@,
	beq	.L110	@,
	ldr	r1, [r6, #0]	@ temp.1168, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ D.37185, <variable>.is_reference
	tst	r4, #1	@ D.37185,
	beq	.L89	@,
	ldr	r5, [r1, #504]	@ tmp421,
	bic	r5, r5, #-16777216	@ tmp422, tmp421,
	bic	r5, r5, #255	@ tmp422, tmp422,
	cmp	r5, #65536	@ tmp422,
	beq	.L117	@,
.L89:
	tst	r4, #2	@ D.37185,
	beq	.L90	@,
	ldr	r4, [r1, #544]	@ tmp413,
	bic	r4, r4, #-16777216	@ tmp414, tmp413,
	bic	r4, r4, #255	@ tmp414, tmp414,
	cmp	r4, #65536	@ tmp414,
	beq	.L118	@,
.L90:
	add	ip, ip, #1	@ i.1178, i.1178,
	add	r6, r6, #4	@ ivtmp.1158, ivtmp.1158,
	cmp	r8, ip	@ D.37183, i.1178
	bls	.L76	@,
.L110:
	str	r3, [fp, #-48]	@ D.37163, %sfp
	b	.L75	@
.L71:
	tst	r3, #2	@ D.37185,
	beq	.L73	@,
	ldr	r3, [r1, #544]	@ tmp293,
	bic	r3, r3, #-16777216	@ tmp291, tmp293,
	bic	r3, r3, #255	@ tmp291, tmp291,
	cmp	r3, #65536	@ tmp291,
	beq	.L119	@,
.L73:
	ldr	r1, [r6, #4]	@ temp.1168, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i.1178, i.1178,
	add	r6, r6, #4	@ tmp363, ivtmp.1158,
	mov	r5, ip	@ tmp362, i.1178
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ D.37185, <variable>.is_reference
	tst	r3, #1	@ D.37185,
	beq	.L93	@,
	ldr	r4, [r1, #504]	@ tmp438,
	bic	r4, r4, #-16777216	@ tmp439, tmp438,
	bic	r4, r4, #255	@ tmp439, tmp439,
	cmp	r4, #65536	@ tmp439,
	beq	.L120	@,
.L93:
	tst	r3, #2	@ D.37185,
	beq	.L94	@,
	ldr	r3, [r1, #544]	@ tmp430,
	bic	r3, r3, #-16777216	@ tmp431, tmp430,
	bic	r3, r3, #255	@ tmp431, tmp431,
	cmp	r3, #65536	@ tmp431,
	beq	.L121	@,
.L94:
	add	ip, r5, #1	@ i.1178, tmp362,
	add	r6, r6, #4	@ ivtmp.1158, tmp363,
	cmp	r8, ip	@ D.37183, i.1178
	bls	.L76	@,
.L75:
	ldr	r1, [r6, #0]	@ temp.1168, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ D.37185, <variable>.is_reference
	tst	r3, #1	@ D.37185,
	beq	.L71	@,
	ldr	r4, [r1, #504]	@ tmp231,
	bic	r4, r4, #-16777216	@ tmp229, tmp231,
	bic	r4, r4, #255	@ tmp229, tmp229,
	cmp	r4, #65536	@ tmp229,
	bne	.L71	@,
	ldr	r4, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r4, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L71	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L71	@,
	ldrb	r3, [r1, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r3, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L113	@,
	ldr	r3, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
.L113:
	ldr	r3, [fp, #-48]	@ D.37163, %sfp
.L72:
	movw	r2, #:lower16:2792120	@ tmp238,
	movt	r2, #:upper16:2792120	@ tmp238,
	add	r2, ip, r2	@ tmp238, i.1178, tmp238
	str	r9, [r1, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, #1	@ D.37163,
	movne	ip, #0	@, tmp247
	moveq	ip, #1	@, tmp247
	add	r2, r0, r2, asl #2	@, tmp243, pMvcCtx, tmp238,
	add	r9, ip, r9, asl #1	@, tmp248, tmp247, long_term_frame_idx,
	mov	r0, #1	@ tmp256,
	ldr	r1, [r2, #4]	@ tmp240, <variable>.DPB.fs_ref
	str	r9, [r1, #512]	@ tmp248, <variable>.top_field.long_term_pic_num
	mov	r1, #0	@ tmp265,
	ldr	r3, [r2, #4]	@ tmp251, <variable>.DPB.fs_ref
	strb	r0, [r3, #505]	@ tmp256, <variable>.top_field.is_long_term
	ldr	ip, [r2, #4]	@ tmp260, <variable>.DPB.fs_ref
	strb	r1, [ip, #506]	@ tmp265, <variable>.top_field.is_short_term
	ldr	r3, [r2, #4]	@ temp.1175, <variable>.DPB.fs_ref
	ldrb	r0, [r3, #464]	@ zero_extendqisi2	@ D.37208, <variable>.frame.structure
	cmp	r0, #3	@ D.37208,
	cmpne	r0, #0	@, D.37208,
	bne	.L76	@,
	ldrb	r0, [r3, #505]	@ zero_extendqisi2	@ D.37214, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, r0	@ <variable>.bottom_field.is_long_term, D.37214
	streqb	r1, [r3, #465]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r3, [r2, #4]	@ temp.1177, <variable>.DPB.fs_ref
	ldreqb	r1, [r3, #506]	@ zero_extendqisi2	@ <variable>.top_field.is_short_term, <variable>.top_field.is_short_term
	streqb	r1, [r3, #466]	@ <variable>.top_field.is_short_term, <variable>.frame.is_short_term
.L76:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L66:
	movw	ip, #:lower16:11168620	@ tmp156,
	movt	ip, #:upper16:11168620	@ tmp156,
	ldr	r6, [r0, ip]	@ temp.1179, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ temp.1179,
	beq	.L76	@,
	movw	r5, #:lower16:11168484	@ ivtmp.1153,
	movt	r5, #:upper16:11168484	@ ivtmp.1153,
	add	ip, r0, r5	@ ivtmp.1153, pMvcCtx, ivtmp.1153
	sub	r4, r6, #1	@ tmp354, temp.1179,
	and	r5, r4, #1	@ tmp356, tmp354,
	movw	r7, #:lower16:11196732	@ tmp352,
	ldr	r1, [ip, #0]	@ D.37167, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11196732	@ tmp352,
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	beq	.L122	@,
.L79:
	mov	r3, #1	@ i,
	cmp	r3, r6	@ i, temp.1179
	add	ip, ip, #4	@ ivtmp.1153, ivtmp.1153,
	bcs	.L76	@,
	cmp	r5, #0	@ tmp356,
	beq	.L70	@,
	ldr	r1, [ip, #0]	@ D.37167, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	beq	.L123	@,
.L81:
	add	r3, r3, #1	@ i, i,
	add	ip, ip, #4	@ ivtmp.1153, ivtmp.1153,
	cmp	r3, r6	@ i, temp.1179
	bcc	.L70	@,
	b	.L76	@
.L69:
	ldr	r1, [ip, #4]	@ D.37167, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	ip, r3	@ tmp357, i
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	beq	.L124	@,
.L84:
	add	r3, ip, #1	@ i, tmp357,
	add	ip, r4, #4	@ ivtmp.1153, tmp358,
	cmp	r3, r6	@ i, temp.1179
	bcs	.L76	@,
.L70:
	ldr	r1, [ip, #0]	@ D.37167, <variable>.DPB.fs_ref
	add	r4, ip, #4	@ tmp358, ivtmp.1153,
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L69	@,
	ldr	r5, [r1, #464]	@ tmp161,
	bic	r5, r5, #-16777216	@ tmp159, tmp161,
	bic	r5, r5, #255	@ tmp159, tmp159,
	cmp	r5, #65536	@ tmp159,
	bne	.L69	@,
	ldr	r5, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L69	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L102	@,
	ldr	r1, [ip, #4]	@ D.37167, <variable>.DPB.fs_ref
	add	r3, r3, #1	@ i, i,
	mov	ip, r3	@ tmp357, i
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L84	@,
.L124:
	ldr	r5, [r1, #464]	@ tmp387,
	bic	r5, r5, #-16777216	@ tmp388, tmp387,
	bic	r5, r5, #255	@ tmp388, tmp388,
	cmp	r5, #65536	@ tmp388,
	bne	.L84	@,
	ldr	r5, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L84	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L84	@,
	b	.L102	@
.L120:
	ldr	r4, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r4, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L93	@,
	ldr	r4, [r1, #644]	@, <variable>.view_id
	ldr	r7, [r0, sl]	@, <variable>.CurrPic.view_id
	cmp	r4, r7	@,
	bne	.L93	@,
	ldrb	r3, [r1, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r3, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L113	@,
	ldr	r3, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
	b	.L113	@
.L119:
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L73	@,
	ldr	r4, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L73	@,
	ldrb	r3, [r1, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r3, #1	@ <variable>.top_field.is_long_term,
	bne	.L111	@,
	ldr	r3, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L73	@,
.L111:
	ldr	r3, [fp, #-48]	@ D.37163, %sfp
.L74:
	movw	r2, #:lower16:2792120	@ tmp300,
	movt	r2, #:upper16:2792120	@ tmp300,
	add	r2, ip, r2	@ tmp300, i.1178, tmp300
	str	r9, [r1, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, #2	@ D.37163,
	movne	r1, #0	@, tmp309
	moveq	r1, #1	@, tmp309
	mov	ip, #1	@ tmp318,
	add	r2, r0, r2, asl #2	@, tmp305, pMvcCtx, tmp300,
	add	r9, r1, r9, asl #1	@, tmp310, tmp309, long_term_frame_idx,
	ldr	r0, [r2, #4]	@ tmp302, <variable>.DPB.fs_ref
	str	r9, [r0, #552]	@ tmp310, <variable>.bottom_field.long_term_pic_num
	mov	r0, #0	@ tmp327,
	ldr	r3, [r2, #4]	@ tmp313, <variable>.DPB.fs_ref
	strb	ip, [r3, #545]	@ tmp318, <variable>.bottom_field.is_long_term
	ldr	r1, [r2, #4]	@ tmp322, <variable>.DPB.fs_ref
	strb	r0, [r1, #546]	@ tmp327, <variable>.bottom_field.is_short_term
	ldr	r3, [r2, #4]	@ temp.1188, <variable>.DPB.fs_ref
	ldrb	ip, [r3, #464]	@ zero_extendqisi2	@ D.37236, <variable>.frame.structure
	cmp	ip, #3	@ D.37236,
	cmpne	ip, #0	@, D.37236,
	bne	.L76	@,
	ldrb	ip, [r3, #505]	@ zero_extendqisi2	@ temp.1189, <variable>.top_field.is_long_term
	ldrb	r1, [r3, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r1, ip	@ <variable>.bottom_field.is_long_term, temp.1189
	streqb	r1, [r3, #465]	@ <variable>.bottom_field.is_long_term, <variable>.frame.is_long_term
	ldreq	r3, [r2, #4]	@ temp.1191, <variable>.DPB.fs_ref
	ldreqb	r0, [r3, #546]	@ zero_extendqisi2	@ <variable>.bottom_field.is_short_term, <variable>.bottom_field.is_short_term
	streqb	r0, [r3, #466]	@ <variable>.bottom_field.is_short_term, <variable>.frame.is_short_term
	b	.L76	@
.L121:
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L94	@,
	ldr	r4, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L94	@,
	ldrb	r3, [r1, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r3, #1	@ <variable>.top_field.is_long_term,
	bne	.L111	@,
	ldr	r3, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r3, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L94	@,
	b	.L111	@
.L115:
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L86	@,
	ldr	r5, [r1, #644]	@, <variable>.view_id
	ldr	r7, [r0, sl]	@, <variable>.CurrPic.view_id
	cmp	r5, r7	@,
	bne	.L86	@,
	ldrb	r4, [r1, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r4, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r4, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L72	@
.L116:
	ldr	r4, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L87	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L87	@,
	ldrb	r4, [r1, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r4, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r4, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L87	@,
	b	.L74	@
.L117:
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r2	@ <variable>.top_field.pic_num, picNumX
	bne	.L89	@,
	ldr	r7, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L89	@,
	ldrb	r4, [r1, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r4, #1	@ <variable>.bottom_field.is_long_term,
	bne	.L72	@,
	ldr	r4, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L72	@
.L118:
	ldr	r4, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r4, r2	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L90	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L90	@,
	ldrb	r4, [r1, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r4, #1	@ <variable>.top_field.is_long_term,
	bne	.L74	@,
	ldr	r4, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r9	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L90	@,
	b	.L74	@
.L122:
	ldr	r4, [r1, #464]	@ tmp374,
	bic	r4, r4, #-16777216	@ tmp375, tmp374,
	bic	r4, r4, #255	@ tmp375, tmp375,
	cmp	r4, #65536	@ tmp375,
	bne	.L79	@,
	ldr	r4, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L79	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L79	@,
.L102:
	movw	ip, #:lower16:2792120	@ tmp166,
	movt	ip, #:upper16:2792120	@ tmp166,
	add	r2, r3, ip	@ tmp166, i, tmp166
	str	r9, [r1, #596]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	mov	r1, #1	@ tmp180,
	mov	r3, #0	@ tmp207,
	add	r0, r0, r2, asl #2	@, tmp171, pMvcCtx, tmp166,
	ldr	ip, [r0, #4]	@ tmp168, <variable>.DPB.fs_ref
	str	r9, [ip, #472]	@ long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r2, [r0, #4]	@ tmp175, <variable>.DPB.fs_ref
	strb	r1, [r2, #465]	@ tmp180, <variable>.frame.is_long_term
	ldr	ip, [r0, #4]	@ tmp184, <variable>.DPB.fs_ref
	strb	r1, [ip, #505]	@ tmp180, <variable>.top_field.is_long_term
	ldr	r2, [r0, #4]	@ tmp193, <variable>.DPB.fs_ref
	strb	r1, [r2, #545]	@ tmp180, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #4]	@ tmp202, <variable>.DPB.fs_ref
	strb	r3, [ip, #466]	@ tmp207, <variable>.frame.is_short_term
	ldr	r1, [r0, #4]	@ tmp211, <variable>.DPB.fs_ref
	strb	r3, [r1, #506]	@ tmp207, <variable>.top_field.is_short_term
	ldr	r2, [r0, #4]	@ tmp220, <variable>.DPB.fs_ref
	strb	r3, [r2, #546]	@ tmp207, <variable>.bottom_field.is_short_term
	b	.L76	@
.L123:
	ldr	r4, [r1, #464]	@ tmp381,
	bic	r4, r4, #-16777216	@ tmp382, tmp381,
	bic	r4, r4, #255	@ tmp382, tmp382,
	cmp	r4, #65536	@ tmp382,
	bne	.L81	@,
	ldr	r4, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, r2	@ <variable>.frame.pic_num, picNumX
	bne	.L81	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L81	@,
	b	.L102	@
	.fnend
	.size	MVC_MarkPicLTRef, .-MVC_MarkPicLTRef
	.align	2
	.global	MVC_SetFrmRepeatCount
	.type	MVC_SetFrmRepeatCount, %function
MVC_SetFrmRepeatCount:
	.fnstart
.LFB1547:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r2, ip, #2032	@ tmp138, <variable>.s32FastForwardBackwardSpeed,
	add	r3, r2, #15	@ tmp138, tmp138,
	cmp	r3, #4096	@ tmp138,
	bcc	.L126	@,
	movw	r3, #:lower16:11199544	@ tmp144,
	movt	r3, #:upper16:11199544	@ tmp144,
	movw	ip, #:lower16:11199540	@ tmp142,
	movw	r2, #:lower16:11168612	@ tmp147,
	movt	ip, #:upper16:11199540	@ tmp142,
	movt	r2, #:upper16:11168612	@ tmp147,
	ldr	r5, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldr	r4, [r0, ip]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldr	r2, [r0, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	add	ip, r2, r5, lsr #1	@, D.37669, <variable>.DPB.size, <variable>.PicOutCounter,
	mov	r2, r4, lsr #1	@ D.37665, <variable>.NewPicCounter,
	add	r4, ip, #1	@ tmp149, D.37669,
	cmp	r2, r4	@ D.37665, tmp149
	bcc	.L126	@,
	mvn	ip, ip	@ tmp150, D.37669
	add	r2, ip, r2	@ tmp151, tmp150, D.37665
	cmp	r2, #1	@ tmp151,
	movhi	r2, #2	@ tmp152,
	movls	r2, #1	@ tmp157,
	strhi	r2, [r1, #84]	@ tmp152, <variable>.u32RepeatCnt
	strls	r2, [r1, #84]	@ tmp157, <variable>.u32RepeatCnt
	ldrhi	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	ldrls	r2, [r0, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	addhi	r2, r2, #4	@ tmp156, <variable>.PicOutCounter,
	addls	r2, r2, #2	@ tmp161, <variable>.PicOutCounter,
	str	r2, [r0, r3]	@ tmp161, <variable>.PicOutCounter
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L126:
	mov	r0, #0	@ tmp163,
	str	r0, [r1, #84]	@ tmp163, <variable>.u32RepeatCnt
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_SetFrmRepeatCount, .-MVC_SetFrmRepeatCount
	.align	2
	.global	MVC_SplitFrmToFlds
	.type	MVC_SplitFrmToFlds, %function
MVC_SplitFrmToFlds:
	.fnstart
.LFB1550:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r4, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	ldrb	ip, [r0, #466]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	mov	r5, #1	@ tmp138,
	ldr	r1, [r0, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldr	r2, [r0, #492]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r3, [r0, #468]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r5, [r0, #504]	@ tmp138, <variable>.top_field.structure
	mov	r5, #2	@ tmp147,
	strb	r4, [r0, #545]	@ <variable>.frame.is_long_term, <variable>.bottom_field.is_long_term
	str	r3, [r0, #548]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r0, #546]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r5, [r0, #544]	@ tmp147, <variable>.bottom_field.structure
	str	r1, [r0, #568]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	r2, [r0, #572]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	r4, [r0, #505]	@ <variable>.frame.is_long_term, <variable>.top_field.is_long_term
	strb	ip, [r0, #506]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r0, #528]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	r2, [r0, #532]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r3, [r0, #508]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_SplitFrmToFlds, .-MVC_SplitFrmToFlds
	.align	2
	.global	MVC_CombineFldsToFrm
	.type	MVC_CombineFldsToFrm, %function
MVC_CombineFldsToFrm:
	.fnstart
.LFB1551:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	ldr	r3, [r0, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	ldr	r4, [r0, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, r3	@ <variable>.bottom_field.poc, <variable>.top_field.poc
	movlt	r3, r1	@ D.37786, <variable>.bottom_field.poc
	movge	r3, r3	@ D.37786, <variable>.top_field.poc
	ldr	r2, [r0, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldrb	r1, [r0, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	ldr	ip, [r0, #508]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	add	r2, r4, r2	@ tmp144, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	cmp	r1, #0	@ <variable>.bottom_field.is_long_term,
	mov	r4, #3	@ tmp142,
	mov	r2, r2, lsr #1	@ D.37791, tmp144,
	str	r3, [r0, #600]	@ D.37786, <variable>.poc
	strb	r4, [r0, #464]	@ tmp142, <variable>.frame.structure
	str	ip, [r0, #468]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	str	r3, [r0, #480]	@ D.37786, <variable>.frame.poc
	str	r2, [r0, #488]	@ D.37791, <variable>.frame.err_level
	beq	.L135	@,
	ldrb	ip, [r0, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	subs	r1, ip, #0	@ prephitmp.1269, <variable>.top_field.is_long_term,
	movne	r1, #1	@ prephitmp.1269
.L135:
	ldr	r3, [r0, #544]	@ tmp154,
	strb	r1, [r0, #465]	@ prephitmp.1269, <variable>.frame.is_long_term
	bic	ip, r3, #-16777216	@ tmp152, tmp154,
	bic	r3, ip, #255	@ tmp152, tmp152,
	cmp	r3, #0	@ tmp152,
	beq	.L136	@,
	ldr	ip, [r0, #504]	@ tmp157,
	bic	r3, ip, #-16777216	@ tmp155, tmp157,
	bic	ip, r3, #255	@ tmp155, tmp155,
	cmp	ip, #0	@ tmp155,
	bne	.L139	@,
.L136:
	mov	r1, #0	@ prephitmp.1258,
.L137:
	ldr	ip, [r0, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	r3, [r0, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	str	r2, [r0, #624]	@ D.37791, <variable>.err_level
	cmp	ip, r3	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	movcs	r3, ip	@ D.37815, <variable>.bottom_field.pic_type
	strb	r1, [r0, #466]	@ prephitmp.1258, <variable>.frame.is_short_term
	str	r3, [r0, #620]	@ D.37815, <variable>.pic_type
	str	r3, [r0, #492]	@ D.37815, <variable>.frame.pic_type
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L139:
	rsbs	r1, r1, #1	@ prephitmp.1258, prephitmp.1269
	movcc	r1, #0	@ prephitmp.1258
	b	.L137	@
	.fnend
	.size	MVC_CombineFldsToFrm, .-MVC_CombineFldsToFrm
	.align	2
	.global	MVC_UpdateCurrFrameInfo
	.type	MVC_UpdateCurrFrameInfo, %function
MVC_UpdateCurrFrameInfo:
	.fnstart
.LFB1562:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11196640	@ tmp152,
	movw	r5, #:lower16:11196170	@ tmp153,
	movt	r6, #:upper16:11196640	@ tmp152,
	movt	r5, #:upper16:11196170	@ tmp153,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldr	r4, [r3, r6]	@ pCurrFrame, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11196172	@ tmp156,
	ldrb	r1, [r3, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	movt	r0, #:upper16:11196172	@ tmp156,
	strb	r1, [r4, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldrb	r2, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	bne	.L141	@,
	movw	r7, #:lower16:11196173	@ tmp158,
	movt	r7, #:upper16:11196173	@ tmp158,
	ldrb	r1, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	cmp	r1, #0	@ <variable>.CurrPic.is_short_term,
	bne	.L141	@,
.L142:
	movw	r5, #:lower16:11196648	@ tmp161,
	movt	r5, #:upper16:11196648	@ tmp161,
	strb	r1, [r4, #2]	@ iftmp.550, <variable>.is_reference
	movw	ip, #:lower16:11196700	@ tmp163,
	ldr	r2, [r3, r5]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	movt	ip, #:upper16:11196700	@ tmp163,
	movw	r5, #:lower16:11196692	@ tmp165,
	movt	r5, #:upper16:11196692	@ tmp165,
	movw	r8, #:lower16:11196660	@ tmp167,
	movt	r8, #:upper16:11196660	@ tmp167,
	str	r2, [r4, #588]	@ <variable>.CurrPic.frame_num, <variable>.frame_num
	movw	r7, #:lower16:11196724	@ tmp169,
	ldr	sl, [r3, ip]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movt	r7, #:upper16:11196724	@ tmp169,
	movw	r6, #:lower16:11196652	@ tmp171,
	movt	r6, #:upper16:11196652	@ tmp171,
	movw	r0, #:lower16:11196177	@ tmp173,
	movt	r0, #:upper16:11196177	@ tmp173,
	str	sl, [r4, #624]	@ <variable>.CurrPic.err_level, <variable>.err_level
	movw	r2, #:lower16:11196175	@ tmp175,
	ldr	sl, [r3, r5]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	movt	r2, #:upper16:11196175	@ tmp175,
	movw	r1, #:lower16:11196171	@ tmp178,
	movt	r1, #:upper16:11196171	@ tmp178,
	str	sl, [r4, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r8, [r3, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	r8, [r4, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r7, [r3, r7]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	str	r7, [r4, #628]	@ <variable>.CurrPic.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r6, [r3, r6]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.CurrPic.long_term_frame_idx
	str	r6, [r4, #596]	@ <variable>.CurrPic.long_term_frame_idx, <variable>.long_term_frame_idx
	ldrb	r0, [r3, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	str	r0, [r4, #616]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	r0, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r0, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r0, #3	@ iftmp.552,
	movne	r0, #0	@ iftmp.552,
	strb	r0, [r4, #3]	@ iftmp.552, <variable>.mode_skip_flag
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r1, #1	@ <variable>.CurrPic.structure,
	beq	.L147	@,
	bcs	.L161	@,
	movw	r6, #:lower16:11196172	@ tmp184,
	movt	r6, #:upper16:11196172	@ tmp184,
	str	r4, [r4, #468]	@ pCurrFrame, <variable>.frame.frame_store
	mov	sl, #3	@ tmp180,
	mov	r8, #0	@ tmp182,
	strb	sl, [r4, #1]	@ tmp180, <variable>.is_used
	strb	r8, [r4, #464]	@ tmp182, <variable>.frame.structure
	movw	r0, #:lower16:11196173	@ tmp186,
	ldrb	r8, [r3, r6]	@ zero_extendqisi2	@ temp.1300, <variable>.CurrPic.is_long_term
	movt	r0, #:upper16:11196173	@ tmp186,
	movw	r7, #:lower16:11196664	@ tmp188,
	movt	r7, #:upper16:11196664	@ tmp188,
	movw	r6, #:lower16:11196668	@ tmp192,
	movt	r6, #:upper16:11196668	@ tmp192,
	strb	r8, [r4, #465]	@ temp.1300, <variable>.frame.is_long_term
	movw	lr, #:lower16:11196672	@ tmp194,
	ldrb	sl, [r3, r0]	@ zero_extendqisi2	@ temp.1301, <variable>.CurrPic.is_short_term
	movt	lr, #:upper16:11196672	@ tmp194,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r3, r1	@, pMvcCtx,
	add	r0, r4, #8	@, pCurrFrame,
	strb	sl, [r4, #466]	@ temp.1301, <variable>.frame.is_short_term
	mov	r2, #456	@,
	ldr	r7, [r3, r7]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	str	r7, [r4, #480]	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	ldr	r7, [r3, r5]	@ temp.1302, <variable>.CurrPic.pic_type
	str	r7, [r4, #492]	@ temp.1302, <variable>.frame.pic_type
	ldr	r5, [r3, ip]	@ temp.1303, <variable>.CurrPic.err_level
	str	r5, [r4, #488]	@ temp.1303, <variable>.frame.err_level
	ldr	ip, [r3, r6]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	ip, [r4, #520]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	r3, [r3, lr]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	str	r3, [r4, #560]	@ <variable>.CurrPic.bottompoc, <variable>.bottom_field.poc
	bl	memcpy	@
	mov	ip, #1	@ tmp203,
	mov	r3, #2	@ tmp207,
	strb	r8, [r4, #545]	@ temp.1300, <variable>.bottom_field.is_long_term
	strb	sl, [r4, #546]	@ temp.1301, <variable>.bottom_field.is_short_term
	str	r5, [r4, #568]	@ temp.1303, <variable>.bottom_field.err_level
	strb	ip, [r4, #504]	@ tmp203, <variable>.top_field.structure
	strb	r3, [r4, #544]	@ tmp207, <variable>.bottom_field.structure
	str	r7, [r4, #572]	@ temp.1302, <variable>.bottom_field.pic_type
	str	r4, [r4, #548]	@ pCurrFrame, <variable>.bottom_field.frame_store
	strb	r8, [r4, #505]	@ temp.1300, <variable>.top_field.is_long_term
	strb	sl, [r4, #506]	@ temp.1301, <variable>.top_field.is_short_term
	str	r5, [r4, #528]	@ temp.1303, <variable>.top_field.err_level
	str	r7, [r4, #532]	@ temp.1302, <variable>.top_field.pic_type
	str	r4, [r4, #508]	@ pCurrFrame, <variable>.top_field.frame_store
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L141:
	mov	r1, #3	@ iftmp.550,
	b	.L142	@
.L161:
	cmp	r1, #2	@ <variable>.CurrPic.structure,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:11196172	@ tmp252,
	movt	lr, #:upper16:11196172	@ tmp252,
	str	r4, [r4, #548]	@ pCurrFrame, <variable>.bottom_field.frame_store
	mov	r6, #1	@ tmp250,
	strb	r6, [r4, #544]	@ tmp250, <variable>.bottom_field.structure
	movw	r7, #:lower16:11196173	@ tmp255,
	ldrb	r8, [r3, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movt	r7, #:upper16:11196173	@ tmp255,
	movw	lr, #:lower16:11196668	@ tmp258,
	movt	lr, #:upper16:11196668	@ tmp258,
	movw	r6, #:lower16:11196169	@ tmp263,
	movt	r6, #:upper16:11196169	@ tmp263,
	strb	r8, [r4, #545]	@ <variable>.CurrPic.is_long_term, <variable>.bottom_field.is_long_term
	mov	r8, #0	@ tmp262,
	ldrb	r7, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r7, [r4, #546]	@ <variable>.CurrPic.is_short_term, <variable>.bottom_field.is_short_term
	ldr	lr, [r3, lr]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #560]	@ <variable>.CurrPic.toppoc, <variable>.bottom_field.poc
	ldr	lr, [r3, r5]	@ temp.1315, <variable>.CurrPic.pic_type
	str	lr, [r4, #572]	@ temp.1315, <variable>.bottom_field.pic_type
	ldr	ip, [r3, ip]	@ temp.1316, <variable>.CurrPic.err_level
	str	r8, [r4, #616]	@ tmp262, <variable>.MbaffFrameFlag
	str	ip, [r4, #568]	@ temp.1316, <variable>.bottom_field.err_level
	ldrb	r5, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r5, r8	@ <variable>.CurrPic.field_pair_flag,
	beq	.L162	@,
	ldr	r1, [r4, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	mov	r5, #3	@ tmp275,
	strb	r5, [r4, #1]	@ tmp275, <variable>.is_used
	add	r7, ip, r1	@ temp.1319, temp.1316, <variable>.top_field.err_level
	str	r7, [r4, #488]	@ temp.1319, <variable>.frame.err_level
	str	r7, [r4, #624]	@ temp.1319, <variable>.err_level
	movw	ip, #:lower16:11196192	@ tmp282,
	ldrb	r2, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movt	ip, #:upper16:11196192	@ tmp282,
	mvn	r1, #0	@,
	cmp	r2, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	r8, r0, #2	@ iftmp.555, iftmp.552,
	strb	r8, [r4, #3]	@ iftmp.555, <variable>.mode_skip_flag
	ldrd	r6, [r3, ip]	@ temp.1321, pMvcCtx, tmp282
	mvn	r0, #0	@ tmp283,
	cmp	r7, r1	@ temp.1321, tmp283
	cmpeq	r6, r0	@ temp.1321, tmp283
	beq	.L158	@,
	ldrd	r8, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp283
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp283
	beq	.L163	@,
.L158:
	ldr	r1, [r4, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L160	@
.L147:
	movw	r6, #:lower16:11196172	@ tmp211,
	movt	r6, #:upper16:11196172	@ tmp211,
	strb	r1, [r4, #504]	@ <variable>.CurrPic.structure, <variable>.top_field.structure
	movw	r7, #:lower16:11196173	@ tmp214,
	str	r4, [r4, #508]	@ pCurrFrame, <variable>.top_field.frame_store
	movt	r7, #:upper16:11196173	@ tmp214,
	ldrb	sl, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	movw	lr, #:lower16:11196668	@ tmp217,
	movt	lr, #:upper16:11196668	@ tmp217,
	movw	r6, #:lower16:11196169	@ tmp222,
	movt	r6, #:upper16:11196169	@ tmp222,
	mov	r8, #0	@ tmp221,
	strb	sl, [r4, #505]	@ <variable>.CurrPic.is_long_term, <variable>.top_field.is_long_term
	ldrb	r7, [r3, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.is_short_term, <variable>.CurrPic.is_short_term
	strb	r7, [r4, #506]	@ <variable>.CurrPic.is_short_term, <variable>.top_field.is_short_term
	ldr	lr, [r3, lr]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	str	lr, [r4, #520]	@ <variable>.CurrPic.toppoc, <variable>.top_field.poc
	ldr	lr, [r3, r5]	@ temp.1307, <variable>.CurrPic.pic_type
	str	lr, [r4, #532]	@ temp.1307, <variable>.top_field.pic_type
	ldr	ip, [r3, ip]	@ temp.1308, <variable>.CurrPic.err_level
	str	r8, [r4, #616]	@ tmp221, <variable>.MbaffFrameFlag
	str	ip, [r4, #528]	@ temp.1308, <variable>.top_field.err_level
	ldrb	r5, [r3, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r5, r8	@ <variable>.CurrPic.field_pair_flag,
	beq	.L164	@,
	ldr	r1, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	mov	r5, #3	@ tmp235,
	strb	r5, [r4, #1]	@ tmp235, <variable>.is_used
	add	r6, ip, r1	@ D.38567, temp.1308, <variable>.bottom_field.err_level
	str	r6, [r4, #488]	@ D.38567, <variable>.frame.err_level
	str	r6, [r4, #624]	@ D.38567, <variable>.err_level
	mvn	r1, #0	@,
	ldrb	r7, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	movw	r2, #:lower16:11196192	@ tmp242,
	movt	r2, #:upper16:11196192	@ tmp242,
	cmp	r7, #1	@ <variable>.CurrPic.mode_skip_flag,
	orreq	r8, r0, #1	@ iftmp.553, iftmp.552,
	strb	r8, [r4, #3]	@ iftmp.553, <variable>.mode_skip_flag
	ldrd	r6, [r3, r2]	@ D.38574, pMvcCtx, tmp242
	mvn	r0, #0	@ tmp243,
	cmp	r7, r1	@ D.38574, tmp243
	cmpeq	r6, r0	@ D.38574, tmp243
	beq	.L152	@,
	ldrd	r8, [r4, #16]	@ <variable>.fs_image.PTS, pCurrFrame,
	cmp	r9, r1	@ <variable>.fs_image.PTS, tmp243
	cmpeq	r8, r0	@ <variable>.fs_image.PTS, tmp243
	beq	.L165	@,
.L152:
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
.L160:
	movw	ip, #:lower16:11196660	@ tmp288,
	movt	ip, #:upper16:11196660	@ tmp288,
	cmp	r1, lr	@ <variable>.top_field.pic_type, temp.1315
	strcs	r1, [r4, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	strcc	lr, [r4, #620]	@, temp.1315, <variable>.pic_type
	mov	r0, r4	@, pCurrFrame
	ldr	lr, [r3, ip]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	str	lr, [r4, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	bl	MVC_CombineFldsToFrm	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L162:
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	strb	r1, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	add	r1, r3, r0	@, pMvcCtx,
	str	ip, [r4, #488]	@ temp.1316, <variable>.frame.err_level
	add	r0, r4, #8	@, pCurrFrame,
	str	ip, [r4, #624]	@ temp.1316, <variable>.err_level
	ldrb	r3, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	mov	r2, #456	@,
	cmp	r3, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	r3, #2	@ iftmp.554,
	movne	r3, r8	@ iftmp.554,
	strb	r3, [r4, #3]	@ iftmp.554, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L164:
	strb	r1, [r4, #1]	@ <variable>.CurrPic.structure, <variable>.is_used
	movw	r1, #:lower16:11196184	@,
	str	ip, [r4, #488]	@ temp.1308, <variable>.frame.err_level
	movt	r1, #:upper16:11196184	@,
	str	ip, [r4, #624]	@ temp.1308, <variable>.err_level
	add	r1, r3, r1	@, pMvcCtx,
	ldrb	ip, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	add	r0, r4, #8	@, pCurrFrame,
	mov	r2, #456	@,
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	r3, #0	@, tmp228
	moveq	r3, #1	@, tmp228
	strb	r3, [r4, #3]	@ tmp228, <variable>.mode_skip_flag
	bl	memcpy	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L165:
	strd	r6, [r4, #16]	@ D.38574, pCurrFrame,
	b	.L152	@
.L163:
	strd	r6, [r4, #16]	@ temp.1321, pCurrFrame,
	ldr	r1, [r4, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	b	.L160	@
	.fnend
	.size	MVC_UpdateCurrFrameInfo, .-MVC_UpdateCurrFrameInfo
	.align	2
	.global	MVC_GetShortTermPicPoint
	.type	MVC_GetShortTermPicPoint, %function
MVC_GetShortTermPicPoint:
	.fnstart
.LFB1568:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11162625	@ tmp144,
	movt	r3, #:upper16:11162625	@ tmp144,
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L168	@,
	movw	r2, #:lower16:11162626	@ tmp146,
	movt	r2, #:upper16:11162626	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L168:
	movw	ip, #:lower16:11168620	@ tmp148,
	movt	ip, #:upper16:11168620	@ tmp148,
	ldr	r6, [r0, ip]	@ D.39048, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.39048,
	beq	.L170	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11168484	@ ivtmp.1351,
	sub	r2, r6, #1	@ tmp166, D.39048,
	movt	r5, #:upper16:11168484	@ ivtmp.1351,
	add	r3, r0, r5	@ ivtmp.1351, pMvcCtx, ivtmp.1351
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L178	@,
	ldr	r2, [r3, #0]	@ D.39013, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L180	@,
	ldr	ip, [r2, #464]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #65536	@ tmp186,
	bne	.L180	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L180:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.39048, i
	add	r3, r3, #4	@ ivtmp.1351, ivtmp.1351,
	bls	.L170	@,
	cmp	r5, #0	@ tmp168,
	beq	.L175	@,
	cmp	r4, #0	@ structure,
	beq	.L198	@,
	ldr	r0, [r3, #0]	@ temp.1354, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39026, <variable>.is_reference
	tst	r2, #1	@ D.39026,
	beq	.L183	@,
	ldr	r5, [r0, #504]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #65536	@ tmp195,
	beq	.L202	@,
.L183:
	tst	r2, #2	@ D.39026,
	beq	.L184	@,
	ldr	r2, [r0, #544]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #65536	@ tmp192,
	bne	.L184	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L195	@,
.L184:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1351, ivtmp.1351,
	cmp	r6, ip	@ D.39048, i
	bhi	.L175	@,
.L170:
	mov	r0, #0	@ D.39024,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L178:
	ldr	r0, [r3, #0]	@ temp.1354, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39026, <variable>.is_reference
	tst	r2, #1	@ D.39026,
	beq	.L179	@,
	ldr	ip, [r0, #504]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #65536	@ tmp182,
	beq	.L203	@,
.L179:
	tst	r2, #2	@ D.39026,
	beq	.L180	@,
	ldr	ip, [r0, #544]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #65536	@ tmp179,
	bne	.L180	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L180	@,
.L195:
	add	r0, r0, #544	@ D.39024, temp.1354,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L204:
	ldr	r2, [r3, #0]	@ D.39013, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L172	@,
	ldr	r0, [r2, #464]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #65536	@ tmp151,
	bne	.L172	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L172:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1351,
	bne	.L187	@,
.L206:
	ldr	r2, [r3, #4]	@ D.39013, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L189	@,
	ldr	r3, [r2, #464]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #65536	@ tmp212,
	bne	.L189	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	beq	.L197	@,
.L189:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1351, tmp170,
	cmp	r6, ip	@ D.39048, i
	bls	.L170	@,
.L175:
	cmp	r4, #0	@ structure,
	beq	.L204	@,
	ldr	r0, [r3, #0]	@ temp.1354, <variable>.DPB.fs_ref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39026, <variable>.is_reference
	tst	r2, #1	@ D.39026,
	beq	.L174	@,
	ldr	r5, [r0, #504]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #65536	@ tmp156,
	beq	.L205	@,
.L174:
	tst	r2, #2	@ D.39026,
	beq	.L172	@,
	ldr	r2, [r0, #544]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #65536	@ tmp161,
	bne	.L172	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	beq	.L195	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1351,
	beq	.L206	@,
.L187:
	ldr	r0, [r3, #4]	@ temp.1354, <variable>.DPB.fs_ref
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.39026, <variable>.is_reference
	tst	r3, #1	@ D.39026,
	beq	.L188	@,
	ldr	r2, [r0, #504]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #65536	@ tmp208,
	beq	.L207	@,
.L188:
	tst	r3, #2	@ D.39026,
	beq	.L189	@,
	ldr	r3, [r0, #544]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #65536	@ tmp205,
	bne	.L189	@,
	ldr	r2, [r0, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r2, r1	@ <variable>.bottom_field.pic_num, picNum
	bne	.L189	@,
	b	.L195	@
.L205:
	ldr	r5, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L174	@,
.L196:
	add	r0, r0, #504	@ D.39024, temp.1354,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L207:
	ldr	r2, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r2, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L188	@,
	b	.L196	@
.L198:
	ldr	r2, [r3, #0]	@ D.39013, <variable>.DPB.fs_ref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L184	@,
	ldr	r0, [r2, #464]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #65536	@ tmp199,
	bne	.L184	@,
	ldr	r0, [r2, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r0, r1	@ <variable>.frame.pic_num, picNum
	bne	.L184	@,
.L197:
	add	r0, r2, #464	@ D.39024, D.39013,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L203:
	ldr	ip, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L179	@,
	b	.L196	@
.L202:
	ldr	r5, [r0, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, r1	@ <variable>.top_field.pic_num, picNum
	bne	.L183	@,
	b	.L196	@
	.fnend
	.size	MVC_GetShortTermPicPoint, .-MVC_GetShortTermPicPoint
	.align	2
	.global	MVC_GetLongTermPicPoint
	.type	MVC_GetLongTermPicPoint, %function
MVC_GetLongTermPicPoint:
	.fnstart
.LFB1569:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11162625	@ tmp144,
	movt	r3, #:upper16:11162625	@ tmp144,
	ldrb	r4, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r4, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L210	@,
	movw	r2, #:lower16:11162626	@ tmp146,
	movt	r2, #:upper16:11162626	@ tmp146,
	ldrb	r4, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r4, #2	@ structure,
	moveq	r4, #1	@ structure,
.L210:
	movw	ip, #:lower16:11168624	@ tmp148,
	movt	ip, #:upper16:11168624	@ tmp148,
	ldr	r6, [r0, ip]	@ D.39106, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.39106,
	beq	.L212	@,
	cmp	r4, #0	@ structure,
	movw	r5, #:lower16:11168548	@ ivtmp.1382,
	sub	r2, r6, #1	@ tmp166, D.39106,
	movt	r5, #:upper16:11168548	@ ivtmp.1382,
	add	r3, r0, r5	@ ivtmp.1382, pMvcCtx, ivtmp.1382
	and	r5, r2, #1	@ tmp168, tmp166,
	bne	.L220	@,
	ldr	r2, [r3, #0]	@ D.39071, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L222	@,
	ldr	ip, [r2, #464]	@ tmp185,
	bic	r0, ip, #-16777216	@ tmp186, tmp185,
	bic	ip, r0, #255	@ tmp186, tmp186,
	cmp	ip, #256	@ tmp186,
	bne	.L222	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L222:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.39106, i
	add	r3, r3, #4	@ ivtmp.1382, ivtmp.1382,
	bls	.L212	@,
	cmp	r5, #0	@ tmp168,
	beq	.L217	@,
	cmp	r4, #0	@ structure,
	beq	.L240	@,
	ldr	r0, [r3, #0]	@ temp.1385, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39084, <variable>.is_reference
	tst	r2, #1	@ D.39084,
	beq	.L225	@,
	ldr	r5, [r0, #504]	@ tmp194,
	bic	r5, r5, #-16777216	@ tmp195, tmp194,
	bic	r5, r5, #255	@ tmp195, tmp195,
	cmp	r5, #256	@ tmp195,
	beq	.L244	@,
.L225:
	tst	r2, #2	@ D.39084,
	beq	.L226	@,
	ldr	r2, [r0, #544]	@ tmp191,
	bic	r2, r2, #-16777216	@ tmp192, tmp191,
	bic	r2, r2, #255	@ tmp192, tmp192,
	cmp	r2, #256	@ tmp192,
	bne	.L226	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L237	@,
.L226:
	add	ip, ip, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.1382, ivtmp.1382,
	cmp	r6, ip	@ D.39106, i
	bhi	.L217	@,
.L212:
	mov	r0, #0	@ D.39082,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L220:
	ldr	r0, [r3, #0]	@ temp.1385, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39084, <variable>.is_reference
	tst	r2, #1	@ D.39084,
	beq	.L221	@,
	ldr	ip, [r0, #504]	@ tmp181,
	bic	ip, ip, #-16777216	@ tmp182, tmp181,
	bic	ip, ip, #255	@ tmp182, tmp182,
	cmp	ip, #256	@ tmp182,
	beq	.L245	@,
.L221:
	tst	r2, #2	@ D.39084,
	beq	.L222	@,
	ldr	ip, [r0, #544]	@ tmp178,
	bic	r2, ip, #-16777216	@ tmp179, tmp178,
	bic	ip, r2, #255	@ tmp179, tmp179,
	cmp	ip, #256	@ tmp179,
	bne	.L222	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L222	@,
.L237:
	add	r0, r0, #544	@ D.39082, temp.1385,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L246:
	ldr	r2, [r3, #0]	@ D.39071, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L214	@,
	ldr	r0, [r2, #464]	@ tmp153,
	bic	r0, r0, #-16777216	@ tmp151, tmp153,
	bic	r0, r0, #255	@ tmp151, tmp151,
	cmp	r0, #256	@ tmp151,
	bne	.L214	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L214:
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1382,
	bne	.L229	@,
.L248:
	ldr	r2, [r3, #4]	@ D.39071, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L231	@,
	ldr	r3, [r2, #464]	@ tmp211,
	bic	r0, r3, #-16777216	@ tmp212, tmp211,
	bic	r3, r0, #255	@ tmp212, tmp212,
	cmp	r3, #256	@ tmp212,
	bne	.L231	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	beq	.L239	@,
.L231:
	add	ip, ip, #1	@ i, tmp169,
	add	r3, r5, #4	@ ivtmp.1382, tmp170,
	cmp	r6, ip	@ D.39106, i
	bls	.L212	@,
.L217:
	cmp	r4, #0	@ structure,
	beq	.L246	@,
	ldr	r0, [r3, #0]	@ temp.1385, <variable>.DPB.fs_ltref
	ldrb	r2, [r0, #2]	@ zero_extendqisi2	@ D.39084, <variable>.is_reference
	tst	r2, #1	@ D.39084,
	beq	.L216	@,
	ldr	r5, [r0, #504]	@ tmp158,
	bic	r5, r5, #-16777216	@ tmp156, tmp158,
	bic	r5, r5, #255	@ tmp156, tmp156,
	cmp	r5, #256	@ tmp156,
	beq	.L247	@,
.L216:
	tst	r2, #2	@ D.39084,
	beq	.L214	@,
	ldr	r2, [r0, #544]	@ tmp163,
	bic	r2, r2, #-16777216	@ tmp161, tmp163,
	bic	r2, r2, #255	@ tmp161, tmp161,
	cmp	r2, #256	@ tmp161,
	bne	.L214	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	beq	.L237	@,
	cmp	r4, #0	@ structure,
	add	ip, ip, #1	@ tmp169, i,
	add	r5, r3, #4	@ tmp170, ivtmp.1382,
	beq	.L248	@,
.L229:
	ldr	r0, [r3, #4]	@ temp.1385, <variable>.DPB.fs_ltref
	ldrb	r3, [r0, #2]	@ zero_extendqisi2	@ D.39084, <variable>.is_reference
	tst	r3, #1	@ D.39084,
	beq	.L230	@,
	ldr	r2, [r0, #504]	@ tmp207,
	bic	r2, r2, #-16777216	@ tmp208, tmp207,
	bic	r2, r2, #255	@ tmp208, tmp208,
	cmp	r2, #256	@ tmp208,
	beq	.L249	@,
.L230:
	tst	r3, #2	@ D.39084,
	beq	.L231	@,
	ldr	r3, [r0, #544]	@ tmp204,
	bic	r2, r3, #-16777216	@ tmp205, tmp204,
	bic	r3, r2, #255	@ tmp205, tmp205,
	cmp	r3, #256	@ tmp205,
	bne	.L231	@,
	ldr	r2, [r0, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.bottom_field.long_term_pic_num, LongtermPicNum
	bne	.L231	@,
	b	.L237	@
.L247:
	ldr	r5, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L216	@,
.L238:
	add	r0, r0, #504	@ D.39082, temp.1385,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L249:
	ldr	r2, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r2, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L230	@,
	b	.L238	@
.L240:
	ldr	r2, [r3, #0]	@ D.39071, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L226	@,
	ldr	r0, [r2, #464]	@ tmp198,
	bic	r0, r0, #-16777216	@ tmp199, tmp198,
	bic	r0, r0, #255	@ tmp199, tmp199,
	cmp	r0, #256	@ tmp199,
	bne	.L226	@,
	ldr	r0, [r2, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r0, r1	@ <variable>.frame.long_term_pic_num, LongtermPicNum
	bne	.L226	@,
.L239:
	add	r0, r2, #464	@ D.39082, D.39071,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L245:
	ldr	ip, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	ip, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L221	@,
	b	.L238	@
.L244:
	ldr	r5, [r0, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r5, r1	@ <variable>.top_field.long_term_pic_num, LongtermPicNum
	bne	.L225	@,
	b	.L238	@
	.fnend
	.size	MVC_GetLongTermPicPoint, .-MVC_GetLongTermPicPoint
	.align	2
	.global	MVC_ReorderSTList
	.type	MVC_ReorderSTList, %function
MVC_ReorderSTList:
	.fnstart
.LFB1570:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r6, r3	@ picNumLX, picNumLX
	add	r5, r1, r1, asl #5	@, tmp159, listidx, listidx,
	add	r1, r0, #11141120	@ tmp155, pMvcCtx,
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r3, r1, #27904	@ tmp155, tmp155,
	mov	r1, r6	@, picNumLX
	add	r5, r3, r5, asl #2	@, RefPicListX, tmp155, tmp159,
	ldr	r8, [fp, #8]	@ CurrViewId, CurrViewId
	bl	MVC_GetShortTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.39137,* refIdxLX
	add	ip, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	ip, r3	@ cIdx, D.39137
	ble	.L251	@,
	add	r1, r5, ip, asl #2	@, ivtmp.1432, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1430, RefPicListX, ivtmp.1427,
.L252:
	ldr	lr, [r2], #-4	@ tmp163,
	mov	sl, r7	@ cIdx.1434, ivtmp.1427
	sub	r7, r7, #1	@ ivtmp.1427, ivtmp.1427,
	str	lr, [r1], #-4	@ tmp163,
	ldr	r3, [r4, #0]	@ D.39137,* refIdxLX
	cmp	r3, sl	@ D.39137, cIdx.1434
	blt	.L252	@,
.L251:
	add	r1, r3, #1	@ cIdx.1433, D.39137,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	ip, r1	@ cIdx, cIdx.1433
	str	r1, [r4, #0]	@ cIdx.1433,* refIdxLX
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1423, RefPicListX, cIdx.1433,
	rsb	r0, r1, ip	@ tmp169, cIdx.1433, cIdx
	and	r4, r0, #1	@ tmp170, tmp169,
	mov	r3, r1	@ nIdx, cIdx.1433
	ldr	r0, [r2, #0]	@ D.39142,* ivtmp.1423
	cmp	r0, #0	@ D.39142,
	beq	.L260	@,
	ldrb	r7, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r7, #0	@ <variable>.is_long_term,
	beq	.L273	@,
.L261:
	add	r3, r1, #1	@ nIdx, cIdx.1433,
	str	r0, [r5, r1, asl #2]	@ D.39142,* RefPicListX
.L260:
	add	r0, r1, #1	@ cIdx.1433, cIdx.1433,
	add	r2, r2, #4	@ ivtmp.1423, ivtmp.1423,
	cmp	ip, r0	@ cIdx, cIdx.1433
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp170,
	beq	.L256	@,
	ldr	r1, [r2, #0]	@ D.39142,* ivtmp.1423
	cmp	r1, #0	@ D.39142,
	beq	.L263	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L274	@,
.L264:
	str	r1, [r5, r3, asl #2]	@ D.39142,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L263:
	add	r0, r0, #1	@ cIdx.1433, cIdx.1433,
	add	r2, r2, #4	@ ivtmp.1423, ivtmp.1423,
	cmp	ip, r0	@ cIdx, cIdx.1433
	bge	.L256	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L279:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	beq	.L254	@,
.L255:
	str	r1, [r5, r3, asl #2]	@ D.39142,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L254:
	ldr	r1, [r2, #4]	@ D.39142,
	add	r0, r0, #1	@ tmp171, cIdx.1433,
	add	r2, r2, #4	@ tmp172, ivtmp.1423,
	cmp	r1, #0	@ D.39142,
	beq	.L267	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L268	@,
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	beq	.L276	@,
.L268:
	str	r1, [r5, r3, asl #2]	@ D.39142,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L267:
	add	r0, r0, #1	@ cIdx.1433, tmp171,
	add	r2, r2, #4	@ ivtmp.1423, tmp172,
	cmp	ip, r0	@ cIdx, cIdx.1433
	blt	.L277	@,
.L256:
	ldr	r1, [r2, #0]	@ D.39142,* ivtmp.1423
	cmp	r1, #0	@ D.39142,
	beq	.L254	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L255	@,
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	bne	.L255	@,
	b	.L279	@
.L273:
	ldr	r7, [r0, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r7, r6	@ <variable>.pic_num, picNumLX
	bne	.L261	@,
	ldr	r7, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r7, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r7, r8	@ <variable>.view_id, CurrViewId
	bne	.L261	@,
	b	.L260	@
.L274:
	ldr	r4, [r1, #12]	@ <variable>.pic_num, <variable>.pic_num
	cmp	r4, r6	@ <variable>.pic_num, picNumLX
	bne	.L264	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L264	@,
	b	.L263	@
.L276:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L268	@,
	add	r0, r0, #1	@ cIdx.1433, tmp171,
	add	r2, r2, #4	@ ivtmp.1423, tmp172,
	cmp	ip, r0	@ cIdx, cIdx.1433
	bge	.L256	@,
.L277:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_ReorderSTList, .-MVC_ReorderSTList
	.align	2
	.global	MVC_ReorderLTList
	.type	MVC_ReorderLTList, %function
MVC_ReorderLTList:
	.fnstart
.LFB1571:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r4, [fp, #4]	@ refIdxLX, refIdxLX
	mov	r6, r3	@ LongTermPicNum, LongTermPicNum
	add	r5, r1, r1, asl #5	@, tmp155, listidx, listidx,
	add	r1, r0, #11141120	@ tmp151, pMvcCtx,
	mov	r7, r2	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	add	r3, r1, #27904	@ tmp151, tmp151,
	mov	r1, r6	@, LongTermPicNum
	add	r5, r3, r5, asl #2	@, RefPicListX, tmp151, tmp155,
	ldr	r8, [fp, #8]	@ CurrViewId, CurrViewId
	bl	MVC_GetLongTermPicPoint	@
	ldr	r3, [r4, #0]	@ D.39187,* refIdxLX
	add	ip, r7, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	cmp	ip, r3	@ cIdx, D.39187
	ble	.L281	@,
	add	r1, r5, ip, asl #2	@, ivtmp.1480, RefPicListX, cIdx,
	add	r2, r5, r7, asl #2	@, ivtmp.1478, RefPicListX, ivtmp.1475,
.L282:
	ldr	lr, [r2], #-4	@ tmp159,
	mov	sl, r7	@ cIdx.1482, ivtmp.1475
	sub	r7, r7, #1	@ ivtmp.1475, ivtmp.1475,
	str	lr, [r1], #-4	@ tmp159,
	ldr	r3, [r4, #0]	@ D.39187,* refIdxLX
	cmp	r3, sl	@ D.39187, cIdx.1482
	blt	.L282	@,
.L281:
	add	r1, r3, #1	@ cIdx.1481, D.39187,
	str	r0, [r5, r3, asl #2]	@ picLX,* RefPicListX
	cmp	ip, r1	@ cIdx, cIdx.1481
	str	r1, [r4, #0]	@ cIdx.1481,* refIdxLX
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r5, r1, asl #2	@, ivtmp.1471, RefPicListX, cIdx.1481,
	rsb	r0, r1, ip	@ tmp165, cIdx.1481, cIdx
	and	r4, r0, #1	@ tmp166, tmp165,
	mov	r3, r1	@ nIdx, cIdx.1481
	ldr	r0, [r2, #0]	@ D.39192,* ivtmp.1471
	cmp	r0, #0	@ D.39192,
	beq	.L290	@,
	ldrb	r7, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r7, #0	@ <variable>.is_long_term,
	bne	.L303	@,
.L291:
	add	r3, r1, #1	@ nIdx, cIdx.1481,
	str	r0, [r5, r1, asl #2]	@ D.39192,* RefPicListX
.L290:
	add	r0, r1, #1	@ cIdx.1481, cIdx.1481,
	add	r2, r2, #4	@ ivtmp.1471, ivtmp.1471,
	cmp	ip, r0	@ cIdx, cIdx.1481
	ldmltfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp166,
	beq	.L286	@,
	ldr	r1, [r2, #0]	@ D.39192,* ivtmp.1471
	cmp	r1, #0	@ D.39192,
	beq	.L293	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	bne	.L304	@,
.L294:
	str	r1, [r5, r3, asl #2]	@ D.39192,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L293:
	add	r0, r0, #1	@ cIdx.1481, cIdx.1481,
	add	r2, r2, #4	@ ivtmp.1471, ivtmp.1471,
	cmp	ip, r0	@ cIdx, cIdx.1481
	bge	.L286	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L309:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	beq	.L284	@,
.L285:
	str	r1, [r5, r3, asl #2]	@ D.39192,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L284:
	ldr	r1, [r2, #4]	@ D.39192,
	add	r0, r0, #1	@ tmp167, cIdx.1481,
	add	r2, r2, #4	@ tmp168, ivtmp.1471,
	cmp	r1, #0	@ D.39192,
	beq	.L297	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L298	@,
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	beq	.L306	@,
.L298:
	str	r1, [r5, r3, asl #2]	@ D.39192,* RefPicListX
	add	r3, r3, #1	@ nIdx, nIdx,
.L297:
	add	r0, r0, #1	@ cIdx.1481, tmp167,
	add	r2, r2, #4	@ ivtmp.1471, tmp168,
	cmp	ip, r0	@ cIdx, cIdx.1481
	blt	.L307	@,
.L286:
	ldr	r1, [r2, #0]	@ D.39192,* ivtmp.1471
	cmp	r1, #0	@ D.39192,
	beq	.L284	@,
	ldrb	r4, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r4, #0	@ <variable>.is_long_term,
	beq	.L285	@,
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L285	@,
	b	.L309	@
.L303:
	ldr	r7, [r0, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r7, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L291	@,
	ldr	r7, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r7, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r7, r8	@ <variable>.view_id, CurrViewId
	bne	.L291	@,
	b	.L290	@
.L304:
	ldr	r4, [r1, #8]	@ <variable>.long_term_pic_num, <variable>.long_term_pic_num
	cmp	r4, r6	@ <variable>.long_term_pic_num, LongTermPicNum
	bne	.L294	@,
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L294	@,
	b	.L293	@
.L306:
	ldr	r4, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r8	@ <variable>.view_id, CurrViewId
	bne	.L298	@,
	add	r0, r0, #1	@ cIdx.1481, tmp167,
	add	r2, r2, #4	@ ivtmp.1471, tmp168,
	cmp	ip, r0	@ cIdx, cIdx.1481
	bge	.L286	@,
.L307:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_ReorderLTList, .-MVC_ReorderLTList
	.align	2
	.global	MVC_GetMaxViewIdx
	.type	MVC_GetMaxViewIdx, %function
MVC_GetMaxViewIdx:
	.fnstart
.LFB1572:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:10818504	@ tmp143,
	movt	ip, #:upper16:10818504	@ tmp143,
	ldr	ip, [r0, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	adds	r7, ip, #1	@ D.39217, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L311	@,
	movw	r4, #:lower16:10818508	@ tmp145,
	movt	r4, #:upper16:10818508	@ tmp145,
	ldr	r4, [r0, r4]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r1, r4	@ CurrViewId, <variable>.CurrSUBSPS.view_id
	beq	.L311	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r5, #:lower16:10818512	@ ivtmp.1510,
	movt	r5, #:upper16:10818512	@ ivtmp.1510,
	mov	ip, #0	@ VOIdx,
	add	r4, r0, r5	@ ivtmp.1510, pMvcCtx, ivtmp.1510
	beq	.L312	@,
	ldr	r5, [r4], #4	@ D.46204, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ VOIdx,
	cmp	r1, r5	@ CurrViewId, D.46204
	bne	.L312	@,
.L313:
	cmp	r2, #0	@ anchor_pic_flag,
	bne	.L323	@,
.L315:
	add	r3, ip, r3, asl #1	@, tmp157, VOIdx, listidx,
	movw	ip, #:lower16:2704636	@ tmp158,
	movt	ip, #:upper16:2704636	@ tmp158,
	add	r1, r3, ip	@ tmp158, tmp157, tmp158
	add	r2, r0, r1, asl #2	@, tmp162, pMvcCtx, tmp158,
	ldr	r0, [r2, #4]	@ maxViewIdx, <variable>.CurrSUBSPS.num_non_anchor_refs
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L314:
	ldr	r6, [r5], #4	@ D.46204, <variable>.CurrSUBSPS.view_id
	cmp	r1, r6	@ CurrViewId, D.46204
	beq	.L313	@,
	ldr	r6, [r4, #4]	@ D.46204, <variable>.CurrSUBSPS.view_id
	add	ip, ip, #1	@ VOIdx, VOIdx,
	add	r4, r5, #4	@ ivtmp.1510, tmp169,
	cmp	r1, r6	@ CurrViewId, D.46204
	beq	.L313	@,
.L312:
	add	ip, ip, #1	@ VOIdx, VOIdx,
	mov	r5, r4	@ tmp169, ivtmp.1510
	cmp	r7, ip	@ D.39217, VOIdx
	bhi	.L314	@,
	cmp	r2, #0	@ anchor_pic_flag,
	beq	.L315	@,
.L323:
	add	r3, ip, r3, asl #1	@, tmp149, VOIdx, listidx,
	movw	ip, #:lower16:2704628	@ tmp150,
	movt	ip, #:upper16:2704628	@ tmp150,
	add	r1, r3, ip	@ tmp150, tmp149, tmp150
	add	r2, r0, r1, asl #2	@, tmp154, pMvcCtx, tmp150,
	ldr	r0, [r2, #4]	@ maxViewIdx, <variable>.CurrSUBSPS.num_anchor_refs
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L311:
	mov	ip, #0	@ VOIdx,
	b	.L313	@
	.fnend
	.size	MVC_GetMaxViewIdx, .-MVC_GetMaxViewIdx
	.align	2
	.global	mvc_get_inter_view_pic
	.type	mvc_get_inter_view_pic, %function
mvc_get_inter_view_pic:
	.fnstart
.LFB1573:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:2791074	@ tmp151,
	movt	r5, #:upper16:2791074	@ tmp151,
	movw	r4, #:lower16:11152056	@ tmp147,
	add	ip, r3, r5	@ tmp151, listidx, tmp151
	movt	r4, #:upper16:11152056	@ tmp147,
	add	r4, r0, r4	@ tmp147, pMvcCtx, tmp147
	mov	r5, #1344	@ tmp150,
	ldr	ip, [r0, ip, asl #2]	@ interviewlistsize, <variable>.CurrSlice.interviewlistXsize
	mla	r3, r5, r3, r4	@ fs_interviewlist, tmp150, listidx, tmp147
	cmp	ip, #0	@ interviewlistsize,
	beq	.L325	@,
	ldr	r4, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	sub	r6, ip, #1	@ tmp160, interviewlistsize,
	and	r7, r6, #1	@ tmp162, tmp160,
	movw	r6, #:lower16:11196171	@ tmp159,
	cmp	r4, r1	@ <variable>.view_id, targetViewID
	movt	r6, #:upper16:11196171	@ tmp159,
	mov	r4, r3	@ ivtmp.1545, fs_interviewlist
	bne	.L333	@,
	ldrb	r5, [r0, r6]	@ zero_extendqisi2	@ D.39251, <variable>.CurrPic.structure
	cmp	r5, #0	@ D.39251,
	beq	.L349	@,
	cmp	r5, #1	@ D.39251,
	bne	.L359	@,
	ldr	r5, [r3, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L333:
	mov	r5, #1	@ i,
	cmp	ip, r5	@ interviewlistsize, i
	add	r4, r3, #672	@ ivtmp.1545, fs_interviewlist,
	bls	.L325	@,
	cmp	r7, #0	@ tmp162,
	beq	.L330	@,
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L337	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.39251, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.39251,
	beq	.L354	@,
	cmp	r3, r5	@ D.39251,
	bne	.L360	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L337:
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1545, ivtmp.1545,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
.L325:
	mov	r0, #0	@ D.39255,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L362:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L353	@,
.L326:
	add	r4, r4, #672	@ ivtmp.1545, ivtmp.1545,
	add	r5, r5, #1	@ tmp163, i,
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	mov	r7, r4	@ tmp164, ivtmp.1545
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L342	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.39251, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.39251,
	beq	.L356	@,
	cmp	r3, #1	@ D.39251,
	bne	.L361	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	beq	.L352	@,
.L342:
	add	r5, r5, #1	@ i, tmp163,
	add	r4, r7, #672	@ ivtmp.1545, tmp164,
	cmp	ip, r5	@ interviewlistsize, i
	bls	.L325	@,
.L330:
	ldr	r3, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r3, r1	@ <variable>.view_id, targetViewID
	bne	.L326	@,
	ldrb	r3, [r0, r6]	@ zero_extendqisi2	@ D.39251, <variable>.CurrPic.structure
	cmp	r3, #0	@ D.39251,
	beq	.L362	@,
	cmp	r3, #1	@ D.39251,
	bne	.L329	@,
	ldr	r3, [r4, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.top_field.MVC_DecPOC, currPOC
	bne	.L326	@,
.L352:
	add	r0, r4, #504	@ D.39255, ivtmp.1545,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L356:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L342	@,
.L353:
	add	r0, r4, #464	@ D.39255, ivtmp.1545,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L329:
	cmp	r3, #2	@ D.39251,
	bne	.L326	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L326	@,
.L351:
	add	r0, r4, #544	@ D.39255, ivtmp.1545,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L361:
	cmp	r3, #2	@ D.39251,
	bne	.L342	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L342	@,
	add	r0, r4, #544	@ D.39255, ivtmp.1545,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L349:
	ldr	r5, [r3, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r5, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	bne	.L333	@,
	b	.L353	@
.L354:
	ldr	r3, [r4, #484]	@ <variable>.frame.MVC_DecPOC, <variable>.frame.MVC_DecPOC
	cmp	r3, r2	@ <variable>.frame.MVC_DecPOC, currPOC
	beq	.L353	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1545, ivtmp.1545,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
	b	.L325	@
.L359:
	cmp	r5, #2	@ D.39251,
	bne	.L333	@,
	ldr	r5, [r3, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r5, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	bne	.L333	@,
	b	.L351	@
.L360:
	cmp	r3, #2	@ D.39251,
	bne	.L337	@,
	ldr	r3, [r4, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r3, r2	@ <variable>.bottom_field.MVC_DecPOC, currPOC
	beq	.L351	@,
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #672	@ ivtmp.1545, ivtmp.1545,
	cmp	ip, r5	@ interviewlistsize, i
	bhi	.L330	@,
	b	.L325	@
	.fnend
	.size	mvc_get_inter_view_pic, .-mvc_get_inter_view_pic
	.align	2
	.global	mvc_reorder_interview
	.type	mvc_reorder_interview, %function
mvc_reorder_interview:
	.fnstart
.LFB1574:
	@ args = 8, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmib	fp, {r7, r8}	@ phole ldm
	mov	r6, r3	@ targetViewID, targetViewID
	mov	r4, r1	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1
	mov	r5, r2	@ refIdxLX, refIdxLX
	mov	r1, r3	@, targetViewID
	mov	r2, r7	@, currpoc
	mov	r3, r8	@, listidx
	mov	sl, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_get_inter_view_pic	@
	cmp	r0, #0	@ picLX
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldr	r3, [r5, #0]	@ D.39295,* refIdxLX
	add	ip, r4, #1	@ cIdx, num_ref_idx_lX_active_minus1,
	add	sl, sl, #11141120	@ tmp150, pMvcCtx,
	add	r8, r8, r8, asl #5	@, tmp154, listidx, listidx,
	cmp	ip, r3	@ cIdx, D.39295
	add	sl, sl, #27904	@ tmp150, tmp150,
	add	r8, sl, r8, asl #2	@, list, tmp150, tmp154,
	bls	.L365	@,
	add	r1, r8, r4, asl #2	@, ivtmp.1592, list, num_ref_idx_lX_active_minus1,
	add	r2, r8, ip, asl #2	@, ivtmp.1594, list, cIdx,
.L366:
	ldr	r3, [r1], #-4	@ tmp158,
	sub	sl, r4, #1	@ num_ref_idx_lX_active_minus1.1596, num_ref_idx_lX_active_minus1,
	str	r3, [r2], #-4	@ tmp158,
	ldr	r3, [r5, #0]	@ D.39295,* refIdxLX
	cmp	r3, r4	@ D.39295, num_ref_idx_lX_active_minus1
	mov	r4, sl	@ num_ref_idx_lX_active_minus1, num_ref_idx_lX_active_minus1.1596
	bcc	.L366	@,
.L365:
	add	r1, r3, #1	@ cIdx.1595, D.39295,
	str	r0, [r8, r3, asl #2]	@ picLX,* list
	cmp	ip, r1	@ cIdx, cIdx.1595
	str	r1, [r5, #0]	@ cIdx.1595,* refIdxLX
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r2, r8, r1, asl #2	@, ivtmp.1585, list, cIdx.1595,
	rsb	r0, r1, ip	@ tmp163, cIdx.1595, cIdx
	and	r4, r0, #1	@ tmp164, tmp163,
	mov	r3, r1	@ nIdx, cIdx.1595
	ldr	r0, [r2, #0]	@ D.39301,* ivtmp.1585
	cmp	r0, #0	@ D.39301,
	beq	.L372	@,
	ldr	lr, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r5, r6	@ <variable>.view_id, targetViewID
	beq	.L386	@,
.L372:
	add	r3, r1, #1	@ nIdx, cIdx.1595,
	str	r0, [r8, r1, asl #2]	@ D.39301,* list
.L373:
	add	r1, r1, #1	@ cIdx.1595, cIdx.1595,
	add	r2, r2, #4	@ ivtmp.1585, ivtmp.1585,
	cmp	ip, r1	@ cIdx, cIdx.1595
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp164,
	beq	.L369	@,
	ldr	r0, [r2, #0]	@ D.39301,* ivtmp.1585
	cmp	r0, #0	@ D.39301,
	beq	.L375	@,
	ldr	r4, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r4, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r4, r6	@ <variable>.view_id, targetViewID
	beq	.L387	@,
.L375:
	str	r0, [r8, r3, asl #2]	@ D.39301,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L376:
	add	r1, r1, #1	@ cIdx.1595, cIdx.1595,
	add	r2, r2, #4	@ ivtmp.1585, ivtmp.1585,
	cmp	ip, r1	@ cIdx, cIdx.1595
	ldmccfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	ldr	r0, [r2, #0]	@ D.39301,* ivtmp.1585
	add	r1, r1, #1	@ tmp165, cIdx.1595,
	add	r4, r2, #4	@ tmp166, ivtmp.1585,
	cmp	r0, #0	@ D.39301,
	bne	.L388	@,
.L367:
	str	r0, [r8, r3, asl #2]	@ D.39301,* list
	add	r3, r3, #1	@ nIdx, nIdx,
.L368:
	ldr	r2, [r2, #4]	@ D.39301,
	cmp	r2, #0	@ D.39301,
	beq	.L379	@,
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [lr, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r0, r6	@ <variable>.view_id, targetViewID
	beq	.L389	@,
.L379:
	add	r1, r1, #1	@ cIdx.1595, tmp165,
	str	r2, [r8, r3, asl #2]	@ D.39301,* list
	cmp	ip, r1	@ cIdx, cIdx.1595
	add	r3, r3, #1	@ nIdx, nIdx,
	add	r2, r4, #4	@ ivtmp.1585, tmp166,
	bcc	.L390	@,
.L369:
	ldr	r0, [r2, #0]	@ D.39301,* ivtmp.1585
	add	r1, r1, #1	@ tmp165, cIdx.1595,
	add	r4, r2, #4	@ tmp166, ivtmp.1585,
	cmp	r0, #0	@ D.39301,
	beq	.L367	@,
.L388:
	ldr	r5, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [r5, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r5, r6	@ <variable>.view_id, targetViewID
	bne	.L367	@,
	ldr	r5, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r5, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L367	@,
	b	.L368	@
.L389:
	ldr	r0, [r2, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r0, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L379	@,
	add	r1, r1, #1	@ cIdx.1595, tmp165,
	add	r2, r4, #4	@ ivtmp.1585, tmp166,
	cmp	ip, r1	@ cIdx, cIdx.1595
	bcs	.L369	@,
.L390:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L387:
	ldr	r4, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r4, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L375	@,
	b	.L376	@
.L386:
	ldr	r5, [r0, #20]	@ <variable>.MVC_DecPOC, <variable>.MVC_DecPOC
	cmp	r5, r7	@ <variable>.MVC_DecPOC, currpoc
	bne	.L372	@,
	b	.L373	@
	.fnend
	.size	mvc_reorder_interview, .-mvc_reorder_interview
	.align	2
	.global	MVC_ReorderRefPiclist
	.type	MVC_ReorderRefPiclist, %function
MVC_ReorderRefPiclist:
	.fnstart
.LFB1575:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #84
	sub	sp, sp, #84	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11162625	@ tmp169,
	movt	r3, #:upper16:11162625	@ tmp169,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ listidx, listidx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	str	r2, [fp, #-60]	@ num_ref_idx_lX_active_minus1, %sfp
	mov	r2, #0	@ tmp168,
	cmp	r3, r2	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [fp, #-48]	@ tmp168, refIdxLX
	beq	.L393	@,
	movw	r0, #:lower16:11162626	@ tmp171,
	movt	r0, #:upper16:11162626	@ tmp171,
	ldrb	r3, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r3, r2	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r3, #2	@ structure,
	moveq	r3, #1	@ structure,
.L393:
	cmp	r8, #1	@ listidx,
	bls	.L441	@,
.L424:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L441:
	cmp	r8, #0	@ listidx,
	beq	.L442	@,
	movw	r2, #:lower16:11161972	@,
	movt	r2, #:upper16:11161972	@,
	str	r2, [fp, #-96]	@, %sfp
	movw	r2, #:lower16:11162492	@,
	movt	r2, #:upper16:11162492	@,
	movw	r0, #:lower16:11161708	@,
	movw	r1, #:lower16:11162232	@,
	movt	r0, #:upper16:11161708	@,
	movt	r1, #:upper16:11162232	@,
	str	r0, [fp, #-56]	@, %sfp
	str	r1, [fp, #-100]	@, %sfp
.L439:
	ldr	r1, [fp, #-56]	@, %sfp
	cmp	r3, #0	@ structure,
	str	r2, [fp, #-64]	@, %sfp
	add	r0, r5, r1	@, pMvcCtx,
	ldr	r2, [fp, #-96]	@, %sfp
	str	r0, [fp, #-56]	@, %sfp
	ldr	r0, [fp, #-100]	@, %sfp
	add	r1, r5, r2	@, pMvcCtx,
	str	r1, [fp, #-96]	@, %sfp
	add	r2, r5, r0	@, pMvcCtx,
	ldr	r1, [fp, #-64]	@, %sfp
	str	r2, [fp, #-100]	@, %sfp
	movw	r2, #:lower16:11152036	@ tmp182,
	movt	r2, #:upper16:11152036	@ tmp182,
	add	r0, r5, r1	@, pMvcCtx,
	str	r0, [fp, #-64]	@, %sfp
	ldr	r1, [r5, r2]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldr	r0, [r1, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	mov	r1, #1	@ tmp185,
	add	r3, r0, #4	@ tmp183, <variable>.log2_max_frame_num_minus4,
	movw	r0, #:lower16:11162644	@ tmp186,
	mov	r2, r1, asl r3	@ MaxFrameNum, tmp185,
	movt	r0, #:upper16:11162644	@ tmp186,
	ldr	r1, [fp, #-60]	@, %sfp
	movne	r2, r2, asl #1	@, MaxFrameNum,
	strne	r2, [fp, #-104]	@, %sfp
	ldrne	r0, [r5, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	streq	r2, [fp, #-104]	@ MaxFrameNum, %sfp
	ldreq	r0, [r5, r0]	@, <variable>.CurrSlice.frame_num
	movne	r0, r0, asl #1	@ tmp188, <variable>.CurrSlice.frame_num,
	addne	r0, r0, #1	@, tmp188,
	adds	r3, r1, #2	@,,
	str	r0, [fp, #-108]	@, %sfp
	str	r3, [fp, #-68]	@, %sfp
	beq	.L424	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r3, [r2, #0]	@ D.39364,
	cmp	r3, #3	@ D.39364,
	beq	.L424	@,
	ldr	r4, [fp, #-108]	@, %sfp
	mov	r2, #0	@ D.39362,
	movw	r1, #:lower16:10818512	@,
	movt	r1, #:upper16:10818512	@,
	movw	r9, #:lower16:11196660	@,
	add	r0, r5, r1	@, pMvcCtx,
	movt	r9, #:upper16:11196660	@,
	movw	r7, #:lower16:10818504	@,
	str	r9, [fp, #-80]	@, %sfp
	movt	r7, #:upper16:10818504	@,
	movw	r6, #:lower16:11164280	@,
	str	r7, [fp, #-112]	@, %sfp
	movt	r6, #:upper16:11164280	@,
	movw	lr, #:lower16:11164288	@,
	str	r6, [fp, #-88]	@, %sfp
	movt	lr, #:upper16:11164288	@,
	str	r4, [fp, #-92]	@, %sfp
	mov	r7, #1	@ init_flag,
	str	r0, [fp, #-72]	@, %sfp
	mov	r9, r2	@ picViewIdxLXPred, D.39362
	str	lr, [fp, #-84]	@, %sfp
	mov	r4, r2	@ CurrVOIdx, D.39362
	str	r2, [fp, #-76]	@ D.39362, %sfp
	mov	r6, r2	@ i, D.39362
	b	.L400	@
.L446:
	add	r3, r0, r7	@ tmp230, tmp252, picViewIdxLX
	movw	r2, #:lower16:2704632	@ tmp232,
	add	ip, r3, r4	@ tmp231, tmp230, CurrVOIdx
	movt	r2, #:upper16:2704632	@ tmp232,
	add	r9, ip, r2	@ tmp232, tmp231, tmp232
	add	r0, r5, r9, asl #2	@, tmp236, pMvcCtx, tmp232,
	ldr	r3, [r0, #4]	@ targetViewId, <variable>.CurrSUBSPS.anchor_ref
.L422:
	ldr	r1, [fp, #-80]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	sub	r2, fp, #48	@,,
	mov	r9, r7	@ picViewIdxLXPred, picViewIdxLX
	mov	r7, #0	@ init_flag,
	ldr	ip, [r5, r1]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r1, [fp, #-60]	@, %sfp
	str	r8, [sp, #4]	@ listidx,
	str	ip, [sp, #0]	@ <variable>.CurrPic.thispoc,
	bl	mvc_reorder_interview	@
.L406:
	ldr	r3, [fp, #-68]	@, %sfp
	add	r6, r6, #1	@ i, i,
	cmp	r3, r6	@, i
	bls	.L424	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r3, [r2, r6, asl #2]	@ D.39364,
	mov	r2, r6, asl #2	@ D.39362, i,
	cmp	r3, #3	@ D.39364,
	beq	.L424	@,
.L400:
	cmp	r3, #1	@ D.39364,
	bls	.L443	@,
	cmp	r3, #2	@ D.39364,
	beq	.L444	@,
	cmp	r7, #1	@ init_flag,
	beq	.L408	@,
	ldr	ip, [fp, #-84]	@, %sfp
	mov	r7, r9	@ prephitmp.1613, picViewIdxLXPred
	mov	r0, r8, asl #1	@ tmp252, listidx,
	ldr	r9, [r5, ip]	@ D.39402, <variable>.CurrSlice.anchor_pic_flag
.L409:
	cmp	r3, #4	@ D.39364,
	beq	.L445	@,
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	ip, [fp, #-76]	@, %sfp
	ldr	r1, [lr, r2]	@ tmp228,* D.39362
	add	r3, r1, #1	@ tmp227, tmp228,
	add	r7, r3, r7	@ picViewIdxLX, tmp227, prephitmp.1613
	cmp	ip, r7	@, picViewIdxLX
	rsble	r7, ip, r7	@ picViewIdxLX,, picViewIdxLX
.L420:
	cmp	r9, #0	@ D.39402,
	bne	.L446	@,
	add	r2, r0, r7	@ tmp239, tmp252, picViewIdxLX
	add	r9, r2, r4	@ tmp240, tmp239, CurrVOIdx
	add	r0, r9, #2703360	@ tmp241, tmp240,
	add	lr, r0, #1280	@ tmp241, tmp241,
	add	r1, r5, lr, asl #2	@, tmp245, pMvcCtx, tmp241,
	ldr	r3, [r1, #4]	@ targetViewId, <variable>.CurrSUBSPS.non_anchor_ref
	b	.L422	@
.L442:
	movw	r0, #:lower16:11161576	@,
	movw	r2, #:lower16:11161840	@,
	movt	r0, #:upper16:11161576	@,
	movt	r2, #:upper16:11161840	@,
	movw	r1, #:lower16:11162104	@,
	str	r2, [fp, #-96]	@, %sfp
	movt	r1, #:upper16:11162104	@,
	movw	r2, #:lower16:11162360	@,
	str	r0, [fp, #-56]	@, %sfp
	movt	r2, #:upper16:11162360	@,
	str	r1, [fp, #-100]	@, %sfp
	b	.L439	@
.L443:
	cmp	r3, #0	@ D.39364,
	bne	.L402	@,
	ldr	r3, [fp, #-96]	@, %sfp
	ldr	lr, [fp, #-92]	@, %sfp
	ldr	ip, [r3, r2]	@ tmp191,* D.39362
	mvn	sl, ip	@ tmp190, tmp191
	adds	sl, sl, lr	@ picNumLXNoWrap, tmp190,
	bmi	.L447	@,
.L403:
	ldr	r3, [fp, #-108]	@, %sfp
	mov	r1, r8	@, listidx
	ldr	r0, [fp, #-88]	@, %sfp
	cmp	r3, sl	@, picNumLXNoWrap
	ldr	r2, [fp, #-60]	@, %sfp
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movge	r3, sl	@ picNumLX, picNumLXNoWrap
	ldrlt	lr, [fp, #-104]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	rsblt	r3, lr, sl	@ picNumLX,, picNumLXNoWrap
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	sub	lr, fp, #48	@,,
	str	lr, [sp, #0]	@,
	bl	MVC_ReorderSTList	@
	str	sl, [fp, #-92]	@ picNumLXNoWrap, %sfp
	b	.L406	@
.L445:
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	r1, [lr, r2]	@ tmp226,* D.39362
	mvn	r3, r1	@ tmp225, tmp226
	adds	r7, r7, r3	@ picViewIdxLX, prephitmp.1613, tmp225
	ldrmi	r2, [fp, #-76]	@, %sfp
	addmi	r7, r7, r2	@ picViewIdxLX, picViewIdxLX,
	b	.L420	@
.L408:
	ldr	sl, [fp, #-112]	@, %sfp
	ldr	r9, [fp, #-88]	@, %sfp
	ldr	r4, [r5, sl]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	r0, [r5, r9]	@ temp.1650, <variable>.CurrSlice.view_id
	adds	sl, r4, #1	@ D.39400, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L410	@,
	movw	r1, #:lower16:10818508	@ tmp205,
	movt	r1, #:upper16:10818508	@ tmp205,
	ldr	lr, [r5, r1]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r0, lr	@ temp.1650, <variable>.CurrSUBSPS.view_id
	beq	.L411	@,
	ldr	lr, [fp, #-72]	@ ivtmp.1635, %sfp
	tst	sl, #1	@ D.39400,
	mov	r4, #0	@ CurrVOIdx,
	mov	ip, lr	@ ivtmp.1653, ivtmp.1635
	bne	.L412	@,
	cmp	r7, sl	@ CurrVOIdx, D.39400
	mov	r4, r7	@ CurrVOIdx, init_flag
	bcs	.L413	@,
	ldr	ip, [fp, #-72]	@ ivtmp.1653, %sfp
	ldr	r9, [ip], #4	@ temp.1654, <variable>.CurrSUBSPS.view_id
	cmp	r0, r9	@ temp.1650, temp.1654
	bne	.L412	@,
	b	.L413	@
.L414:
	ldr	r7, [r1], #4	@ temp.1654, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1650, temp.1654
	beq	.L413	@,
	ldr	r7, [ip, #4]	@ temp.1654, <variable>.CurrSUBSPS.view_id
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	add	ip, r1, #4	@ ivtmp.1653, tmp270,
	cmp	r0, r7	@ temp.1650, temp.1654
	beq	.L413	@,
.L412:
	add	r4, r4, #1	@ CurrVOIdx, CurrVOIdx,
	mov	r1, ip	@ tmp270, ivtmp.1653
	cmp	r4, sl	@ CurrVOIdx, D.39400
	bcc	.L414	@,
.L413:
	ldr	r1, [fp, #-84]	@, %sfp
	tst	sl, #1	@ D.39400,
	ldr	r9, [r5, r1]	@ D.39402, <variable>.CurrSlice.anchor_pic_flag
	mov	r1, #0	@ VOIdx,
	bne	.L415	@,
	mov	r1, #1	@ VOIdx,
	cmp	r1, sl	@ VOIdx, D.39400
	bcs	.L416	@,
	ldr	lr, [fp, #-72]	@ ivtmp.1635, %sfp
	ldr	ip, [lr], #4	@ D.46228, <variable>.CurrSUBSPS.view_id
	cmp	r0, ip	@ temp.1650, D.46228
	bne	.L415	@,
	b	.L416	@
.L417:
	ldr	r7, [ip], #4	@ D.46228, <variable>.CurrSUBSPS.view_id
	cmp	r0, r7	@ temp.1650, D.46228
	beq	.L416	@,
	ldr	r7, [lr, #4]	@ D.46228, <variable>.CurrSUBSPS.view_id
	add	r1, r1, #1	@ VOIdx, VOIdx,
	add	lr, ip, #4	@ ivtmp.1635, tmp265,
	cmp	r0, r7	@ temp.1650, D.46228
	beq	.L416	@,
.L415:
	add	r1, r1, #1	@ VOIdx, VOIdx,
	mov	ip, lr	@ tmp265, ivtmp.1635
	cmp	r1, sl	@ VOIdx, D.39400
	bcc	.L417	@,
.L416:
	cmp	r9, #0	@ D.39402,
	mov	r0, r8, asl #1	@ tmp252, listidx,
	addne	r1, r0, r1	@ tmp210, tmp252, VOIdx
	addeq	r1, r0, r1	@ tmp218, tmp252, VOIdx
	movwne	ip, #:lower16:2704628	@ tmp211,
	movweq	ip, #:lower16:2704636	@ tmp219,
	movtne	ip, #:upper16:2704628	@ tmp211,
	movteq	ip, #:upper16:2704636	@ tmp219,
	add	ip, r1, ip	@ tmp219, tmp218, tmp219
	mvn	r7, #0	@ prephitmp.1613,
	add	lr, r5, ip, asl #2	@, tmp223, pMvcCtx, tmp219,
	ldr	ip, [lr, #4]	@,
	str	ip, [fp, #-76]	@, %sfp
	b	.L409	@
.L402:
	ldr	lr, [fp, #-96]	@, %sfp
	ldr	sl, [fp, #-92]	@, %sfp
	ldr	r1, [fp, #-104]	@, %sfp
	ldr	ip, [lr, r2]	@ tmp193,* D.39362
	add	r2, sl, #1	@ tmp192,,
	add	sl, r2, ip	@ picNumLXNoWrap, tmp192, tmp193
	cmp	r1, sl	@, picNumLXNoWrap
	rsble	sl, r1, sl	@ picNumLXNoWrap,, picNumLXNoWrap
	b	.L403	@
.L444:
	ldr	r1, [fp, #-88]	@, %sfp
	sub	lr, fp, #48	@,,
	ldr	r0, [fp, #-100]	@, %sfp
	ldr	ip, [r5, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	mov	r1, r8	@, listidx
	ldr	r3, [r0, r2]	@ tmp197,* D.39362
	mov	r0, r5	@, pMvcCtx
	ldr	r2, [fp, #-60]	@, %sfp
	str	lr, [sp, #0]	@,
	str	ip, [sp, #4]	@ <variable>.CurrSlice.view_id,
	bl	MVC_ReorderLTList	@
	b	.L406	@
.L447:
	ldr	r0, [fp, #-104]	@, %sfp
	add	sl, sl, r0	@ picNumLXNoWrap, picNumLXNoWrap,
	b	.L403	@
.L410:
	ldr	r7, [fp, #-84]	@, %sfp
	mov	r4, sl	@ CurrVOIdx, D.39400
	mov	r1, sl	@ VOIdx, CurrVOIdx
	ldr	r9, [r5, r7]	@ D.39402, <variable>.CurrSlice.anchor_pic_flag
	b	.L416	@
.L411:
	ldr	lr, [fp, #-84]	@, %sfp
	mov	r4, #0	@ CurrVOIdx,
	mov	r1, r4	@ VOIdx, CurrVOIdx
	ldr	r9, [r5, lr]	@ D.39402, <variable>.CurrSlice.anchor_pic_flag
	b	.L416	@
	.fnend
	.size	MVC_ReorderRefPiclist, .-MVC_ReorderRefPiclist
	.align	2
	.global	MVC_ReorderListX
	.type	MVC_ReorderListX, %function
MVC_ReorderListX:
	.fnstart
.LFB1576:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11162624	@ tmp134,
	movt	r1, #:upper16:11162624	@ tmp134,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmeqfd	sp, {r3, r4, fp, sp, pc}	@
	movw	ip, #:lower16:11161572	@ tmp136,
	movt	ip, #:upper16:11161572	@ tmp136,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r2, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l0,
	bne	.L455	@,
.L450:
	movw	r0, #:lower16:11162624	@ tmp144,
	movt	r0, #:upper16:11162624	@ tmp144,
	movw	ip, #:lower16:11162680	@ tmp141,
	movt	ip, #:upper16:11162680	@ tmp141,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movw	r3, #:lower16:11162668	@ tmp140,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movt	r3, #:upper16:11162668	@ tmp140,
	cmp	r1, #1	@ <variable>.CurrSlice.slice_type,
	add	r0, r2, #1	@ tmp143, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	str	r0, [r4, r3]	@ tmp143, <variable>.CurrSlice.listXsize
	ldmnefd	sp, {r3, r4, fp, sp, pc}	@
	movw	r2, #:lower16:11161573	@ tmp146,
	movt	r2, #:upper16:11161573	@ tmp146,
	ldrb	r3, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r3, #0	@ <variable>.CurrReorder.ref_pic_list_reordering_flag_l1,
	bne	.L456	@,
.L451:
	movw	r3, #:lower16:11162684	@ tmp151,
	movt	r3, #:upper16:11162684	@ tmp151,
	movw	ip, #:lower16:11162672	@ tmp150,
	movt	ip, #:upper16:11162672	@ tmp150,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r1, r0, #1	@ tmp153, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	str	r1, [r4, ip]	@ tmp153, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L455:
	movw	lr, #:lower16:11162680	@ tmp138,
	movt	lr, #:upper16:11162680	@ tmp138,
	mov	r1, #0	@,
	ldr	r2, [r0, lr]	@, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L450	@
.L456:
	movw	lr, #:lower16:11162684	@ tmp148,
	movt	lr, #:upper16:11162684	@ tmp148,
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [r4, lr]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	MVC_ReorderRefPiclist	@
	b	.L451	@
	.fnend
	.size	MVC_ReorderListX, .-MVC_ReorderListX
	.align	2
	.global	MVC_IsSTRefFlg
	.type	MVC_IsSTRefFlg, %function
MVC_IsSTRefFlg:
	.fnstart
.LFB1577:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #65536	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_IsSTRefFlg, .-MVC_IsSTRefFlg
	.align	2
	.global	MVC_IsLTRefFlg
	.type	MVC_IsLTRefFlg, %function
MVC_IsLTRefFlg:
	.fnstart
.LFB1578:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #0]	@ tmp138,* s
	bic	r1, r2, #-16777216	@ tmp136, tmp138,
	bic	r0, r1, #255	@ tmp136, tmp136,
	cmp	r0, #256	@ tmp136,
	movne	r0, #0	@,
	moveq	r0, #1	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_IsLTRefFlg, .-MVC_IsLTRefFlg
	.align	2
	.global	MVC_compare_pic_by_pic_num_desc
	.type	MVC_compare_pic_by_pic_num_desc, %function
MVC_compare_pic_by_pic_num_desc:
	.fnstart
.LFB1579:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #12]	@ D.39466, <variable>.pic_num
	ldr	r3, [r1, #12]	@ D.39469, <variable>.pic_num
	cmp	r2, r3	@ D.39466, D.39469
	movlt	r0, #1	@ D.39472,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.39472,
	mvngt	r0, #0	@ D.39472,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_pic_num_desc, .-MVC_compare_pic_by_pic_num_desc
	.align	2
	.global	MVC_compare_pic_by_lt_pic_num_asc
	.type	MVC_compare_pic_by_lt_pic_num_asc, %function
MVC_compare_pic_by_lt_pic_num_asc:
	.fnstart
.LFB1580:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #8]	@ D.39481, <variable>.long_term_pic_num
	ldr	r3, [r1, #8]	@ D.39484, <variable>.long_term_pic_num
	cmp	r2, r3	@ D.39481, D.39484
	mvnlt	r0, #0	@ D.39487,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.39487
	movgt	r0, #1	@, D.39487
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_lt_pic_num_asc, .-MVC_compare_pic_by_lt_pic_num_asc
	.align	2
	.global	MVC_compare_fs_by_frame_num_desc
	.type	MVC_compare_fs_by_frame_num_desc, %function
MVC_compare_fs_by_frame_num_desc:
	.fnstart
.LFB1581:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #592]	@ D.39496, <variable>.frame_num_wrap
	ldr	r3, [r1, #592]	@ D.39499, <variable>.frame_num_wrap
	cmp	r2, r3	@ D.39496, D.39499
	movlt	r0, #1	@ D.39502,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.39502,
	mvngt	r0, #0	@ D.39502,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_frame_num_desc, .-MVC_compare_fs_by_frame_num_desc
	.align	2
	.global	MVC_compare_fs_by_lt_pic_idx_asc
	.type	MVC_compare_fs_by_lt_pic_idx_asc, %function
MVC_compare_fs_by_lt_pic_idx_asc:
	.fnstart
.LFB1582:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #596]	@ D.39511, <variable>.long_term_frame_idx
	ldr	r3, [r1, #596]	@ D.39514, <variable>.long_term_frame_idx
	cmp	r2, r3	@ D.39511, D.39514
	mvncc	r0, #0	@ D.39517,
	ldmccfd	sp, {fp, sp, pc}	@
	movls	r0, #0	@, D.39517
	movhi	r0, #1	@, D.39517
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_lt_pic_idx_asc, .-MVC_compare_fs_by_lt_pic_idx_asc
	.align	2
	.global	MVC_compare_pic_by_poc_asc
	.type	MVC_compare_pic_by_poc_asc, %function
MVC_compare_pic_by_poc_asc:
	.fnstart
.LFB1583:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.39526, <variable>.poc
	ldr	r3, [r1, #16]	@ D.39529, <variable>.poc
	cmp	r2, r3	@ D.39526, D.39529
	mvnlt	r0, #0	@ D.39532,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.39532
	movgt	r0, #1	@, D.39532
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_poc_asc, .-MVC_compare_pic_by_poc_asc
	.align	2
	.global	MVC_compare_pic_by_poc_desc
	.type	MVC_compare_pic_by_poc_desc, %function
MVC_compare_pic_by_poc_desc:
	.fnstart
.LFB1584:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #16]	@ D.39541, <variable>.poc
	ldr	r3, [r1, #16]	@ D.39544, <variable>.poc
	cmp	r2, r3	@ D.39541, D.39544
	movlt	r0, #1	@ D.39547,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.39547,
	mvngt	r0, #0	@ D.39547,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_pic_by_poc_desc, .-MVC_compare_pic_by_poc_desc
	.align	2
	.global	MVC_compare_fs_by_poc_asc
	.type	MVC_compare_fs_by_poc_asc, %function
MVC_compare_fs_by_poc_asc:
	.fnstart
.LFB1585:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #600]	@ D.39556, <variable>.poc
	ldr	r3, [r1, #600]	@ D.39559, <variable>.poc
	cmp	r2, r3	@ D.39556, D.39559
	mvnlt	r0, #0	@ D.39562,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@, D.39562
	movgt	r0, #1	@, D.39562
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_poc_asc, .-MVC_compare_fs_by_poc_asc
	.align	2
	.global	MVC_compare_fs_by_poc_desc
	.type	MVC_compare_fs_by_poc_desc, %function
MVC_compare_fs_by_poc_desc:
	.fnstart
.LFB1586:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	ip, [r0, #0]	@ tmp139,* arg1
	ldr	r1, [r1, #0]	@ tmp140,* arg2
	ldr	r2, [ip, #600]	@ D.39571, <variable>.poc
	ldr	r3, [r1, #600]	@ D.39574, <variable>.poc
	cmp	r2, r3	@ D.39571, D.39574
	movlt	r0, #1	@ D.39577,
	ldmltfd	sp, {fp, sp, pc}	@
	movle	r0, #0	@ D.39577,
	mvngt	r0, #0	@ D.39577,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_compare_fs_by_poc_desc, .-MVC_compare_fs_by_poc_desc
	.align	2
	.global	MVC_GenPiclistfromFrmlist
	.type	MVC_GenPiclistfromFrmlist, %function
MVC_GenPiclistfromFrmlist:
	.fnstart
.LFB1587:
	@ args = 8, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #31	@ list_idx,
	movcc	r4, r2	@ list_idx.2039, list_idx
	movcs	r4, #31	@ list_idx.2039,
	ldr	r2, [fp, #8]	@ long_term, long_term
	movw	ip, #:lower16:MVC_IsSTRefFlg	@ tmp218,
	movt	ip, #:upper16:MVC_IsSTRefFlg	@ tmp218,
	movw	r5, #:lower16:MVC_IsLTRefFlg	@ tmp217,
	cmp	r2, #0	@ long_term,
	movt	r5, #:upper16:MVC_IsLTRefFlg	@ tmp217,
	mov	r6, r1	@ fs_list, fs_list
	str	r3, [fp, #-56]	@ list, %sfp
	moveq	r5, ip	@ is_ref, tmp218
	cmp	r0, #1	@ currStrcture,
	beq	.L579	@,
	cmp	r0, #2	@ currStrcture,
	bne	.L508	@,
	mov	r8, #0	@ top_idx.2017,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ bot_idx, top_idx.2017
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L558:
	cmp	r8, r4	@ top_idx.2017, list_idx.2039
	movcs	r2, #0	@,
	movcc	r2, #1	@,
	str	r2, [fp, #-52]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	sl, r4	@ bot_idx, list_idx.2039
	movcs	r3, #0	@, temp.2011
	movcc	r3, #1	@, temp.2011
	orrs	r1, r3, r1	@, temp.2011,
	beq	.L508	@,
	cmp	r3, #0	@ temp.2011,
	beq	.L513	@,
	ldr	ip, [fp, #-48]	@, %sfp
	mvn	r7, sl	@ tmp235, bot_idx
	add	r5, r7, r4	@ tmp234, tmp235, list_idx.2039
	and	r5, r5, #1	@ tmp236, tmp234,
	add	r7, ip, sl, asl #2	@, ivtmp.1998,, bot_idx,
	ldr	r0, [ip, sl, asl #2]	@ temp.2013,
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L580	@,
.L542:
	add	sl, sl, #1	@ bot_idx, bot_idx,
	add	r7, r7, #4	@ ivtmp.1998, ivtmp.1998,
	cmp	sl, r4	@ bot_idx, list_idx.2039
	bcs	.L513	@,
	cmp	r5, #0	@ tmp236,
	beq	.L512	@,
	ldr	r0, [r7, #0]	@ temp.2013,* ivtmp.1998
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L581	@,
.L544:
	add	sl, sl, #1	@ bot_idx, bot_idx,
	add	r7, r7, #4	@ ivtmp.1998, ivtmp.1998,
	cmp	sl, r4	@ bot_idx, list_idx.2039
	bcc	.L512	@,
	b	.L513	@
.L510:
	add	r7, r7, #4	@ ivtmp.1998, ivtmp.1998,
	add	sl, sl, #1	@ bot_idx, bot_idx,
	ldr	r0, [r7, #0]	@ temp.2013,* ivtmp.1998
	mov	r9, sl	@ tmp237, bot_idx
	mov	r5, r7	@ tmp238, ivtmp.1998
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	bne	.L582	@,
.L547:
	add	sl, r9, #1	@ bot_idx, tmp237,
	add	r7, r5, #4	@ ivtmp.1998, tmp238,
	cmp	sl, r4	@ bot_idx, list_idx.2039
	bcs	.L513	@,
.L512:
	ldr	r0, [r7, #0]	@ temp.2013,* ivtmp.1998
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	beq	.L510	@,
	add	r0, r0, #544	@, temp.2013,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L510	@,
.L566:
	ldr	r0, [fp, #4]	@, list_size
	add	sl, sl, #1	@ bot_idx, bot_idx,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	lr, [r7, #0]	@ tmp195,* ivtmp.1998
	ldr	r3, [r0, #0]	@ tmp194,
	add	r2, lr, #544	@ tmp196, tmp195,
	str	r2, [ip, r3, asl #2]	@ tmp196,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r1, [lr, #0]	@ tmp197,
	add	r0, r1, #1	@ tmp198, tmp197,
	str	r0, [lr, #0]	@ tmp198,
.L513:
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r1, #0	@,
	beq	.L558	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r5, r8	@ tmp230, top_idx.2017
	add	r7, r5, r4	@ tmp229, tmp230, list_idx.2039
	and	r7, r7, #1	@ tmp231, tmp229,
	add	r5, r3, r8, asl #2	@, ivtmp.1993,, top_idx.2017,
	ldr	r0, [r3, r8, asl #2]	@ temp.2027,
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L583	@,
.L535:
	add	r8, r8, #1	@ top_idx.2017, top_idx.2017,
	add	r5, r5, #4	@ ivtmp.1993, ivtmp.1993,
	cmp	r8, r4	@ top_idx.2017, list_idx.2039
	bcs	.L558	@,
	cmp	r7, #0	@ tmp231,
	beq	.L515	@,
	ldr	r0, [r5, #0]	@ temp.2027,* ivtmp.1993
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	bne	.L584	@,
.L537:
	add	r8, r8, #1	@ top_idx.2017, top_idx.2017,
	add	r5, r5, #4	@ ivtmp.1993, ivtmp.1993,
	cmp	r8, r4	@ top_idx.2017, list_idx.2039
	bcc	.L515	@,
	b	.L558	@
.L514:
	add	r5, r5, #4	@ ivtmp.1993, ivtmp.1993,
	add	r8, r8, #1	@ top_idx.2017, top_idx.2017,
	ldr	r0, [r5, #0]	@ temp.2027,* ivtmp.1993
	mov	r9, r8	@ tmp232, top_idx.2017
	mov	r7, r5	@ tmp233, ivtmp.1993
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L585	@,
.L540:
	add	r8, r9, #1	@ top_idx.2017, tmp232,
	add	r5, r7, #4	@ ivtmp.1993, tmp233,
	cmp	r8, r4	@ top_idx.2017, list_idx.2039
	bcs	.L558	@,
.L515:
	ldr	r0, [r5, #0]	@ temp.2027,* ivtmp.1993
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #1	@ <variable>.is_used,
	beq	.L514	@,
	add	r0, r0, #504	@, temp.2027,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L514	@,
.L565:
	ldr	r0, [fp, #4]	@, list_size
	add	r8, r8, #1	@ top_idx.2017, top_idx.2017,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp204,* ivtmp.1993
	ldr	r3, [r0, #0]	@ tmp203,
	add	r2, lr, #504	@ tmp205, tmp204,
	str	r2, [r1, r3, asl #2]	@ tmp205,
	ldr	lr, [fp, #4]	@, list_size
	ldr	ip, [lr, #0]	@ tmp206,
	add	r0, ip, #1	@ tmp207, tmp206,
	str	r0, [lr, #0]	@ tmp207,
	b	.L558	@
.L508:
	mov	r0, #0	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L585:
	add	r0, r0, #504	@, temp.2027,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L540	@,
	b	.L565	@
.L582:
	add	r0, r0, #544	@, temp.2013,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L547	@,
	b	.L566	@
.L580:
	add	r0, r0, #544	@, temp.2013,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L542	@,
	b	.L566	@
.L583:
	add	r0, r0, #504	@, temp.2027,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L535	@,
	b	.L565	@
.L584:
	add	r0, r0, #504	@, temp.2027,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L537	@,
	b	.L565	@
.L581:
	add	r0, r0, #544	@, temp.2013,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L544	@,
	b	.L566	@
.L579:
	mov	r8, #0	@ top_idx,
	mov	r6, r5	@ is_ref, is_ref
	mov	sl, r8	@ bot_idx.2022, top_idx
	str	r1, [fp, #-48]	@ fs_list, %sfp
.L553:
	cmp	sl, r4	@ bot_idx.2022, list_idx.2039
	movcs	r1, #0	@,
	movcc	r1, #1	@,
	cmp	r8, r4	@ top_idx, list_idx.2039
	movcs	r3, #0	@, D.39646
	movcc	r3, #1	@, D.39646
	str	r1, [fp, #-52]	@, %sfp
	orrs	r1, r1, r3	@,, D.39646
	beq	.L508	@,
	cmp	r3, #0	@ D.39646,
	beq	.L505	@,
	ldr	r3, [fp, #-48]	@, %sfp
	mvn	r7, r8	@ tmp225, top_idx
	add	r5, r7, r4	@ tmp224, tmp225, list_idx.2039
	and	r5, r5, #1	@ tmp226, tmp224,
	add	r7, r3, r8, asl #2	@, ivtmp.1988,, top_idx,
	ldr	r0, [r3, r8, asl #2]	@ D.39619,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #1	@ <variable>.is_used,
	bne	.L586	@,
.L528:
	add	r8, r8, #1	@ top_idx, top_idx,
	add	r7, r7, #4	@ ivtmp.1988, ivtmp.1988,
	cmp	r8, r4	@ top_idx, list_idx.2039
	bcs	.L505	@,
	cmp	r5, #0	@ tmp226,
	beq	.L504	@,
	ldr	r0, [r7, #0]	@ D.39619,* ivtmp.1988
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L587	@,
.L530:
	add	r8, r8, #1	@ top_idx, top_idx,
	add	r7, r7, #4	@ ivtmp.1988, ivtmp.1988,
	cmp	r8, r4	@ top_idx, list_idx.2039
	bcc	.L504	@,
	b	.L505	@
.L502:
	add	r7, r7, #4	@ ivtmp.1988, ivtmp.1988,
	add	r8, r8, #1	@ top_idx, top_idx,
	ldr	r0, [r7, #0]	@ D.39619,* ivtmp.1988
	mov	r9, r8	@ tmp228, top_idx
	mov	r5, r7	@ tmp227, ivtmp.1988
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #1	@ <variable>.is_used,
	bne	.L588	@,
.L533:
	add	r8, r9, #1	@ top_idx, tmp228,
	add	r7, r5, #4	@ ivtmp.1988, tmp227,
	cmp	r8, r4	@ top_idx, list_idx.2039
	bcs	.L505	@,
.L504:
	ldr	r0, [r7, #0]	@ D.39619,* ivtmp.1988
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #1	@ <variable>.is_used,
	beq	.L502	@,
	add	r0, r0, #504	@, D.39619,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L502	@,
.L564:
	ldr	r1, [fp, #4]	@, list_size
	add	r8, r8, #1	@ top_idx, top_idx,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r7, #0]	@ tmp170,* ivtmp.1988
	ldr	r3, [r1, #0]	@ tmp169,
	add	r2, r0, #504	@ tmp171, tmp170,
	str	r2, [ip, r3, asl #2]	@ tmp171,
	ldr	r0, [fp, #4]	@, list_size
	ldr	lr, [r0, #0]	@ tmp172,
	add	r1, lr, #1	@ tmp173, tmp172,
	str	r1, [r0, #0]	@ tmp173,
.L505:
	ldr	ip, [fp, #-52]	@, %sfp
	cmp	ip, #0	@,
	beq	.L553	@,
	ldr	r1, [fp, #-48]	@, %sfp
	mvn	r5, sl	@ tmp220, bot_idx.2022
	add	r7, r5, r4	@ tmp219, tmp220, list_idx.2039
	and	r7, r7, #1	@ tmp221, tmp219,
	add	r5, r1, sl, asl #2	@, ivtmp.1983,, bot_idx.2022,
	ldr	r0, [r1, sl, asl #2]	@ D.39636,
	ldrb	r3, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r3, #2	@ <variable>.is_used,
	bne	.L589	@,
.L521:
	add	sl, sl, #1	@ bot_idx.2022, bot_idx.2022,
	add	r5, r5, #4	@ ivtmp.1983, ivtmp.1983,
	cmp	sl, r4	@ bot_idx.2022, list_idx.2039
	bcs	.L553	@,
	cmp	r7, #0	@ tmp221,
	beq	.L507	@,
	ldr	r0, [r5, #0]	@ D.39636,* ivtmp.1983
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r1, #2	@ <variable>.is_used,
	bne	.L590	@,
.L523:
	add	sl, sl, #1	@ bot_idx.2022, bot_idx.2022,
	add	r5, r5, #4	@ ivtmp.1983, ivtmp.1983,
	cmp	sl, r4	@ bot_idx.2022, list_idx.2039
	bcc	.L507	@,
	b	.L553	@
.L506:
	add	r5, r5, #4	@ ivtmp.1983, ivtmp.1983,
	add	sl, sl, #1	@ bot_idx.2022, bot_idx.2022,
	ldr	r0, [r5, #0]	@ D.39636,* ivtmp.1983
	mov	r9, sl	@ tmp222, bot_idx.2022
	mov	r7, r5	@ tmp223, ivtmp.1983
	ldrb	r2, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	r2, #2	@ <variable>.is_used,
	bne	.L591	@,
.L526:
	add	sl, r9, #1	@ bot_idx.2022, tmp222,
	add	r5, r7, #4	@ ivtmp.1983, tmp223,
	cmp	sl, r4	@ bot_idx.2022, list_idx.2039
	bcs	.L553	@,
.L507:
	ldr	r0, [r5, #0]	@ D.39636,* ivtmp.1983
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	tst	ip, #2	@ <variable>.is_used,
	beq	.L506	@,
	add	r0, r0, #544	@, D.39636,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L506	@,
.L563:
	ldr	r0, [fp, #4]	@, list_size
	add	sl, sl, #1	@ bot_idx.2022, bot_idx.2022,
	ldr	r1, [fp, #-56]	@, %sfp
	ldr	lr, [r5, #0]	@ tmp179,* ivtmp.1983
	ldr	r3, [r0, #0]	@ tmp178,
	add	ip, lr, #544	@ tmp180, tmp179,
	str	ip, [r1, r3, asl #2]	@ tmp180,
	ldr	lr, [fp, #4]	@, list_size
	ldr	r2, [lr, #0]	@ tmp181,
	add	r0, r2, #1	@ tmp182, tmp181,
	str	r0, [lr, #0]	@ tmp182,
	b	.L553	@
.L591:
	add	r0, r0, #544	@, D.39636,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L526	@,
	b	.L563	@
.L588:
	add	r0, r0, #504	@, D.39619,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L533	@,
	b	.L564	@
.L589:
	add	r0, r0, #544	@, D.39636,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L521	@,
	b	.L563	@
.L586:
	add	r0, r0, #504	@, D.39619,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L528	@,
	b	.L564	@
.L587:
	add	r0, r0, #504	@, D.39619,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L530	@,
	b	.L564	@
.L590:
	add	r0, r0, #544	@, D.39636,
	blx	r6	@ is_ref
	cmp	r0, #0	@,
	beq	.L523	@,
	b	.L563	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist, .-MVC_GenPiclistfromFrmlist
	.align	2
	.global	MVC_GetBaseViewId
	.type	MVC_GetBaseViewId, %function
MVC_GetBaseViewId:
	.fnstart
.LFB1588:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r3, r0, #17408	@ ivtmp.2071, pMvcCtx,
	add	r3, r3, #188	@ ivtmp.2071, ivtmp.2071,
	mov	ip, #0	@ i,
	b	.L595	@
.L593:
	ldr	r3, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	ip, ip, #1	@ i, i,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r3, ip	@ tmp156, i
	beq	.L598	@,
	ldr	r1, [r4, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L601	@,
.L598:
	add	ip, r3, #1	@ i, tmp156,
	movw	r3, #:lower16:337528	@ ivtmp.2071,
	cmp	ip, #32	@ i,
	movt	r3, #:upper16:337528	@ ivtmp.2071,
	add	r3, r2, r3	@ ivtmp.2071, ivtmp.2071, ivtmp.2071
	beq	.L603	@,
.L595:
	movw	r1, #:lower16:333528	@ tmp144,
	movw	r2, #:lower16:337528	@ ivtmp.2071,
	movt	r1, #:upper16:333528	@ tmp144,
	movt	r2, #:upper16:337528	@ ivtmp.2071,
	add	r4, r3, #667648	@ tmp159, ivtmp.2071,
	add	r1, r3, r1	@ tmp144, ivtmp.2071, tmp144
	add	r2, r3, r2	@ ivtmp.2071, ivtmp.2071, ivtmp.2071
	ldr	r3, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r4, r4, #3408	@ tmp159, tmp159,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	beq	.L593	@,
	ldr	r3, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L593	@,
.L601:
	movw	r1, #:lower16:337528	@ tmp149,
	movt	r1, #:upper16:337528	@ tmp149,
	mla	r2, r1, ip, r0	@ tmp150, tmp149, i, pMvcCtx
	movw	ip, #17600	@ tmp147,
	ldr	r0, [r2, ip]	@ baseviewid, <variable>.view_id
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L603:
	mvn	r0, #0	@ baseviewid,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_GetBaseViewId, .-MVC_GetBaseViewId
	.align	2
	.global	MVC_GetVOIdx
	.type	MVC_GetVOIdx, %function
MVC_GetVOIdx:
	.fnstart
.LFB1589:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ num_views
	mov	r3, r0	@ ref_view_id, ref_view_id
	beq	.L605	@,
	ldr	r0, [r0, #0]	@ tmp139,* ref_view_id
	cmp	r0, r2	@ tmp139, CurrViewId
	beq	.L605	@,
	tst	r1, #1	@ num_views,
	mov	r0, #0	@ i,
	bne	.L606	@,
	ldr	ip, [r3, #4]	@ tmp148,
	mov	r0, #1	@ i,
	cmp	ip, r2	@ tmp148, CurrViewId
	ldmeqfd	sp, {fp, sp, pc}	@
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcs	.L615	@,
.L608:
	ldr	ip, [r3, r0, asl #2]	@ tmp141,* ref_view_id
	cmp	ip, r2	@ tmp141, CurrViewId
	beq	.L616	@,
	add	r0, r0, #1	@ i, i,
	ldr	ip, [r3, r0, asl #2]	@ tmp150,* ref_view_id
	cmp	ip, r2	@ tmp150, CurrViewId
	beq	.L617	@,
.L606:
	add	r0, r0, #1	@ i, i,
	cmp	r0, r1	@ i, num_views
	bcc	.L608	@,
.L615:
	ldmfd	sp, {fp, sp, pc}	@
.L616:
	ldmfd	sp, {fp, sp, pc}	@
.L617:
	ldmfd	sp, {fp, sp, pc}	@
.L605:
	mov	r0, #0	@ i,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetVOIdx, .-MVC_GetVOIdx
	.align	2
	.global	MVC_is_view_id_in_ref_view_list
	.type	MVC_is_view_id_in_ref_view_list, %function
MVC_is_view_id_in_ref_view_list:
	.fnstart
.LFB1590:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #0	@ num_ref_views
	beq	.L619	@,
	ldr	r3, [r1, #0]	@ tmp139,* ref_view_id
	cmp	r3, r0	@ tmp139, view_id
	beq	.L619	@,
	tst	r2, #1	@ num_ref_views,
	mov	ip, #0	@ i,
	bne	.L620	@,
	ldr	r4, [r1, #4]	@ tmp153,
	mov	ip, #1	@ i,
	mov	r3, ip	@ i.632, i
	cmp	r4, r0	@ tmp153, view_id
	bne	.L620	@,
.L621:
	cmp	r2, #0	@ num_ref_views,
	cmpne	r2, r3	@, num_ref_views, i.632
	movls	r0, #0	@,
	movhi	r0, #1	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L622:
	ldr	r4, [r1, r3, asl #2]	@ tmp141,* ref_view_id
	cmp	r4, r0	@ tmp141, view_id
	beq	.L621	@,
	ldr	r4, [r1, ip, asl #2]	@ tmp155,* ref_view_id
	mov	r3, ip	@ i.632, i
	cmp	r4, r0	@ tmp155, view_id
	beq	.L621	@,
.L620:
	add	r3, ip, #1	@ i.632, i,
	cmp	r2, r3	@ num_ref_views, i.632
	add	ip, r3, #1	@ i, i.632,
	bhi	.L622	@,
	cmp	r2, #0	@ num_ref_views,
	cmpne	r2, r3	@, num_ref_views, i.632
	movls	r0, #0	@,
	movhi	r0, #1	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L619:
	mov	r3, #0	@ i.632,
	b	.L621	@
	.fnend
	.size	MVC_is_view_id_in_ref_view_list, .-MVC_is_view_id_in_ref_view_list
	.align	2
	.global	MVC_GenPiclistfromFrmlist_Interview
	.type	MVC_GenPiclistfromFrmlist_Interview, %function
MVC_GenPiclistfromFrmlist_Interview:
	.fnstart
.LFB1591:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #1	@ currStrcture,
	ldr	ip, [fp, #4]	@ list_size, list_size
	beq	.L647	@,
	cmp	r0, #2	@ currStrcture,
	ldmnefd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r2, #0	@ list_idx,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	ldr	r4, [ip, #0]	@ prephitmp.2154,* list_size
	add	r5, r1, #544	@ tmp146, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r7, r2, #1	@ tmp153, list_idx,
	mov	r6, #1	@ i.2179,
	and	r7, r7, #1	@ tmp155, tmp153,
	str	r5, [r3, r4, asl #2]	@ tmp146,* list
	add	r4, r1, #672	@ ivtmp.2174, fs_list,
	ldr	r5, [ip, #0]	@ tmp147,* list_size
	add	r5, r5, r6	@ prephitmp.2154, tmp147,
	str	r5, [ip, #0]	@ prephitmp.2154,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r7, #0	@ tmp155,
	beq	.L633	@,
	add	r4, r1, #1216	@ tmp180, fs_list,
	mov	r6, r0	@ i.2179, currStrcture
	str	r4, [r3, r5, asl #2]	@ tmp180,* list
	cmp	r2, r0	@ list_idx, i.2179
	ldr	r0, [ip, #0]	@ tmp181,* list_size
	add	r4, r1, #1344	@ ivtmp.2174, fs_list,
	add	r5, r0, #1	@ prephitmp.2154, tmp181,
	str	r5, [ip, #0]	@ prephitmp.2154,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L633:
	add	r1, r4, #544	@ tmp171, ivtmp.2174,
	str	r1, [r3, r5, asl #2]	@ tmp171,* list
	ldr	r0, [ip, #0]	@ tmp172,* list_size
	add	r6, r6, #2	@ i.2179, i.2179,
	add	r5, r4, #1216	@ tmp176, ivtmp.2174,
	cmp	r2, r6	@ list_idx, i.2179
	add	r1, r0, #1	@ prephitmp.2154, tmp172,
	str	r1, [ip, #0]	@ prephitmp.2154,* list_size
	add	r4, r4, #1344	@ ivtmp.2174, ivtmp.2174,
	str	r5, [r3, r1, asl #2]	@ tmp176,* list
	ldr	r0, [ip, #0]	@ tmp177,* list_size
	add	r5, r0, #1	@ prephitmp.2154, tmp177,
	str	r5, [ip, #0]	@ prephitmp.2154,* list_size
	bhi	.L633	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L647:
	cmp	r2, #0	@ list_idx,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	ldr	r4, [ip, #0]	@ prephitmp.2180,* list_size
	add	r5, r1, #504	@ tmp144, fs_list,
	cmp	r2, #1	@ list_idx,
	sub	r6, r2, #1	@ tmp148, list_idx,
	and	r6, r6, #1	@ tmp150, tmp148,
	str	r5, [r3, r4, asl #2]	@ tmp144,* list
	add	r4, r1, #672	@ ivtmp.2170, fs_list,
	ldr	r5, [ip, #0]	@ tmp145,* list_size
	add	r5, r5, #1	@ prephitmp.2180, tmp145,
	str	r5, [ip, #0]	@ prephitmp.2180,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	cmp	r6, #0	@ tmp150,
	beq	.L632	@,
	add	r4, r4, #504	@ tmp178, ivtmp.2170,
	mov	r0, #2	@ i,
	str	r4, [r3, r5, asl #2]	@ tmp178,* list
	cmp	r2, r0	@ list_idx, i
	ldr	r5, [ip, #0]	@ tmp179,* list_size
	add	r4, r1, #1344	@ ivtmp.2170, fs_list,
	add	r5, r5, #1	@ prephitmp.2180, tmp179,
	str	r5, [ip, #0]	@ prephitmp.2180,* list_size
	ldmlsfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L632:
	add	r1, r4, #504	@ tmp161, ivtmp.2170,
	str	r1, [r3, r5, asl #2]	@ tmp161,* list
	ldr	r5, [ip, #0]	@ tmp162,* list_size
	add	r1, r4, #1168	@ tmp166, ivtmp.2170,
	add	r0, r0, #2	@ i, i,
	add	r1, r1, #8	@ tmp166, tmp166,
	add	r5, r5, #1	@ prephitmp.2180, tmp162,
	cmp	r2, r0	@ list_idx, i
	str	r5, [ip, #0]	@ prephitmp.2180,* list_size
	add	r4, r4, #1344	@ ivtmp.2170, ivtmp.2170,
	str	r1, [r3, r5, asl #2]	@ tmp166,* list
	ldr	r1, [ip, #0]	@ tmp167,* list_size
	add	r5, r1, #1	@ prephitmp.2180, tmp167,
	str	r5, [ip, #0]	@ prephitmp.2180,* list_size
	bhi	.L632	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	MVC_GenPiclistfromFrmlist_Interview, .-MVC_GenPiclistfromFrmlist_Interview
	.align	2
	.global	MVC_FindNearestPOCPicId
	.type	MVC_FindNearestPOCPicId, %function
MVC_FindNearestPOCPicId:
	.fnstart
.LFB1595:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11168616	@ tmp143,
	movt	r1, #:upper16:11168616	@ tmp143,
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	r6, #0	@ nearest_pic_id,
	beq	.L650	@,
	movw	r2, #:lower16:11168612	@ tmp146,
	movt	r2, #:upper16:11168612	@ tmp146,
	movw	ip, #:lower16:11196660	@ tmp145,
	movt	ip, #:upper16:11196660	@ tmp145,
	ldr	r5, [r0, r2]	@ D.40110, <variable>.DPB.size
	ldr	r4, [r0, ip]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r5, #0	@ D.40110,
	moveq	r6, r5	@ nearest_pic_id, D.40110
	beq	.L650	@,
	movw	r1, #:lower16:11168420	@ tmp148,
	movt	r1, #:upper16:11168420	@ tmp148,
	add	r3, r0, r1	@ tmp148, pMvcCtx, tmp148
	mov	r5, r5, asl #2	@ D.47768, D.40110,
	sub	r6, r5, #4	@ tmp157, D.47768,
	mvn	ip, #-2147483648	@ nearest_poc_diff,
	ldr	r3, [r3, #0]	@ D.40102, <variable>.DPB.fs
	ubfx	r1, r6, #2, #1	@ tmp158, tmp157,,
	mov	r6, #0	@ nearest_pic_id,
	cmp	r3, r6	@ D.40102,
	beq	.L656	@,
	ldr	r2, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp171, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp171,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp171
	cmn	r2, #-2147483647	@ new_poc_diff,
	ldrlt	r6, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L656:
	mov	r3, #4	@ ivtmp.2209,
	cmp	r3, r5	@ ivtmp.2209, D.47768
	beq	.L650	@,
	cmp	r1, #0	@ tmp158,
	beq	.L653	@,
	movw	r2, #:lower16:11168424	@ tmp175,
	movt	r2, #:upper16:11168424	@ tmp175,
	add	r1, r0, r2	@ tmp175, pMvcCtx, tmp175
	ldr	r2, [r1, #0]	@ D.40102, <variable>.DPB.fs
	cmp	r2, #0	@ D.40102,
	beq	.L658	@,
	ldr	r1, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, r4	@ tmp178, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp178,
	rsblt	r1, r1, #0	@ new_poc_diff, tmp178
	cmp	r1, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r1	@ nearest_poc_diff, new_poc_diff
.L658:
	add	r3, r3, #4	@ ivtmp.2209, ivtmp.2209,
	cmp	r3, r5	@ ivtmp.2209, D.47768
	beq	.L650	@,
.L653:
	movw	r2, #:lower16:11168420	@ tmp163,
	movt	r2, #:upper16:11168420	@ tmp163,
	add	r8, r0, r3	@ tmp161, pMvcCtx, ivtmp.2209
	add	r1, r3, #4	@ tmp159, ivtmp.2209,
	mov	r3, r2	@ tmp168, tmp163
	add	r2, r8, r2	@ tmp163, tmp161, tmp163
	add	r7, r0, r1	@ tmp166, pMvcCtx, tmp159
	ldr	r2, [r2, #0]	@ D.40102, <variable>.DPB.fs
	add	r3, r7, r3	@ tmp168, tmp166, tmp168
	cmp	r2, #0	@ D.40102,
	beq	.L652	@,
	ldr	r7, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r7, r7, r4	@ tmp150, <variable>.poc, curr_poc
	cmp	r7, #0	@ tmp150,
	rsblt	r7, r7, #0	@ new_poc_diff, tmp150
	cmp	r7, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r7	@ nearest_poc_diff, new_poc_diff
.L652:
	ldr	r3, [r3, #0]	@ D.40102, <variable>.DPB.fs
	cmp	r3, #0	@ D.40102,
	beq	.L661	@,
	ldr	r2, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r2, r2, r4	@ tmp181, <variable>.poc, curr_poc
	cmp	r2, #0	@ tmp181,
	rsblt	r2, r2, #0	@ new_poc_diff, tmp181
	cmp	r2, ip	@ new_poc_diff, nearest_poc_diff
	ldrlt	r6, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	movlt	ip, r2	@ nearest_poc_diff, new_poc_diff
.L661:
	add	r3, r1, #4	@ ivtmp.2209, tmp159,
	cmp	r3, r5	@ ivtmp.2209, D.47768
	bne	.L653	@,
.L650:
	mov	r0, r6	@, nearest_pic_id
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_FindNearestPOCPicId, .-MVC_FindNearestPOCPicId
	.align	2
	.global	MVC_FindMinRefIdx
	.type	MVC_FindMinRefIdx, %function
MVC_FindMinRefIdx:
	.fnstart
.LFB1596:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11162624	@ tmp154,
	movt	r1, #:upper16:11162624	@ tmp154,
	mov	r9, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L679	@,
	movw	r2, #:lower16:11196171	@ tmp156,
	movt	r2, #:upper16:11196171	@ tmp156,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r0, #0	@ <variable>.CurrPic.structure,
	bne	.L708	@,
	movw	r2, #:lower16:11162668	@ tmp160,
	movt	r2, #:upper16:11162668	@ tmp160,
	movw	r6, #:lower16:11168896	@ ivtmp.2260,
	add	ip, r9, #11141120	@ ivtmp.2252, pMvcCtx,
	movt	r6, #:upper16:11168896	@ ivtmp.2260,
	ldr	r1, [r9, r2]	@, <variable>.CurrSlice.listXsize
	add	r6, r9, r6	@ ivtmp.2260, pMvcCtx, ivtmp.2260
	add	r8, ip, #27904	@ ivtmp.2252, ivtmp.2252,
	mov	sl, r2	@ tmp180, tmp160
	str	r1, [fp, #-48]	@, %sfp
.L670:
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	ip, #0	@,
	beq	.L674	@,
	ldr	r2, [r8, #0]	@ tmp205, <variable>.pListX
	mov	r1, #32	@ minrefidx,
	ldr	r7, [r9, sl]	@ temp.2278, <variable>.CurrSlice.listXsize
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	sub	ip, r7, #1	@ tmp188, temp.2278,
	and	ip, ip, #1	@ tmp190, tmp188,
	ldr	r2, [r3, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r2, r0	@ <variable>.apc_idc, i
	beq	.L709	@,
.L682:
	mov	r2, #1	@ j,
	cmp	r7, r2	@ temp.2278, j
	add	r3, r8, #4	@ ivtmp.2252, ivtmp.2252,
	bls	.L702	@,
	cmp	ip, #0	@ tmp190,
	beq	.L672	@,
	ldr	ip, [r8, #4]	@ tmp226, <variable>.pListX
	ldr	ip, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	ip, r0	@ <variable>.apc_idc, i
	beq	.L710	@,
.L684:
	add	r2, r2, #1	@ j, j,
	add	r3, r3, #4	@ ivtmp.2252, ivtmp.2252,
	cmp	r7, r2	@ temp.2278, j
	bhi	.L672	@,
	b	.L702	@
.L671:
	ldr	r3, [r3, #4]	@ tmp200, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	beq	.L711	@,
.L687:
	add	r2, ip, #1	@ j, tmp191,
	add	r3, r4, #4	@ ivtmp.2252, tmp192,
	cmp	r7, r2	@ temp.2278, j
	bls	.L702	@,
.L672:
	ldr	r5, [r3, #0]	@ tmp162, <variable>.pListX
	add	ip, r2, #1	@ tmp191, j,
	add	r4, r3, #4	@ tmp192, ivtmp.2252,
	ldr	r5, [r5, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r5, [r5, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r5, r0	@ <variable>.apc_idc, i
	bne	.L671	@,
	ldr	r3, [r3, #4]	@ tmp200, <variable>.pListX
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	cmp	r3, r0	@ <variable>.apc_idc, i
	bne	.L687	@,
.L711:
	add	r2, ip, #1	@ j, tmp191,
	cmp	r1, ip	@ minrefidx, tmp191
	movcs	r1, ip	@ minrefidx, tmp191
	cmp	r7, r2	@ temp.2278, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.2252, tmp192,
	bhi	.L672	@,
.L702:
	cmp	r1, #31	@ minrefidx,
	bls	.L673	@,
.L674:
	mov	r1, #0	@,
	str	r1, [r6, #0]	@, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@, <variable>.APC.RefIdx
.L673:
	add	r0, r0, #1	@ i, i,
	add	r6, r6, #8	@ ivtmp.2260, ivtmp.2260,
	cmp	r0, #16	@ i,
	bne	.L670	@,
.L679:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L708:
	movw	r3, #:lower16:11162668	@ tmp158,
	movt	r3, #:upper16:11162668	@ tmp158,
	movw	r8, #:lower16:11168896	@ ivtmp.2274,
	add	sl, r9, #11141120	@ ivtmp.2266, pMvcCtx,
	movt	r8, #:upper16:11168896	@ ivtmp.2274,
	ldr	ip, [r9, r3]	@, <variable>.CurrSlice.listXsize
	add	r8, r9, r8	@ ivtmp.2274, pMvcCtx, ivtmp.2274
	add	sl, sl, #27904	@ ivtmp.2266, ivtmp.2266,
	mov	r0, #0	@ i.2285,
	str	ip, [fp, #-48]	@, %sfp
.L669:
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, #0	@,
	beq	.L678	@,
	ldr	r3, [sl, #0]	@ temp.2281, <variable>.pListX
	movw	r2, #:lower16:11162668	@,
	movt	r2, #:upper16:11162668	@,
	mov	r6, #32	@ minrefidx.2277,
	ldr	ip, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r9, r2]	@ temp.2279, <variable>.CurrSlice.listXsize
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	sub	r1, r7, #1	@ tmp193, temp.2279,
	and	r1, r1, #1	@ tmp195, tmp193,
	mov	r3, r3, asl #1	@ tmp224, <variable>.apc_idc,
	cmp	r2, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp225, tmp224
	cmp	r3, r0	@ tmp225, i.2285
	beq	.L712	@,
.L689:
	mov	r2, #1	@ j.2284,
	cmp	r7, r2	@ temp.2279, j.2284
	add	r3, sl, #4	@ ivtmp.2266, ivtmp.2266,
	bls	.L703	@,
	cmp	r1, #0	@ tmp195,
	beq	.L676	@,
	ldr	r1, [sl, #4]	@ temp.2281, <variable>.pListX
	ldr	ip, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r4, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r1, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r1, r1, asl r2	@ tmp234, <variable>.apc_idc,
	cmp	r4, #2	@ <variable>.structure,
	orreq	r1, r1, #1	@,, tmp235, tmp234
	cmp	r1, r0	@ tmp235, i.2285
	beq	.L713	@,
.L691:
	add	r2, r2, #1	@ j.2284, j.2284,
	add	r3, r3, #4	@ ivtmp.2266, ivtmp.2266,
	cmp	r7, r2	@ temp.2279, j.2284
	bhi	.L676	@,
	b	.L703	@
.L675:
	ldr	r3, [r3, #4]	@ temp.2281, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r3, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r3, r3, asl #1	@ tmp215, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	orreq	r3, r3, #1	@,, tmp216, tmp215
	cmp	r3, r0	@ tmp216, i.2285
	beq	.L714	@,
	add	r2, ip, #1	@ j.2284, tmp196,
	add	r3, r4, #4	@ ivtmp.2266, tmp197,
	cmp	r7, r2	@ temp.2279, j.2284
	bls	.L703	@,
.L676:
	ldr	r1, [r3, #0]	@ temp.2281, <variable>.pListX
	add	ip, r2, #1	@ tmp196, j.2284,
	add	r4, r3, #4	@ tmp197, ivtmp.2266,
	ldr	r5, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	ldr	r5, [r5, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r5, r5, asl #1	@ tmp173, <variable>.apc_idc,
	cmp	r1, #2	@ <variable>.structure,
	movne	r1, r5	@, tmp175, tmp173
	orreq	r1, r5, #1	@,, tmp175, tmp173
	cmp	r1, r0	@ tmp175, i.2285
	bne	.L675	@,
	cmp	r6, r2	@ minrefidx.2277, j.2284
	movcs	r6, r2	@ minrefidx.2277, j.2284
	str	r6, [r8, #0]	@ minrefidx.2277, <variable>.APC.RefIdx
	b	.L675	@
.L714:
	add	r2, ip, #1	@ j.2284, tmp196,
	cmp	r6, ip	@ minrefidx.2277, tmp196
	movcs	r6, ip	@ minrefidx.2277, tmp196
	cmp	r7, r2	@ temp.2279, j.2284
	str	r6, [r8, #0]	@ minrefidx.2277, <variable>.APC.RefIdx
	add	r3, r4, #4	@ ivtmp.2266, tmp197,
	bhi	.L676	@,
.L703:
	cmp	r6, #31	@ minrefidx.2277,
	bls	.L677	@,
.L678:
	mov	ip, #0	@,
	str	ip, [r8, #0]	@, <variable>.APC.RefIdx
.L677:
	add	r0, r0, #1	@ i.2285, i.2285,
	add	r8, r8, #4	@ ivtmp.2274, ivtmp.2274,
	cmp	r0, #32	@ i.2285,
	bne	.L669	@,
	b	.L679	@
.L712:
	mov	r6, #0	@ minrefidx.2277,
	str	r6, [r8, #0]	@ minrefidx.2277, <variable>.APC.RefIdx
	b	.L689	@
.L713:
	cmp	r6, r2	@ minrefidx.2277, j.2284
	movcs	r6, r2	@ minrefidx.2277, j.2284
	str	r6, [r8, #0]	@ minrefidx.2277, <variable>.APC.RefIdx
	b	.L691	@
.L709:
	mov	r1, #0	@ minrefidx,
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L682	@
.L710:
	cmp	r1, r2	@ minrefidx, j
	movcs	r1, r2	@ minrefidx, j
	str	r1, [r6, #0]	@ minrefidx, <variable>.APC.RefIdx
	str	r1, [r6, #4]	@ minrefidx, <variable>.APC.RefIdx
	b	.L684	@
	.fnend
	.size	MVC_FindMinRefIdx, .-MVC_FindMinRefIdx
	.align	2
	.global	MVC_NoPicOut
	.type	MVC_NoPicOut, %function
MVC_NoPicOut:
	.fnstart
.LFB1598:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11197996	@ tmp167,
	movt	r3, #:upper16:11197996	@ tmp167,
	ldr	r5, [r0, r3]	@ D.40195, <variable>.TotalFsNum
	cmp	r5, #0	@ D.40195,
	beq	.L716	@,
	movw	r4, #:lower16:11169900	@ ivtmp.2317,
	movt	r4, #:upper16:11169900	@ ivtmp.2317,
	add	r3, r0, r4	@ ivtmp.2317, pMvcCtx, ivtmp.2317
	sub	r1, r5, #1	@ tmp185, D.40195,
	and	r4, r1, #1	@ tmp187, tmp185,
	mov	ip, #0	@ tmp179,
	ldr	r2, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, #1	@ <variable>.is_displayed,
	beq	.L729	@,
	ldrb	r1, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #1	@ <variable>.is_in_dpb,
	beq	.L729	@,
.L730:
	mov	r1, #1	@ i,
	cmp	r1, r5	@ i, D.40195
	add	r3, r3, #672	@ ivtmp.2317, ivtmp.2317,
	bcs	.L716	@,
	cmp	r4, #0	@ tmp187,
	beq	.L719	@,
	ldr	r2, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r2, r1	@ <variable>.is_displayed,
	beq	.L732	@,
	ldrb	r2, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #1	@ <variable>.is_in_dpb,
	beq	.L732	@,
	add	r1, r1, #1	@ i, i,
	add	r3, r3, #672	@ ivtmp.2317, ivtmp.2317,
	cmp	r1, r5	@ i, D.40195
	bcc	.L719	@,
.L716:
	movw	r2, #:lower16:11198000	@ tmp175,
	movt	r2, #:upper16:11198000	@ tmp175,
	ldr	ip, [r0, r2]	@ D.40196, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.40196,
	ldmeqfd	sp, {r4, r5, fp, sp, pc}	@
	movw	r1, #:lower16:11197924	@ ivtmp.2312,
	movt	r1, #:upper16:11197924	@ ivtmp.2312,
	add	r3, r0, r1	@ ivtmp.2312, pMvcCtx, ivtmp.2312
	mov	r1, #1	@ i.2323,
	cmp	r1, ip	@ i.2323, D.40196
	sub	r0, ip, #1	@ tmp180, D.40196,
	and	r2, r0, r1	@ tmp182, tmp180,
	mov	r0, #0	@ tmp178,
	str	r0, [r3], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
	cmp	r2, #0	@ tmp182,
	beq	.L721	@,
	mov	r1, #2	@ i.2323,
	cmp	r1, ip	@ i.2323, D.40196
	str	r0, [r3], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, fp, sp, pc}	@
.L721:
	add	r1, r1, #2	@ i.2323, i.2323,
	mov	r2, r3	@ tmp184, ivtmp.2312
	cmp	r1, ip	@ i.2323, D.40196
	str	r0, [r2], #4	@ tmp178, <variable>.PmvStoreUsedFlag
	str	r0, [r3, #4]	@ tmp178, <variable>.PmvStoreUsedFlag
	add	r3, r2, #4	@ ivtmp.2312, tmp184,
	bcc	.L721	@,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L744:
	ldrb	r4, [r3, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r4, #1	@ <variable>.is_in_dpb,
	beq	.L717	@,
	ldr	r3, [r3, #672]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	beq	.L736	@,
.L742:
	ldrb	r3, [r2, #-608]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r3, #1	@ <variable>.is_in_dpb,
	beq	.L736	@,
.L737:
	add	r1, r1, #1	@ i, tmp189,
	add	r3, r2, #672	@ ivtmp.2317, tmp188,
	cmp	r1, r5	@ i, D.40195
	bcs	.L716	@,
.L719:
	ldr	r4, [r3, #0]	@ <variable>.is_displayed, <variable>.is_displayed
	add	r1, r1, #1	@ tmp189, i,
	add	r2, r3, #672	@ tmp188, ivtmp.2317,
	cmp	r4, #1	@ <variable>.is_displayed,
	bne	.L744	@,
.L717:
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	ldr	r3, [r3, #672]	@ <variable>.is_displayed, <variable>.is_displayed
	cmp	r3, #1	@ <variable>.is_displayed,
	bne	.L742	@,
.L736:
	strb	ip, [r2, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r2, #-610]	@ tmp179, <variable>.is_reference
	b	.L737	@
.L732:
	add	r1, r1, #1	@ i, i,
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	cmp	r1, r5	@ i, D.40195
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	add	r3, r3, #672	@ ivtmp.2317, ivtmp.2317,
	bcc	.L719	@,
	b	.L716	@
.L729:
	strb	ip, [r3, #-611]	@ tmp179, <variable>.is_used
	strb	ip, [r3, #-610]	@ tmp179, <variable>.is_reference
	b	.L730	@
	.fnend
	.size	MVC_NoPicOut, .-MVC_NoPicOut
	.align	2
	.global	mvc_wait_vo
	.type	mvc_wait_vo, %function
mvc_wait_vo:
	.fnstart
.LFB1601:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	mvc_wait_vo, .-mvc_wait_vo
	.align	2
	.global	MVC_RoundLog2
	.type	MVC_RoundLog2, %function
MVC_RoundLog2:
	.fnstart
.LFB1602:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mul	r0, r0, r0	@ iValue_square, iValue, iValue
	mov	r3, #0	@ iRet,
	mov	r2, #1	@ tmp140,
.L748:
	add	r3, r3, #1	@ iRet, iRet,
	cmp	r0, r2, asl r3	@ iValue_square, tmp140,
	bge	.L748	@,
	mov	r0, r3, asr #1	@, iRet,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_RoundLog2, .-MVC_RoundLog2
	.global	__aeabi_uidiv
	.global	__aeabi_uidivmod
	.align	2
	.global	MVC_DecPOC
	.type	MVC_DecPOC, %function
MVC_DecPOC:
	.fnstart
.LFB1604:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11152036	@ tmp172,
	movt	r3, #:upper16:11152036	@ tmp172,
	movw	ip, #:lower16:11162627	@ tmp169,
	movt	ip, #:upper16:11162627	@ tmp169,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r5, [r0, r3]	@ sps, <variable>.pCurrSPS
	mov	r1, #1	@ tmp175,
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r3, [r5, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	r2, #0	@, tmp171
	moveq	r2, #1	@, tmp171
	ldr	r0, [r5, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r3, r1	@ <variable>.pic_order_cnt_type,
	ldr	ip, [r5, #2904]	@ D.40427, <variable>.log2_max_pic_order_cnt_lsb_minus4
	add	r0, r0, #4	@ tmp173, <variable>.log2_max_frame_num_minus4,
	mov	r0, r1, asl r0	@ MaxFrameNum, tmp175,
	beq	.L754	@,
	bcs	.L807	@,
	cmp	r2, #0	@ tmp171,
	add	r0, ip, #4	@ tmp177, D.40427,
	mov	r1, r1, asl r0	@ MaxPicOrderCntLsb, tmp175,
	bne	.L808	@,
	movw	ip, #:lower16:11161504	@ tmp183,
	movt	ip, #:upper16:11161504	@ tmp183,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r0, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L758	@,
	movw	r3, #:lower16:11161488	@ tmp186,
	movt	r3, #:upper16:11161488	@ tmp186,
	movw	r5, #:lower16:11161492	@ tmp185,
	movt	r5, #:upper16:11161492	@ tmp185,
	ldr	ip, [r4, r3]	@ prephitmp.2410, <variable>.CurrPOC.PrevPicOrderCntMsb
	ldr	r3, [r4, r5]	@ prephitmp.2408, <variable>.CurrPOC.PrevPicOrderCntLsb
	mov	r5, ip	@ prephitmp.2412, prephitmp.2410
.L759:
	movw	r2, #:lower16:11161480	@ tmp197,
	movt	r2, #:upper16:11161480	@ tmp197,
	ldr	r0, [r4, r2]	@ D.40450, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	r0, r3	@ D.40450, prephitmp.2408
	bcs	.L761	@,
	rsb	r2, r0, r3	@ tmp198, D.40450, prephitmp.2408
	cmp	r2, r1, lsr #1	@ tmp198, MaxPicOrderCntLsb,
	bcc	.L761	@,
	add	r1, r5, r1	@ D.40459, prephitmp.2412, MaxPicOrderCntLsb
	movw	r3, #:lower16:11161496	@ tmp201,
	movt	r3, #:upper16:11161496	@ tmp201,
	mov	r2, r1	@ prephitmp.2478, D.40459
	str	r1, [r4, r3]	@ D.40459, <variable>.CurrPOC.PicOrderCntMsb
.L764:
	movw	r3, #:lower16:11162625	@ tmp207,
	movt	r3, #:upper16:11162625	@ tmp207,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L766	@,
.L811:
	movw	r5, #:lower16:11161480	@ tmp209,
	movt	r5, #:upper16:11161480	@ tmp209,
	movw	r3, #:lower16:11161484	@ tmp212,
	movt	r3, #:upper16:11161484	@ tmp212,
	ldr	r1, [r4, r5]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movw	ip, #:lower16:11161516	@ tmp214,
	ldr	r6, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r5, #:lower16:11161512	@ tmp211,
	add	r2, r2, r1	@ D.40473, prephitmp.2478, <variable>.CurrPOC.pic_order_cnt_lsb
	movt	r5, #:upper16:11161512	@ tmp211,
	movt	ip, #:upper16:11161516	@ tmp214,
	movw	r0, #:lower16:11161520	@ tmp215,
	movw	r3, #:lower16:11161524	@ tmp216,
	movt	r0, #:upper16:11161520	@ tmp215,
	movt	r3, #:upper16:11161524	@ tmp216,
	add	r6, r2, r6	@ D.40475, D.40473, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	cmp	r6, r2	@ D.40475, D.40473
	movlt	r1, r6	@ prephitmp.2403, D.40475
	movge	r1, r2	@ prephitmp.2403, D.40473
	str	r2, [r4, r5]	@ D.40473, <variable>.CurrPOC.toppoc
	str	r6, [r4, ip]	@ D.40475, <variable>.CurrPOC.bottompoc
	str	r1, [r4, r0]	@ prephitmp.2403,
	str	r1, [r4, r3]	@ prephitmp.2403, <variable>.CurrPOC.ThisPOC
.L767:
	movw	r2, #:lower16:11161544	@ tmp228,
	movt	r2, #:upper16:11161544	@ tmp228,
	movw	r3, #:lower16:11161540	@ tmp229,
	movt	r3, #:upper16:11161540	@ tmp229,
	ldr	r0, [r4, r2]	@ D.40485, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11161520	@ tmp227,
	movt	r2, #:upper16:11161520	@ tmp227,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	str	r1, [r4, r2]	@ prephitmp.2403, <variable>.CurrPOC.framepoc
	movw	r2, #:lower16:11162656	@ tmp232,
	movt	r2, #:upper16:11162656	@ tmp232,
	cmp	r0, ip	@ D.40485, <variable>.CurrPOC.PreviousFrameNum
	strne	r0, [r4, r3]	@ D.40485, <variable>.CurrPOC.PreviousFrameNum
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r2, #:lower16:11161480	@ tmp235,
	movw	r3, #:lower16:11161496	@ tmp238,
	movt	r2, #:upper16:11161480	@ tmp235,
	movt	r3, #:upper16:11161496	@ tmp238,
	movw	ip, #:lower16:11161492	@ tmp234,
	movt	ip, #:upper16:11161492	@ tmp234,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb, <variable>.CurrPOC.PicOrderCntMsb
	movw	r3, #:lower16:11161488	@ tmp237,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	movt	r3, #:upper16:11161488	@ tmp237,
	str	r0, [r4, ip]	@ <variable>.CurrPOC.pic_order_cnt_lsb,
	str	r1, [r4, r3]	@ <variable>.CurrPOC.PicOrderCntMsb,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L807:
	cmp	r3, #2	@ <variable>.pic_order_cnt_type,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	cmp	r2, #0	@ tmp171,
	bne	.L809	@,
	movw	r1, #:lower16:11161504	@ tmp346,
	movt	r1, #:upper16:11161504	@ tmp346,
	ldr	r3, [r4, r1]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r3, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	bne	.L790	@,
	movw	r3, #:lower16:11161540	@ tmp349,
	movw	r2, #:lower16:11161544	@ tmp350,
	movt	r3, #:upper16:11161540	@ tmp349,
	movt	r2, #:upper16:11161544	@ tmp350,
	movw	ip, #:lower16:11161552	@ tmp348,
	movt	ip, #:upper16:11161552	@ tmp348,
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	ldr	r2, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	cmp	r1, r2	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.frame_num
	ldr	r1, [r4, ip]	@ prephitmp.2398, <variable>.CurrPOC.PrevFrameNumOffset
	bls	.L792	@,
	movw	r2, #:lower16:11161548	@ tmp357,
	movt	r2, #:upper16:11161548	@ tmp357,
	add	r1, r1, r0	@ prephitmp.2398, prephitmp.2398, MaxFrameNum
	str	r1, [r4, r2]	@ prephitmp.2398, <variable>.CurrPOC.FrameNumOffset
.L793:
	movw	r3, #:lower16:11162656	@ tmp362,
	movt	r3, #:upper16:11162656	@ tmp362,
	movw	r2, #:lower16:11161544	@ tmp359,
	movt	r2, #:upper16:11161544	@ tmp359,
	ldr	r0, [r4, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	r3, #:lower16:11161536	@ tmp361,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r3, #:upper16:11161536	@ tmp361,
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movw	r0, #:lower16:11162625	@ tmp367,
	movt	r0, #:upper16:11162625	@ tmp367,
	add	r2, r1, ip	@ temp.2468, prephitmp.2398, <variable>.CurrPOC.frame_num
	str	r2, [r4, r3]	@ temp.2468, <variable>.CurrPOC.AbsFrameNum
	movw	ip, #:lower16:11161524	@ tmp365,
	ldrb	r1, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	mov	r2, r2, asl #1	@ tmp364, temp.2468,
	subeq	r2, r2, #1	@ prephitmp.2470, tmp364,
	movt	ip, #:upper16:11161524	@ tmp365,
	cmp	r1, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r2, [r4, ip]	@ prephitmp.2470, <variable>.CurrPOC.ThisPOC
	bne	.L796	@,
	movw	r0, #:lower16:11161520	@ tmp369,
	movw	ip, #:lower16:11161516	@ tmp370,
	movt	r0, #:upper16:11161520	@ tmp369,
	movt	ip, #:upper16:11161516	@ tmp370,
	movw	r1, #:lower16:11161512	@ tmp371,
	movt	r1, #:upper16:11161512	@ tmp371,
	str	r2, [r4, r0]	@ prephitmp.2470, <variable>.CurrPOC.framepoc
	str	r2, [r4, r1]	@ prephitmp.2470,
	str	r2, [r4, ip]	@ prephitmp.2470,
.L789:
	movw	ip, #:lower16:11161544	@ tmp379,
	movw	r1, #:lower16:11161548	@ tmp382,
	movt	ip, #:upper16:11161544	@ tmp379,
	movt	r1, #:upper16:11161548	@ tmp382,
	movw	r2, #:lower16:11161540	@ tmp378,
	movw	r3, #:lower16:11161552	@ tmp381,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movt	r2, #:upper16:11161540	@ tmp378,
	ldr	ip, [r4, r1]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r3, #:upper16:11161552	@ tmp381,
	str	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num,
	str	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L754:
	cmp	r2, #0	@ tmp171,
	bne	.L810	@,
	movw	r1, #:lower16:11161504	@ tmp242,
	movt	r1, #:upper16:11161504	@ tmp242,
	ldr	r6, [r4, r1]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r6, #0	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L772	@,
	movw	ip, #:lower16:11161552	@ tmp244,
	movw	r0, #:lower16:11161540	@ tmp246,
	movt	ip, #:upper16:11161552	@ tmp244,
	movt	r0, #:upper16:11161540	@ tmp246,
	mov	r1, r2	@ prephitmp.2402, tmp171
	str	r2, [r4, ip]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
.L773:
	movw	r3, #:lower16:11161548	@ tmp257,
	movt	r3, #:upper16:11161548	@ tmp257,
	str	r1, [r4, r3]	@ prephitmp.2402, <variable>.CurrPOC.FrameNumOffset
.L771:
	ldr	r7, [r5, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r7, #0	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle,
	movweq	r2, #:lower16:11161536	@ tmp265,
	movteq	r2, #:upper16:11161536	@ tmp265,
	streq	r7, [r4, r2]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.CurrPOC.AbsFrameNum
	beq	.L776	@,
	movw	r0, #:lower16:11161544	@ tmp260,
	movw	ip, #:lower16:11161548	@ tmp261,
	movt	r0, #:upper16:11161544	@ tmp260,
	movt	ip, #:upper16:11161548	@ tmp261,
	movw	r6, #:lower16:11161536	@ tmp259,
	movt	r6, #:upper16:11161536	@ tmp259,
	ldr	r1, [r4, r0]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	add	r2, r1, r2	@ tmp264, <variable>.CurrPOC.frame_num, <variable>.CurrPOC.FrameNumOffset
	str	r2, [r4, r6]	@ tmp264, <variable>.CurrPOC.AbsFrameNum
.L776:
	movw	r7, #:lower16:11162656	@ tmp267,
	movt	r7, #:upper16:11162656	@ tmp267,
	ldr	r3, [r4, r7]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L777	@,
	movw	r6, #:lower16:11161536	@ tmp269,
	movt	r6, #:upper16:11161536	@ tmp269,
	ldr	r2, [r4, r6]	@ D.40511, <variable>.CurrPOC.AbsFrameNum
	cmp	r2, #0	@ D.40511,
	subne	r2, r2, #1	@ tmp271, D.40511,
	strne	r2, [r4, r6]	@ tmp271, <variable>.CurrPOC.AbsFrameNum
.L777:
	movw	ip, #:lower16:11161568	@ tmp272,
	movt	ip, #:upper16:11161568	@ tmp272,
	mov	r3, #0	@ tmp273,
	str	r3, [r4, ip]	@ tmp273, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2473, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r3	@ temp.2473,
	ble	.L778	@,
	add	r2, r5, #2912	@ ivtmp.2432, sps,
	add	r0, r2, #8	@ ivtmp.2432, ivtmp.2432,
	mov	r2, r3	@ i, prephitmp.2399
.L779:
	ldr	r1, [r0], #4	@ tmp275, <variable>.offset_for_ref_frame
	add	r2, r2, #1	@ i, i,
	add	r3, r3, r1	@ prephitmp.2399, prephitmp.2399, tmp275
	str	r3, [r4, ip]	@ prephitmp.2399, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	ldr	r1, [r5, #2916]	@ temp.2473, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	cmp	r1, r2	@ temp.2473, i
	bgt	.L779	@,
.L778:
	movw	ip, #:lower16:11161536	@ tmp277,
	movt	ip, #:upper16:11161536	@ tmp277,
	ldr	r7, [r4, ip]	@ temp.2447, <variable>.CurrPOC.AbsFrameNum
	cmp	r7, #0	@ temp.2447,
	beq	.L780	@,
	sub	r7, r7, #1	@ tmp278, temp.2447,
	mov	r0, r7	@, tmp278
	bl	__aeabi_uidiv	@
	movw	r2, #:lower16:11161560	@ tmp282,
	movt	r2, #:upper16:11161560	@ tmp282,
	mov	r6, r0	@ tmp281,
	mov	r0, r7	@, tmp278
	str	r6, [r4, r2]	@ tmp281, <variable>.CurrPOC.PicOrderCntCycleCnt
	ldr	r1, [r5, #2916]	@, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bl	__aeabi_uidivmod	@
	movw	r3, #:lower16:11161568	@ tmp292,
	movt	r3, #:upper16:11161568	@ tmp292,
	movw	r0, #:lower16:11161556	@ tmp291,
	movw	ip, #:lower16:11161564	@ tmp294,
	movt	r0, #:upper16:11161556	@ tmp291,
	ldr	r2, [r4, r3]	@ <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle
	movt	ip, #:upper16:11161564	@ tmp294,
	mul	r6, r2, r6	@ prephitmp.2451, <variable>.CurrPOC.ExpectedDeltaPerPicOrderCntCycle, tmp281
	str	r6, [r4, ip]	@ prephitmp.2451, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	r1, #0	@ D.40526,
	str	r1, [r4, r0]	@ D.40526, <variable>.CurrPOC.FrameNumInPicOrderCntCycle
	blt	.L781	@,
	add	r3, r5, #2912	@ tmp295, sps,
	cmp	r1, #1	@ D.40526,
	and	r8, r1, #1	@ tmp403, D.40526,
	mov	r0, #1	@ i.2453,
	ldr	r7, [r3, #8]	@ tmp296, <variable>.offset_for_ref_frame
	add	r2, r3, #12	@ ivtmp.2427, tmp295,
	add	r6, r6, r7	@ prephitmp.2451, prephitmp.2451, tmp296
	str	r6, [r4, ip]	@ prephitmp.2451, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L781	@,
	cmp	r8, #0	@ tmp403,
	beq	.L782	@,
	ldr	r7, [r2, #0]	@ tmp415, <variable>.offset_for_ref_frame
	mov	r0, #2	@ i.2453,
	cmp	r1, r0	@ D.40526, i.2453
	add	r2, r3, #16	@ ivtmp.2427, tmp295,
	add	r6, r6, r7	@ prephitmp.2451, prephitmp.2451, tmp415
	str	r6, [r4, ip]	@ prephitmp.2451, <variable>.CurrPOC.ExpectedPicOrderCnt
	blt	.L781	@,
.L782:
	mov	r3, r2	@ tmp404, ivtmp.2427
	add	r0, r0, #2	@ i.2453, i.2453,
	ldr	r7, [r3], #4	@ tmp408, <variable>.offset_for_ref_frame
	cmp	r1, r0	@ D.40526, i.2453
	add	lr, r6, r7	@ prephitmp.2451, prephitmp.2451, tmp408
	str	lr, [r4, ip]	@ prephitmp.2451, <variable>.CurrPOC.ExpectedPicOrderCnt
	ldr	r7, [r2, #4]	@ tmp413, <variable>.offset_for_ref_frame
	add	r2, r3, #4	@ ivtmp.2427, tmp404,
	add	r6, lr, r7	@ prephitmp.2451, prephitmp.2451, tmp413
	str	r6, [r4, ip]	@ prephitmp.2451, <variable>.CurrPOC.ExpectedPicOrderCnt
	bge	.L782	@,
.L781:
	movw	r1, #:lower16:11162656	@ tmp300,
	movt	r1, #:upper16:11162656	@ tmp300,
	movw	r0, #:lower16:11162625	@ tmp305,
	movt	r0, #:upper16:11162625	@ tmp305,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ <variable>.CurrSlice.nal_ref_idc,
	movwne	r3, #:lower16:11161564	@ tmp302,
	ldreq	r2, [r5, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	movweq	r3, #:lower16:11161564	@ tmp304,
	movtne	r3, #:upper16:11161564	@ tmp302,
	movteq	r3, #:upper16:11161564	@ tmp304,
	addeq	r6, r6, r2	@ prephitmp.2455, prephitmp.2451, <variable>.offset_for_non_ref_pic
	ldrne	r6, [r4, r3]	@ prephitmp.2455, <variable>.CurrPOC.ExpectedPicOrderCnt
	streq	r6, [r4, r3]	@ prephitmp.2455, <variable>.CurrPOC.ExpectedPicOrderCnt
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L785	@,
	movw	r1, #:lower16:11161528	@ tmp307,
	movt	r1, #:upper16:11161528	@ tmp307,
	movw	r2, #:lower16:11161512	@ tmp309,
	movw	r3, #:lower16:11161532	@ tmp310,
	ldr	r0, [r4, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161512	@ tmp309,
	movt	r3, #:upper16:11161532	@ tmp310,
	movw	r1, #:lower16:11161516	@ tmp314,
	add	r6, r6, r0	@ D.40540, prephitmp.2455, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ D.40540, <variable>.CurrPOC.toppoc
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r1, #:upper16:11161516	@ tmp314,
	ldr	r0, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11161520	@ tmp315,
	movw	r3, #:lower16:11161524	@ tmp316,
	movt	r2, #:upper16:11161520	@ tmp315,
	add	r0, ip, r0	@ tmp311, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	movt	r3, #:upper16:11161524	@ tmp316,
	add	ip, r0, r6	@ D.40544, tmp311, D.40540
	str	ip, [r4, r1]	@ D.40544, <variable>.CurrPOC.bottompoc
	cmp	ip, r6	@ D.40544, D.40540
	movlt	r6, ip	@ prephitmp.2460, D.40544
	movge	r6, r6	@ prephitmp.2460, D.40540
	str	r6, [r4, r2]	@ prephitmp.2460,
	str	r6, [r4, r3]	@ prephitmp.2460, <variable>.CurrPOC.ThisPOC
.L786:
	movw	r2, #:lower16:11161544	@ tmp331,
	movw	r3, #:lower16:11161548	@ tmp334,
	movt	r2, #:upper16:11161544	@ tmp331,
	movt	r3, #:upper16:11161548	@ tmp334,
	movw	r1, #:lower16:11161520	@ tmp329,
	movt	r1, #:upper16:11161520	@ tmp329,
	ldr	r0, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	movw	r2, #:lower16:11161552	@ tmp333,
	ldr	ip, [r4, r3]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.FrameNumOffset
	movt	r2, #:upper16:11161552	@ tmp333,
	movw	r3, #:lower16:11161540	@ tmp330,
	movt	r3, #:upper16:11161540	@ tmp330,
	str	r6, [r4, r1]	@ prephitmp.2460, <variable>.CurrPOC.framepoc
	str	ip, [r4, r2]	@ <variable>.CurrPOC.FrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	str	r0, [r4, r3]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L810:
	movw	r7, #:lower16:11161548	@ tmp240,
	movt	r7, #:upper16:11161548	@ tmp240,
	mov	r2, #0	@ tmp241,
	str	r2, [r4, r7]	@ tmp241, <variable>.CurrPOC.FrameNumOffset
	b	.L771	@
.L809:
	movw	r5, #:lower16:11161548	@ tmp336,
	movw	r0, #:lower16:11161516	@ tmp338,
	movt	r5, #:upper16:11161548	@ tmp336,
	movt	r0, #:upper16:11161516	@ tmp338,
	movw	r1, #:lower16:11161512	@ tmp340,
	movw	r2, #:lower16:11161520	@ tmp342,
	movt	r1, #:upper16:11161512	@ tmp340,
	movt	r2, #:upper16:11161520	@ tmp342,
	movw	ip, #:lower16:11161524	@ tmp344,
	movt	ip, #:upper16:11161524	@ tmp344,
	mov	r3, #0	@ tmp337,
	str	r3, [r4, r5]	@ tmp337, <variable>.CurrPOC.FrameNumOffset
	str	r3, [r4, ip]	@ tmp337, <variable>.CurrPOC.ThisPOC
	str	r3, [r4, r0]	@ tmp337, <variable>.CurrPOC.bottompoc
	str	r3, [r4, r1]	@ tmp337, <variable>.CurrPOC.toppoc
	str	r3, [r4, r2]	@ tmp337, <variable>.CurrPOC.framepoc
	b	.L789	@
.L808:
	movw	r2, #:lower16:11161488	@ tmp179,
	movw	r3, #:lower16:11161492	@ tmp181,
	movt	r2, #:upper16:11161488	@ tmp179,
	movt	r3, #:upper16:11161492	@ tmp181,
	mov	ip, #0	@ tmp180,
	str	ip, [r4, r2]	@ tmp180, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	ip, [r4, r3]	@ tmp180, <variable>.CurrPOC.PrevPicOrderCntLsb
.L757:
	movw	r0, #:lower16:11161480	@ tmp384,
	movt	r0, #:upper16:11161480	@ tmp384,
	movw	r3, #:lower16:11161488	@ tmp385,
	movt	r3, #:upper16:11161488	@ tmp385,
	ldr	r0, [r4, r0]	@ D.40450, <variable>.CurrPOC.pic_order_cnt_lsb
	mov	r2, #0	@ prephitmp.2478,
	ldr	ip, [r4, r3]	@ prephitmp.2410, <variable>.CurrPOC.PrevPicOrderCntMsb
	mov	r3, r2	@ prephitmp.2408, prephitmp.2478
.L763:
	cmp	r3, r0	@ prephitmp.2408, D.40450
	bcs	.L765	@,
	rsb	r3, r3, r0	@ tmp203, prephitmp.2408, D.40450
	cmp	r3, r1, lsr #1	@ tmp203, MaxPicOrderCntLsb,
	bls	.L765	@,
	rsb	ip, r1, r2	@ D.40466, MaxPicOrderCntLsb, prephitmp.2478
	movw	r3, #:lower16:11161496	@ tmp205,
	movt	r3, #:upper16:11161496	@ tmp205,
	mov	r2, ip	@ prephitmp.2478, D.40466
	str	ip, [r4, r3]	@ D.40466, <variable>.CurrPOC.PicOrderCntMsb
	b	.L764	@
.L765:
	movw	r1, #:lower16:11161496	@ tmp206,
	movw	r3, #:lower16:11162625	@ tmp207,
	movt	r1, #:upper16:11161496	@ tmp206,
	movt	r3, #:upper16:11162625	@ tmp207,
	str	ip, [r4, r1]	@ prephitmp.2410, <variable>.CurrPOC.PicOrderCntMsb
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L811	@,
.L766:
	movw	r1, #:lower16:11162626	@ tmp217,
	movt	r1, #:upper16:11162626	@ tmp217,
	movw	r3, #:lower16:11161480	@ tmp219,
	movt	r3, #:upper16:11161480	@ tmp219,
	ldrb	ip, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	ldr	r1, [r4, r3]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movw	ip, #:lower16:11161524	@ tmp226,
	movt	ip, #:upper16:11161524	@ tmp226,
	add	r1, r2, r1	@ prephitmp.2403, prephitmp.2478, <variable>.CurrPOC.pic_order_cnt_lsb
	movweq	r0, #:lower16:11161512	@ tmp221,
	movwne	r0, #:lower16:11161516	@ tmp225,
	movteq	r0, #:upper16:11161512	@ tmp221,
	movtne	r0, #:upper16:11161516	@ tmp225,
	str	r1, [r4, r0]	@ prephitmp.2403,
	str	r1, [r4, ip]	@ prephitmp.2403, <variable>.CurrPOC.ThisPOC
	b	.L767	@
.L780:
	movw	r1, #:lower16:11161564	@ tmp298,
	movt	r1, #:upper16:11161564	@ tmp298,
	mov	r6, r7	@ prephitmp.2451, temp.2447
	str	r7, [r4, r1]	@ temp.2447, <variable>.CurrPOC.ExpectedPicOrderCnt
	b	.L781	@
.L785:
	movw	r3, #:lower16:11162626	@ tmp317,
	movt	r3, #:upper16:11162626	@ tmp317,
	ldrb	ip, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	ip, #0	@ <variable>.CurrSlice.bottom_field_flag,
	bne	.L787	@,
	movw	ip, #:lower16:11161528	@ tmp319,
	movt	ip, #:upper16:11161528	@ tmp319,
	movw	r2, #:lower16:11161512	@ tmp321,
	movw	r0, #:lower16:11161524	@ tmp322,
	ldr	r1, [r4, ip]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161512	@ tmp321,
	movt	r0, #:upper16:11161524	@ tmp322,
	add	r6, r6, r1	@ prephitmp.2460, prephitmp.2455, <variable>.CurrPOC.delta_pic_order_cnt
	str	r6, [r4, r2]	@ prephitmp.2460,
	str	r6, [r4, r0]	@ prephitmp.2460, <variable>.CurrPOC.ThisPOC
	b	.L786	@
.L761:
	movw	r2, #:lower16:11161488	@ tmp202,
	movt	r2, #:upper16:11161488	@ tmp202,
	ldr	r2, [r4, r2]	@ prephitmp.2478, <variable>.CurrPOC.PrevPicOrderCntMsb
	b	.L763	@
.L758:
	movw	ip, #:lower16:11161508	@ tmp187,
	movt	ip, #:upper16:11161508	@ tmp187,
	ldr	r0, [r4, ip]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.last_pic_bottom_field
	cmp	r0, #0	@ <variable>.CurrPOC.last_pic_bottom_field,
	beq	.L760	@,
	movw	r0, #:lower16:11161488	@ tmp189,
	movw	r3, #:lower16:11161492	@ tmp191,
	movt	r0, #:upper16:11161488	@ tmp189,
	movt	r3, #:upper16:11161492	@ tmp191,
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r2, [r4, r3]	@ tmp171, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L757	@
.L787:
	movw	r3, #:lower16:11161528	@ tmp323,
	movt	r3, #:upper16:11161528	@ tmp323,
	ldr	ip, [r5, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movw	r2, #:lower16:11161516	@ tmp327,
	ldr	r0, [r4, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11161516	@ tmp327,
	movw	r3, #:lower16:11161524	@ tmp328,
	movt	r3, #:upper16:11161524	@ tmp328,
	add	r1, r0, ip	@ tmp324, <variable>.CurrPOC.delta_pic_order_cnt, <variable>.offset_for_top_to_bottom_field
	add	r6, r1, r6	@ prephitmp.2460, tmp324, prephitmp.2455
	str	r6, [r4, r2]	@ prephitmp.2460,
	str	r6, [r4, r3]	@ prephitmp.2460, <variable>.CurrPOC.ThisPOC
	b	.L786	@
.L772:
	movw	r2, #:lower16:11161544	@ tmp248,
	movw	r7, #:lower16:11161540	@ tmp249,
	movt	r2, #:upper16:11161544	@ tmp248,
	movt	r7, #:upper16:11161540	@ tmp249,
	ldr	r2, [r4, r2]	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.frame_num
	ldr	r3, [r4, r7]	@ <variable>.CurrPOC.PreviousFrameNum, <variable>.CurrPOC.PreviousFrameNum
	cmp	r2, r3	@ <variable>.CurrPOC.frame_num, <variable>.CurrPOC.PreviousFrameNum
	bcs	.L774	@,
	movw	ip, #:lower16:11161552	@ tmp253,
	movt	ip, #:upper16:11161552	@ tmp253,
	movw	r1, #:lower16:11161548	@ tmp252,
	movt	r1, #:upper16:11161548	@ tmp252,
	ldr	r2, [r4, ip]	@ <variable>.CurrPOC.PrevFrameNumOffset, <variable>.CurrPOC.PrevFrameNumOffset
	add	r6, r0, r2	@ tmp255, MaxFrameNum, <variable>.CurrPOC.PrevFrameNumOffset
	str	r6, [r4, r1]	@ tmp255, <variable>.CurrPOC.FrameNumOffset
	b	.L771	@
.L796:
	movw	r1, #:lower16:11162626	@ tmp372,
	movt	r1, #:upper16:11162626	@ tmp372,
	movw	ip, #:lower16:11161520	@ tmp374,
	movt	ip, #:upper16:11161520	@ tmp374,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	str	r2, [r4, ip]	@ prephitmp.2470,
	cmp	r3, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movweq	r3, #:lower16:11161512	@ tmp375,
	movwne	r3, #:lower16:11161516	@ tmp377,
	movteq	r3, #:upper16:11161512	@ tmp375,
	movtne	r3, #:upper16:11161516	@ tmp377,
	str	r2, [r4, r3]	@ prephitmp.2470,
	b	.L789	@
.L790:
	movw	ip, #:lower16:11161540	@ tmp353,
	movw	r0, #:lower16:11161552	@ tmp355,
	movt	ip, #:upper16:11161540	@ tmp353,
	movt	r0, #:upper16:11161552	@ tmp355,
	mov	r1, r2	@ prephitmp.2398, tmp171
	str	r2, [r4, ip]	@ tmp171, <variable>.CurrPOC.PreviousFrameNum
	str	r2, [r4, r0]	@ tmp171, <variable>.CurrPOC.PrevFrameNumOffset
.L792:
	movw	r3, #:lower16:11161548	@ tmp358,
	movt	r3, #:upper16:11161548	@ tmp358,
	str	r1, [r4, r3]	@ prephitmp.2398, <variable>.CurrPOC.FrameNumOffset
	b	.L793	@
.L760:
	movw	ip, #:lower16:11161512	@ tmp195,
	movt	ip, #:upper16:11161512	@ tmp195,
	movw	r6, #:lower16:11161488	@ tmp193,
	movw	r2, #:lower16:11161492	@ tmp196,
	ldr	r3, [r4, ip]	@ prephitmp.2408, <variable>.CurrPOC.toppoc
	movt	r6, #:upper16:11161488	@ tmp193,
	movt	r2, #:upper16:11161492	@ tmp196,
	mov	r5, r0	@ prephitmp.2412, <variable>.CurrPOC.last_pic_bottom_field
	mov	ip, r0	@ prephitmp.2410, prephitmp.2412
	str	r0, [r4, r6]	@ <variable>.CurrPOC.last_pic_bottom_field, <variable>.CurrPOC.PrevPicOrderCntMsb
	str	r3, [r4, r2]	@ prephitmp.2408, <variable>.CurrPOC.PrevPicOrderCntLsb
	b	.L759	@
.L774:
	movw	r0, #:lower16:11161552	@ tmp256,
	movt	r0, #:upper16:11161552	@ tmp256,
	ldr	r1, [r4, r0]	@ prephitmp.2402, <variable>.CurrPOC.PrevFrameNumOffset
	b	.L773	@
	.fnend
	.size	MVC_DecPOC, .-MVC_DecPOC
	.align	2
	.global	MVC_CalcPicNum
	.type	MVC_CalcPicNum, %function
MVC_CalcPicNum:
	.fnstart
.LFB1605:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11152036	@ tmp158,
	movt	r4, #:upper16:11152036	@ tmp158,
	movw	r2, #:lower16:11196171	@ tmp162,
	movt	r2, #:upper16:11196171	@ tmp162,
	ldr	r3, [r0, r4]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ D.40597, <variable>.CurrPic.structure
	ldr	r1, [r3, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, #0	@ D.40597,
	mov	r3, #1	@ tmp161,
	add	ip, r1, #4	@ tmp159, <variable>.log2_max_frame_num_minus4,
	mov	ip, r3, asl ip	@ MaxFrameNum, tmp161,
	beq	.L813	@,
	movw	r7, #:lower16:11168620	@ tmp165,
	movt	r7, #:upper16:11168620	@ tmp165,
	cmp	r2, #2	@ D.40597,
	movne	r4, #0	@, add_bottom
	moveq	r4, #1	@, add_bottom
	cmp	r2, r3	@ D.40597,
	movne	r5, #0	@, add_top
	moveq	r5, #1	@, add_top
	ldr	r6, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L815	@,
	movw	r8, #:lower16:11168484	@ ivtmp.2547,
	movt	r8, #:upper16:11168484	@ ivtmp.2547,
	add	r3, r0, r8	@ ivtmp.2547, pMvcCtx, ivtmp.2547
	movw	r8, #:lower16:11196648	@ tmp236,
	movt	r8, #:upper16:11196648	@ tmp236,
	mov	r2, #0	@ i,
.L828:
	ldr	r1, [r3, #0]	@ temp.2555, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #0	@ <variable>.is_reference,
	beq	.L824	@,
	ldr	r6, [r1, #588]	@ temp.2557, <variable>.frame_num
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r6, sl	@ temp.2557, <variable>.CurrPic.frame_num
	rsbhi	r6, ip, r6	@ tmp194, MaxFrameNum, temp.2557
	str	r6, [r1, #592]	@ temp.2557, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ prephitmp.2514, <variable>.DPB.fs_ref
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2518, <variable>.is_reference
	tst	r6, #1	@ prephitmp.2518,
	beq	.L827	@,
	ldr	sl, [r1, #504]	@ tmp198,
	bic	sl, sl, #-16777216	@ tmp196, tmp198,
	bic	sl, sl, #255	@ tmp196, tmp196,
	cmp	sl, #65536	@ tmp196,
	ldreq	r6, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r5, r6, asl #1	@, tmp201, add_top, <variable>.frame_num_wrap,
	streq	r6, [r1, #516]	@ tmp201, <variable>.top_field.pic_num
	ldreq	r1, [r3, #0]	@ prephitmp.2514, <variable>.DPB.fs_ref
	ldreqb	r6, [r1, #2]	@ zero_extendqisi2	@ prephitmp.2518, <variable>.is_reference
.L827:
	tst	r6, #2	@ prephitmp.2518,
	beq	.L824	@,
	ldr	r6, [r1, #544]	@ tmp205,
	bic	r6, r6, #-16777216	@ tmp203, tmp205,
	bic	r6, r6, #255	@ tmp203, tmp203,
	cmp	r6, #65536	@ tmp203,
	ldreq	r6, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	addeq	r6, r4, r6, asl #1	@, tmp208, add_bottom, <variable>.frame_num_wrap,
	streq	r6, [r1, #556]	@ tmp208, <variable>.bottom_field.pic_num
.L824:
	ldr	r1, [r0, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2547, ivtmp.2547,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L828	@,
.L815:
	movw	r6, #:lower16:11168624	@ tmp211,
	movt	r6, #:upper16:11168624	@ tmp211,
	ldr	r3, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r2, #:lower16:11168548	@ ivtmp.2542,
	movt	r2, #:upper16:11168548	@ ivtmp.2542,
	add	r3, r0, r2	@ ivtmp.2542, pMvcCtx, ivtmp.2542
	mov	r2, #0	@ i.2559,
.L831:
	ldr	ip, [r3, #0]	@ prephitmp.2507, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2559, i.2559,
	ldrb	r1, [ip, #2]	@ zero_extendqisi2	@ temp.2569, <variable>.is_reference
	cmp	r1, #0	@ temp.2569,
	beq	.L829	@,
	tst	r1, #1	@ prephitmp.2511,
	beq	.L830	@,
	ldr	r7, [ip, #504]	@ tmp217,
	bic	r7, r7, #-16777216	@ tmp215, tmp217,
	bic	r7, r7, #255	@ tmp215, tmp215,
	cmp	r7, #256	@ tmp215,
	ldreq	r1, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r5, r1, asl #1	@, tmp220, add_top, <variable>.long_term_frame_idx,
	streq	r1, [ip, #512]	@ tmp220, <variable>.top_field.long_term_pic_num
	ldreq	ip, [r3, #0]	@ prephitmp.2507, <variable>.DPB.fs_ltref
	ldreqb	r1, [ip, #2]	@ zero_extendqisi2	@ prephitmp.2511, <variable>.is_reference
.L830:
	tst	r1, #2	@ prephitmp.2511,
	beq	.L829	@,
	ldr	r1, [ip, #544]	@ tmp224,
	bic	r1, r1, #-16777216	@ tmp222, tmp224,
	bic	r1, r1, #255	@ tmp222, tmp222,
	cmp	r1, #256	@ tmp222,
	ldreq	r1, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	addeq	r1, r4, r1, asl #1	@, tmp227, add_bottom, <variable>.long_term_frame_idx,
	streq	r1, [ip, #552]	@ tmp227, <variable>.bottom_field.long_term_pic_num
.L829:
	ldr	ip, [r0, r6]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.2542, ivtmp.2542,
	cmp	ip, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2559
	bhi	.L831	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L813:
	movw	r5, #:lower16:11168620	@ tmp167,
	movt	r5, #:upper16:11168620	@ tmp167,
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L816	@,
	movw	r3, #:lower16:11168484	@ ivtmp.2537,
	movt	r3, #:upper16:11168484	@ ivtmp.2537,
	movw	r6, #:lower16:11196648	@ tmp233,
	add	r3, r0, r3	@ ivtmp.2537, pMvcCtx, ivtmp.2537
	movt	r6, #:upper16:11196648	@ tmp233,
	b	.L820	@
.L817:
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r2, r2, #1	@ i.2552, i.2552,
	add	r3, r3, #4	@ ivtmp.2537, ivtmp.2537,
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2552
	bls	.L816	@,
.L820:
	ldr	r1, [r3, #0]	@ D.40601, <variable>.DPB.fs_ref
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L817	@,
	ldr	r4, [r1, #464]	@ tmp173,
	bic	r4, r4, #-16777216	@ tmp171, tmp173,
	bic	r4, r4, #255	@ tmp171, tmp171,
	cmp	r4, #65536	@ tmp171,
	bne	.L817	@,
	ldr	r4, [r1, #588]	@ D.40609, <variable>.frame_num
	add	r2, r2, #1	@ i.2552, i.2552,
	ldr	r7, [r0, r6]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	cmp	r4, r7	@ D.40609, <variable>.CurrPic.frame_num
	rsb	r7, ip, r4	@ tmp176, MaxFrameNum, D.40609
	strls	r4, [r1, #592]	@ D.40609, <variable>.frame_num_wrap
	strhi	r7, [r1, #592]	@ tmp176, <variable>.frame_num_wrap
	ldr	r1, [r3, #0]	@ temp.2551, <variable>.DPB.fs_ref
	add	r3, r3, #4	@ ivtmp.2537, ivtmp.2537,
	ldr	r4, [r1, #592]	@ <variable>.frame_num_wrap, <variable>.frame_num_wrap
	str	r4, [r1, #476]	@ <variable>.frame_num_wrap, <variable>.frame.pic_num
	ldr	r1, [r0, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.2552
	bhi	.L820	@,
.L816:
	movw	r4, #:lower16:11168624	@ tmp180,
	movt	r4, #:upper16:11168624	@ tmp180,
	ldr	ip, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r2, #:lower16:11168548	@ ivtmp.2532,
	movt	r2, #:upper16:11168548	@ ivtmp.2532,
	add	r3, r0, r2	@ ivtmp.2532, pMvcCtx, ivtmp.2532
	mov	r2, #0	@ i.2553,
	b	.L823	@
.L822:
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2553
	bls	.L837	@,
.L823:
	ldr	r1, [r3, #0]	@ D.40619, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ i.2553, i.2553,
	add	r3, r3, #4	@ ivtmp.2532, ivtmp.2532,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L822	@,
	ldr	ip, [r1, #464]	@ tmp186,
	bic	ip, ip, #-16777216	@ tmp184, tmp186,
	bic	ip, ip, #255	@ tmp184, tmp184,
	cmp	ip, #256	@ tmp184,
	ldreq	ip, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r1, #472]	@ <variable>.long_term_frame_idx, <variable>.frame.long_term_pic_num
	ldr	r1, [r0, r4]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ltref_frames_in_buffer, i.2553
	bhi	.L823	@,
.L837:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_CalcPicNum, .-MVC_CalcPicNum
	.align	2
	.global	MVC_IsOutDPB
	.type	MVC_IsOutDPB, %function
MVC_IsOutDPB:
	.fnstart
.LFB1606:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pFrameStore
	beq	.L839	@,
	movw	r3, #:lower16:11168612	@ tmp141,
	movt	r3, #:upper16:11168612	@ tmp141,
	ldr	r4, [r0, r3]	@ D.40698, <variable>.DPB.size
	cmp	r4, #0	@ D.40698,
	beq	.L839	@,
	movw	ip, #:lower16:11168420	@ ivtmp.2600,
	movt	ip, #:upper16:11168420	@ ivtmp.2600,
	add	r3, r0, ip	@ ivtmp.2600, pMvcCtx, ivtmp.2600
	sub	r2, r4, #1	@ tmp144, D.40698,
	and	r0, r2, #1	@ tmp146, tmp144,
	ldr	r2, [r3, #0]	@ D.40693, <variable>.DPB.fs
	cmp	r2, #0	@ D.40693,
	beq	.L845	@,
	cmp	r1, r2	@ pFrameStore, D.40693
	beq	.L855	@,
.L845:
	mov	r2, #1	@ i,
	cmp	r4, r2	@ D.40698, i
	add	r3, r3, #4	@ ivtmp.2600, ivtmp.2600,
	bls	.L839	@,
	cmp	r0, #0	@ tmp146,
	beq	.L842	@,
	ldr	r0, [r3, #0]	@ D.40693, <variable>.DPB.fs
	cmp	r0, #0	@ D.40693,
	beq	.L847	@,
	cmp	r1, r0	@ pFrameStore, D.40693
	beq	.L855	@,
.L847:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.2600, ivtmp.2600,
	cmp	r4, r2	@ D.40698, i
	bls	.L839	@,
.L842:
	ldr	r0, [r3, #0]	@ D.40693, <variable>.DPB.fs
	add	r2, r2, #1	@ tmp147, i,
	add	ip, r3, #4	@ tmp148, ivtmp.2600,
	cmp	r0, #0	@ D.40693,
	beq	.L840	@,
	cmp	r1, r0	@ pFrameStore, D.40693
	beq	.L855	@,
.L840:
	ldr	r3, [r3, #4]	@ D.40693, <variable>.DPB.fs
	cmp	r3, #0	@ D.40693,
	beq	.L850	@,
	cmp	r1, r3	@ pFrameStore, D.40693
	beq	.L855	@,
.L850:
	add	r2, r2, #1	@ i, tmp147,
	add	r3, ip, #4	@ ivtmp.2600, tmp148,
	cmp	r4, r2	@ D.40698, i
	bhi	.L842	@,
.L839:
	mov	r0, #1	@ D.40691,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L855:
	mov	r0, #0	@ D.40691,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_IsOutDPB, .-MVC_IsOutDPB
	.align	2
	.global	mvc_combine_scalinglist
	.type	mvc_combine_scalinglist, %function
mvc_combine_scalinglist:
	.fnstart
.LFB1609:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r2, #0	@ sizeOfScalingList
	ldmlefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r5, #:lower16:.LANCHOR0	@ tmp155,
	movt	r5, #:upper16:.LANCHOR0	@ tmp155,
	cmp	r2, #16	@ sizeOfScalingList,
	add	r4, r5, #16	@ tmp156, tmp155,
	sub	r9, r2, #1	@ tmp158, sizeOfScalingList,
	mov	ip, #255	@ tmp157,
	and	r9, r9, #1	@ tmp160, tmp158,
	ldrneb	r3, [r4, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	beq	.L877	@,
.L873:
	and	r6, r3, #252	@ tmp167, scani,
	and	r7, r3, #3	@ tmp169, scani,
	add	r6, r1, r6	@ D.40976, scalingList, tmp167
	ldrb	sl, [r0, r3, asl #2]	@ zero_extendqisi2	@ tmp177,* scalingList_Org
	mov	r7, r7, asl #3	@ D.40979, tmp169,
	mov	r3, #1	@ i,
	ldr	r8, [r6, #0]	@ tmp174,* D.40976
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	r8, r8, ip, asl r7	@ tmp175, tmp174, tmp157,
	orr	r7, r8, sl, asl r7	@, tmp179, tmp175, tmp177,
	str	r7, [r6, #0]	@ tmp179,* D.40976
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r9, #0	@ tmp160,
	beq	.L860	@,
	cmp	r2, #16	@ sizeOfScalingList,
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	add	r3, r3, #1	@ i, i,
	cmp	r3, r2	@ i, sizeOfScalingList
	and	sl, r6, #252	@ tmp183, scani,
	and	r8, r6, #3	@ tmp185, scani,
	add	r7, r1, sl	@ D.40976, scalingList, tmp183
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp193,* scalingList_Org
	mov	r6, r8, asl #3	@ D.40979, tmp185,
	ldr	r8, [r7, #0]	@ tmp190,* D.40976
	bic	r8, r8, ip, asl r6	@ tmp191, tmp190, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp195, tmp191, tmp193,
	str	r6, [r7, #0]	@ tmp195,* D.40976
	bne	.L860	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L876:
	mov	r7, r6, lsr #2	@ tmp198, scani,
	and	r8, r6, #3	@ tmp201, scani,
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp209,* scalingList_Org
	add	r3, r3, #1	@ i, tmp161,
	mov	r6, r8, asl #3	@ D.40979, tmp201,
	ldr	r8, [r1, r7, asl #2]	@ tmp206,* scalingList
	cmp	r3, r2	@ i, sizeOfScalingList
	bic	r8, r8, ip, asl r6	@ tmp207, tmp206, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp211, tmp207, tmp209,
	str	r6, [r1, r7, asl #2]	@ tmp211,* scalingList
	beq	.L878	@,
.L860:
	cmp	r2, #16	@ sizeOfScalingList,
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	cmp	r2, #16	@ sizeOfScalingList,
	add	r3, r3, #1	@ tmp161, i,
	and	r8, r6, #3	@ tmp145, scani,
	mov	r7, r6, lsr #2	@ tmp143, scani,
	ldrb	sl, [r0, r6, asl #2]	@ zero_extendqisi2	@ tmp151,* scalingList_Org
	mov	r6, r8, asl #3	@ D.40979, tmp145,
	ldr	r8, [r1, r7, asl #2]	@ tmp150,* scalingList
	bic	r8, r8, ip, asl r6	@ tmp149, tmp150, tmp157,
	orr	r6, r8, sl, asl r6	@, tmp154, tmp149, tmp151,
	str	r6, [r1, r7, asl #2]	@ tmp154,* scalingList
	ldrneb	r6, [r4, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN8
	ldreqb	r6, [r5, r3]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L876	@
.L878:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L877:
	ldrb	r3, [r5, #0]	@ zero_extendqisi2	@ scani, MVC_g_ZZ_SCAN
	b	.L873	@
	.fnend
	.size	mvc_combine_scalinglist, .-mvc_combine_scalinglist
	.align	2
	.global	MVC_UpdatePicQpInf
	.type	MVC_UpdatePicQpInf, %function
MVC_UpdatePicQpInf:
	.fnstart
.LFB1614:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r1, #32]	@ <variable>.MaxQp, <variable>.MaxQp
	ldr	r3, [r1, #36]	@ <variable>.MinQp, <variable>.MinQp
	cmp	r2, r0	@ <variable>.MaxQp, SlcQp
	strge	r2, [r1, #32]	@, <variable>.MaxQp, <variable>.MaxQp
	strlt	r0, [r1, #32]	@, SlcQp, <variable>.MaxQp
	cmp	r3, r0	@ <variable>.MinQp, SlcQp
	strle	r3, [r1, #36]	@, <variable>.MinQp, <variable>.MinQp
	strgt	r0, [r1, #36]	@, SlcQp, <variable>.MinQp
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_UpdatePicQpInf, .-MVC_UpdatePicQpInf
	.align	2
	.global	MVC_StopPicNum
	.type	MVC_StopPicNum, %function
MVC_StopPicNum:
	.fnstart
.LFB1616:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_StopPicNum, .-MVC_StopPicNum
	.align	2
	.global	MVC_GetPicStreamSize
	.type	MVC_GetPicStreamSize, %function
MVC_GetPicStreamSize:
	.fnstart
.LFB1618:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11199172	@ tmp138,
	movt	r3, #:upper16:11199172	@ tmp138,
	ldr	r3, [r0, r3]	@ pMVCSliceParam, <variable>.DecPicPara.pFirstSlice
	cmp	r3, #0	@ pMVCSliceParam,
	moveq	r0, r3	@ TotalSize, pMVCSliceParam
	ldmeqfd	sp, {fp, sp, pc}	@
	mov	r0, #0	@ TotalSize,
.L886:
	ldr	r2, [r3, #12]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r1, [r3, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r3, #4056]	@ pMVCSliceParam, <variable>.pNextSlice
	add	ip, r1, r2	@ tmp139, <variable>.valid_bitlen, <variable>.valid_bitlen
	add	r2, ip, #7	@ tmp142, tmp139,
	cmp	r3, #0	@ pMVCSliceParam,
	add	r0, r0, r2, lsr #3	@, TotalSize, TotalSize, tmp142,
	bne	.L886	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_GetPicStreamSize, .-MVC_GetPicStreamSize
	.align	2
	.global	MVC_ExitSlice
	.type	MVC_ExitSlice, %function
MVC_ExitSlice:
	.fnstart
.LFB1629:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11152036	@ tmp136,
	movw	r5, #:lower16:11162632	@ tmp138,
	movt	r2, #:upper16:11152036	@ tmp136,
	movt	r5, #:upper16:11162632	@ tmp138,
	movw	r1, #:lower16:11162625	@ tmp149,
	ldr	r4, [r0, r2]	@ sps, <variable>.pCurrSPS
	movt	r1, #:upper16:11162625	@ tmp149,
	ldr	r6, [r0, r5]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movw	r7, #:lower16:11164312	@ tmp137,
	movw	r3, #:lower16:11162676	@ tmp143,
	movt	r7, #:upper16:11164312	@ tmp137,
	movt	r3, #:upper16:11162676	@ tmp143,
	movw	r8, #:lower16:11162644	@ tmp146,
	movt	r8, #:upper16:11162644	@ tmp146,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	str	r6, [r0, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	ip, #:lower16:11164308	@ tmp140,
	ldr	r7, [r0, r3]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movt	ip, #:upper16:11164308	@ tmp140,
	ldr	r6, [r0, r8]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movw	r1, #:lower16:11164344	@ tmp142,
	ldr	r8, [r4, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movt	r1, #:upper16:11164344	@ tmp142,
	movw	r2, #:lower16:11164320	@ tmp145,
	movw	r3, #:lower16:11164304	@ tmp148,
	movt	r2, #:upper16:11164320	@ tmp145,
	movt	r3, #:upper16:11164304	@ tmp148,
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r8, [r0, ip]	@ <variable>.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	str	r7, [r0, r1]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	str	r6, [r0, r2]	@ <variable>.CurrSlice.frame_num, <variable>.PrevSlice.frame_num
	strb	r5, [r0, r3]	@ <variable>.CurrSlice.field_pic_flag, <variable>.PrevSlice.field_pic_flag
	beq	.L890	@,
	movw	r1, #:lower16:11162626	@ tmp155,
	movt	r1, #:upper16:11162626	@ tmp155,
	movw	r3, #:lower16:11164305	@ tmp154,
	movt	r3, #:upper16:11164305	@ tmp154,
	ldrb	ip, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	strb	ip, [r0, r3]	@ <variable>.CurrSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
.L890:
	movw	r2, #:lower16:11162627	@ tmp162,
	movt	r2, #:upper16:11162627	@ tmp162,
	movw	r3, #:lower16:11162656	@ tmp159,
	movt	r3, #:upper16:11162656	@ tmp159,
	ldrb	r1, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movw	r2, #:lower16:11164316	@ tmp158,
	ldr	ip, [r0, r3]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movt	r2, #:upper16:11164316	@ tmp158,
	movw	r3, #:lower16:11164306	@ tmp161,
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	movt	r3, #:upper16:11164306	@ tmp161,
	str	ip, [r0, r2]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevSlice.nal_ref_idc
	strb	r1, [r0, r3]	@ <variable>.CurrSlice.nal_unit_type, <variable>.PrevSlice.nal_unit_type
	beq	.L896	@,
.L891:
	ldr	r3, [r4, #2900]	@ prephitmp.2736, <variable>.pic_order_cnt_type
	cmp	r3, #0	@ prephitmp.2736,
	bne	.L892	@,
	movw	r1, #:lower16:11161480	@ tmp171,
	movw	r3, #:lower16:11161484	@ tmp174,
	movt	r1, #:upper16:11161480	@ tmp171,
	movt	r3, #:upper16:11161484	@ tmp174,
	movw	r2, #:lower16:11164328	@ tmp170,
	movt	r2, #:upper16:11164328	@ tmp170,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.CurrPOC.pic_order_cnt_lsb
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	movw	r3, #:lower16:11164332	@ tmp173,
	movt	r3, #:upper16:11164332	@ tmp173,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.pic_order_cnt_lsb, <variable>.PrevSlice.pic_oder_cnt_lsb
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt_bottom, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	r3, [r4, #2900]	@ prephitmp.2736, <variable>.pic_order_cnt_type
.L892:
	cmp	r3, #1	@ prephitmp.2736,
	beq	.L897	@,
.L893:
	movw	ip, #:lower16:11164276	@ tmp182,
	movt	ip, #:upper16:11164276	@ tmp182,
	ldr	r2, [r0, ip]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L894	@,
	movw	r4, #:lower16:11164280	@ tmp185,
	movw	ip, #:lower16:11164288	@ tmp188,
	movt	r4, #:upper16:11164280	@ tmp185,
	movt	ip, #:upper16:11164288	@ tmp188,
	movw	r3, #:lower16:11164292	@ tmp191,
	movt	r3, #:upper16:11164292	@ tmp191,
	ldr	r5, [r0, r4]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r1, #:lower16:11164348	@ tmp184,
	ldr	r4, [r0, ip]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r1, #:upper16:11164348	@ tmp184,
	ldr	ip, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	r2, #:lower16:11164352	@ tmp187,
	movw	r3, #:lower16:11164356	@ tmp190,
	movt	r2, #:upper16:11164352	@ tmp187,
	movt	r3, #:upper16:11164356	@ tmp190,
	str	r5, [r0, r1]	@ <variable>.CurrSlice.view_id, <variable>.PrevSlice.view_id
	str	r4, [r0, r2]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	str	ip, [r0, r3]	@ <variable>.CurrSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
.L894:
	movw	r1, #:lower16:11199476	@ tmp193,
	movt	r1, #:upper16:11199476	@ tmp193,
	ldr	r3, [r0, r1]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r2, r3, #1	@ tmp196, <variable>.TotalSlice,
	str	r2, [r0, r1]	@ tmp196, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L897:
	movw	r1, #:lower16:11161528	@ tmp177,
	movw	r3, #:lower16:11161532	@ tmp180,
	movt	r1, #:upper16:11161528	@ tmp177,
	movt	r3, #:upper16:11161532	@ tmp180,
	movw	r2, #:lower16:11164336	@ tmp176,
	movt	r2, #:upper16:11164336	@ tmp176,
	ldr	ip, [r0, r1]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r3, #:lower16:11164340	@ tmp179,
	movt	r3, #:upper16:11164340	@ tmp179,
	str	ip, [r0, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	str	r1, [r0, r3]	@ <variable>.CurrPOC.delta_pic_order_cnt, <variable>.PrevSlice.delta_pic_order_cnt
	b	.L893	@
.L896:
	movw	r3, #:lower16:11162664	@ tmp168,
	movt	r3, #:upper16:11162664	@ tmp168,
	movw	ip, #:lower16:11164324	@ tmp167,
	movt	ip, #:upper16:11164324	@ tmp167,
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	str	r1, [r0, ip]	@ <variable>.CurrSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	b	.L891	@
	.fnend
	.size	MVC_ExitSlice, .-MVC_ExitSlice
	.align	2
	.global	MVC_PicTypeStatistic
	.type	MVC_PicTypeStatistic, %function
MVC_PicTypeStatistic:
	.fnstart
.LFB1630:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11162624	@ tmp134,
	movt	r3, #:upper16:11162624	@ tmp134,
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L901	@,
	bcs	.L906	@,
	movw	ip, #:lower16:11196692	@ tmp140,
	movt	ip, #:upper16:11196692	@ tmp140,
	ldr	r2, [r0, ip]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r2, #2	@ <variable>.CurrPic.pic_type,
	movne	r2, #1	@ tmp143,
	strne	r2, [r0, ip]	@ tmp143, <variable>.CurrPic.pic_type
.L904:
	movw	r3, #:lower16:11196696	@ tmp150,
	movt	r3, #:upper16:11196696	@ tmp150,
	mov	r1, #0	@ tmp151,
	str	r1, [r0, r3]	@ tmp151, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L906:
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	ldmnefd	sp, {fp, sp, pc}	@
	movw	r3, #:lower16:11162627	@ tmp146,
	movt	r3, #:upper16:11162627	@ tmp146,
	ldrb	r1, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r1, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L904	@,
	movw	ip, #:lower16:11196696	@ tmp148,
	movt	ip, #:upper16:11196696	@ tmp148,
	mov	r2, #1	@ tmp149,
	str	r2, [r0, ip]	@ tmp149, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
.L901:
	movw	r3, #:lower16:11196692	@ tmp136,
	movw	ip, #:lower16:11196696	@ tmp138,
	movt	r3, #:upper16:11196692	@ tmp136,
	movt	ip, #:upper16:11196696	@ tmp138,
	mov	r1, #2	@ tmp137,
	mov	r2, #0	@ tmp139,
	str	r1, [r0, r3]	@ tmp137, <variable>.CurrPic.pic_type
	str	r2, [r0, ip]	@ tmp139, <variable>.CurrPic.is_idr_pic
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_PicTypeStatistic, .-MVC_PicTypeStatistic
	.align	2
	.global	MVC_FreeMvcExtMem
	.type	MVC_FreeMvcExtMem, %function
MVC_FreeMvcExtMem:
	.fnstart
.LFB1642:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FreeMvcExtMem, .-MVC_FreeMvcExtMem
	.align	2
	.global	MVC_FreeMvcVuiExtMem
	.type	MVC_FreeMvcVuiExtMem, %function
MVC_FreeMvcVuiExtMem:
	.fnstart
.LFB1643:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r0, #0	@,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FreeMvcVuiExtMem, .-MVC_FreeMvcVuiExtMem
	.align	2
	.global	MVC_PassBytes
	.type	MVC_PassBytes, %function
MVC_PassBytes:
	.fnstart
.LFB1647:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #368]	@ D.44535, <variable>.pCurrNal
	cmp	r3, #0	@ D.44535,
	cmpne	r1, #0	@, len,
	bne	.L918	@,
.L912:
	mvn	r0, #0	@ D.44541,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L918:
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.44542, <variable>.nal_used_segment
	rsb	ip, r2, r2, asl #3	@, tmp154, D.44542, D.44542,
	add	ip, r3, ip, asl #2	@, tmp156, D.44535, tmp154,
	ldr	ip, [ip, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	ip, #0	@ <variable>.streamBuffer,
	beq	.L912	@,
	ldr	ip, [r3, #64]	@ D.44549, <variable>.nal_segment
	cmp	ip, #2	@ D.44549,
	bhi	.L912	@,
	cmp	r2, #1	@ D.44542,
	bhi	.L912	@,
	cmp	ip, r2	@ D.44549, segment_idx
	bls	.L912	@,
	mov	r4, r1, asl #3	@ len.2847, len,
	mov	r5, #28	@ tmp184,
.L916:
	mla	r3, r5, r2, r3	@ tmp161, tmp184, segment_idx, D.44535
	add	r2, r2, #1	@ segment_idx, segment_idx,
	add	ip, r3, #16	@ tmp162, tmp161,
	ldr	r1, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r3, [ip, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r1, r1, asl #3	@ D.44557, <variable>.bitstream_length,
	add	r3, r4, r3	@ D.44555, len.2847, <variable>.bitsoffset
	cmp	r3, r1	@ D.44555, D.44557
	rsb	r4, r1, r3	@ len.2847, D.44557, D.44555
	bls	.L919	@,
	str	r1, [ip, #4]	@ D.44557, <variable>.bitsoffset
	ldr	r3, [r0, #368]	@ temp.2848, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r1, ip, #1	@ tmp180, <variable>.nal_used_segment,
	strb	r1, [r3, #0]	@ tmp180, <variable>.nal_used_segment
	ldr	r3, [r0, #368]	@ D.44535, <variable>.pCurrNal
	ldr	ip, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	ip, r2	@ <variable>.nal_segment, segment_idx
	bhi	.L916	@,
	mov	r0, #0	@ D.44541,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L919:
	str	r3, [ip, #4]	@ D.44555, <variable>.bitsoffset
	mov	r0, #1	@ D.44541,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_PassBytes, .-MVC_PassBytes
	.align	2
	.global	MVC_GetBytes
	.type	MVC_GetBytes, %function
MVC_GetBytes:
	.fnstart
.LFB1648:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ pdes
	bne	.L929	@,
.L921:
	mvn	r0, #0	@ D.44583,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L929:
	ldr	r5, [r0, #368]	@ D.44579, <variable>.pCurrNal
	cmp	r5, #0	@ D.44579,
	cmpne	r2, #0	@, len,
	movne	r4, #0	@, tmp158
	moveq	r4, #1	@, tmp158
	beq	.L921	@,
	ldrb	ip, [r5, #0]	@ zero_extendqisi2	@ D.44584, <variable>.nal_used_segment
	rsb	r3, ip, ip, asl #3	@, tmp161, D.44584, D.44584,
	add	r3, r5, r3, asl #2	@, tmp163, D.44579, tmp161,
	ldr	r3, [r3, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r3, #0	@ <variable>.streamBuffer,
	beq	.L921	@,
	ldr	r3, [r5, #64]	@ D.44591, <variable>.nal_segment
	cmp	r3, #2	@ D.44591,
	bhi	.L921	@,
	cmp	ip, #1	@ D.44584,
	bhi	.L921	@,
	cmp	r3, ip	@ D.44591, segment_idx
	bls	.L921	@,
	mov	r9, #28	@ tmp202,
.L926:
	mul	r8, r9, ip	@ tmp165, tmp202, segment_idx
	mov	r3, #0	@ ivtmp.2878,
	add	sl, r8, r5	@ tmp167, tmp165, D.44579
	ldr	r6, [sl, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldmib	sl, {r5, r7}	@ phole ldm
	add	r6, r6, #7	@ tmp173, <variable>.bitsoffset,
	add	r7, r5, r7	@ end_byte, D.44596, <variable>.bitstream_length
	add	r5, r5, r6, lsr #3	@, byte_pos, D.44596, tmp173,
.L922:
	add	sl, r3, r5	@ D.48470, ivtmp.2878, byte_pos
	add	r6, r3, r1	@ D.48468, ivtmp.2878, pdes
	cmp	r7, sl	@ end_byte, D.48470
	bls	.L930	@,
	ldrb	r6, [r5, r3]	@ zero_extendqisi2	@ tmp180,* ivtmp.2878
	add	r4, r4, #1	@ cnt, cnt,
	cmp	r2, r4	@ len, cnt
	strb	r6, [r1, r3]	@ tmp180,* ivtmp.2878
	add	r3, r3, #1	@ ivtmp.2878, ivtmp.2878,
	ldr	sl, [r0, #368]	@ temp.2896, <variable>.pCurrNal
	add	r6, r8, sl	@ tmp185, tmp201, temp.2896
	add	r6, r6, #16	@ tmp186, tmp185,
	ldr	sl, [r6, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	sl, sl, #8	@ tmp193, <variable>.bitsoffset,
	str	sl, [r6, #4]	@ tmp193, <variable>.bitsoffset
	bhi	.L922	@,
	mov	r0, r2	@ D.44583, len
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L930:
	ldr	r3, [r0, #368]	@ temp.2898, <variable>.pCurrNal
	add	ip, ip, #1	@ segment_idx, segment_idx,
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	add	r5, r1, #1	@ tmp196, <variable>.nal_used_segment,
	strb	r5, [r3, #0]	@ tmp196, <variable>.nal_used_segment
	ldr	r5, [r0, #368]	@ D.44579, <variable>.pCurrNal
	ldr	r1, [r5, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, ip	@ <variable>.nal_segment, segment_idx
	movhi	r1, r6	@ pdes, D.48468
	bhi	.L926	@
.L925:
	mov	r0, r4	@ D.44583, cnt
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_GetBytes, .-MVC_GetBytes
	.align	2
	.global	MVC_InitOldSlice
	.type	MVC_InitOldSlice, %function
MVC_InitOldSlice:
	.fnstart
.LFB1652:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #:lower16:11155236	@ tmp161,
	movt	sl, #:upper16:11155236	@ tmp161,
	movw	r2, #:lower16:11164344	@,
	movt	r2, #:upper16:11164344	@,
	str	r2, [fp, #-64]	@, %sfp
	ldr	r9, [r0, sl]	@, <variable>.MaxPpsNum
	movw	r3, #:lower16:11164312	@,
	movt	r3, #:upper16:11164312	@,
	movw	r7, #:lower16:11164320	@ tmp162,
	movw	r6, #:lower16:11164305	@ tmp165,
	movt	r7, #:upper16:11164320	@ tmp162,
	str	r9, [fp, #-48]	@, %sfp
	movt	r6, #:upper16:11164305	@ tmp165,
	ldr	r2, [fp, #-48]	@, %sfp
	movw	r9, #:lower16:11164304	@ tmp164,
	movw	r5, #:lower16:11164316	@ tmp166,
	movt	r9, #:upper16:11164304	@ tmp164,
	movt	r5, #:upper16:11164316	@ tmp166,
	movw	r4, #:lower16:11164306	@ tmp167,
	str	r2, [r0, r3]	@, <variable>.PrevSlice.pic_parameter_set_id
	movt	r4, #:upper16:11164306	@ tmp167,
	ldr	r2, [fp, #-64]	@, %sfp
	movw	ip, #:lower16:11164328	@ tmp168,
	movw	r1, #:lower16:11164332	@ tmp169,
	movt	ip, #:upper16:11164328	@ tmp168,
	movt	r1, #:upper16:11164332	@ tmp169,
	movw	r8, #:lower16:11164336	@ tmp170,
	movw	sl, #:lower16:11164340	@ tmp171,
	movt	r8, #:upper16:11164336	@ tmp170,
	movt	sl, #:upper16:11164340	@ tmp171,
	mov	r3, #0	@ tmp140,
	str	r3, [r0, r8]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r8, #:lower16:88888	@ tmp163,
	str	r3, [r0, sl]	@ tmp140, <variable>.PrevSlice.delta_pic_order_cnt
	movt	r8, #:upper16:88888	@ tmp163,
	strb	r3, [r0, r9]	@ tmp140, <variable>.PrevSlice.field_pic_flag
	str	r8, [r0, r7]	@ tmp163, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp143,
	strb	r7, [r0, r6]	@ tmp143, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp146,
	str	r6, [r0, r5]	@ tmp146, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp148,
	strb	r5, [r0, r4]	@ tmp148, <variable>.PrevSlice.nal_unit_type
	mov	r4, #3	@ tmp151,
	str	r4, [r0, ip]	@ tmp151, <variable>.PrevSlice.pic_oder_cnt_lsb
	mvn	ip, #0	@ tmp153,
	str	ip, [r0, r1]	@ tmp153, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r1, #262144	@ tmp159,
	str	r1, [r0, r2]	@ tmp159, <variable>.PrevSlice.first_mb_in_slice
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	MVC_InitOldSlice, .-MVC_InitOldSlice
	.align	2
	.global	MVC_FindNaluArraySlot
	.type	MVC_FindNaluArraySlot, %function
MVC_FindNaluArraySlot:
	.fnstart
.LFB1660:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r2, r0, #96	@ ivtmp.2956, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L935	@,
	b	.L934	@
.L944:
	ldrb	ip, [r2, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r2, r2, #192	@ ivtmp.2956, ivtmp.2956,
	cmp	ip, #0	@ <variable>.is_valid,
	beq	.L934	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L936	@,
.L935:
	ldrb	r1, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L944	@,
.L934:
	cmp	r3, #136	@ Pos,
	bhi	.L936	@,
	add	r1, r3, r3, asl #1	@, tmp155, Pos, Pos,
	mov	r2, #1	@ tmp159,
	add	r0, r0, r1, asl #5	@, tmp157, pMvcCtx, tmp155,
	strb	r2, [r0, #377]	@ tmp159, <variable>.is_valid
	mov	r0, r3	@, D.45515
	ldmfd	sp, {fp, sp, pc}	@
.L936:
	mvn	r3, #0	@ D.45515,
	mov	r0, r3	@, D.45515
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FindNaluArraySlot, .-MVC_FindNaluArraySlot
	.align	2
	.global	MVC_HaveSliceToDec
	.type	MVC_HaveSliceToDec, %function
MVC_HaveSliceToDec:
	.fnstart
.LFB1662:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11199444	@ tmp136,
	movt	r1, #:upper16:11199444	@ tmp136,
	ldr	r3, [r0, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #0	@ <variable>.SliceParaNum,
	mvneq	r0, #0	@,,
	movne	r0, #0	@,,
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_HaveSliceToDec, .-MVC_HaveSliceToDec
	.global	__aeabi_idiv
	.align	2
	.global	MVC_GetDar
	.type	MVC_GetDar, %function
MVC_GetDar:
	.fnstart
.LFB1639:
	@ args = 4, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ ar_idc
	mov	ip, r1	@ sar_width, sar_width
	beq	.L950	@,
	subs	r1, r0, #255	@ D.43695, ar_idc,
	movne	r1, #1	@ D.43695
	cmp	r0, #255	@ ar_idc,
	cmpne	r0, #16	@, ar_idc,
	bgt	.L950	@,
	cmp	ip, #0	@ sar_width,
	cmpne	r2, #0	@, sar_height,
	beq	.L967	@,
.L951:
	cmp	r0, #1	@ ar_idc,
	moveq	r4, #5	@ final_dar,
	beq	.L953	@,
	cmp	r1, #0	@ D.43695,
	beq	.L954	@,
	movw	r2, #:lower16:.LANCHOR0	@ tmp162,
	movt	r2, #:upper16:.LANCHOR0	@ tmp162,
	add	r1, r2, r0, asl #3	@, tmp171, tmp162, ar_idc,
	ldr	r2, [r1, #84]	@ sar_height, MVC_SarTable
	ldr	ip, [r1, #80]	@ sar_width, MVC_SarTable
.L954:
	ldr	r0, [fp, #4]	@ img_height, img_height
	mov	lr, r3, asl #10	@ tmp174, img_width,
	mul	r1, r0, r2	@, img_height, sar_height
	mul	r0, ip, lr	@, sar_width, tmp174
	bl	__aeabi_idiv	@
	sub	r1, r0, #2400	@ iftmp.782, dar,
	sub	r3, r0, #2256	@ iftmp.3007, dar,
	sub	ip, r1, #6	@ iftmp.782, iftmp.782,
	sub	r3, r3, #7	@ iftmp.3007, iftmp.3007,
	cmp	ip, #0	@ iftmp.782,
	rsblt	ip, r0, #2400	@ tmp181, dar,
	addlt	ip, ip, #6	@ iftmp.782, tmp181,
	cmp	r3, #0	@ iftmp.3007,
	rsblt	r1, r0, #2256	@ tmp183, dar,
	addlt	r1, r1, #7	@ iftmp.783, tmp183,
	movge	r1, r3	@ iftmp.783, iftmp.3007
	cmp	ip, r1	@ iftmp.782, iftmp.783
	movlt	r4, #4	@ final_dar,
	blt	.L953	@,
	cmp	r3, #0	@ iftmp.3007,
	sub	r2, r0, #1808	@ iftmp.3008, dar,
	rsblt	r3, r0, #2256	@ tmp184, dar,
	sub	r2, r2, #12	@ iftmp.3008, iftmp.3008,
	addlt	r3, r3, #7	@ iftmp.3007, tmp184,
	cmp	r2, #0	@ iftmp.3008,
	rsblt	r1, r0, #1808	@ tmp186, dar,
	addlt	r1, r1, #12	@ iftmp.785, tmp186,
	movge	r1, r2	@ iftmp.785, iftmp.3008
	cmp	r3, r1	@ iftmp.3007, iftmp.785
	movlt	r4, #3	@ final_dar,
	blt	.L953	@,
	cmp	r2, #0	@ iftmp.3008,
	sub	r4, r0, #1360	@ iftmp.787, dar,
	sub	r4, r4, #5	@ iftmp.787, iftmp.787,
	rsblt	r2, r0, #1808	@ tmp187, dar,
	addlt	r2, r2, #12	@ iftmp.3008, tmp187,
	cmp	r4, #0	@ iftmp.787,
	rsblt	r4, r0, #1360	@ tmp189, dar,
	addlt	r4, r4, #5	@ iftmp.787, tmp189,
	cmp	r4, r2	@ iftmp.787, iftmp.3008
	movgt	r4, #2	@ final_dar,
	movle	r4, #1	@ final_dar,
	b	.L953	@
.L967:
	cmp	r0, #255	@ ar_idc,
	bne	.L951	@,
.L950:
	mov	r4, #0	@ final_dar,
.L953:
	mov	r2, r4	@, final_dar
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC0	@,
	movt	r1, #:upper16:.LC0	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, final_dar
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_GetDar, .-MVC_GetDar
	.align	2
	.global	MVC_SPSEqual
	.type	MVC_SPSEqual, %function
MVC_SPSEqual:
	.fnstart
.LFB1638:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r0, #0	@ pSPS1, pSPS1
	beq	.L1000	@,
	cmp	r1, #0	@ pSPS2,
	beq	.L1001	@,
	ldr	r6, [r3, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldr	r4, [r1, #736]	@ <variable>.profile_idc, <variable>.profile_idc
	ldrb	r7, [r3, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r2, [r1, #0]	@ zero_extendqisi2	@ <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r5, [r3, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	cmp	r6, r4	@ <variable>.profile_idc, <variable>.profile_idc
	cmpeq	r7, r2	@, <variable>.constrained_set0_flag, <variable>.constrained_set0_flag
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	ldrb	r4, [r3, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	ldrb	r7, [r1, #2]	@ zero_extendqisi2	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	ip, #0	@, equal.3106
	moveq	ip, #1	@, equal.3106
	ldr	r6, [r1, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r5, r0	@ <variable>.constrained_set1_flag, <variable>.constrained_set1_flag
	movne	r0, #0	@, equal.3107
	andeq	r0, ip, #1	@,, equal.3107, equal.3106
	ldr	r5, [r3, #740]	@ <variable>.level_idc, <variable>.level_idc
	cmp	r4, r7	@ <variable>.constrained_set2_flag, <variable>.constrained_set2_flag
	movne	r2, #0	@, equal.3108
	andeq	r2, r0, #1	@,, equal.3108, equal.3107
	ldr	r4, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r7, [r1, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	r5, r6	@ <variable>.level_idc, <variable>.level_idc
	movne	ip, #0	@, equal.3109
	andeq	ip, r2, #1	@,, equal.3109, equal.3108
	ldrb	r2, [r3, #27]	@ zero_extendqisi2	@ D.43587, <variable>.seq_scaling_matrix_present_flag
	ldrb	r6, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r4, r7	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movne	r0, #0	@, equal.3110
	andeq	r0, ip, #1	@,, equal.3110, equal.3109
	cmp	r6, r2	@ <variable>.seq_scaling_matrix_present_flag, D.43587
	movne	r6, #0	@, equal
	andeq	r6, r0, #1	@,, equal, equal.3110
	cmp	r2, #0	@ D.43587,
	beq	.L972	@,
	mov	r9, r3	@ ivtmp.3069, pSPS1
	mov	r8, r1	@ ivtmp.3071, pSPS2
	mov	sl, #0	@ i,
	str	r3, [fp, #-48]	@ pSPS1, %sfp
	str	r1, [fp, #-52]	@ pSPS2, %sfp
	b	.L976	@
.L1003:
	ldr	r7, [fp, #-48]	@, %sfp
	mov	r4, sl, asl #6	@ tmp291, i,
	ldr	ip, [r9, #760]	@ tmp235, <variable>.ScalingList4x4
	add	r2, r4, r1	@, tmp291,
	ldr	r0, [r8, #760]	@ tmp236, <variable>.ScalingList4x4
	add	r5, r4, r7	@, tmp291,
	str	r2, [fp, #-60]	@, %sfp
	ldr	r1, [r9, #756]	@ tmp239, <variable>.ScalingList4x4
	str	r5, [fp, #-56]	@, %sfp
	ldr	r3, [r8, #756]	@ tmp240, <variable>.ScalingList4x4
	ldr	r5, [r9, #764]	@ tmp243, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp235, tmp236
	cmpeq	r1, r3	@, tmp239, tmp240
	ldr	r4, [r8, #764]	@ tmp244, <variable>.ScalingList4x4
	ldr	r7, [r9, #768]	@ tmp247, <variable>.ScalingList4x4
	ldr	r1, [r8, #768]	@ tmp248, <variable>.ScalingList4x4
	movne	r2, #0	@, equal.3127
	moveq	r2, #1	@, equal.3127
	ldr	ip, [r9, #772]	@ tmp251, <variable>.ScalingList4x4
	cmp	r5, r4	@ tmp243, tmp244
	movne	r3, #0	@, equal.3131
	andeq	r3, r2, #1	@,, equal.3131, equal.3127
	ldr	r0, [r8, #772]	@ tmp252, <variable>.ScalingList4x4
	cmp	r7, r1	@ tmp247, tmp248
	movne	r5, #0	@, equal.3135
	andeq	r5, r3, #1	@,, equal.3135, equal.3131
	ldr	r4, [r9, #776]	@ tmp255, <variable>.ScalingList4x4
	ldr	r3, [r8, #776]	@ tmp256, <variable>.ScalingList4x4
	cmp	ip, r0	@ tmp251, tmp252
	movne	r1, #0	@, equal.3139
	andeq	r1, r5, #1	@,, equal.3139, equal.3135
	ldr	r7, [r9, #780]	@ tmp259, <variable>.ScalingList4x4
	ldr	r2, [r8, #780]	@ tmp260, <variable>.ScalingList4x4
	cmp	r4, r3	@ tmp255, tmp256
	movne	r0, #0	@, equal.3143
	andeq	r0, r1, #1	@,, equal.3143, equal.3139
	ldr	r5, [r9, #784]	@ tmp263, <variable>.ScalingList4x4
	ldr	r3, [r8, #784]	@ tmp264, <variable>.ScalingList4x4
	cmp	r7, r2	@ tmp259, tmp260
	movne	ip, #0	@, equal.3147
	andeq	ip, r0, #1	@,, equal.3147, equal.3143
	ldr	r4, [r8, #788]	@ tmp268, <variable>.ScalingList4x4
	ldr	r7, [r9, #788]	@ tmp267, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp263, tmp264
	movne	r1, #0	@, equal.3151
	andeq	r1, ip, #1	@,, equal.3151, equal.3147
	ldr	ip, [r9, #792]	@ tmp271, <variable>.ScalingList4x4
	ldr	r5, [r8, #792]	@ tmp272, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp267, tmp268
	movne	r0, #0	@, equal.3155
	andeq	r0, r1, #1	@,, equal.3155, equal.3151
	ldr	r7, [r9, #796]	@ tmp275, <variable>.ScalingList4x4
	ldr	r4, [r8, #796]	@ tmp276, <variable>.ScalingList4x4
	cmp	ip, r5	@ tmp271, tmp272
	movne	r2, #0	@, equal.3159
	andeq	r2, r0, #1	@,, equal.3159, equal.3155
	ldr	r3, [r8, #800]	@ tmp280, <variable>.ScalingList4x4
	ldr	r5, [r9, #800]	@ tmp279, <variable>.ScalingList4x4
	cmp	r7, r4	@ tmp275, tmp276
	movne	r1, #0	@, equal.3163
	andeq	r1, r2, #1	@,, equal.3163, equal.3159
	ldr	ip, [r9, #804]	@ tmp283, <variable>.ScalingList4x4
	ldr	r2, [r8, #804]	@ tmp284, <variable>.ScalingList4x4
	cmp	r5, r3	@ tmp279, tmp280
	movne	r0, #0	@, equal.3167
	andeq	r0, r1, #1	@,, equal.3167, equal.3163
	ldr	r4, [fp, #-56]	@, %sfp
	cmp	ip, r2	@ tmp283, tmp284
	movne	r5, #0	@, equal.3171
	andeq	r5, r0, #1	@,, equal.3171, equal.3167
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r7, [r8, #808]	@ tmp288, <variable>.ScalingList4x4
	ldr	r1, [r9, #808]	@ tmp287, <variable>.ScalingList4x4
	ldr	r0, [r4, #752]	@ tmp299, <variable>.ScalingList4x4
	cmp	r1, r7	@ tmp287, tmp288
	movne	r5, #0	@, equal.3175
	andeq	r5, r5, #1	@,, equal.3175, equal.3171
	ldr	r3, [ip, #752]	@ tmp300, <variable>.ScalingList4x4
	and	r6, r6, r5	@ equal.3179, equal, equal.3175
	ldr	r7, [r9, #812]	@ tmp303, <variable>.ScalingList4x4
	ldr	r2, [r8, #812]	@ tmp304, <variable>.ScalingList4x4
	cmp	r0, r3	@ tmp299, tmp300
	movne	r4, #0	@, equal.3183
	andeq	r4, r6, #1	@,, equal.3183, equal.3179
	cmp	r7, r2	@ tmp303, tmp304
	movne	r6, #0	@, equal
	andeq	r6, r4, #1	@,, equal, equal.3183
.L973:
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3069, ivtmp.3069,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.3071, ivtmp.3071,
	beq	.L1002	@,
.L976:
	ldr	r1, [fp, #-48]	@, %sfp
	add	ip, r1, sl	@ tmp228,, i
	ldr	r1, [fp, #-52]	@, %sfp
	add	r5, r1, sl	@ tmp229,, i
	ldrb	r3, [ip, #6]	@ zero_extendqisi2	@ D.43593, <variable>.seq_scaling_list_present_flag
	ldrb	r0, [r5, #6]	@ zero_extendqisi2	@ D.43593, <variable>.seq_scaling_list_present_flag
	cmp	r3, r0	@ D.43593, D.43593
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r3, #0	@ D.43593,
	beq	.L973	@,
	cmp	sl, #5	@ i,
	bls	.L1003	@,
	ldr	r0, [fp, #-52]	@, %sfp
	mov	r5, sl, asl #8	@ tmp306, i,
	ldr	r4, [fp, #-48]	@, %sfp
	sub	r1, r5, #400	@ tmp307, tmp306,
	ldr	r7, [fp, #-48]	@, %sfp
	add	r3, r0, r1	@ ivtmp.3056,, tmp307
	add	r2, r4, r1	@ ivtmp.3053,, tmp307
	ldr	r5, [r0, r1]	@ tmp312, <variable>.ScalingList8x8
	add	r0, r2, #8	@ ivtmp.3053, ivtmp.3053,
	mov	ip, #2	@ j,
	ldr	r4, [r7, r1]	@ tmp311, <variable>.ScalingList8x8
	add	r1, r3, #8	@ ivtmp.3056, ivtmp.3056,
	ldr	r7, [r2, #4]	@ tmp440, <variable>.ScalingList8x8
	ldr	r3, [r3, #4]	@ tmp441, <variable>.ScalingList8x8
	cmp	r4, r5	@ tmp311, tmp312
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	r7, r3	@ tmp440, tmp441
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
.L975:
	mov	r2, r0	@ tmp406, ivtmp.3053
	mov	r3, r1	@ tmp407, ivtmp.3056
	ldr	r7, [r2], #4	@ tmp412, <variable>.ScalingList8x8
	add	ip, ip, #2	@ j, j,
	ldr	r5, [r3], #4	@ tmp413, <variable>.ScalingList8x8
	ldr	r4, [r0, #4]	@ tmp419, <variable>.ScalingList8x8
	add	r0, r2, #4	@ ivtmp.3053, tmp406,
	ldr	r2, [r1, #4]	@ tmp420, <variable>.ScalingList8x8
	cmp	r7, r5	@ tmp412, tmp413
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	add	r1, r3, #4	@ ivtmp.3056, tmp407,
	cmp	r4, r2	@ tmp419, tmp420
	movne	r6, #0	@, equal
	andeq	r6, r6, #1	@,, equal, equal
	cmp	ip, #64	@ j,
	bne	.L975	@,
	add	sl, sl, #1	@ i, i,
	add	r9, r9, #64	@ ivtmp.3069, ivtmp.3069,
	cmp	sl, #8	@ i,
	add	r8, r8, #64	@ ivtmp.3071, ivtmp.3071,
	bne	.L976	@,
.L1002:
	ldr	r3, [fp, #-48]	@ pSPS1, %sfp
	ldr	r1, [fp, #-52]	@ pSPS2, %sfp
.L972:
	ldr	r2, [r3, #2900]	@ D.43612, <variable>.pic_order_cnt_type
	ldr	r4, [r1, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	ldr	r0, [r3, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	ldr	r5, [r1, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	cmp	r2, r4	@ D.43612, <variable>.pic_order_cnt_type
	cmpeq	r0, r5	@, <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	movne	ip, #0	@, equal.3111
	moveq	ip, #1	@, equal.3111
	cmp	r2, #0	@ D.43612,
	and	r6, ip, r6	@ equal.3101, equal.3111, equal
	bne	.L1004	@,
	ldr	r7, [r3, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	ldr	r2, [r1, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	cmp	r7, r2	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	movne	r6, #0	@, equal.3101
	andeq	r6, r6, #1	@,, equal.3101, equal.3101
.L977:
	ldrb	r2, [r1, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r5, [r3, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r0, [r1, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r7, [r3, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	ip, [r1, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	cmp	r7, r2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	cmpeq	r5, r0	@, <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r4, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r5, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r0, [r1, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r2, #0	@, equal.3115
	moveq	r2, #1	@, equal.3115
	cmp	r4, ip	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movne	r4, #0	@, equal.3116
	andeq	r4, r2, #1	@,, equal.3116, equal.3115
	ldrb	r2, [r3, #20]	@ zero_extendqisi2	@ D.43645, <variable>.frame_mbs_only_flag
	ldrb	ip, [r1, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r5, r0	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movne	r0, #0	@, equal.3117
	andeq	r0, r4, #1	@,, equal.3117, equal.3116
	cmp	ip, r2	@ <variable>.frame_mbs_only_flag, D.43645
	movne	r0, #0	@, equal.3118
	andeq	r0, r0, #1	@,, equal.3118, equal.3117
	cmp	r2, #0	@ D.43645,
	and	r6, r0, r6	@ equal.3102, equal.3118, equal.3101
	bne	.L981	@,
	ldrb	r4, [r3, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	ldrb	ip, [r1, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	cmp	r4, ip	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movne	r6, #0	@, equal.3102
	andeq	r6, r6, #1	@,, equal.3102, equal.3102
.L981:
	ldrb	r2, [r3, #23]	@ zero_extendqisi2	@ D.43656, <variable>.frame_cropping_flag
	ldrb	r0, [r3, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldrb	r4, [r1, #23]	@ zero_extendqisi2	@ <variable>.frame_cropping_flag, <variable>.frame_cropping_flag
	ldrb	ip, [r1, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	cmp	r4, r2	@ <variable>.frame_cropping_flag, D.43656
	cmpeq	r0, ip	@, <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	movne	r0, #0	@, equal.3119
	moveq	r0, #1	@, equal.3119
	cmp	r2, #0	@ D.43656,
	and	r2, r0, r6	@ equal.3103, equal.3119, equal.3102
	beq	.L982	@,
	ldr	r5, [r1, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r4, [r3, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r0, [r1, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	r7, [r3, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	ldr	r6, [r3, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	cmp	r7, r5	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	cmpeq	r4, r0	@, <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	ldr	ip, [r1, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r4, [r3, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	ldr	r0, [r1, #3968]	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r5, #0	@, equal.3120
	moveq	r5, #1	@, equal.3120
	cmp	r6, ip	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	movne	ip, #0	@, equal.3121
	andeq	ip, r5, #1	@,, equal.3121, equal.3120
	cmp	r4, r0	@ <variable>.frame_crop_bottom_offset, <variable>.frame_crop_bottom_offset
	movne	r0, #0	@, equal.3122
	andeq	r0, ip, #1	@,, equal.3122, equal.3121
	and	r2, r2, r0	@ equal.3103, equal.3103, equal.3122
.L982:
	ldrb	ip, [r3, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	ldrb	r3, [r1, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	ip, r3	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	movne	r2, #0	@, tmp396
	andeq	r2, r2, #1	@,, tmp396, equal.3103
	cmp	r2, #0	@ tmp396,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L970:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1004:
	cmp	r2, #1	@ D.43612,
	bne	.L977	@,
	ldr	r7, [r3, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldr	ip, [r1, #2908]	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	ldrb	r5, [r3, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldrb	r0, [r1, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r4, [r3, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	cmp	r7, ip	@ <variable>.offset_for_non_ref_pic, <variable>.offset_for_non_ref_pic
	cmpeq	r5, r0	@, <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	ldr	r2, [r1, #2912]	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	ldr	r7, [r3, #2916]	@ D.43627, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	ldr	r0, [r1, #2916]	@ <variable>.num_ref_frames_in_pic_order_cnt_cycle, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	ip, #0	@, equal.3112
	moveq	ip, #1	@, equal.3112
	cmp	r4, r2	@ <variable>.offset_for_top_to_bottom_field, <variable>.offset_for_top_to_bottom_field
	movne	r5, #0	@, equal.3113
	andeq	r5, ip, #1	@,, equal.3113, equal.3112
	cmp	r7, r0	@ D.43627, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	movne	r5, #0	@, equal.3114
	andeq	r5, r5, #1	@,, equal.3114, equal.3113
	cmp	r7, #0	@ D.43627,
	and	r6, r6, r5	@ equal.3101, equal.3101, equal.3114
	beq	.L977	@,
	ldr	r4, [r3, #2920]	@ tmp343, <variable>.offset_for_ref_frame
	mov	r7, r7, asl #2	@ D.48630, D.43627,
	ldr	r5, [r1, #2920]	@ tmp344, <variable>.offset_for_ref_frame
	mov	r2, #4	@ ivtmp.3044,
	sub	r0, r7, #4	@ tmp401, D.48630,
	cmp	r4, r5	@ tmp343, tmp344
	movne	r6, #0	@, equal.3101
	andeq	r6, r6, #1	@,, equal.3101, equal.3101
	cmp	r2, r7	@ ivtmp.3044, D.48630
	ubfx	r0, r0, #2, #1	@ tmp402, tmp401,,
	beq	.L977	@,
	cmp	r0, #0	@ tmp402,
	beq	.L980	@,
	ldr	r4, [r3, #2924]	@ tmp437, <variable>.offset_for_ref_frame
	mov	r2, #8	@ ivtmp.3044,
	ldr	r0, [r1, #2924]	@ tmp438, <variable>.offset_for_ref_frame
	cmp	r4, r0	@ tmp437, tmp438
	movne	r6, #0	@, equal.3101
	andeq	r6, r6, #1	@,, equal.3101, equal.3101
	cmp	r2, r7	@ ivtmp.3044, D.48630
	beq	.L977	@,
.L980:
	add	r0, r2, #4	@ tmp403, ivtmp.3044,
	add	r4, r3, r2	@ tmp423, pSPS1, ivtmp.3044
	add	r2, r1, r2	@ tmp424, pSPS2, ivtmp.3044
	add	ip, r3, r0	@ tmp430, pSPS1, tmp403
	add	r8, r1, r0	@ tmp431, pSPS2, tmp403
	ldr	r5, [r4, #2920]	@ tmp425, <variable>.offset_for_ref_frame
	ldr	r4, [r2, #2920]	@ tmp426, <variable>.offset_for_ref_frame
	add	r2, r0, #4	@ ivtmp.3044, tmp403,
	ldr	ip, [ip, #2920]	@ tmp432, <variable>.offset_for_ref_frame
	ldr	r0, [r8, #2920]	@ tmp433, <variable>.offset_for_ref_frame
	cmp	r5, r4	@ tmp425, tmp426
	movne	r6, #0	@, equal.3101
	andeq	r6, r6, #1	@,, equal.3101, equal.3101
	cmp	ip, r0	@ tmp432, tmp433
	movne	r6, #0	@, equal.3101
	andeq	r6, r6, #1	@,, equal.3101, equal.3101
	cmp	r2, r7	@ ivtmp.3044, D.48630
	bne	.L980	@,
	b	.L977	@
.L1001:
	mov	r0, r1	@, pSPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #9835	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L970	@
.L1000:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9834	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L970	@
	.fnend
	.size	MVC_SPSEqual, .-MVC_SPSEqual
	.align	2
	.global	MVC_PPSEqual
	.type	MVC_PPSEqual, %function
MVC_PPSEqual:
	.fnstart
.LFB1636:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r0, #0	@ pPPS1, pPPS1
	beq	.L1026	@,
	cmp	r1, #0	@ pPPS2,
	beq	.L1027	@,
	ldr	r4, [r3, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	ip, [r1, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r2, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r6, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r0, [r1, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r4, ip	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmpeq	r6, r2	@, <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	ldrb	r4, [r3, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	ip, #0	@, equal.3274
	moveq	ip, #1	@, equal.3274
	cmp	r5, r0	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	movne	r5, #0	@, equal.3275
	andeq	r5, ip, #1	@,, equal.3275, equal.3274
	ldr	ip, [r1, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldr	r0, [r3, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	cmp	r4, r2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	movne	r4, #0	@, equal.3276
	andeq	r4, r5, #1	@,, equal.3276, equal.3275
	ldr	r5, [r1, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	ldr	r2, [r3, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r0, ip	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movne	r0, #0	@, equal.3277
	andeq	r0, r4, #1	@,, equal.3277, equal.3276
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	ldrb	ip, [r3, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r2, r5	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movne	r2, #0	@, equal.3278
	andeq	r2, r0, #1	@,, equal.3278, equal.3277
	ldr	r0, [r1, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	ldr	r5, [r3, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	ip, r4	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	movne	ip, #0	@, equal.3279
	andeq	ip, r2, #1	@,, equal.3279, equal.3278
	ldr	r2, [r1, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	ldr	r4, [r3, #48]	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	cmp	r5, r0	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	movne	r5, #0	@, equal.3280
	andeq	r5, ip, #1	@,, equal.3280, equal.3279
	ldr	ip, [r1, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	ldr	r0, [r3, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	cmp	r4, r2	@ <variable>.pic_init_qp_minus26, <variable>.pic_init_qp_minus26
	movne	r4, #0	@, equal.3281
	andeq	r4, r5, #1	@,, equal.3281, equal.3280
	ldrb	r5, [r1, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	ldrb	r2, [r3, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r0, ip	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movne	r0, #0	@, equal.3282
	andeq	r0, r4, #1	@,, equal.3282, equal.3281
	ldrb	r4, [r1, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	cmp	r2, r5	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	movne	r2, #0	@, equal.3283
	andeq	r2, r0, #1	@,, equal.3283, equal.3282
	ldr	r0, [r3, #60]	@ D.43330, <variable>.transform_8x8_mode_flag
	ldr	r5, [r1, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	cmp	ip, r4	@ <variable>.constrained_intra_pred_flag, <variable>.constrained_intra_pred_flag
	movne	ip, #0	@, equal.3284
	andeq	ip, r2, #1	@,, equal.3284, equal.3283
	ldrb	r2, [r3, #18]	@ zero_extendqisi2	@ D.43333, <variable>.pic_scaling_matrix_present_flag
	ldrb	r4, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, r5	@ D.43330, <variable>.transform_8x8_mode_flag
	movne	ip, #0	@, equal.3285
	andeq	ip, ip, #1	@,, equal.3285, equal.3284
	cmp	r4, r2	@ <variable>.pic_scaling_matrix_present_flag, D.43333
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3285
	cmp	r2, #0	@ D.43333,
	beq	.L1009	@,
	mov	r2, r0, asl #1	@ tmp242, D.43330,
	adds	r0, r2, #6	@, tmp242,
	str	r0, [fp, #-64]	@, %sfp
	beq	.L1009	@,
	mov	r8, r3	@ ivtmp.3233, pPPS1
	mov	sl, r1	@ ivtmp.3332, pPPS2
	mov	r9, #0	@ i,
	str	r1, [fp, #-52]	@ pPPS2, %sfp
	str	r3, [fp, #-48]	@ pPPS1, %sfp
	str	r3, [fp, #-56]	@ pPPS1, %sfp
	str	r1, [fp, #-60]	@ pPPS2, %sfp
.L1013:
	ldr	r3, [fp, #-56]	@, %sfp
	ldr	r4, [fp, #-60]	@, %sfp
	add	r2, r3, r9	@ tmp243,, i
	add	r0, r4, r9	@ tmp244,, i
	ldrb	r3, [r2, #5]	@ zero_extendqisi2	@ D.43339, <variable>.pic_scaling_list_present_flag
	ldrb	r1, [r0, #5]	@ zero_extendqisi2	@ D.43339, <variable>.pic_scaling_list_present_flag
	cmp	r3, r1	@ D.43339, D.43339
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r3, #0	@ D.43339,
	beq	.L1025	@,
	cmp	r9, #5	@ i,
	bhi	.L1011	@,
	ldr	r4, [fp, #-48]	@, %sfp
	ldr	r2, [fp, #-52]	@, %sfp
	ldr	r0, [r4, #1984]	@ D.43346, <variable>.UseDefaultScalingMatrix4x4Flag
	ldr	r1, [r2, #1984]	@ tmp250, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r0, r1	@ D.43346, tmp250
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r0, #0	@ D.43346,
	beq	.L1023	@,
.L1025:
	add	r9, r9, #1	@ i, i,
.L1010:
	ldr	r4, [fp, #-64]	@, %sfp
	add	r8, r8, #64	@ ivtmp.3233, ivtmp.3233,
	ldr	r2, [fp, #-48]	@, %sfp
	add	sl, sl, #64	@ ivtmp.3332, ivtmp.3332,
	ldr	r1, [fp, #-52]	@, %sfp
	cmp	r4, r9	@, i
	add	r3, r2, #4	@,,
	str	r3, [fp, #-48]	@, %sfp
	add	r0, r1, #4	@,,
	str	r0, [fp, #-52]	@, %sfp
	bhi	.L1013	@,
	ldr	r3, [fp, #-56]	@ pPPS1, %sfp
	ldr	r1, [fp, #-60]	@ pPPS2, %sfp
.L1009:
	ldr	r0, [r3, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r3, [r1, #56]	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	cmp	r0, r3	@ <variable>.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	movne	ip, #0	@, tmp333
	andeq	ip, ip, #1	@,, tmp333, equal
	cmp	ip, #0	@ tmp333,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L1007:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1011:
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	r1, [fp, #-52]	@, %sfp
	ldr	r4, [r2, #1984]	@ D.43357, <variable>.UseDefaultScalingMatrix8x8Flag
	sub	r2, r9, #6	@ D.43356, i,
	ldr	r0, [r1, #1984]	@ tmp319, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r4, r0	@ D.43357, tmp319
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #0	@ D.43357,
	bne	.L1025	@,
	mov	r3, r2, asl #8	@ tmp321, D.43356,
	ldr	r5, [fp, #-60]	@, %sfp
	ldr	r7, [fp, #-56]	@, %sfp
	add	r6, r3, #448	@ tmp322, tmp321,
	add	r0, r5, r6	@ ivtmp.3223,, tmp322
	add	r1, r7, r6	@ ivtmp.3220,, tmp322
.L1012:
	mov	r2, r1	@ tmp337, ivtmp.3220
	mov	r3, r0	@ tmp338, ivtmp.3223
	ldr	r7, [r2], #4	@ tmp326, <variable>.ScalingList8x8
	add	r4, r4, #2	@ j, j,
	ldr	r6, [r3], #4	@ tmp327, <variable>.ScalingList8x8
	ldr	r5, [r1, #4]	@ tmp343, <variable>.ScalingList8x8
	add	r1, r2, #4	@ ivtmp.3220, tmp337,
	ldr	r2, [r0, #4]	@ tmp344, <variable>.ScalingList8x8
	cmp	r7, r6	@ tmp326, tmp327
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	add	r0, r3, #4	@ ivtmp.3223, tmp338,
	cmp	r5, r2	@ tmp343, tmp344
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal
	cmp	r4, #64	@ j,
	bne	.L1012	@,
	b	.L1025	@
.L1023:
	ldr	r0, [r8, #72]	@ tmp253, <variable>.ScalingList4x4
	add	r9, r9, #1	@ i, i,
	ldr	r1, [sl, #72]	@ tmp254, <variable>.ScalingList4x4
	ldr	r2, [r8, #68]	@ tmp257, <variable>.ScalingList4x4
	ldr	r3, [sl, #68]	@ tmp258, <variable>.ScalingList4x4
	ldr	r5, [r8, #76]	@ tmp261, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp253, tmp254
	cmpeq	r2, r3	@, tmp257, tmp258
	ldr	r6, [sl, #76]	@ tmp262, <variable>.ScalingList4x4
	ldr	r4, [sl, #80]	@ tmp266, <variable>.ScalingList4x4
	ldr	r1, [r8, #80]	@ tmp265, <variable>.ScalingList4x4
	movne	r3, #0	@, equal.3290
	moveq	r3, #1	@, equal.3290
	ldr	r0, [r8, #84]	@ tmp269, <variable>.ScalingList4x4
	cmp	r5, r6	@ tmp261, tmp262
	movne	r3, #0	@, equal.3294
	andeq	r3, r3, #1	@,, equal.3294, equal.3290
	ldr	r5, [sl, #84]	@ tmp270, <variable>.ScalingList4x4
	cmp	r1, r4	@ tmp265, tmp266
	movne	r1, #0	@, equal.3298
	andeq	r1, r3, #1	@,, equal.3298, equal.3294
	ldr	r2, [r8, #88]	@ tmp273, <variable>.ScalingList4x4
	ldr	r3, [sl, #88]	@ tmp274, <variable>.ScalingList4x4
	cmp	r0, r5	@ tmp269, tmp270
	movne	r1, #0	@, equal.3302
	andeq	r1, r1, #1	@,, equal.3302, equal.3298
	ldr	r4, [r8, #92]	@ tmp277, <variable>.ScalingList4x4
	ldr	r5, [sl, #92]	@ tmp278, <variable>.ScalingList4x4
	cmp	r2, r3	@ tmp273, tmp274
	movne	r3, #0	@, equal.3306
	andeq	r3, r1, #1	@,, equal.3306, equal.3302
	ldr	r0, [r8, #96]	@ tmp281, <variable>.ScalingList4x4
	ldr	r1, [sl, #96]	@ tmp282, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp277, tmp278
	movne	r3, #0	@, equal.3310
	andeq	r3, r3, #1	@,, equal.3310, equal.3306
	ldr	r4, [r8, #100]	@ tmp285, <variable>.ScalingList4x4
	ldr	r5, [sl, #100]	@ tmp286, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp281, tmp282
	movne	r1, #0	@, equal.3314
	andeq	r1, r3, #1	@,, equal.3314, equal.3310
	ldr	r2, [r8, #104]	@ tmp289, <variable>.ScalingList4x4
	ldr	r0, [sl, #104]	@ tmp290, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp285, tmp286
	movne	r1, #0	@, equal.3318
	andeq	r1, r1, #1	@,, equal.3318, equal.3314
	ldr	r4, [r8, #108]	@ tmp293, <variable>.ScalingList4x4
	ldr	r5, [sl, #108]	@ tmp294, <variable>.ScalingList4x4
	cmp	r2, r0	@ tmp289, tmp290
	movne	r3, #0	@, equal.3322
	andeq	r3, r1, #1	@,, equal.3322, equal.3318
	ldr	r0, [r8, #112]	@ tmp297, <variable>.ScalingList4x4
	ldr	r1, [sl, #112]	@ tmp298, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp293, tmp294
	movne	r3, #0	@, equal.3326
	andeq	r3, r3, #1	@,, equal.3326, equal.3322
	ldr	r4, [r8, #116]	@ tmp301, <variable>.ScalingList4x4
	ldr	r5, [sl, #116]	@ tmp302, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp297, tmp298
	movne	r1, #0	@, equal.3331
	andeq	r1, r3, #1	@,, equal.3331, equal.3326
	ldr	r2, [r8, #120]	@ tmp305, <variable>.ScalingList4x4
	cmp	r4, r5	@ tmp301, tmp302
	movne	r1, #0	@, equal.3336
	andeq	r1, r1, #1	@,, equal.3336, equal.3331
	ldr	r4, [fp, #-56]	@, %sfp
	ldr	r3, [sl, #120]	@ tmp306, <variable>.ScalingList4x4
	ldr	r0, [r4, r9, asl #6]	@ tmp311, <variable>.ScalingList4x4
	cmp	r2, r3	@ tmp305, tmp306
	movne	r4, #0	@, equal.3340
	andeq	r4, r1, #1	@,, equal.3340, equal.3336
	ldr	r2, [fp, #-60]	@, %sfp
	and	ip, ip, r4	@ equal.3344, equal, equal.3340
	ldr	r3, [sl, #124]	@ tmp316, <variable>.ScalingList4x4
	ldr	r1, [r2, r9, asl #6]	@ tmp312, <variable>.ScalingList4x4
	ldr	r2, [r8, #124]	@ tmp315, <variable>.ScalingList4x4
	cmp	r0, r1	@ tmp311, tmp312
	movne	ip, #0	@, equal.3348
	andeq	ip, ip, #1	@,, equal.3348, equal.3344
	cmp	r2, r3	@ tmp315, tmp316
	movne	ip, #0	@, equal
	andeq	ip, ip, #1	@,, equal, equal.3348
	b	.L1010	@
.L1026:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #9616	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L1007	@
.L1027:
	mov	r0, r1	@, pPPS2
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #9617	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ret,
	b	.L1007	@
	.fnend
	.size	MVC_PPSEqual, .-MVC_PPSEqual
	.align	2
	.global	MVC_CalcStreamBits
	.type	MVC_CalcStreamBits, %function
MVC_CalcStreamBits:
	.fnstart
.LFB1631:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11159240	@ tmp168,
	movt	r1, #:upper16:11159240	@ tmp168,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	cmp	r3, #0	@ <variable>.CurrPPS.entropy_coding_mode_flag,
	beq	.L1029	@,
	ldr	lr, [r0, #368]	@ D.42823, <variable>.pCurrNal
	ldr	r1, [lr, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r3, r1, #7	@ tmp170, <variable>.nal_bitoffset,
	bic	ip, r3, #7	@ tmp172, tmp170,
	str	ip, [lr, #60]	@ tmp172, <variable>.nal_bitoffset
	ldr	r0, [r0, #368]	@ temp.3394, <variable>.pCurrNal
	ldr	r5, [r0, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	sub	r2, r5, #1	@ tmp174, <variable>.nal_trail_zero_bit_num,
	str	r2, [r0, #68]	@ tmp174, <variable>.nal_trail_zero_bit_num
.L1029:
	ldr	ip, [r4, #368]	@ temp.3440, <variable>.pCurrNal
	ldrb	r5, [ip, #0]	@ zero_extendqisi2	@ temp.3441, <variable>.nal_used_segment
	cmp	r5, #0	@ temp.3441,
	moveq	r6, r5	@ code_len_byte, temp.3441
	moveq	r7, r5	@ temp.3441, temp.3441
	beq	.L1031	@,
	mov	r7, r5, asl #3	@ temp.3441, temp.3441,
	mov	r3, #28	@ ivtmp.3392,
	rsb	r2, r5, r7	@ tmp177, temp.3441, temp.3441
	ldr	r6, [ip, #8]	@ code_len_byte, <variable>.bitstream_length
	mov	r2, r2, asl #2	@ D.48988, tmp177,
	cmp	r3, r2	@ ivtmp.3392, D.48988
	sub	r0, r2, #28	@ tmp448, D.48988,
	ubfx	r1, r0, #2, #1	@ tmp452, tmp448,,
	beq	.L1031	@,
	cmp	r1, #0	@ tmp452,
	beq	.L1032	@,
	ldr	r1, [ip, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r3, #56	@ ivtmp.3392,
	cmp	r3, r2	@ ivtmp.3392, D.48988
	add	r6, r6, r1	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	beq	.L1031	@,
.L1032:
	add	lr, ip, r3	@ tmp457, temp.3440, ivtmp.3392
	add	r3, r3, #56	@ ivtmp.3392, ivtmp.3392,
	cmp	r3, r2	@ ivtmp.3392, D.48988
	ldr	r0, [lr, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	lr, [lr, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, r0	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	add	r6, r6, lr	@ code_len_byte, code_len_byte, <variable>.bitstream_length
	bne	.L1032	@,
.L1031:
	rsb	r3, r5, r7	@ tmp185, temp.3441, temp.3441
	ldr	r2, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC3	@,
	add	lr, ip, r3, asl #2	@, tmp187, temp.3440, tmp185,
	movt	r1, #:upper16:.LC3	@,
	mov	r3, r6	@, code_len_byte
	ldr	lr, [lr, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	str	lr, [sp, #4]	@ <variable>.nal_trail_zero_bit_num,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #368]	@ temp.3397, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	r1, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r2, ip, ip, asl #3	@, tmp194, <variable>.nal_used_segment, <variable>.nal_used_segment,
	and	ip, r1, #7	@ tmp199, <variable>.nal_bitoffset,
	add	r0, r3, r2, asl #2	@, tmp196, temp.3397, tmp194,
	str	ip, [r0, #20]	@ tmp199, <variable>.bitsoffset
	ldr	r0, [r4, #368]	@ temp.3401, <variable>.pCurrNal
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.3404, <variable>.nal_used_segment
	ldr	r1, [r0, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r2, r3, r3, asl #3	@, tmp203, temp.3404, temp.3404,
	add	r3, r0, r2, asl #2	@, tmp205, temp.3401, tmp203,
	ldr	ip, [r3, #12]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	add	r2, ip, r1, lsr #3	@, tmp216, <variable>.stream_phy_addr, <variable>.nal_bitoffset,
	rsb	r0, r6, r2	@ tmp218, code_len_byte, tmp216
	str	r0, [r3, #24]	@ tmp218, <variable>.bytespos
	ldr	r3, [r4, #368]	@ temp.3405, <variable>.pCurrNal
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ temp.3407, <variable>.nal_used_segment
	ldr	r0, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	rsb	r1, ip, ip, asl #3	@, tmp222, temp.3407, temp.3407,
	add	ip, r3, r1, asl #2	@, tmp224, temp.3405, tmp222,
	ldr	r2, [ip, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r6, r6, r2	@ tmp231, code_len_byte, <variable>.bitstream_length
	rsb	r6, r0, r6, asl #3	@, tmp235, <variable>.nal_bitoffset, tmp231,
	str	r6, [ip, #16]	@ tmp235, <variable>.valid_bitlen
	b	.L1058	@
.L1060:
	rsb	ip, r2, r1	@ tmp247, temp.3438, tmp438
	add	r3, r3, ip, asl #2	@, tmp249, temp.3409, tmp247,
	add	lr, r3, #16	@ tmp250, tmp249,
	ldr	r0, [lr, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r1, r0, #8	@ tmp259, <variable>.bitsoffset,
	str	r1, [lr, #4]	@ tmp259, <variable>.bitsoffset
	ldr	ip, [r4, #368]	@ temp.3412, <variable>.pCurrNal
	ldrb	r2, [ip, #0]	@ zero_extendqisi2	@ temp.3414, <variable>.nal_used_segment
	rsb	r0, r2, r2, asl #3	@, tmp263, temp.3414, temp.3414,
	add	r3, ip, r0, asl #2	@, tmp265, temp.3412, tmp263,
	add	r1, r3, #16	@ tmp266, tmp265,
	ldr	lr, [r1, #8]	@ <variable>.bytespos, <variable>.bytespos
	sub	r2, lr, #1	@ tmp275, <variable>.bytespos,
	str	r2, [r1, #8]	@ tmp275, <variable>.bytespos
.L1058:
	ldr	r3, [r4, #368]	@ temp.3409, <variable>.pCurrNal
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ temp.3438, <variable>.nal_used_segment
	mov	r1, r2, asl #3	@ tmp438, temp.3438,
	rsb	ip, r2, r1	@ tmp239, temp.3438, tmp438
	add	r0, r3, ip, asl #2	@, tmp241, temp.3409, tmp239,
	ldr	lr, [r0, #24]	@ temp.3431, <variable>.bytespos
	tst	lr, #3	@ temp.3431,
	bne	.L1060	@,
	rsb	r7, r5, r7	@ tmp288, temp.3441, temp.3441
	mov	r2, r5	@, temp.3441
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC4	@,
	add	r7, r3, r7, asl #2	@, tmp290, temp.3409, tmp288,
	movt	r1, #:upper16:.LC4	@,
	ldr	ip, [r7, #16]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [r7, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	ldr	r1, [r4, #368]	@ temp.3416, <variable>.pCurrNal
	ldrb	r5, [r1, #0]	@ zero_extendqisi2	@ <variable>.nal_used_segment, <variable>.nal_used_segment
	ldr	r2, [r1, #64]	@ temp.3425, <variable>.nal_segment
	add	r5, r5, #1	@ i.3419, <variable>.nal_used_segment,
	cmp	r5, r2	@ i.3419, temp.3425
	bcs	.L1035	@,
	mov	r6, #0	@ tmp443,
.L1045:
	mov	ip, r5, asl #3	@ tmp439, i.3419,
	rsb	r2, r5, ip	@ tmp305, i.3419, tmp439
	mov	r2, r2, asl #2	@ tmp306, tmp305,
	add	r1, r2, r1	@ tmp307, tmp306, temp.3416
	add	r3, r1, #16	@ tmp308, tmp307,
	str	r6, [r3, #4]	@ tmp443, <variable>.bitsoffset
	ldr	r0, [r4, #368]	@ temp.3420, <variable>.pCurrNal
	add	lr, r2, r0	@ tmp315, tmp306, temp.3420
	ldr	r1, [lr, #12]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	r1, [lr, #24]	@ <variable>.stream_phy_addr, <variable>.bytespos
	ldr	r3, [r4, #368]	@ temp.3421, <variable>.pCurrNal
	add	lr, r2, r3	@ tmp330, tmp306, temp.3421
	ldr	r0, [lr, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	mov	r1, r0, asl #3	@ tmp338, <variable>.bitstream_length,
	str	r1, [lr, #16]	@ tmp338, <variable>.valid_bitlen
	b	.L1059	@
.L1061:
	add	r3, r2, r3	@ tmp353, tmp442, temp.3415
	add	lr, r3, #16	@ tmp354, tmp353,
	ldr	r0, [lr, #4]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	r1, r0, #8	@ tmp363, <variable>.bitsoffset,
	str	r1, [lr, #4]	@ tmp363, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.3427, <variable>.pCurrNal
	add	r0, r2, r3	@ tmp369, tmp442, temp.3427
	add	r1, r0, #16	@ tmp370, tmp369,
	ldr	lr, [r1, #8]	@ <variable>.bytespos, <variable>.bytespos
	sub	r3, lr, #1	@ tmp379, <variable>.bytespos,
	str	r3, [r1, #8]	@ tmp379, <variable>.bytespos
.L1059:
	ldr	r3, [r4, #368]	@ temp.3415, <variable>.pCurrNal
	add	r0, r2, r3	@ tmp344, tmp306, temp.3415
	ldr	lr, [r0, #24]	@ <variable>.bytespos, <variable>.bytespos
	tst	lr, #3	@ <variable>.bytespos,
	bne	.L1061	@,
	rsb	ip, r5, ip	@ tmp392, i.3419, tmp439
	mov	r2, r5	@, i.3419
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC5	@,
	add	lr, r3, ip, asl #2	@, tmp394, temp.3415, tmp392,
	movt	r1, #:upper16:.LC5	@,
	add	r5, r5, #1	@ i.3419, i.3419,
	ldr	ip, [lr, #16]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	ldr	r3, [lr, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	ip, [sp, #0]	@ <variable>.valid_bitlen,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #368]	@ temp.3416, <variable>.pCurrNal
	ldr	r2, [r1, #64]	@ temp.3425, <variable>.nal_segment
	cmp	r2, r5	@ temp.3425, i.3419
	bhi	.L1045	@,
.L1035:
	sub	r3, r2, #1	@ D.42861, temp.3425,
	cmp	r3, #1	@ D.42861,
	bhi	.L1062	@,
	rsb	ip, r3, r3, asl #3	@, tmp409, D.42861, D.42861,
	ldr	r2, [r1, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	lr, r1, ip, asl #2	@, tmp411, temp.3416, tmp409,
	add	r1, lr, #8	@ tmp412, tmp411,
	ldr	r3, [r1, #8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	rsb	r0, r2, r3	@ tmp422, <variable>.nal_trail_zero_bit_num, <variable>.valid_bitlen
	str	r0, [r1, #8]	@ tmp422, <variable>.valid_bitlen
	ldr	r2, [r4, #368]	@ temp.3433, <variable>.pCurrNal
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r1, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i
	bls	.L1043	@,
	movw	ip, #:lower16:11196720	@ tmp440,
	movt	ip, #:upper16:11196720	@ tmp440,
.L1044:
	rsb	r0, r3, r3, asl #3	@, tmp427, i, i,
	ldr	r5, [r4, ip]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	add	r3, r3, #1	@ i, i,
	add	lr, r2, r0, asl #2	@, tmp429, temp.3433, tmp427,
	ldr	r0, [lr, #24]	@ temp.3436, <variable>.bytespos
	cmp	r0, r5	@ temp.3436, <variable>.CurrPic.stream_base_addr
	strcc	r0, [r4, ip]	@ temp.3436, <variable>.CurrPic.stream_base_addr
	ldrcc	r1, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, r3	@ <variable>.nal_segment, i
	bhi	.L1044	@,
.L1043:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L1062:
	movw	r1, #:lower16:.LC6	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC6	@,
	bl	dprint_vfmw	@
	b	.L1043	@
	.fnend
	.size	MVC_CalcStreamBits, .-MVC_CalcStreamBits
	.align	2
	.global	MVC_IsNewPic
	.type	MVC_IsNewPic, %function
MVC_IsNewPic:
	.fnstart
.LFB1622:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11152036	@ tmp154,
	movt	r8, #:upper16:11152036	@ tmp154,
	movw	r7, #:lower16:11164308	@ tmp155,
	movw	r6, #:lower16:11164312	@ tmp160,
	movt	r7, #:upper16:11164308	@ tmp155,
	ldr	r5, [r0, r8]	@ D.42077, <variable>.pCurrSPS
	movt	r6, #:upper16:11164312	@ tmp160,
	movw	sl, #:lower16:11162632	@ tmp161,
	movt	sl, #:upper16:11162632	@ tmp161,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	movw	ip, #:lower16:11164320	@ tmp166,
	ldr	r8, [r3, r7]	@ <variable>.PrevSlice.seq_parameter_set_id, <variable>.PrevSlice.seq_parameter_set_id
	movt	ip, #:upper16:11164320	@ tmp166,
	ldr	r7, [r3, r6]	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.PrevSlice.pic_parameter_set_id
	movw	r0, #:lower16:11162644	@ tmp167,
	ldr	r6, [r3, sl]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	movt	r0, #:upper16:11162644	@ tmp167,
	ldr	sl, [r5, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #:lower16:11164304	@ tmp172,
	movw	r2, #:lower16:11162625	@ tmp173,
	movt	r1, #:upper16:11164304	@ tmp172,
	movt	r2, #:upper16:11162625	@ tmp173,
	cmp	r7, r6	@ <variable>.PrevSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmpeq	r8, sl	@, <variable>.PrevSlice.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r4, [r3, ip]	@ <variable>.PrevSlice.frame_num, <variable>.PrevSlice.frame_num
	ldr	lr, [r3, r0]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	ip, #0	@, result.3467
	movne	ip, #1	@, result.3467
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ D.42083, <variable>.PrevSlice.field_pic_flag
	ldrb	r2, [r3, r2]	@ zero_extendqisi2	@ D.42084, <variable>.CurrSlice.field_pic_flag
	cmp	r4, lr	@ <variable>.PrevSlice.frame_num, <variable>.CurrSlice.frame_num
	moveq	r0, ip	@, result.3468, result.3467
	orrne	r0, ip, #1	@,, result.3468, result.3467
	cmp	r1, r2	@ D.42083, D.42084
	orrne	r0, r0, #1	@,, result, result.3468
	cmp	r1, #0	@ D.42083,
	beq	.L1064	@,
	cmp	r2, #0	@ D.42084,
	bne	.L1074	@,
.L1064:
	movw	r4, #:lower16:11164316	@ tmp182,
	movw	ip, #:lower16:11162656	@ tmp183,
	movt	r4, #:upper16:11164316	@ tmp182,
	movt	ip, #:upper16:11162656	@ tmp183,
	ldr	r1, [r3, r4]	@ D.42097, <variable>.PrevSlice.nal_ref_idc
	ldr	r4, [r3, ip]	@ D.42098, <variable>.CurrSlice.nal_ref_idc
	cmp	r1, r4	@ D.42097, D.42098
	moveq	r4, #0	@ prephitmp.3455,
	beq	.L1066	@,
	cmp	r1, #0	@ D.42097,
	moveq	r4, #1	@ prephitmp.3455,
	bne	.L1075	@,
.L1066:
	movw	r1, #:lower16:11164306	@ tmp186,
	movw	r2, #:lower16:11162627	@ tmp187,
	movt	r1, #:upper16:11164306	@ tmp186,
	movt	r2, #:upper16:11162627	@ tmp187,
	ldrb	r1, [r3, r1]	@ zero_extendqisi2	@ D.42102, <variable>.PrevSlice.nal_unit_type
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ D.42103, <variable>.CurrSlice.nal_unit_type
	cmp	r1, lr	@ D.42102, D.42103
	orrne	r0, r0, #1	@,, result.3469, result
	cmp	lr, #5	@ D.42103,
	orr	r4, r0, r4	@ result.3466, result.3469, prephitmp.3455
	beq	.L1076	@,
.L1068:
	ldr	r2, [r5, #2900]	@ D.42112, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ D.42112,
	bne	.L1069	@,
	movw	ip, #:lower16:11164332	@ tmp196,
	movw	r0, #:lower16:11161484	@ tmp197,
	movw	r1, #:lower16:11164328	@ tmp202,
	movw	r2, #:lower16:11161480	@ tmp203,
	movt	ip, #:upper16:11164332	@ tmp196,
	movt	r0, #:upper16:11161484	@ tmp197,
	movt	r1, #:upper16:11164328	@ tmp202,
	movt	r2, #:upper16:11161480	@ tmp203,
.L1073:
	ldr	lr, [r3, ip]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	ip, [r3, r0]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	ldr	r0, [r3, r1]	@ <variable>.PrevSlice.delta_pic_order_cnt,
	ldr	r1, [r3, r2]	@ <variable>.CurrPOC.delta_pic_order_cnt,
	cmp	r0, r1	@ <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	cmpeq	lr, ip	@, <variable>.PrevSlice.delta_pic_order_cnt, <variable>.CurrPOC.delta_pic_order_cnt
	moveq	r1, #0	@, result.3471
	movne	r1, #1	@, result.3471
	orr	r4, r4, r1	@ result.3466, result.3466, result.3471
.L1070:
	movw	r0, #:lower16:11164276	@ tmp220,
	movt	r0, #:upper16:11164276	@ tmp220,
	ldr	r2, [r3, r0]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1071	@,
	movw	r5, #:lower16:11164352	@ tmp222,
	movw	lr, #:lower16:11164288	@ tmp223,
	movt	r5, #:upper16:11164352	@ tmp222,
	movt	lr, #:upper16:11164288	@ tmp223,
	movw	ip, #:lower16:11164348	@ tmp228,
	movw	r0, #:lower16:11164280	@ tmp229,
	movt	ip, #:upper16:11164348	@ tmp228,
	movt	r0, #:upper16:11164280	@ tmp229,
	ldr	r7, [r3, r5]	@ <variable>.PrevSlice.anchor_pic_flag, <variable>.PrevSlice.anchor_pic_flag
	movw	r1, #:lower16:11164356	@ tmp234,
	ldr	r6, [r3, lr]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r1, #:upper16:11164356	@ tmp234,
	ldr	lr, [r3, r0]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r2, #:lower16:11164292	@ tmp235,
	ldr	r5, [r3, ip]	@ <variable>.PrevSlice.view_id, <variable>.PrevSlice.view_id
	movt	r2, #:upper16:11164292	@ tmp235,
	ldr	ip, [r3, r1]	@ <variable>.PrevSlice.inter_view_flag, <variable>.PrevSlice.inter_view_flag
	cmp	r5, lr	@ <variable>.PrevSlice.view_id, <variable>.CurrSlice.view_id
	cmpeq	r7, r6	@, <variable>.PrevSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	ldr	r0, [r3, r2]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	r1, #0	@, result.3472
	movne	r1, #1	@, result.3472
	cmp	ip, r0	@ <variable>.PrevSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	moveq	lr, r1	@, result.3473, result.3472
	orrne	lr, r1, #1	@,, result.3473, result.3472
	orr	r4, r4, lr	@ result.3466, result.3466, result.3473
.L1071:
	movw	r2, #:lower16:11162676	@ tmp240,
	movt	r2, #:upper16:11162676	@ tmp240,
	mov	r0, #19	@,
	movw	r1, #:lower16:.LC7	@,
	ldr	r3, [r3, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	movt	r1, #:upper16:.LC7	@,
	cmp	r3, #0	@ <variable>.CurrSlice.first_mb_in_slice,
	orreq	r4, r4, #1	@,, result.3474, result.3466
	mov	r2, r4	@, result.3474
	bl	dprint_vfmw	@
	mov	r0, r4	@, result.3474
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1069:
	cmp	r2, #1	@ D.42112,
	bne	.L1070	@,
	movw	ip, #:lower16:11164340	@ tmp208,
	movw	r0, #:lower16:11161532	@ tmp209,
	movw	r1, #:lower16:11164336	@ tmp214,
	movw	r2, #:lower16:11161528	@ tmp215,
	movt	ip, #:upper16:11164340	@ tmp208,
	movt	r0, #:upper16:11161532	@ tmp209,
	movt	r1, #:upper16:11164336	@ tmp214,
	movt	r2, #:upper16:11161528	@ tmp215,
	b	.L1073	@
.L1075:
	rsbs	r4, r4, #1	@ prephitmp.3455, D.42098
	movcc	r4, #0	@ prephitmp.3455
	b	.L1066	@
.L1074:
	movw	r1, #:lower16:11164305	@ tmp176,
	movw	r2, #:lower16:11162626	@ tmp177,
	movt	r1, #:upper16:11164305	@ tmp176,
	movt	r2, #:upper16:11162626	@ tmp177,
	ldrb	r4, [r3, r1]	@ zero_extendqisi2	@ <variable>.PrevSlice.bottom_field_flag, <variable>.PrevSlice.bottom_field_flag
	ldrb	lr, [r3, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r4, lr	@ <variable>.PrevSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	orrne	r0, r0, #1	@,, result, result
	b	.L1064	@
.L1076:
	cmp	r1, #5	@ D.42102,
	bne	.L1068	@,
	movw	r2, #:lower16:11164324	@ tmp190,
	movw	lr, #:lower16:11162664	@ tmp191,
	movt	r2, #:upper16:11164324	@ tmp190,
	movt	lr, #:upper16:11162664	@ tmp191,
	ldr	r0, [r3, r2]	@ <variable>.PrevSlice.idr_pic_id, <variable>.PrevSlice.idr_pic_id
	ldr	ip, [r3, lr]	@ <variable>.CurrSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	cmp	r0, ip	@ <variable>.PrevSlice.idr_pic_id, <variable>.CurrSlice.idr_pic_id
	orrne	r4, r4, #1	@,, result.3466, result.3466
	b	.L1068	@
	.fnend
	.size	MVC_IsNewPic, .-MVC_IsNewPic
	.align	2
	.global	MVC_PPSSPSCheckTmpId
	.type	MVC_PPSSPSCheckTmpId, %function
MVC_PPSSPSCheckTmpId:
	.fnstart
.LFB1621:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ tmp_pic_parameter_set_id, tmp_pic_parameter_set_id
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r2, r5	@, tmp_pic_parameter_set_id
	movw	r1, #:lower16:.LC8	@,
	mov	r0, #19	@,
	movt	r1, #:upper16:.LC8	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:11155244	@ tmp140,
	movt	r1, #:upper16:11155244	@ tmp140,
	mov	r2, #2240	@ tmp142,
	ldr	r0, [r4, r1]	@ <variable>.PPS, <variable>.PPS
	mla	r2, r2, r5, r0	@ pPPS, tmp142, tmp_pic_parameter_set_id, <variable>.PPS
	ldrb	r3, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L1083	@,
	movw	r3, #:lower16:11155232	@ tmp146,
	movt	r3, #:upper16:11155232	@ tmp146,
	ldr	r2, [r2, #28]	@ D.42053, <variable>.seq_parameter_set_id
	ldr	lr, [r4, r3]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, lr, #1	@ tmp147, <variable>.MaxSpsNum,
	cmp	r2, ip	@ D.42053, tmp147
	bhi	.L1084	@,
	movw	r0, #:lower16:11164272	@ tmp150,
	movt	r0, #:upper16:11164272	@ tmp150,
	ldr	r5, [r4, r0]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmn	r5, #1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1085	@,
.L1081:
	mov	r0, #0	@ D.42052,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1085:
	movw	r3, #:lower16:11155240	@ tmp153,
	movt	r3, #:upper16:11155240	@ tmp153,
	movw	r0, #3992	@ tmp155,
	ldr	lr, [r4, r3]	@ <variable>.SPS, <variable>.SPS
	mla	ip, r0, r2, lr	@ tmp156, tmp155, D.42053, <variable>.SPS
	ldrb	r1, [ip, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L1081	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC11	@,
	movt	r1, #:upper16:.LC11	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.42052, <variable>.CurrSlice.svc_extension_flag
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1083:
	mov	r2, r5	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC9	@,
	movt	r1, #:upper16:.LC9	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42052,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1084:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC10	@,
	movt	r1, #:upper16:.LC10	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42052,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_PPSSPSCheckTmpId, .-MVC_PPSSPSCheckTmpId
	.align	2
	.global	MVC_PPSSPSCheck
	.type	MVC_PPSSPSCheck, %function
MVC_PPSSPSCheck:
	.fnstart
.LFB1620:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:11162632	@ tmp143,
	movt	r5, #:upper16:11162632	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r1, #:lower16:.LC12	@,
	mov	r0, #19	@,
	movt	r1, #:upper16:.LC12	@,
	ldr	r2, [r4, r5]	@, <variable>.CurrSlice.pic_parameter_set_id
	bl	dprint_vfmw	@
	movw	ip, #:lower16:11155244	@ tmp146,
	movt	ip, #:upper16:11155244	@ tmp146,
	ldr	r2, [r4, r5]	@ temp.3521, <variable>.CurrSlice.pic_parameter_set_id
	mov	r1, #2240	@ tmp148,
	ldr	r0, [r4, ip]	@ <variable>.PPS, <variable>.PPS
	mla	r1, r1, r2, r0	@ pPPS, tmp148, temp.3521, <variable>.PPS
	ldrb	r3, [r1, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	beq	.L1094	@,
	movw	r2, #:lower16:11164272	@ tmp152,
	movt	r2, #:upper16:11164272	@ tmp152,
	ldr	r5, [r4, r2]	@ D.42017, <variable>.CurrSlice.svc_extension_flag
	cmn	r5, #1	@ D.42017,
	beq	.L1095	@,
	cmp	r5, #0	@ D.42017,
	bne	.L1091	@,
	ldr	r2, [r1, #28]	@ temp.3522, <variable>.seq_parameter_set_id
	movw	r5, #:lower16:337528	@ tmp160,
	movt	r5, #:upper16:337528	@ tmp160,
	mul	r3, r5, r2	@ tmp159, tmp160, temp.3522
	add	r5, r3, r4	@ tmp166, tmp159, pMvcCtx
	add	lr, r3, #13568	@ tmp161, tmp159,
	add	ip, r5, #348160	@ tmp167, tmp166,
	add	r0, lr, #32	@ tmp161, tmp161,
	add	r3, ip, #2960	@ tmp167, tmp167,
	add	ip, r4, r0	@ pSPS, pMvcCtx, tmp161
	ldr	lr, [r3, #4]	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	beq	.L1092	@,
	add	r3, r5, #13568	@ tmp173, tmp166,
	add	lr, r3, #56	@ tmp173, tmp173,
	ldrb	r0, [lr, #1]	@ zero_extendqisi2	@ <variable>.sps.is_valid, <variable>.sps.is_valid
	cmp	r0, #0	@ <variable>.sps.is_valid,
	beq	.L1092	@,
.L1090:
	movw	r2, #:lower16:11152044	@ tmp177,
	movw	lr, #:lower16:11152040	@ tmp178,
	movt	r2, #:upper16:11152044	@ tmp177,
	movt	lr, #:upper16:11152040	@ tmp178,
	mov	r0, #0	@ D.42016,
	str	r1, [r4, r2]	@ pPPS, <variable>.pPPS
	str	ip, [r4, lr]	@ pSPS, <variable>.pSPS
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1095:
	movw	ip, #:lower16:11155240	@ tmp153,
	movt	ip, #:upper16:11155240	@ tmp153,
	ldr	r2, [r1, #28]	@ D.42021, <variable>.seq_parameter_set_id
	movw	r0, #3992	@ tmp155,
	ldr	r3, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	mla	ip, r0, r2, r3	@ pSPS, tmp155, D.42021, <variable>.SPS
	ldrb	lr, [ip, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	bne	.L1090	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC14	@,
	movt	r1, #:upper16:.LC14	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.42016, D.42017
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1092:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC15	@,
	movt	r1, #:upper16:.LC15	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42016,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1094:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC13	@,
	movt	r1, #:upper16:.LC13	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42016,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L1091:
	mov	r2, r5	@, D.42017
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42016,
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_PPSSPSCheck, .-MVC_PPSSPSCheck
	.align	2
	.global	MVC_WriteCurrPicYUV
	.type	MVC_WriteCurrPicYUV, %function
MVC_WriteCurrPicYUV:
	.fnstart
.LFB1612:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11196171	@ tmp136,
	movw	ip, #:lower16:11196640	@ tmp139,
	movt	r2, #:upper16:11196171	@ tmp136,
	movt	ip, #:upper16:11196640	@ tmp139,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r5, [r0, r2]	@ zero_extendqisi2	@ structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC17	@,
	ldr	lr, [r0, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r1, #:upper16:.LC17	@,
	mov	r0, #2	@,
	mov	r2, r5	@, structure
	ldr	r3, [lr, #184]	@, <variable>.fs_image.image_id
	bl	dprint_vfmw	@
	movw	r1, #:lower16:11196708	@ tmp151,
	movt	r1, #:upper16:11196708	@ tmp151,
	cmp	r5, #3	@ structure,
	cmpne	r5, #0	@, structure,
	movw	r3, #:lower16:11196704	@ tmp149,
	movt	r3, #:upper16:11196704	@ tmp149,
	ldr	ip, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	moveq	r2, #1	@ PicStructure,
	ldr	r3, [r4, r3]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	addne	r2, r5, #1	@ PicStructure, structure,
	movw	r1, #:lower16:.LC18	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC18	@,
	str	ip, [sp, #0]	@ <variable>.CurrPic.pic_height_in_mb,
	bl	dprint_vfmw	@
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
	.fnend
	.size	MVC_WriteCurrPicYUV, .-MVC_WriteCurrPicYUV
	.align	2
	.global	MVC_GetReRangeFlag
	.type	MVC_GetReRangeFlag, %function
MVC_GetReRangeFlag:
	.fnstart
.LFB1603:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11164272	@ tmp157,
	movt	r3, #:upper16:11164272	@ tmp157,
	movw	ip, #:lower16:11155244	@ tmp151,
	movw	r6, #:lower16:11162632	@ tmp152,
	movt	ip, #:upper16:11155244	@ tmp151,
	movt	r6, #:upper16:11162632	@ tmp152,
	ldr	r2, [r0, r3]	@ D.40318, <variable>.CurrSlice.svc_extension_flag
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, ip]	@ <variable>.PPS, <variable>.PPS
	ldr	r0, [r0, r6]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmn	r2, #1	@ D.40318,
	mov	r6, r1	@ p_dpb_changed, p_dpb_changed
	mov	r1, #2240	@ tmp155,
	mla	r3, r1, r0, r3	@ pPPS, tmp155, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L1118	@,
	cmp	r2, #0	@ D.40318,
	bne	.L1103	@,
	movw	ip, #:lower16:11152048	@ tmp163,
	movt	ip, #:upper16:11152048	@ tmp163,
	ldr	r1, [r4, ip]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r1, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L1119	@,
	movw	r0, #:lower16:10814504	@ tmp170,
	movt	r0, #:upper16:10814504	@ tmp170,
	ldr	ip, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r1, [r4, r0]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r1, ip	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r5, #:lower16:10814508	@ pSPS,
	movteq	r5, #:upper16:10814508	@ pSPS,
	addeq	r5, r4, r5	@ pSPS, pMvcCtx, pSPS
	bne	.L1120	@,
.L1102:
	ldrb	r7, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movw	r0, #13560	@ tmp176,
	ldr	ip, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movw	r3, #13564	@ tmp177,
	rsb	r2, r7, #2	@ tmp180, <variable>.frame_mbs_only_flag,
	ldr	r1, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r7, [r4, r0]	@ oldw, <variable>.CurWidthInMb
	mla	r2, ip, r2, r2	@ newh, <variable>.pic_height_in_map_units_minus1, tmp180, tmp180
	ldr	ip, [r4, r3]	@ oldh, <variable>.CurHeightInMb
	add	r1, r1, #1	@ neww, <variable>.pic_width_in_mbs_minus1,
	cmp	r1, r7	@ neww, oldw
	cmpeq	r2, ip	@, newh, oldh
	moveq	r0, #0	@, tmp189
	movne	r0, #1	@, tmp189
	beq	.L1121	@,
.L1107:
	movw	r0, #:lower16:g_event_report	@ tmp194,
	movt	r0, #:upper16:g_event_report	@ tmp194,
	ldr	r3, [r0, #0]	@ g_event_report.657, g_event_report
	cmp	r3, #0	@ g_event_report.657,
	beq	.L1116	@,
	movw	lr, #:lower16:11199520	@ tmp203,
	movt	lr, #:upper16:11199520	@ tmp203,
	mov	r0, ip, asl #4	@ tmp198, oldh,
	mov	r7, r7, asl #4	@ tmp196, oldw,
	mov	ip, r1, asl #4	@ tmp200, neww,
	strh	r7, [fp, #-44]	@ movhi	@ tmp196, para
	mov	r1, r2, asl #4	@ tmp202, newh,
	strh	r0, [fp, #-42]	@ movhi	@ tmp198, para
	strh	r1, [fp, #-38]	@ movhi	@ tmp202, para
	sub	r2, fp, #44	@,,
	strh	ip, [fp, #-40]	@ movhi	@ tmp200, para
	mov	r1, #2	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.657
.L1116:
	movw	r3, #:lower16:11164276	@ tmp206,
	movt	r3, #:upper16:11164276	@ tmp206,
	mov	r0, #1	@ ReRangeFlg,
	ldr	r2, [r4, r3]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	beq	.L1122	@,
.L1110:
	ldr	r1, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	sub	r2, r1, #1	@ dpb_size.3611, <variable>.dpb_size_plus1,
.L1113:
	movw	r3, #:lower16:11152052	@ tmp214,
	movt	r3, #:upper16:11152052	@ tmp214,
	ldr	r1, [r4, r3]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	cmp	r1, r2	@ <variable>.CurrDPBSize, dpb_size.3611
	moveq	ip, r0	@, tmp218, ReRangeFlg
	orrne	ip, r0, #1	@,, tmp218, ReRangeFlg
	str	ip, [r6, #0]	@ tmp218,* p_dpb_changed
	str	r2, [r4, r3]	@ dpb_size.3611, <variable>.CurrDPBSize
.L1106:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1121:
	movw	r3, #:lower16:11168612	@ tmp190,
	movt	r3, #:upper16:11168612	@ tmp190,
	ldr	r8, [r5, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	ldr	r3, [r4, r3]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r3, r3, #1	@ tmp191, <variable>.DPB.size,
	cmp	r8, r3	@ <variable>.dpb_size_plus1, tmp191
	bhi	.L1107	@,
	movw	r3, #:lower16:11164276	@ tmp206,
	movt	r3, #:upper16:11164276	@ tmp206,
	ldr	r2, [r4, r3]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r2, #1	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L1110	@,
.L1122:
	mov	r3, #0	@ ivtmp.3609,
	movw	ip, #:lower16:10800896	@ tmp224,
	movt	ip, #:upper16:10800896	@ tmp224,
	mov	r1, r3	@ dpb_size, ivtmp.3609
.L1112:
	add	r2, r4, r3	@ tmp208, pMvcCtx, ivtmp.3609
	add	r3, r3, #335872	@ ivtmp.3609, ivtmp.3609,
	add	r2, r2, #17408	@ tmp210, tmp208,
	add	r3, r3, #1648	@ ivtmp.3609, ivtmp.3609,
	add	r3, r3, #8	@ ivtmp.3609, ivtmp.3609,
	ldr	r2, [r2, #164]	@ D.40372, <variable>.sps.dpb_size_plus1
	cmp	r1, r2	@ dpb_size, D.40372
	subcc	r1, r2, #1	@ dpb_size, D.40372,
	cmp	r3, ip	@ ivtmp.3609, tmp224
	bne	.L1112	@,
	add	ip, r1, #1	@ D.40376, dpb_size,
	mov	r2, ip, asl #1	@ dpb_size.3614, D.40376,
	cmp	r2, #16	@ dpb_size.3614,
	movcs	r2, #16	@ dpb_size.3611,
	b	.L1113	@
.L1118:
	movw	r2, #:lower16:11155240	@ tmp158,
	movt	r2, #:upper16:11155240	@ tmp158,
	ldr	r7, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r5, #3992	@ tmp161,
	ldr	r0, [r4, r2]	@ <variable>.SPS, <variable>.SPS
	mla	r5, r5, r7, r0	@ pSPS, tmp161, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L1102	@
.L1119:
	ldr	r0, [r3, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r2, #:lower16:337528	@ tmp166,
	movt	r2, #:upper16:337528	@ tmp166,
	mul	r7, r0, r2	@ tmp165, <variable>.seq_parameter_set_id, tmp166
	add	r5, r7, #13568	@ tmp168, tmp165,
	add	r3, r5, #32	@ tmp168, tmp168,
	add	r5, r4, r3	@ pSPS, pMvcCtx, tmp168
	b	.L1102	@
.L1120:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ReRangeFlg,
	b	.L1106	@
.L1103:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC16	@,
	movt	r1, #:upper16:.LC16	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ ReRangeFlg,
	b	.L1106	@
	.fnend
	.size	MVC_GetReRangeFlag, .-MVC_GetReRangeFlag
	.align	2
	.global	MVC_DumpList
	.type	MVC_DumpList, %function
MVC_DumpList:
	.fnstart
.LFB1594:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp140,
	movt	r1, #:upper16:g_PrintEnable	@ tmp140,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #8192	@ g_PrintEnable,
	beq	.L1128	@,
	movw	r6, #:lower16:11162668	@ ivtmp.3657,
	movt	r6, #:upper16:11162668	@ ivtmp.3657,
	add	r6, r0, r6	@ ivtmp.3657, pMvcCtx, ivtmp.3657
	mov	r7, #0	@ j,
.L1125:
	ldr	r2, [r6, #0]	@ tmp148, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ tmp148,
	beq	.L1127	@,
	add	r0, r7, r7, asl #5	@, tmp151, j, j,
	mov	r4, #0	@ i,
	mov	r1, r0, asl #2	@ tmp152, tmp151,
	add	r3, r1, #11141120	@ tmp153, tmp152,
	add	r5, r3, #27904	@ tmp153, tmp153,
	add	r5, r8, r5	@ ivtmp.3649, pMvcCtx, tmp153
.L1126:
	ldr	ip, [r5], #4	@ tmp144, <variable>.pListX
	mov	r3, r4	@, i
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC20	@,
	mov	r2, r7	@, j
	movt	r1, #:upper16:.LC20	@,
	ldr	ip, [ip, #4]	@ D.40081, <variable>.frame_store
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #588]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.frame_num,
	ldr	ip, [ip, #600]	@ <variable>.poc, <variable>.poc
	str	ip, [sp, #4]	@ <variable>.poc,
	bl	dprint_vfmw	@
	ldr	r0, [r6, #0]	@ tmp147, <variable>.CurrSlice.listXsize
	cmp	r0, r4	@ tmp147, i
	bhi	.L1126	@,
.L1127:
	add	r7, r7, #1	@ j, j,
	add	r6, r6, #4	@ ivtmp.3657, ivtmp.3657,
	cmp	r7, #2	@ j,
	bne	.L1125	@,
.L1128:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
	.fnend
	.size	MVC_DumpList, .-MVC_DumpList
	.align	2
	.global	MVC_DumpDPB
	.type	MVC_DumpDPB, %function
MVC_DumpDPB:
	.fnstart
.LFB1558:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:g_PrintEnable	@ tmp144,
	movt	r1, #:upper16:g_PrintEnable	@ tmp144,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r1, #0]	@ g_PrintEnable, g_PrintEnable
	tst	r3, #16384	@ g_PrintEnable,
	beq	.L1136	@,
	movw	r7, #:lower16:11168616	@ tmp147,
	movt	r7, #:upper16:11168616	@ tmp147,
	ldr	r0, [r0, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r0, #0	@ <variable>.DPB.used_size,
	beq	.L1132	@,
	movw	r6, #:lower16:11168420	@ ivtmp.3703,
	movt	r6, #:upper16:11168420	@ ivtmp.3703,
	add	r6, r5, r6	@ ivtmp.3703, pMvcCtx, ivtmp.3703
	mov	r4, #0	@ i,
.L1133:
	ldr	ip, [r6], #4	@ D.38344, <variable>.DPB.fs
	mov	r2, r4	@, i
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC21	@,
	movt	r1, #:upper16:.LC21	@,
	add	r4, r4, #1	@ i, i,
	ldr	lr, [ip, #600]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #588]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	ip, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	ip, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	r2, [r5, r7]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r4	@ <variable>.DPB.used_size, i
	bhi	.L1133	@,
.L1132:
	movw	r7, #:lower16:11168620	@ tmp155,
	movt	r7, #:upper16:11168620	@ tmp155,
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC22	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1134	@,
	movw	r4, #:lower16:11168484	@ ivtmp.3698,
	movt	r4, #:upper16:11168484	@ ivtmp.3698,
	add	r6, r5, r4	@ ivtmp.3698, pMvcCtx, ivtmp.3698
	mov	r4, #0	@ i.3708,
.L1135:
	ldr	ip, [r6, #0]	@ D.38352, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3708
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC23	@,
	movt	r1, #:upper16:.LC23	@,
	ldr	lr, [ip, #600]	@ <variable>.poc, <variable>.poc
	ldr	r3, [ip, #588]	@ <variable>.frame_num, <variable>.frame_num
	str	lr, [sp, #0]	@ <variable>.poc,
	ldrb	lr, [ip, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	str	lr, [sp, #4]	@ <variable>.is_reference,
	bl	dprint_vfmw	@
	ldr	ip, [r6], #4	@ tmp161, <variable>.DPB.fs_ref
	mov	r2, r4	@, i.3708
	mov	r0, #14	@,
	movw	r1, #:lower16:.LC24	@,
	movt	r1, #:upper16:.LC24	@,
	add	r4, r4, #1	@ i.3708, i.3708,
	ldr	r3, [ip, #480]	@, <variable>.frame.poc
	bl	dprint_vfmw	@
	ldr	r1, [r5, r7]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r4	@ <variable>.DPB.ref_frames_in_buffer, i.3708
	bhi	.L1135	@,
.L1134:
	movw	r1, #:lower16:.LC22	@,
	mov	r0, #14	@,
	movt	r1, #:upper16:.LC22	@,
	bl	dprint_vfmw	@
.L1136:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
	.fnend
	.size	MVC_DumpDPB, .-MVC_DumpDPB
	.align	2
	.global	MVC_IsRefListWrong
	.type	MVC_IsRefListWrong, %function
MVC_IsRefListWrong:
	.fnstart
.LFB1663:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11162668	@ tmp143,
	movt	r8, #:upper16:11162668	@ tmp143,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1140	@,
	add	r5, r0, #11141120	@ ivtmp.3749, pMvcCtx,
	movw	r7, #:lower16:11199520	@ tmp170,
	add	r5, r5, #27904	@ ivtmp.3749, ivtmp.3749,
	movt	r7, #:upper16:11199520	@ tmp170,
	mov	r6, #0	@ i,
	b	.L1142	@
.L1149:
	ldr	ip, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	ip, #0	@ <variable>.pstDecodeFs,
	beq	.L1141	@,
	ldr	r3, [r4, r8]	@ D.45632, <variable>.CurrSlice.listXsize
	cmp	r3, r6	@ D.45632, i
	bls	.L1148	@,
.L1142:
	ldr	r1, [r5, #0]	@ tmp148, <variable>.pListX
	add	r6, r6, #1	@ i, i,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3749, ivtmp.3749,
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	bne	.L1149	@,
.L1141:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1140:
	mov	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L1148:
	cmp	r3, #0	@ D.45632,
	beq	.L1140	@,
	movw	r8, #:lower16:11162672	@ tmp153,
	movt	r8, #:upper16:11162672	@ tmp153,
	ldr	r0, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1140	@,
	movw	r6, #:lower16:11169156	@ ivtmp.3744,
	movt	r6, #:upper16:11169156	@ ivtmp.3744,
	add	r5, r4, r6	@ ivtmp.3744, pMvcCtx, ivtmp.3744
	movw	r7, #:lower16:11199520	@ tmp168,
	mov	r6, #0	@ i.3757,
	movt	r7, #:upper16:11199520	@ tmp168,
	b	.L1143	@
.L1150:
	ldr	r2, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r2, #0	@ <variable>.pstDecodeFs,
	beq	.L1141	@,
	ldr	r1, [r4, r8]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r1, r6	@ <variable>.CurrSlice.listXsize, i.3757
	bls	.L1140	@,
.L1143:
	ldr	r3, [r5, #0]	@ tmp158, <variable>.pListX
	add	r6, r6, #1	@ i.3757, i.3757,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r5, r5, #4	@ ivtmp.3744, ivtmp.3744,
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs.3755
	bne	.L1150	@,
	b	.L1141	@
	.fnend
	.size	MVC_IsRefListWrong, .-MVC_IsRefListWrong
	.align	2
	.global	MVC_WriteSliceMsg
	.type	MVC_WriteSliceMsg, %function
MVC_WriteSliceMsg:
	.fnstart
.LFB1615:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11199444	@ tmp196,
	movt	r3, #:upper16:11199444	@ tmp196,
	movw	r7, #:lower16:11155228	@ tmp201,
	movt	r7, #:upper16:11155228	@ tmp201,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r8, [r0, r3]	@, <variable>.SliceParaNum
	movw	r4, #:lower16:11199440	@ tmp198,
	movt	r4, #:upper16:11199440	@ tmp198,
	movw	r0, #4060	@ tmp200,
	str	r8, [fp, #-48]	@, %sfp
	ldr	r6, [r5, r7]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	ldr	ip, [fp, #-48]	@, %sfp
	sub	r1, r6, #1	@ tmp202, <variable>.MaxSliceNum,
	ldr	r6, [r5, r4]	@ D.41636, <variable>.DecSlicePara
	cmp	ip, r1	@, tmp202
	add	r2, ip, #1	@ D.41635,,
	mul	r8, r0, ip	@ tmp199, tmp200,
	str	r2, [r5, r3]	@ D.41635, <variable>.SliceParaNum
	mlacc	r2, r0, r2, r6	@ tmp206, tmp200, D.41635, D.41636
	movcs	r3, #0	@ tmp207,
	add	r7, r6, r8	@ pCurrSlicePara, D.41636, tmp199
	strcs	r3, [r7, #4056]	@ tmp207, <variable>.pNextSlice
	strcc	r2, [r7, #4056]	@ tmp206, <variable>.pNextSlice
	ldr	r1, [r5, #368]	@ D.41647, <variable>.pCurrNal
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ i, <variable>.nal_used_segment
	ldr	r0, [r1, #64]	@ i.4060, <variable>.nal_segment
	cmp	r3, #1	@ i,
	cmpls	r3, r0	@, i, i.4060
	bcs	.L1154	@,
	add	sl, r3, #4	@ tmp215, i,
	add	r2, r7, sl, asl #2	@, ivtmp.3952, pCurrSlicePara, tmp215,
.L1155:
	rsb	r0, r3, r3, asl #3	@, tmp220, i, i,
	add	r3, r3, #1	@ i, i,
	mov	sl, r0, asl #2	@ tmp221, tmp220,
	add	r4, sl, r1	@ tmp222, tmp221, D.41647
	ldr	ip, [r4, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	str	ip, [r2, #0]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r1, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r4, sl, r1	@ tmp231, tmp221, <variable>.pCurrNal
	ldr	ip, [r4, #16]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	str	ip, [r2, #-8]	@ <variable>.valid_bitlen, <variable>.valid_bitlen
	cmp	r3, #1	@ i,
	movhi	ip, #0	@, tmp249
	movls	ip, #1	@, tmp249
	ldr	r1, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r0, sl, r1	@ tmp240, tmp221, <variable>.pCurrNal
	ldr	r4, [r0, #24]	@ <variable>.bytespos, <variable>.bytespos
	str	r4, [r2, #8]	@ <variable>.bytespos, <variable>.bytespos
	add	r2, r2, #4	@ ivtmp.3952, ivtmp.3952,
	ldr	r1, [r5, #368]	@ D.41647, <variable>.pCurrNal
	ldr	r0, [r1, #64]	@ i.4060, <variable>.nal_segment
	cmp	r0, r3	@ i.4060, i
	movls	ip, #0	@, tmp249,
	cmp	ip, #0	@ tmp249,
	bne	.L1155	@,
.L1154:
	cmp	r0, #1	@ i.4060,
	bhi	.L1156	@,
	add	r3, r0, #4	@ tmp250, i.4060,
	add	r1, r7, #24	@ D.49570, pCurrSlicePara,
	mov	r2, #0	@ tmp611,
	add	sl, r7, r3, asl #2	@, ivtmp.3945, pCurrSlicePara, tmp250,
	add	r3, sl, #4	@ ivtmp.3945, ivtmp.3945,
	rsb	r4, sl, r1	@ tmp624, ivtmp.3945, D.49570
	cmp	r3, r1	@ ivtmp.3945, D.49570
	sub	ip, r4, #4	@ tmp625, tmp624,
	ubfx	ip, ip, #2, #1	@ tmp626, tmp625,,
	str	r2, [sl, #0]	@ tmp611, <variable>.bitsoffset
	str	r2, [sl, #-8]	@ tmp611, <variable>.valid_bitlen
	str	r2, [sl, #8]	@ tmp611, <variable>.bytespos
	beq	.L1156	@,
	cmp	ip, #0	@ tmp626,
	beq	.L1157	@,
	str	r2, [r3, #0]	@ tmp611, <variable>.bitsoffset
	str	r2, [r3, #-8]	@ tmp611, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp611, <variable>.bytespos
	add	r3, r3, #4	@ ivtmp.3945, ivtmp.3945,
	cmp	r3, r1	@ ivtmp.3945, D.49570
	beq	.L1156	@,
.L1157:
	add	r0, r3, #4	@ tmp627, ivtmp.3945,
	str	r2, [r3, #-8]	@ tmp611, <variable>.valid_bitlen
	str	r2, [r3, #8]	@ tmp611, <variable>.bytespos
	str	r2, [r3, #4]	@ tmp611, <variable>.bitsoffset
	str	r2, [r3, #0]	@ tmp611, <variable>.bitsoffset
	add	r3, r0, #4	@ ivtmp.3945, tmp627,
	cmp	r3, r1	@ ivtmp.3945, D.49570
	str	r2, [r0, #-8]	@ tmp611, <variable>.valid_bitlen
	str	r2, [r0, #8]	@ tmp611, <variable>.bytespos
	bne	.L1157	@,
.L1156:
	movw	r0, #:lower16:11196177	@ tmp255,
	movt	r0, #:upper16:11196177	@ tmp255,
	movw	r4, #:lower16:11159288	@ tmp258,
	movw	ip, #:lower16:11164236	@ tmp259,
	ldrb	r1, [r5, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	movt	r4, #:upper16:11159288	@ tmp258,
	movt	ip, #:upper16:11164236	@ tmp259,
	ldr	r3, [fp, #-48]	@, %sfp
	strb	r1, [r7, #1]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	cmp	r3, #0	@,
	ldr	r2, [r5, r4]	@ <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrPPS.pic_init_qp_minus26
	ldr	sl, [r5, ip]	@ <variable>.CurrSlice.slice_qp_delta, <variable>.CurrSlice.slice_qp_delta
	add	r1, r2, sl	@ tmp260, <variable>.CurrPPS.pic_init_qp_minus26, <variable>.CurrSlice.slice_qp_delta
	add	r3, r1, #26	@ D.41661, tmp260,
	str	r3, [r7, #32]	@ D.41661, <variable>.SliceQPy
	bne	.L1158	@,
	movw	r2, #:lower16:11196640	@ tmp264,
	movt	r2, #:upper16:11196640	@ tmp264,
	ldr	r4, [r5, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [r4, #496]	@ D.41661, <variable>.frame.MaxQp
	ldr	ip, [r5, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	sl, [r7, #32]	@ <variable>.SliceQPy, <variable>.SliceQPy
	str	sl, [ip, #500]	@ <variable>.SliceQPy, <variable>.frame.MinQp
.L1159:
	movw	r3, #:lower16:11164232	@ tmp273,
	movt	r3, #:upper16:11164232	@ tmp273,
	movw	r1, #:lower16:11162684	@ tmp275,
	movt	r1, #:upper16:11162684	@ tmp275,
	ldr	r0, [r5, r3]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.CurrSlice.cabac_init_idc
	movw	r2, #:lower16:11162680	@ tmp277,
	movt	r2, #:upper16:11162680	@ tmp277,
	movw	r3, #:lower16:11162624	@ tmp279,
	movt	r3, #:upper16:11162624	@ tmp279,
	movw	r4, #:lower16:11162676	@ tmp282,
	str	r0, [r7, #36]	@ <variable>.CurrSlice.cabac_init_idc, <variable>.cabac_init_idc
	movt	r4, #:upper16:11162676	@ tmp282,
	ldr	sl, [r5, r1]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	movw	ip, #:lower16:11162630	@ tmp284,
	movt	ip, #:upper16:11162630	@ tmp284,
	movw	r0, #:lower16:11152036	@ tmp288,
	movt	r0, #:upper16:11152036	@ tmp288,
	movw	r1, #:lower16:11162668	@ tmp291,
	str	sl, [r7, #40]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	movt	r1, #:upper16:11162668	@ tmp291,
	ldr	sl, [r5, r2]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	r2, #:lower16:11162672	@ tmp293,
	movt	r2, #:upper16:11162672	@ tmp293,
	str	sl, [r7, #44]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	ldrb	sl, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	strb	sl, [r6, r8]	@ <variable>.CurrSlice.slice_type, <variable>.slice_type
	ldr	r4, [r5, r4]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	str	r4, [r7, #48]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.first_mb_in_slice
	ldrb	ip, [r5, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	strb	ip, [r7, #2]	@ <variable>.CurrSlice.direct_spatial_mv_pred_flag, <variable>.direct_spatial_mv_pred_flag
	ldr	ip, [r5, r0]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldrb	r0, [ip, #22]	@ zero_extendqisi2	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	strb	r0, [r7, #3]	@ <variable>.direct_8x8_inference_flag, <variable>.direct_8x8_inference_flag
	ldr	r1, [r5, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r1, [r7, #52]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldr	r2, [r5, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	str	r2, [r7, #56]	@ <variable>.CurrSlice.listXsize, <variable>.listXsize
	ldrb	r3, [r5, r3]	@ zero_extendqisi2	@ temp.3965, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ temp.3965,
	beq	.L1248	@,
	cmp	r3, #0	@ temp.3965,
	movweq	r3, #:lower16:11159242	@ tmp299,
	movteq	r3, #:upper16:11159242	@ tmp299,
	movne	r3, #0	@ tmp302,
	ldreqb	r3, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrPPS.weighted_pred_flag, <variable>.CurrPPS.weighted_pred_flag
	strb	r3, [r7, #4]	@ tmp302, <variable>.weight_flag
.L1161:
	movw	r2, #:lower16:11159292	@ tmp304,
	movt	r2, #:upper16:11159292	@ tmp304,
	movw	r3, #:lower16:11159296	@ tmp306,
	movt	r3, #:upper16:11159296	@ tmp306,
	ldr	ip, [r5, r2]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.CurrPPS.chroma_qp_index_offset
	movw	r0, #:lower16:11164244	@ tmp308,
	movt	r0, #:upper16:11164244	@ tmp308,
	movw	r1, #:lower16:11164248	@ tmp310,
	movt	r1, #:upper16:11164248	@ tmp310,
	movw	r2, #:lower16:11164240	@ tmp312,
	str	ip, [r7, #60]	@ <variable>.CurrPPS.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	movt	r2, #:upper16:11164240	@ tmp312,
	ldr	ip, [r5, r3]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.CurrPPS.second_chroma_qp_index_offset
	movw	r3, #:lower16:11162624	@ tmp314,
	movt	r3, #:upper16:11162624	@ tmp314,
	str	ip, [r7, #64]	@ <variable>.CurrPPS.second_chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	ldr	r0, [r5, r0]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r7, #68]	@ <variable>.CurrSlice.slice_alpha_c0_offset_div2, <variable>.slice_alpha_c0_offset_div2
	ldr	ip, [r5, r1]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.CurrSlice.slice_beta_offset_div2
	str	ip, [r7, #72]	@ <variable>.CurrSlice.slice_beta_offset_div2, <variable>.slice_beta_offset_div2
	ldr	r0, [r5, r2]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r0, [r7, #76]	@ <variable>.CurrSlice.disable_deblocking_filter_idc, <variable>.disable_deblocking_filter_idc
	ldrb	r1, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1163	@,
	movw	r1, #:lower16:11162668	@ tmp316,
	movt	r1, #:upper16:11162668	@ tmp316,
	ldr	r4, [r5, r1]	@ temp.4125, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4125,
	beq	.L1164	@,
	movw	ip, #:lower16:11169024	@ tmp318,
	movt	ip, #:upper16:11169024	@ tmp318,
	ldr	r3, [r5, ip]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4061, <variable>.frame_store
	ldrb	r0, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r0, #0	@ <variable>.non_existing,
	beq	.L1165	@,
	tst	r4, #1	@ temp.4125,
	movw	r1, #:lower16:11169028	@ ivtmp.3939,
	movt	r1, #:upper16:11169028	@ ivtmp.3939,
	mov	r0, #0	@ i.3968,
	add	r2, r5, r1	@ ivtmp.3939, pMvcCtx, ivtmp.3939
	bne	.L1167	@,
	ldr	r3, [r2], #4	@ tmp646, <variable>.pListX
	mov	r0, #1	@ i.3968,
	ldr	r3, [r3, #4]	@ temp.4061, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	bne	.L1167	@,
.L1165:
	movw	lr, #:lower16:11199520	@ tmp322,
	movt	lr, #:upper16:11199520	@ tmp322,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs,
	beq	.L1249	@,
	ldr	r2, [r3, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r4, [r2, #4]	@, <variable>.PhyFsID
	str	r4, [fp, #-52]	@, %sfp
	b	.L1170	@
.L1171:
	ldr	r3, [r1], #4	@ tmp320, <variable>.pListX
	ldr	r3, [r3, #4]	@ temp.4061, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1165	@,
	ldr	r3, [r2, #4]	@ tmp648, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3939, tmp621,
	ldr	r3, [r3, #4]	@ temp.4061, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1165	@,
.L1167:
	add	r0, r0, #1	@ tmp622, i.3968,
	mov	r1, r2	@ tmp621, ivtmp.3939
	cmp	r0, r4	@ tmp622, temp.4125
	add	r0, r0, #1	@ i.3968, tmp622,
	bcc	.L1171	@,
.L1164:
	mov	ip, #0	@,
	str	ip, [fp, #-52]	@, %sfp
.L1170:
	movw	r3, #:lower16:11162672	@ tmp331,
	movt	r3, #:upper16:11162672	@ tmp331,
	ldr	r4, [r5, r3]	@ temp.4122, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4122,
	beq	.L1172	@,
	movw	r0, #:lower16:11169156	@ tmp333,
	movt	r0, #:upper16:11169156	@ tmp333,
	ldr	r1, [r5, r0]	@ <variable>.pListX, <variable>.pListX
	ldr	r3, [r1, #4]	@ D.41710, <variable>.frame_store
	ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	beq	.L1173	@,
	tst	r4, #1	@ temp.4122,
	movw	r2, #:lower16:11169160	@ ivtmp.3934,
	movt	r2, #:upper16:11169160	@ ivtmp.3934,
	mov	r0, #0	@ i.3974,
	add	r2, r5, r2	@ ivtmp.3934, pMvcCtx, ivtmp.3934
	bne	.L1175	@,
	ldr	r3, [r2], #4	@ tmp642, <variable>.pListX
	mov	r0, #1	@ i.3974,
	ldr	r3, [r3, #4]	@ D.41710, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	bne	.L1175	@,
	b	.L1173	@
.L1178:
	ldr	r3, [r1], #4	@ tmp335, <variable>.pListX
	ldr	r3, [r3, #4]	@ D.41710, <variable>.frame_store
	ldrb	ip, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	ip, #0	@ <variable>.non_existing,
	beq	.L1173	@,
	ldr	ip, [r2, #4]	@ tmp644, <variable>.pListX
	add	r2, r1, #4	@ ivtmp.3934, tmp616,
	ldr	r3, [ip, #4]	@ D.41710, <variable>.frame_store
	ldrb	r1, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r1, #0	@ <variable>.non_existing,
	beq	.L1173	@,
.L1175:
	add	r0, r0, #1	@ tmp617, i.3974,
	mov	r1, r2	@ tmp616, ivtmp.3934
	cmp	r0, r4	@ tmp617, temp.4122
	add	r0, r0, #1	@ i.3974, tmp617,
	bcc	.L1178	@,
.L1172:
	mov	r4, #0	@,
	str	r4, [fp, #-60]	@, %sfp
.L1177:
	movw	r1, #:lower16:11196171	@ tmp346,
	movt	r1, #:upper16:11196171	@ tmp346,
	ldrb	r8, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r8, #0	@ <variable>.CurrPic.structure,
	beq	.L1179	@,
	movw	r9, #:lower16:11162668	@ tmp348,
	movt	r9, #:upper16:11162668	@ tmp348,
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1181	@,
	add	r6, r5, #11141120	@ ivtmp.3914, pMvcCtx,
	movw	sl, #:lower16:11199520	@ tmp608,
	add	r4, r6, #27904	@ ivtmp.3914, ivtmp.3914,
	str	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
	mov	r6, r7	@ ivtmp.3919, pCurrSlicePara
	movt	sl, #:upper16:11199520	@ tmp608,
	mov	r8, #0	@ i.4069,
	ldr	r7, [fp, #-52]	@ ExistImgIdc_0.3958, %sfp
	b	.L1197	@
.L1195:
	strb	r3, [r6, #1630]	@ temp.4059, <variable>.btm_structure
	add	r8, r8, #1	@ i.4069, i.4069,
	ldr	r1, [r4, #0]	@ tmp480, <variable>.pListX
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #1631]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r3, [r4, #0]	@ tmp483, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3914, ivtmp.3914,
	ldr	lr, [r3, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #1656]	@ <variable>.poc, <variable>.btm_poc
	add	r6, r6, #36	@ ivtmp.3919, ivtmp.3919,
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, r8	@ <variable>.CurrSlice.listXsize, i.4069
	bls	.L1250	@,
.L1197:
	ldr	r3, [r4, #0]	@ tmp444, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r2, [r4, #0]	@ tmp447, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r1, [r6, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r3, [r4, #0]	@ tmp450, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r6, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r1, [r4, #0]	@ tmp454, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_0.3956, ExistImgIdc_0.3958
	beq	.L1193	@,
	cmp	r0, #0	@ pstLogicFs.4036,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0.3956, <variable>.PhyFsID
.L1193:
	str	r0, [r6, #1640]	@ ExistImgIdc_0.3956, <variable>.img_idc
	ldr	r3, [r4, #0]	@ tmp458, <variable>.pListX
	ldr	lr, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [lr, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r2, [r6, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	ip, [r4, #0]	@ tmp461, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r1, #600]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1632]	@ <variable>.poc, <variable>.poc
	ldr	r3, [r4, #0]	@ tmp464, <variable>.pListX
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #1624]	@ <variable>.structure, <variable>.list_structure
	ldr	r2, [r4, #0]	@ tmp467, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r1, [ip, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r1, [r6, #1626]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp471, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.4059, <variable>.structure
	cmp	r3, #1	@ temp.4059,
	bne	.L1195	@,
	strb	r3, [r6, #1628]	@ temp.4059, <variable>.top_structure
	add	r8, r8, #1	@ i.4069, i.4069,
	ldr	r2, [r4, #0]	@ tmp474, <variable>.pListX
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r6, #1629]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	r1, [r4, #0]	@ tmp477, <variable>.pListX
	add	r4, r4, #4	@ ivtmp.3914, ivtmp.3914,
	ldr	r0, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #1652]	@ <variable>.poc, <variable>.top_poc
	add	r6, r6, #36	@ ivtmp.3919, ivtmp.3919,
	ldr	ip, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, r8	@ <variable>.CurrSlice.listXsize, i.4069
	bhi	.L1197	@,
.L1250:
	ldr	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
.L1181:
	movw	r2, #:lower16:11162624	@ tmp487,
	movt	r2, #:upper16:11162624	@ tmp487,
	ldrb	r4, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1251	@,
.L1187:
	mov	r1, #0	@ ivtmp.3852,
.L1204:
	add	ip, r5, r1	@ tmp539, pMvcCtx, ivtmp.3852
	movw	r4, #:lower16:11168896	@ tmp540,
	movt	r4, #:upper16:11168896	@ tmp540,
	add	r0, r1, #4	@ tmp612, ivtmp.3852,
	add	r2, ip, r4	@ tmp540, tmp539, tmp540
	movw	r3, #:lower16:11168896	@ tmp640,
	add	r4, r5, r0	@ tmp638, pMvcCtx, tmp612
	movt	r3, #:upper16:11168896	@ tmp640,
	ldr	ip, [r2, #0]	@ tmp542, <variable>.APC.RefIdx
	add	r3, r4, r3	@ tmp640, tmp638, tmp640
	add	r2, r7, r1	@ tmp538, pCurrSlicePara, ivtmp.3852
	add	r1, r0, #4	@ ivtmp.3852, tmp612,
	cmp	r1, #128	@ ivtmp.3852,
	add	r0, r7, r0	@ tmp637, pCurrSlicePara, tmp612
	str	ip, [r2, #3928]	@ tmp542, <variable>.Apc2RefIdx
	ldr	r3, [r3, #0]	@ tmp641, <variable>.APC.RefIdx
	str	r3, [r0, #3928]	@ tmp641, <variable>.Apc2RefIdx
	bne	.L1204	@,
	movw	r0, #:lower16:11159242	@ tmp543,
	movt	r0, #:upper16:11159242	@ tmp543,
	movw	ip, #:lower16:11159284	@ tmp546,
	movt	ip, #:upper16:11159284	@ tmp546,
	ldrb	r1, [r5, r0]	@ zero_extendqisi2	@ temp.4109, <variable>.CurrPPS.weighted_pred_flag
	movw	r2, #:lower16:11198332	@ tmp544,
	ldr	r0, [r5, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	movt	r2, #:upper16:11198332	@ tmp544,
	movw	r3, #:lower16:11198336	@ tmp545,
	cmp	r1, #0	@ temp.4109,
	movt	r3, #:upper16:11198336	@ tmp545,
	str	r1, [r5, r2]	@ temp.4109, <variable>.DecPicPara.weighted_pred_flag
	str	r0, [r5, r3]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.DecPicPara.weighted_bipred_idc
	beq	.L1205	@,
	movw	r1, #:lower16:11162624	@ tmp548,
	movt	r1, #:upper16:11162624	@ tmp548,
	ldrb	r3, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #0	@ <variable>.CurrSlice.slice_type,
	bne	.L1205	@,
.L1206:
	movw	r0, #:lower16:11162688	@ tmp554,
	movt	r0, #:upper16:11162688	@ tmp554,
	movw	r2, #:lower16:11162692	@ tmp556,
	movt	r2, #:upper16:11162692	@ tmp556,
	ldr	r1, [r5, r0]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.CurrSlice.luma_log2_weight_denom
	movw	r4, #:lower16:11162696	@ ivtmp.3831,
	movt	r4, #:upper16:11162696	@ ivtmp.3831,
	mov	r0, r7	@ ivtmp.4119, pCurrSlicePara
	add	r3, r5, r4	@ ivtmp.3831, pMvcCtx, ivtmp.3831
	movw	r4, #:lower16:11162680	@ tmp595,
	str	r1, [r7, #80]	@ <variable>.CurrSlice.luma_log2_weight_denom, <variable>.luma_log2_weight_denom
	movt	r4, #:upper16:11162680	@ tmp595,
	ldr	ip, [r5, r2]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	mov	r1, #0	@ i.4100,
	mov	r2, r7	@ ivtmp.3835, ivtmp.4119
	str	ip, [r7, #84]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.chroma_log2_weight_denom
.L1207:
	ldr	ip, [r3, #0]	@ tmp559, <variable>.CurrSlice.wp_weight_l0_y
	add	r1, r1, #1	@ i.4100, i.4100,
	str	ip, [r2, #88]	@ tmp559, <variable>.wp_weight_l0_y
	ldr	ip, [r3, #128]	@ tmp560, <variable>.CurrSlice.wp_weight_l0_u
	str	ip, [r2, #216]	@ tmp560, <variable>.wp_weight_l0_u
	ldr	ip, [r3, #256]	@ tmp561, <variable>.CurrSlice.wp_weight_l0_v
	str	ip, [r2, #344]	@ tmp561, <variable>.wp_weight_l0_v
	ldr	ip, [r3, #768]	@ tmp562, <variable>.CurrSlice.wp_offset_l0_y
	str	ip, [r2, #856]	@ tmp562, <variable>.wp_offset_l0_y
	ldr	ip, [r3, #896]	@ tmp563, <variable>.CurrSlice.wp_offset_l0_u
	str	ip, [r2, #984]	@ tmp563, <variable>.wp_offset_l0_u
	ldr	ip, [r3, #1024]	@ tmp564, <variable>.CurrSlice.wp_offset_l0_v
	add	r3, r3, #4	@ ivtmp.3831, ivtmp.3831,
	str	ip, [r2, #1112]	@ tmp564, <variable>.wp_offset_l0_v
	add	r2, r2, #4	@ ivtmp.3835, ivtmp.3835,
	ldr	ip, [r5, r4]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmp	ip, r1	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i.4100
	bcs	.L1207	@,
	movw	r2, #:lower16:11162624	@ tmp567,
	movt	r2, #:upper16:11162624	@ tmp567,
	ldrb	r3, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1252	@,
.L1163:
	ldr	r1, [fp, #-48]	@, %sfp
	movw	r0, #:lower16:2799344	@ tmp578,
	movt	r0, #:upper16:2799344	@ tmp578,
	ldr	ip, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r2, r1, r0	@ tmp578,, tmp578
	mov	r0, #0	@ tmp585,
	add	r3, r5, r2, asl #2	@, tmp582, pMvcCtx, tmp578,
	str	ip, [r3, #4]	@ <variable>.pCurrNal, <variable>.pSliceNal
	str	r0, [r5, #368]	@ tmp585, <variable>.pCurrNal
.L1209:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1158:
	movw	ip, #:lower16:11196640	@ tmp268,
	movt	ip, #:upper16:11196640	@ tmp268,
	ldr	sl, [r5, ip]	@ temp.3963, <variable>.CurrPic.frame_store
	ldr	r0, [sl, #496]	@ <variable>.frame.MaxQp, <variable>.frame.MaxQp
	ldr	r1, [sl, #500]	@ <variable>.frame.MinQp, <variable>.frame.MinQp
	cmp	r0, r3	@ <variable>.frame.MaxQp, D.41661
	strge	r0, [sl, #496]	@, <variable>.frame.MaxQp, <variable>.frame.MaxQp
	strlt	r3, [sl, #496]	@, D.41661, <variable>.frame.MaxQp
	cmp	r1, r3	@ <variable>.frame.MinQp, D.41661
	strle	r1, [sl, #500]	@, <variable>.frame.MinQp, <variable>.frame.MinQp
	strgt	r3, [sl, #500]	@, D.41661, <variable>.frame.MinQp
	b	.L1159	@
.L1205:
	movw	ip, #:lower16:11159284	@ tmp550,
	movt	ip, #:upper16:11159284	@ tmp550,
	ldr	r2, [r5, ip]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	cmp	r2, #1	@ <variable>.CurrPPS.weighted_bipred_idc,
	bne	.L1163	@,
	movw	r3, #:lower16:11162624	@ tmp552,
	movt	r3, #:upper16:11162624	@ tmp552,
	ldrb	r0, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1163	@,
	b	.L1206	@
.L1179:
	movw	r9, #:lower16:11162668	@ tmp350,
	movt	r9, #:upper16:11162668	@ tmp350,
	ldr	r3, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1182	@,
	add	r6, r5, #11141120	@ ivtmp.3876, pMvcCtx,
	mov	r4, r7	@ ivtmp.3881, pCurrSlicePara
	str	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
	movw	sl, #:lower16:11199520	@ tmp601,
	ldr	r7, [fp, #-52]	@ ExistImgIdc_0.3958, %sfp
	add	r6, r6, #27904	@ ivtmp.3876, ivtmp.3876,
	movt	sl, #:upper16:11199520	@ tmp601,
.L1186:
	ldr	r2, [r6, #0]	@ tmp355, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r3, [r6, #0]	@ tmp358, <variable>.pListX
	ldr	ip, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [ip, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	r1, [r4, #1636]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r2, [r6, #0]	@ tmp361, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	ip, [r4, #1625]	@ <variable>.is_used, <variable>.is_used
	ldr	r1, [r6, #0]	@ tmp365, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_0, ExistImgIdc_0.3958
	beq	.L1184	@,
	cmp	r0, #0	@ pstLogicFs.3979,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_0, <variable>.PhyFsID
.L1184:
	str	r0, [r4, #1640]	@ ExistImgIdc_0, <variable>.img_idc
	add	r8, r8, #1	@ i.4001, i.4001,
	ldr	ip, [r6, #0]	@ tmp369, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [r1, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r0, [r4, #1644]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r2, [r6, #0]	@ tmp372, <variable>.pListX
	ldr	lr, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [lr, #600]	@ <variable>.poc, <variable>.poc
	str	r3, [r4, #1632]	@ <variable>.poc, <variable>.poc
	ldr	ip, [r6, #0]	@ tmp375, <variable>.pListX
	ldrb	r1, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r1, [r4, #1627]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r0, [r6, #0]	@ tmp378, <variable>.pListX
	ldrb	r2, [r0, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	r2, [r4, #1626]	@ <variable>.structure, <variable>.frame_structure
	ldr	lr, [r6, #0]	@ tmp381, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	str	ip, [r4, #1648]	@ <variable>.frame.poc, <variable>.frame_poc
	mov	ip, #0	@,
	ldr	r1, [r6, #0]	@ tmp384, <variable>.pListX
	ldr	r0, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r0, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	r2, [r4, #1652]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	lr, [r6], #4	@ tmp387, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r3, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	ip, [r4, #1624]	@, <variable>.list_structure
	str	r1, [r4, #1656]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3881, ivtmp.3881,
	ldr	r0, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.4001
	bhi	.L1186	@,
	ldr	r7, [fp, #-56]	@ pCurrSlicePara, %sfp
.L1182:
	movw	r3, #:lower16:11162624	@ tmp394,
	movt	r3, #:upper16:11162624	@ tmp394,
	ldrb	r4, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r4, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L1187	@,
	movw	r9, #:lower16:11162672	@ tmp396,
	movt	r9, #:upper16:11162672	@ tmp396,
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r2, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1187	@,
	add	sl, r7, #1632	@ ivtmp.3865, pCurrSlicePara,
	str	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	ldr	r7, [fp, #-60]	@ ExistImgIdc_1.3959, %sfp
	movw	r8, #:lower16:11169156	@ ivtmp.3858,
	add	r4, sl, #8	@ ivtmp.3865, ivtmp.3865,
	movt	r8, #:upper16:11169156	@ ivtmp.3858,
	movw	sl, #:lower16:11199520	@ tmp597,
	movt	sl, #:upper16:11199520	@ tmp597,
	add	r6, r5, r8	@ ivtmp.3858, pMvcCtx, ivtmp.3858
	mov	r8, #0	@ i.4030,
.L1191:
	ldr	r1, [r6, #0]	@ tmp402, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r2, [r6, #0]	@ tmp405, <variable>.pListX
	ldr	r3, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r3, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r4, #1148]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r6, #0]	@ tmp408, <variable>.pListX
	ldr	r2, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r3, [r4, #1137]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r6, #0]	@ tmp412, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_1, ExistImgIdc_1.3959
	beq	.L1189	@,
	cmp	r0, #0	@ pstLogicFs.4008,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1, <variable>.PhyFsID
.L1189:
	str	r0, [r4, #0]	@ ExistImgIdc_1, <variable>.img_idc
	add	r8, r8, #1	@ i.4030, i.4030,
	ldr	r2, [r6, #0]	@ tmp416, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r0, [r4, #1156]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r1, [r6, #0]	@ tmp419, <variable>.pListX
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [lr, #600]	@ <variable>.poc, <variable>.poc
	str	r3, [r4, #1144]	@ <variable>.poc, <variable>.poc
	ldr	r2, [r6, #0]	@ tmp422, <variable>.pListX
	ldrb	ip, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	ip, [r4, #1139]	@ <variable>.is_long_term, <variable>.frame_is_long_term
	ldr	r0, [r6, #0]	@ tmp425, <variable>.pListX
	ldrb	r1, [r0, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	r1, [r4, #1138]	@ <variable>.structure, <variable>.frame_structure
	ldr	lr, [r6, #0]	@ tmp428, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r2, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	str	r2, [r4, #1160]	@ <variable>.frame.poc, <variable>.frame_poc
	mov	r2, #0	@,
	ldr	ip, [r6, #0]	@ tmp431, <variable>.pListX
	ldr	r0, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [r0, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	str	r1, [r4, #1164]	@ <variable>.top_field.poc, <variable>.top_poc
	ldr	lr, [r6], #4	@ tmp434, <variable>.pListX
	ldr	r3, [lr, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r3, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	strb	r2, [r4, #1136]	@, <variable>.list_structure
	str	ip, [r4, #1168]	@ <variable>.bottom_field.poc, <variable>.btm_poc
	add	r4, r4, #36	@ ivtmp.3865, ivtmp.3865,
	ldr	r0, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r0, r8	@ <variable>.CurrSlice.listXsize, i.4030
	bhi	.L1191	@,
.L1247:
	ldr	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	b	.L1187	@
.L1173:
	movw	lr, #:lower16:11199520	@ tmp337,
	movt	lr, #:upper16:11199520	@ tmp337,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLogicFs.3970,
	beq	.L1253	@,
	ldr	r8, [r3, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldr	r9, [r8, #4]	@, <variable>.PhyFsID
	str	r9, [fp, #-60]	@, %sfp
	b	.L1177	@
.L1248:
	movw	r2, #:lower16:11159284	@ tmp296,
	movt	r2, #:upper16:11159284	@ tmp296,
	ldr	ip, [r5, r2]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.CurrPPS.weighted_bipred_idc
	strb	ip, [r7, #4]	@ <variable>.CurrPPS.weighted_bipred_idc, <variable>.weight_flag
	b	.L1161	@
.L1251:
	movw	r9, #:lower16:11162672	@ tmp489,
	movt	r9, #:upper16:11162672	@ tmp489,
	ldr	r3, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r3, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1187	@,
	add	sl, r7, #2800	@ ivtmp.3903, pCurrSlicePara,
	movw	r8, #:lower16:11169156	@ ivtmp.3894,
	movt	r8, #:upper16:11169156	@ ivtmp.3894,
	add	r6, sl, #4	@ ivtmp.3903, ivtmp.3903,
	add	r4, r5, r8	@ ivtmp.3894, pMvcCtx, ivtmp.3894
	movw	sl, #:lower16:11199520	@ tmp605,
	str	r7, [fp, #-52]	@ pCurrSlicePara, %sfp
	movt	sl, #:upper16:11199520	@ tmp605,
	mov	r8, #0	@ i.4108,
	ldr	r7, [fp, #-60]	@ ExistImgIdc_1.3959, %sfp
	b	.L1203	@
.L1201:
	strb	r3, [r6, #-22]	@ temp.4099, <variable>.btm_structure
	ldr	ip, [r4, #0]	@ tmp531, <variable>.pListX
	ldrb	r0, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r6, #-21]	@ <variable>.is_long_term, <variable>.btm_is_long_term
	ldr	r1, [r4, #0]	@ tmp534, <variable>.pListX
	ldr	lr, [r1, #16]	@ <variable>.poc, <variable>.poc
	str	lr, [r6, #4]	@ <variable>.poc, <variable>.btm_poc
.L1202:
	ldr	r2, [r5, r9]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r8, r8, #1	@ i.4108, i.4108,
	add	r4, r4, #4	@ ivtmp.3894, ivtmp.3894,
	add	r6, r6, #36	@ ivtmp.3903, ivtmp.3903,
	cmp	r2, r8	@ <variable>.CurrSlice.listXsize, i.4108
	bls	.L1247	@,
.L1203:
	ldr	r1, [r4, #0]	@ tmp495, <variable>.pListX
	ldr	r0, [r5, sl]	@, <variable>.ChanID
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	ldr	r3, [r4, #0]	@ tmp498, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r2, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	str	ip, [r6, #-16]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r4, #0]	@ tmp501, <variable>.pListX
	ldr	r3, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r2, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	strb	r2, [r6, #-27]	@ <variable>.is_used, <variable>.is_used
	ldr	ip, [r4, #0]	@ tmp505, <variable>.pListX
	ldr	r1, [ip, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	r3, [r1, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	moveq	r0, r7	@ ExistImgIdc_1.3957, ExistImgIdc_1.3959
	beq	.L1199	@,
	cmp	r0, #0	@ pstLogicFs.4076,
	ldrne	r3, [r0, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	ldrne	r0, [r3, #4]	@ ExistImgIdc_1.3957, <variable>.PhyFsID
.L1199:
	str	r0, [r6, #-12]	@ ExistImgIdc_1.3957, <variable>.img_idc
	ldr	r1, [r4, #0]	@ tmp509, <variable>.pListX
	ldr	lr, [r1, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r3, [lr, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	str	r3, [r6, #-8]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r2, [r4, #0]	@ tmp512, <variable>.pListX
	ldr	ip, [r2, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r0, [ip, #600]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #-20]	@ <variable>.poc, <variable>.poc
	ldr	r1, [r4, #0]	@ tmp515, <variable>.pListX
	ldrb	lr, [r1, #0]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	strb	lr, [r6, #-28]	@ <variable>.structure, <variable>.list_structure
	ldr	r3, [r4, #0]	@ tmp518, <variable>.pListX
	ldr	r2, [r3, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrb	ip, [r2, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	ip, [r6, #-26]	@ <variable>.frame.structure, <variable>.frame_structure
	ldr	r0, [r4, #0]	@ tmp522, <variable>.pListX
	ldrb	r3, [r0, #0]	@ zero_extendqisi2	@ temp.4099, <variable>.structure
	cmp	r3, #1	@ temp.4099,
	bne	.L1201	@,
	strb	r3, [r6, #-24]	@ temp.4099, <variable>.top_structure
	ldr	r3, [r4, #0]	@ tmp525, <variable>.pListX
	ldrb	r2, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r2, [r6, #-23]	@ <variable>.is_long_term, <variable>.top_is_long_term
	ldr	ip, [r4, #0]	@ tmp528, <variable>.pListX
	ldr	r0, [ip, #16]	@ <variable>.poc, <variable>.poc
	str	r0, [r6, #0]	@ <variable>.poc, <variable>.top_poc
	b	.L1202	@
.L1252:
	movw	r1, #:lower16:11163080	@ ivtmp.3814,
	movt	r1, #:upper16:11163080	@ ivtmp.3814,
	movw	ip, #:lower16:11162684	@ tmp594,
	add	r3, r5, r1	@ ivtmp.3814, pMvcCtx, ivtmp.3814
	movt	ip, #:upper16:11162684	@ tmp594,
	mov	r2, #0	@ i.4117,
.L1208:
	ldr	r1, [r3, #0]	@ tmp570, <variable>.CurrSlice.wp_weight_l1_y
	add	r2, r2, #1	@ i.4117, i.4117,
	str	r1, [r0, #472]	@ tmp570, <variable>.wp_weight_l1_y
	ldr	r1, [r3, #128]	@ tmp571, <variable>.CurrSlice.wp_weight_l1_u
	str	r1, [r0, #600]	@ tmp571, <variable>.wp_weight_l1_u
	ldr	r1, [r3, #256]	@ tmp572, <variable>.CurrSlice.wp_weight_l1_v
	str	r1, [r0, #728]	@ tmp572, <variable>.wp_weight_l1_v
	ldr	r1, [r3, #768]	@ tmp573, <variable>.CurrSlice.wp_offset_l1_y
	str	r1, [r0, #1240]	@ tmp573, <variable>.wp_offset_l1_y
	ldr	r1, [r3, #896]	@ tmp574, <variable>.CurrSlice.wp_offset_l1_u
	str	r1, [r0, #1368]	@ tmp574, <variable>.wp_offset_l1_u
	ldr	r1, [r3, #1024]	@ tmp575, <variable>.CurrSlice.wp_offset_l1_v
	add	r3, r3, #4	@ ivtmp.3814, ivtmp.3814,
	str	r1, [r0, #1496]	@ tmp575, <variable>.wp_offset_l1_v
	add	r0, r0, #4	@ ivtmp.4119, ivtmp.4119,
	ldr	r1, [r5, ip]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r1, r2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.4117
	bcs	.L1208	@,
	b	.L1163	@
.L1249:
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L1254	@,
	movt	r1, #:upper16:.LC25	@,
	movw	r3, #7561	@,
	bl	dprint_vfmw	@
	b	.L1209	@
.L1253:
	movw	r1, #:lower16:.LC25	@,
	ldr	r2, .L1254	@,
	movt	r1, #:upper16:.LC25	@,
	movw	r3, #7579	@,
	bl	dprint_vfmw	@
	b	.L1209	@
.L1255:
	.align	2
.L1254:
	.word	.LANCHOR0+216
	.fnend
	.size	MVC_WriteSliceMsg, .-MVC_WriteSliceMsg
	.align	2
	.global	MVC_GetAPC
	.type	MVC_GetAPC, %function
MVC_GetAPC:
	.fnstart
.LFB1552:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pFrameStore, pFrameStore
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	beq	.L1283	@,
	cmp	r2, #1	@ structure,
	beq	.L1260	@,
	cmp	r2, #2	@ structure,
	beq	.L1284	@,
	ldr	r7, [r5, #520]	@ toppoc, <variable>.top_field.poc
	ldr	r8, [r5, #560]	@ bottompoc, <variable>.bottom_field.poc
.L1262:
	movw	r3, #:lower16:11168888	@ tmp152,
	movt	r3, #:upper16:11168888	@ tmp152,
	ldr	r0, [r6, r3]	@ D.37868, <variable>.APC.size
	cmp	r0, #0	@ D.37868,
	beq	.L1263	@,
	movw	r1, #:lower16:11168632	@ tmp153,
	movt	r1, #:upper16:11168632	@ tmp153,
	ldr	r4, [r6, r1]	@ <variable>.APC.is_used, <variable>.APC.is_used
	cmp	r4, #0	@ <variable>.APC.is_used,
	beq	.L1265	@,
	tst	r0, #1	@ D.37868,
	movw	r1, #:lower16:11168636	@ ivtmp.4157,
	movt	r1, #:upper16:11168636	@ ivtmp.4157,
	mov	r4, #0	@ i,
	add	r3, r6, r1	@ ivtmp.4157, pMvcCtx, ivtmp.4157
	bne	.L1266	@,
	ldr	ip, [r3], #4	@ D.37840, <variable>.APC.is_used
	mov	r4, #1	@ i,
	cmp	ip, #0	@ D.37840,
	bne	.L1266	@,
	b	.L1265	@
.L1271:
	ldr	ip, [r2], #4	@ D.37840, <variable>.APC.is_used
	cmp	ip, #0	@ D.37840,
	beq	.L1265	@,
	ldr	r1, [r3, #4]	@ D.37840, <variable>.APC.is_used
	add	r4, r4, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.4157, tmp182,
	cmp	r1, #0	@ D.37840,
	beq	.L1265	@,
.L1266:
	add	r4, r4, #1	@ i, i,
	mov	r2, r3	@ tmp182, ivtmp.4157
	cmp	r4, r0	@ i, D.37868
	bcc	.L1271	@,
.L1263:
	mvn	r0, #0	@ D.37838,
.L1258:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1284:
	ldr	r7, [r5, #560]	@ toppoc, <variable>.bottom_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1262	@
.L1265:
	movw	r2, #:lower16:11199520	@ tmp155,
	movt	r2, #:upper16:11199520	@ tmp155,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r6, r2]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	subs	ip, r0, #0	@ pstLogicFs,
	beq	.L1267	@,
	ldr	r0, [ip, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	cmp	r0, #0	@ <variable>.pstDecodeFs,
	beq	.L1267	@,
	movw	r0, #:lower16:2792158	@ tmp159,
	movt	r0, #:upper16:2792158	@ tmp159,
	add	r3, r4, r0	@ tmp159, i, tmp159
	mov	lr, #1	@ tmp161,
	movw	r2, #:lower16:11168892	@ tmp170,
	movt	r2, #:upper16:11168892	@ tmp170,
	str	lr, [r6, r3, asl #2]	@ tmp161, <variable>.APC.is_used
	movw	r0, #:lower16:2792190	@ tmp166,
	ldr	ip, [ip, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movt	r0, #:upper16:2792190	@ tmp166,
	movw	r3, #:lower16:2792206	@ tmp168,
	movt	r3, #:upper16:2792206	@ tmp168,
	ldr	lr, [r6, r2]	@ D.37855, <variable>.APC.used_size
	add	r0, r4, r0	@ tmp166, i, tmp166
	add	r3, r4, r3	@ tmp168, i, tmp168
	ldr	ip, [ip, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movw	r1, #:lower16:2792174	@ tmp162,
	movt	r1, #:upper16:2792174	@ tmp162,
	str	r7, [r6, r0, asl #2]	@ toppoc, <variable>.APC.poc
	cmp	lr, #15	@ D.37855,
	str	r8, [r6, r3, asl #2]	@ bottompoc, <variable>.APC.poc
	add	r1, r4, r1	@ tmp162, i, tmp162
	movw	r3, #:lower16:11168892	@ tmp171,
	movt	r3, #:upper16:11168892	@ tmp171,
	str	ip, [r6, r1, asl #2]	@ <variable>.PhyFsID, <variable>.APC.idc
	movhi	lr, #16	@ iftmp.501,
	addls	lr, lr, #1	@ iftmp.501, D.37855,
	mov	r0, #13	@,
	str	lr, [r6, r3]	@ iftmp.501, <variable>.APC.used_size
	movw	r1, #:lower16:.LC26	@,
	ldr	r2, [r5, #184]	@, <variable>.fs_image.image_id
	movt	r1, #:upper16:.LC26	@,
	mov	r3, r4	@, i
	bl	dprint_vfmw	@
	str	r4, [r5, #632]	@ i, <variable>.apc_idc
	mov	r0, #0	@ D.37838,
	b	.L1258	@
.L1260:
	ldr	r7, [r5, #520]	@ toppoc, <variable>.top_field.poc
	mov	r8, r7	@ bottompoc, toppoc
	b	.L1262	@
.L1283:
	mov	r0, r5	@, pFrameStore
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #2043	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37838,
	b	.L1258	@
.L1267:
	mov	lr, #0	@ tmp174,
	ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ D.37863, <variable>.is_reference
	ldr	r2, [r5, #584]	@ D.37844, <variable>.logic_fs_id
	mov	r0, lr	@, tmp174
	movw	r1, #:lower16:.LC27	@,
	movt	r1, #:upper16:.LC27	@,
	stmia	sp, {ip, lr}	@ phole stm
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37838,
	b	.L1258	@
	.fnend
	.size	MVC_GetAPC, .-MVC_GetAPC
	.align	2
	.global	MVC_ExchangePts
	.type	MVC_ExchangePts, %function
MVC_ExchangePts:
	.fnstart
.LFB1545:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r1, [fp, #-60]	@ pFrameStore, %sfp
	ldrd	r2, [r1, #16]	@ <variable>.fs_image.PTS, pFrameStore,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mvn	r1, #0	@,
	mvn	r0, #0	@ tmp145,
	cmp	r3, r1	@ <variable>.fs_image.PTS, tmp145
	cmpeq	r2, r0	@ <variable>.fs_image.PTS, tmp145
	beq	.L1291	@,
	movw	r7, #:lower16:11168612	@ tmp146,
	movt	r7, #:upper16:11168612	@ tmp146,
	ldr	r3, [r4, r7]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L1291	@,
	movw	r5, #:lower16:11168420	@ ivtmp.4191,
	movt	r5, #:upper16:11168420	@ ivtmp.4191,
	movw	sl, #:lower16:11199520	@ tmp174,
	add	r5, r4, r5	@ ivtmp.4191, pMvcCtx, ivtmp.4191
	movt	sl, #:upper16:11199520	@ tmp174,
	mvn	r8, #1	@ MinPts.4198,
	mvn	r9, #0	@ MinPts.4198,
	mov	r6, #0	@ i,
	mvn	r0, #0	@,
	str	r0, [fp, #-56]	@, %sfp
.L1290:
	ldr	r3, [r5, #0]	@ D.37480, <variable>.DPB.fs
	cmp	r3, #0	@ D.37480,
	beq	.L1287	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1287	@,
	ldrsb	r1, [r0, #1]	@ D.37488, <variable>.s32DispState
	cmp	r1, #3	@ D.37488,
	cmpne	r1, #0	@, D.37488,
	beq	.L1287	@,
	ldr	r2, [r5, #0]	@ tmp161, <variable>.DPB.fs
	ldrd	r0, [r2, #16]	@, tmp161,
	cmp	r1, r9	@, MinPts.4198
	cmpeq	r0, r8	@, MinPts.4198
	strcc	r6, [fp, #-56]	@ i, %sfp
	strd	r0, [fp, #-52]	@,,
	bcc	.L1288	@,
.L1287:
	strd	r8, [fp, #-52]	@ MinPts.4198,,
.L1288:
	ldr	ip, [r4, r7]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r6, r6, #1	@ i, i,
	ldrd	r8, [fp, #-52]	@ MinPts.4198,,
	add	r5, r5, #4	@ ivtmp.4191, ivtmp.4191,
	cmp	r6, ip	@ i, <variable>.DPB.size
	bcc	.L1290	@,
	ldr	r3, [fp, #-56]	@, %sfp
	cmn	r3, #1	@,
	beq	.L1291	@,
	ldr	r6, [fp, #-60]	@, %sfp
	mov	r0, r8	@, MinPts.4198
	mov	r1, r9	@, MinPts.4198
	ldrd	r2, [r6, #16]	@ temp.4195,,
	cmp	r1, r3	@, temp.4195
	cmpeq	r0, r2	@, temp.4195
	bcc	.L1292	@,
.L1291:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1292:
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC28	@,
	movt	r1, #:upper16:.LC28	@,
	mov	r6, r8	@, MinPts.4198
	mov	r7, r9	@, MinPts.4198
	strd	r6, [sp]	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-56]	@, %sfp
	movw	r1, #:lower16:2792104	@ tmp165,
	movt	r1, #:upper16:2792104	@ tmp165,
	add	ip, r0, r1	@ tmp165,, tmp165
	ldr	r7, [fp, #-60]	@, %sfp
	add	r2, r4, ip, asl #2	@, tmp170, pMvcCtx, tmp165,
	ldrd	r0, [r7, #16]	@ <variable>.fs_image.PTS,,
	ldr	r7, [r2, #4]	@ tmp167, <variable>.DPB.fs
	strd	r0, [r7, #16]	@ <variable>.fs_image.PTS, tmp167,
	ldrd	r6, [fp, #-52]	@,,
	ldr	r0, [fp, #-60]	@, %sfp
	strd	r6, [r0, #16]	@,,
	b	.L1291	@
	.fnend
	.size	MVC_ExchangePts, .-MVC_ExchangePts
	.align	2
	.global	MVC_CheckFrameStore
	.type	MVC_CheckFrameStore, %function
MVC_CheckFrameStore:
	.fnstart
.LFB1544:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11198012	@ tmp145,
	movt	r3, #:upper16:11198012	@ tmp145,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r2, [r0, r3]	@ <variable>.IDRFound, <variable>.IDRFound
	cmp	r2, #0	@ <variable>.IDRFound,
	beq	.L1311	@,
.L1294:
	movw	r3, #:lower16:11199520	@ tmp150,
	movt	r3, #:upper16:11199520	@ tmp150,
	ldr	r1, [r4, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, r3]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogicFs
	beq	.L1297	@,
	ldrsb	r3, [r0, #1]	@ D.37413, <variable>.s32DispState
	cmp	r3, #3	@ D.37413,
	cmpne	r3, #0	@, D.37413,
	beq	.L1312	@,
	ldrb	r2, [r4, #1]	@ zero_extendqisi2	@ D.37431, <variable>.is_used
	cmp	r2, #0	@ D.37431,
	ldreqb	r3, [r4, #0]	@ zero_extendqisi2	@ prephitmp.4213, <variable>.non_existing
	beq	.L1307	@,
	ldrb	r3, [r4, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #1	@ <variable>.non_existing,
	beq	.L1307	@,
	ldr	ip, [r4, #0]	@ tmp174,* pFrameStore
	movw	lr, #:lower16:50332416	@ tmp175,
	movt	lr, #:upper16:50332416	@ tmp175,
	bic	r3, ip, #16711680	@ tmp172, tmp174,
	bic	r1, r3, #255	@ tmp172, tmp172,
	cmp	r1, lr	@ tmp172, tmp175
	beq	.L1313	@,
	cmp	r2, #1	@ D.37431,
	beq	.L1314	@,
	cmp	r2, #2	@ D.37431,
	beq	.L1315	@,
.L1304:
	ldr	r1, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #188]	@ D.37457, <variable>.stDispImg.error_level
	ldr	r3, [r1, #4]	@ D.37459, <variable>.s32OutErrThr
	cmp	r2, r3	@ D.37457, D.37459
	movls	r0, #0	@ D.37407,
	bhi	.L1316	@,
.L1296:
	sub	sp, fp, #20
	ldmfd	sp, {r4, r5, fp, sp, pc}
.L1315:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@ temp.4230, <variable>.mode_skip_flag
	tst	r3, #2	@ temp.4230,
	beq	.L1304	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC34	@,
	movt	r1, #:upper16:.LC34	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
.L1312:
	movw	r1, #:lower16:.LC29	@,
	ldr	r2, [r4, #584]	@, <variable>.logic_fs_id
	movt	r1, #:upper16:.LC29	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
.L1299:
	ldr	r0, [r4, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	moveq	r0, #2	@ tmp169,
	streq	r0, [r4, #608]	@ tmp169, <variable>.eFoState
	mvn	r0, #2	@ D.37407,
	b	.L1296	@
.L1314:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@ temp.4228, <variable>.mode_skip_flag
	tst	r3, #1	@ temp.4228,
	beq	.L1304	@,
	mov	r0, r2	@, D.37431
	movw	r1, #:lower16:.LC33	@,
	movt	r1, #:upper16:.LC33	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
.L1311:
	ldr	r2, [r1, #636]	@ <variable>.as_first_out, <variable>.as_first_out
	cmp	r2, #1	@ <variable>.as_first_out,
	beq	.L1295	@,
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
.L1297:
	ldr	ip, [r4, #584]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	movw	r1, #:lower16:.LC30	@,
	ldr	r3, [r4, #608]	@ <variable>.eFoState, <variable>.eFoState
	movt	r1, #:upper16:.LC30	@,
	mov	r2, r4	@, pFrameStore
	mov	r0, #1	@,
	str	ip, [sp, #0]	@ <variable>.logic_fs_id,
	bl	dprint_vfmw	@
	b	.L1299	@
.L1295:
	str	r2, [r0, r3]	@ <variable>.as_first_out, <variable>.IDRFound
	b	.L1294	@
.L1307:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC31	@,
	movt	r1, #:upper16:.LC31	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
.L1316:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC35	@,
	movt	r1, #:upper16:.LC35	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
.L1313:
	ldrb	r3, [r4, #3]	@ zero_extendqisi2	@, <variable>.mode_skip_flag
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC32	@,
	movt	r1, #:upper16:.LC32	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37407,
	b	.L1296	@
	.fnend
	.size	MVC_CheckFrameStore, .-MVC_CheckFrameStore
	.align	2
	.global	MVC_GetMinPOC
	.type	MVC_GetMinPOC, %function
MVC_GetMinPOC:
	.fnstart
.LFB1524:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r3, [fp, #-48]	@ pos, %sfp
	ldr	r8, [fp, #-48]	@, %sfp
	movw	r5, #:lower16:11168612	@ tmp151,
	movt	r5, #:upper16:11168612	@ tmp151,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	ip, #:lower16:11168616	@ tmp152,
	movt	ip, #:upper16:11168616	@ tmp152,
	mvn	r3, #0	@ tmp149,
	mvn	r0, #-2147483648	@ tmp150,
	str	r3, [r8, #0]	@ tmp149,
	mov	r6, r2	@ poc, poc
	str	r0, [r2, #0]	@ tmp150,* poc
	mov	r8, r1	@ CurrViewId, CurrViewId
	ldr	r3, [r4, r5]	@ D.36722, <variable>.DPB.size
	ldr	r2, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, r3	@ <variable>.DPB.used_size, D.36722
	strhi	r3, [r4, ip]	@ D.36722, <variable>.DPB.used_size
	cmp	r3, #0	@ D.36722,
	beq	.L1319	@,
	movw	r5, #:lower16:11168420	@ ivtmp.4259,
	movt	r5, #:upper16:11168420	@ ivtmp.4259,
	movw	r9, #:lower16:11199520	@ tmp180,
	movw	sl, #:lower16:11168612	@ tmp181,
	mvn	r1, #0	@,
	add	r5, r4, r5	@ ivtmp.4259, pMvcCtx, ivtmp.4259
	movt	r9, #:upper16:11199520	@ tmp180,
	movt	sl, #:upper16:11168612	@ tmp181,
	str	r1, [fp, #-52]	@, %sfp
	mov	r7, #0	@ i,
	b	.L1323	@
.L1321:
	ldr	r3, [r5, #0]	@ temp.4267, <variable>.DPB.fs
	ldr	lr, [r6, #0]	@ tmp167,* poc
	ldr	r2, [r3, #600]	@ temp.4268, <variable>.poc
	cmp	lr, r2	@ tmp167, temp.4268
	ble	.L1320	@,
	ldrb	ip, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	ip, #0	@ <variable>.is_in_dpb,
	beq	.L1320	@,
	ldrb	lr, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r0, lr, #1	@ tmp171, <variable>.s32DispState,
	uxtb	r1, r0	@ tmp172, tmp171
	cmp	r1, #1	@ tmp172,
	bls	.L1326	@,
.L1320:
	ldr	r2, [r4, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	add	r7, r7, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.4259, ivtmp.4259,
	cmp	r2, r7	@ <variable>.DPB.size, i
	bls	.L1319	@,
.L1323:
	ldr	r3, [r5, #0]	@ D.36726, <variable>.DPB.fs
	cmp	r3, #0	@ D.36726,
	beq	.L1320	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L1320	@,
	cmn	r8, #1	@ CurrViewId,
	bne	.L1321	@,
	ldr	r3, [r5, #0]	@ temp.4263, <variable>.DPB.fs
	ldrb	lr, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	lr, #0	@ <variable>.is_in_dpb,
	beq	.L1320	@,
	ldrb	r1, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	sub	r2, r1, #1	@ tmp162, <variable>.s32DispState,
	uxtb	ip, r2	@ tmp163, tmp162
	cmp	ip, #1	@ tmp163,
	bhi	.L1320	@,
	ldr	r1, [r6, #0]	@ D.36744,* poc
	ldr	r2, [r3, #600]	@ D.36745, <variable>.poc
	cmp	r1, r2	@ D.36744, D.36745
	bgt	.L1327	@,
	bne	.L1320	@,
	ldr	r2, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [fp, #-52]	@, %sfp
	cmp	r2, ip	@ <variable>.view_id,
	bge	.L1320	@,
	str	r1, [r6, #0]	@ D.36744,* poc
	ldr	r3, [fp, #-48]	@, %sfp
	str	r7, [r3, #0]	@ i,
	ldr	r0, [r5, #0]	@ tmp166, <variable>.DPB.fs
	ldr	r1, [r0, #644]	@, <variable>.view_id
	str	r1, [fp, #-52]	@, %sfp
	b	.L1320	@
.L1319:
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r0, [ip, #0]	@,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1326:
	ldr	r3, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r3	@ CurrViewId, <variable>.view_id
	streq	r2, [r6, #0]	@ temp.4268,* poc
	ldreq	r2, [fp, #-48]	@, %sfp
	streq	r7, [r2, #0]	@ i,
	b	.L1320	@
.L1327:
	str	r2, [r6, #0]	@ D.36745,* poc
	ldr	lr, [fp, #-48]	@, %sfp
	str	r7, [lr, #0]	@ i,
	ldr	r3, [r5, #0]	@ tmp164, <variable>.DPB.fs
	ldr	r0, [r3, #644]	@, <variable>.view_id
	str	r0, [fp, #-52]	@, %sfp
	b	.L1320	@
	.fnend
	.size	MVC_GetMinPOC, .-MVC_GetMinPOC
	.align	2
	.global	MVC_DEC_RecycleImage
	.type	MVC_DEC_RecycleImage, %function
MVC_DEC_RecycleImage:
	.fnstart
.LFB1667:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:11199520	@ tmp144,
	movt	r5, #:upper16:11199520	@ tmp144,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ PicID, PicID
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC36	@,
	movt	r1, #:upper16:.LC36	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, r6	@, PicID
	bl	FSP_GetLogicFs	@
	subs	r7, r0, #0	@ pstLogicFs,
	bne	.L1336	@,
.L1329:
	mvn	r0, #0	@ D.45959,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1336:
	ldrsb	r3, [r7, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r3, #0	@ <variable>.s32DispState,
	beq	.L1329	@,
	ldr	r1, [r7, #200]	@ D.45961, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ D.45961,
	beq	.L1330	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r0, #0	@ tmp149,
	str	r0, [r7, #200]	@ tmp149, <variable>.stDispImg.p_usrdat
.L1330:
	ldr	r1, [r7, #204]	@ temp.4305, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4305,
	beq	.L1331	@,
	movw	r2, #:lower16:11199520	@ tmp150,
	movt	r2, #:upper16:11199520	@ tmp150,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r1, #0	@ tmp152,
	str	r1, [r7, #204]	@ tmp152, <variable>.stDispImg.p_usrdat
.L1331:
	ldr	r1, [r7, #208]	@ temp.4307, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4307,
	beq	.L1332	@,
	movw	lr, #:lower16:11199520	@ tmp153,
	movt	lr, #:upper16:11199520	@ tmp153,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	ip, #0	@ tmp155,
	str	ip, [r7, #208]	@ tmp155, <variable>.stDispImg.p_usrdat
.L1332:
	ldr	r1, [r7, #212]	@ temp.4301, <variable>.stDispImg.p_usrdat
	cmp	r1, #0	@ temp.4301,
	beq	.L1333	@,
	movw	r2, #:lower16:11199520	@ tmp156,
	movt	r2, #:upper16:11199520	@ tmp156,
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp158,
	str	r3, [r7, #212]	@ tmp158, <variable>.stDispImg.p_usrdat
.L1333:
	movw	ip, #:lower16:11199520	@ tmp159,
	movt	ip, #:upper16:11199520	@ tmp159,
	mov	r1, r6	@, PicID
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	mov	r0, #0	@ D.45959,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	MVC_DEC_RecycleImage, .-MVC_DEC_RecycleImage
	.align	2
	.global	mvc_u_1
	.type	mvc_u_1, %function
mvc_u_1:
	.fnstart
.LFB1516:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	add	r0, r0, #13504	@, pMvcCtx,
	mov	r6, r1	@ SE_TRACEstring, SE_TRACEstring
	add	r0, r0, #24	@,,
	mov	r1, #1	@,
	bl	BsGet	@
	ldr	ip, [r5, #368]	@ D.36583, <variable>.pCurrNal
	mov	r2, r6	@, SE_TRACEstring
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	lr, lr, #1	@ tmp141, <variable>.nal_bitoffset,
	str	lr, [ip, #60]	@ tmp141, <variable>.nal_bitoffset
	mov	r4, r0	@ INFO,
	mov	r0, #21	@,
	mov	r3, r4	@, INFO
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	mvc_u_1, .-mvc_u_1
	.align	2
	.global	mvc_u_v
	.type	mvc_u_v, %function
mvc_u_v:
	.fnstart
.LFB1515:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	add	r0, r0, #13504	@, pMvcCtx,
	mov	r7, r2	@ SE_TRACEstring, SE_TRACEstring
	add	r0, r0, #24	@,,
	mov	r5, r1	@ LenInBits, LenInBits
	bl	BsGet	@
	ldr	ip, [r6, #368]	@ D.36571, <variable>.pCurrNal
	mov	r2, r7	@, SE_TRACEstring
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp142, <variable>.nal_bitoffset, LenInBits
	str	r5, [ip, #60]	@ tmp142, <variable>.nal_bitoffset
	mov	r4, r0	@ INFO,
	mov	r0, #21	@,
	mov	r3, r4	@, INFO
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	mvc_u_v, .-mvc_u_v
	.align	2
	.global	MVC_DecPicTimingSEI
	.type	MVC_DecPicTimingSEI, %function
MVC_DecPicTimingSEI:
	.fnstart
.LFB1650:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11155240	@ tmp150,
	movw	ip, #:lower16:11155992	@ tmp151,
	movt	r3, #:upper16:11155240	@ tmp150,
	movt	ip, #:upper16:11155992	@ tmp151,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r4, [r0, r3]	@ pSPS, <variable>.SPS
	movw	r1, #3992	@ tmp154,
	ldr	r0, [r0, ip]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mla	r3, r1, r0, r4	@ pSPS.4385, tmp154, <variable>.CurrSPS.seq_parameter_set_id, pSPS
	ldrb	r2, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	movne	r4, r3	@ pSPS, pSPS.4385
	bne	.L1347	@,
	movw	r2, #:lower16:11155232	@ tmp156,
	movt	r2, #:upper16:11155232	@ tmp156,
	ldr	ip, [r5, r2]	@ D.44678, <variable>.MaxSpsNum
	cmp	ip, #0	@ D.44678,
	ble	.L1343	@,
	ldrb	r1, [r4, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L1344	@,
	tst	ip, #1	@ D.44678,
	add	r3, r4, #3984	@ ivtmp.4381, pSPS,
	add	r3, r3, #8	@ ivtmp.4381, ivtmp.4381,
	bne	.L1346	@,
	ldrb	r0, [r3, #25]	@ zero_extendqisi2	@ D.44675, <variable>.is_valid
	mov	r4, r3	@ pSPS, ivtmp.4381
	add	r3, r3, #3984	@ ivtmp.4381, ivtmp.4381,
	mov	r1, #1	@ i,
	cmp	r0, #0	@ D.44675,
	add	r3, r3, #8	@ ivtmp.4381, ivtmp.4381,
	beq	.L1346	@,
	b	.L1344	@
.L1348:
	ldrb	r0, [r4, #25]	@ zero_extendqisi2	@ D.44675, <variable>.is_valid
	add	r2, r2, #8	@ tmp180, tmp158,
	cmp	r0, #0	@ D.44675,
	bne	.L1344	@,
	mov	r4, r2	@ pSPS, tmp180
	ldrb	r2, [r2, #25]	@ zero_extendqisi2	@ D.44675, <variable>.is_valid
	cmp	r2, #0	@ D.44675,
	bne	.L1344	@,
.L1346:
	add	r0, r1, #1	@ tmp181, i,
	add	r2, r3, #3984	@ tmp158, pSPS,
	cmp	ip, r0	@ D.44678, tmp181
	mov	r4, r3	@ pSPS, ivtmp.4381
	add	r1, r0, #1	@ i, tmp181,
	add	r3, r2, #4000	@ ivtmp.4381, tmp158,
	bgt	.L1348	@,
.L1343:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC38	@,
	movt	r1, #:upper16:.LC38	@,
	bl	dprint_vfmw	@
	mvn	r3, #0	@ D.44682,
.L1349:
	mov	r0, r3	@, D.44682
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1344:
	cmp	r4, #0	@ pSPS,
	beq	.L1343	@,
.L1347:
	ldrb	r1, [r4, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r1, #0	@ <variable>.vui_parameters_present_flag,
	beq	.L1350	@,
	ldrb	ip, [r4, #35]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag, <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag
	cmp	ip, #0	@ <variable>.vui_seq_parameters.nal_hrd_parameters_present_flag,
	beq	.L1365	@,
	ldr	lr, [r4, #388]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r6, [r4, #392]	@ <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, lr, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.nal_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r6, #1	@ dpb_output_len, <variable>.vui_seq_parameters.nal_hrd_parameters.dpb_output_delay_length_minus1,
.L1353:
	mov	r0, r5	@, pMvcCtx
	movw	r2, #:lower16:.LC39	@,
	movt	r2, #:upper16:.LC39	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168412	@ tmp169,
	movt	ip, #:upper16:11168412	@ tmp169,
	mov	r1, r6	@, dpb_output_len
	movw	r2, #:lower16:.LC40	@,
	movt	r2, #:upper16:.LC40	@,
	str	r0, [r5, ip]	@, <variable>.PicTimingSEI.cpb_removal_delay
	mov	r0, r5	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:11168416	@ tmp171,
	movt	r1, #:upper16:11168416	@ tmp171,
	str	r0, [r5, r1]	@, <variable>.PicTimingSEI.dpb_output_delay
.L1350:
	ldrb	r3, [r4, #39]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.pic_struct_present_flag, <variable>.vui_seq_parameters.pic_struct_present_flag
	cmp	r3, #0	@ <variable>.vui_seq_parameters.pic_struct_present_flag,
	beq	.L1349	@,
	mov	r0, r5	@, pMvcCtx
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC41	@,
	movt	r2, #:upper16:.LC41	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:11168408	@ tmp174,
	movt	r2, #:upper16:11168408	@ tmp174,
	mov	r3, #0	@ D.44682,
	strb	r0, [r5, r2]	@, <variable>.PicTimingSEI.pic_struct
	mov	r0, r3	@, D.44682
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1365:
	ldrb	r2, [r4, #38]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag, <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.vcl_hrd_parameters_present_flag,
	beq	.L1350	@,
	ldr	r0, [r4, #700]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	ldr	r3, [r4, #704]	@ <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1
	add	r1, r0, #1	@ cpb_removal_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.cpb_removal_delay_length_minus1,
	add	r6, r3, #1	@ dpb_output_len, <variable>.vui_seq_parameters.vcl_hrd_parameters.dpb_output_delay_length_minus1,
	b	.L1353	@
	.fnend
	.size	MVC_DecPicTimingSEI, .-MVC_DecPicTimingSEI
	.align	2
	.global	MVC_GetBackPicFromVOQueue
	.type	MVC_GetBackPicFromVOQueue, %function
MVC_GetBackPicFromVOQueue:
	.fnstart
.LFB1600:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11199520	@ tmp144,
	movt	r3, #:upper16:11199520	@ tmp144,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	beq	.L1384	@,
.L1367:
	movw	sl, #:lower16:11197996	@ tmp147,
	movt	sl, #:upper16:11197996	@ tmp147,
	ldr	r0, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r0, #0	@ <variable>.TotalFsNum,
	beq	.L1368	@,
	movw	r4, #:lower16:11169289	@ ivtmp.4421,
	movt	r4, #:upper16:11169289	@ ivtmp.4421,
	mov	r7, #0	@ i,
	movw	r8, #:lower16:11199520	@ tmp175,
	add	r4, r6, r4	@ ivtmp.4421, pMvcCtx, ivtmp.4421
	movt	r8, #:upper16:11199520	@ tmp175,
	mov	r5, r7	@ tmp174, i
.L1373:
	ldr	r1, [r4, #199]	@ D.40276, <variable>.fs_image.p_usrdat
	add	r7, r7, #1	@ i, i,
	strb	r5, [r4, #0]	@ tmp174, <variable>.is_used
	cmp	r1, #0	@ D.40276,
	strb	r5, [r4, #1]	@ tmp174, <variable>.is_reference
	beq	.L1369	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #199]	@ tmp174, <variable>.fs_image.p_usrdat
.L1369:
	ldr	r1, [r4, #203]	@ temp.4434, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4434,
	beq	.L1370	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #203]	@ tmp174, <variable>.fs_image.p_usrdat
.L1370:
	ldr	r1, [r4, #207]	@ temp.4436, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4436,
	beq	.L1371	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #207]	@ tmp174, <variable>.fs_image.p_usrdat
.L1371:
	ldr	r1, [r4, #211]	@ temp.4429, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4429,
	beq	.L1372	@,
	ldr	r0, [r6, r8]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r4, #211]	@ tmp174, <variable>.fs_image.p_usrdat
.L1372:
	ldr	r1, [r6, sl]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r4, r4, #672	@ ivtmp.4421, ivtmp.4421,
	cmp	r1, r7	@ <variable>.TotalFsNum, i
	bhi	.L1373	@,
.L1368:
	movw	r2, #:lower16:11198000	@ tmp168,
	movt	r2, #:upper16:11198000	@ tmp168,
	ldr	ip, [r6, r2]	@ D.40280, <variable>.TotalPmvNum
	cmp	ip, #0	@ D.40280,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r3, #:lower16:11197924	@ ivtmp.4416,
	movt	r3, #:upper16:11197924	@ ivtmp.4416,
	add	r2, r6, r3	@ ivtmp.4416, pMvcCtx, ivtmp.4416
	mov	r1, #1	@ i.4431,
	cmp	r1, ip	@ i.4431, D.40280
	sub	lr, ip, #1	@ tmp177, D.40280,
	mov	r0, #0	@ tmp173,
	and	r3, lr, r1	@ tmp179, tmp177,
	str	r0, [r2], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r3, #0	@ tmp179,
	beq	.L1375	@,
	mov	r1, #2	@ i.4431,
	cmp	r1, ip	@ i.4431, D.40280
	str	r0, [r2], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1375:
	add	r1, r1, #2	@ i.4431, i.4431,
	mov	lr, r2	@ tmp180, ivtmp.4416
	cmp	r1, ip	@ i.4431, D.40280
	str	r0, [lr], #4	@ tmp173, <variable>.PmvStoreUsedFlag
	str	r0, [r2, #4]	@ tmp173, <variable>.PmvStoreUsedFlag
	add	r2, lr, #4	@ ivtmp.4416, tmp180,
	bcc	.L1375	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1384:
	add	r0, r6, #8	@, pMvcCtx,
	bl	ResetVoQueue	@
	b	.L1367	@
	.fnend
	.size	MVC_GetBackPicFromVOQueue, .-MVC_GetBackPicFromVOQueue
	.align	2
	.global	MVC_ReleaseNAL
	.type	MVC_ReleaseNAL, %function
MVC_ReleaseNAL:
	.fnstart
.LFB1565:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r1, #0	@ pNalu, pNalu
	mov	r6, r0	@ ChanID, ChanID
	beq	.L1391	@,
	ldr	r3, [r4, #4]	@ <variable>.streamBuffer, <variable>.streamBuffer
	mov	r5, #0	@ tmp137,
	strb	r5, [r4, #1]	@ tmp137, <variable>.is_valid
	cmp	r3, r5	@ <variable>.streamBuffer,
	strb	r5, [r4, #3]	@ tmp137, <variable>.nal_integ
	beq	.L1388	@,
	ldr	r1, [r4, #28]	@, <variable>.StreamID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC42	@,
	ldr	r2, [r4, #4]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC42	@,
	ldr	r3, [r4, #8]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	str	r5, [r4, #8]	@ tmp137, <variable>.bitstream_length
	str	r5, [r4, #4]	@ tmp137, <variable>.streamBuffer
	str	r5, [r4, #20]	@ tmp137, <variable>.bitsoffset
.L1388:
	ldr	r0, [r4, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	cmp	r0, #0	@ <variable>.streamBuffer,
	beq	.L1389	@,
	ldr	r1, [r4, #56]	@, <variable>.StreamID
	mov	r0, r6	@, ChanID
	bl	SM_ReleaseStreamSeg	@
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC42	@,
	ldr	r2, [r4, #32]	@, <variable>.streamBuffer
	movt	r1, #:upper16:.LC42	@,
	ldr	r3, [r4, #36]	@, <variable>.bitstream_length
	bl	dprint_vfmw	@
	mov	r1, #0	@ tmp154,
	str	r1, [r4, #36]	@ tmp154, <variable>.bitstream_length
	str	r1, [r4, #32]	@ tmp154, <variable>.streamBuffer
	str	r1, [r4, #48]	@ tmp154, <variable>.bitsoffset
.L1389:
	mov	r2, #0	@ tmp157,
	str	r2, [r4, #64]	@ tmp157, <variable>.nal_segment
	strb	r2, [r4, #0]	@ tmp157, <variable>.nal_used_segment
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1391:
	mov	r0, r4	@, pNalu
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #3781	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_ReleaseNAL, .-MVC_ReleaseNAL
	.align	2
	.global	MVC_ClearAllSlice
	.type	MVC_ClearAllSlice, %function
MVC_ClearAllSlice:
	.fnstart
.LFB1520:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11197380	@ ivtmp.4504,
	movw	sl, #:lower16:11197924	@ D.50139,
	movt	r4, #:upper16:11197380	@ ivtmp.4504,
	movt	sl, #:upper16:11197924	@ D.50139,
	movw	r7, #:lower16:11199520	@ tmp148,
	add	r4, r0, r4	@ ivtmp.4504, pMvcCtx, ivtmp.4504
	add	sl, r0, sl	@ D.50139, pMvcCtx, D.50139
	movt	r7, #:upper16:11199520	@ tmp148,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	mov	r8, #0	@ tmp149,
.L1394:
	ldr	r1, [r4, #0]	@ D.36627, <variable>.pSliceNal
	add	r5, r4, #4	@ tmp150, ivtmp.4504,
	cmp	r1, #0	@ D.36627,
	beq	.L1393	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r8, [r4, #0]	@ tmp149, <variable>.pSliceNal
.L1393:
	ldr	r1, [r4, #4]	@ D.36627, <variable>.pSliceNal
	cmp	r1, #0	@ D.36627,
	beq	.L1397	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	str	r8, [r4, #4]	@ tmp149, <variable>.pSliceNal
.L1397:
	add	r4, r5, #4	@ ivtmp.4504, tmp150,
	cmp	r4, sl	@ ivtmp.4504, D.50139
	bne	.L1394	@,
	movw	r2, #:lower16:11199444	@ tmp143,
	movw	r3, #:lower16:11199504	@ tmp145,
	movt	r2, #:upper16:11199444	@ tmp143,
	movt	r3, #:upper16:11199504	@ tmp145,
	mov	r0, #0	@ tmp144,
	str	r0, [r6, r2]	@ tmp144, <variable>.SliceParaNum
	str	r0, [r6, r3]	@ tmp144, <variable>.MaxBytesReceived
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearAllSlice, .-MVC_ClearAllSlice
	.align	2
	.global	MVC_ClearCurrPic
	.type	MVC_ClearCurrPic, %function
MVC_ClearCurrPic:
	.fnstart
.LFB1521:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #:lower16:11155236	@ tmp163,
	movt	sl, #:upper16:11155236	@ tmp163,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearAllSlice	@
	movw	r8, #:lower16:11164312	@ tmp162,
	ldr	r9, [r4, sl]	@, <variable>.MaxPpsNum
	movt	r8, #:upper16:11164312	@ tmp162,
	movw	r6, #:lower16:11164320	@ tmp164,
	movw	r5, #:lower16:11164305	@ tmp167,
	movt	r6, #:upper16:11164320	@ tmp164,
	movt	r5, #:upper16:11164305	@ tmp167,
	str	r9, [r4, r8]	@, <variable>.PrevSlice.pic_parameter_set_id
	movw	ip, #:lower16:11164316	@ tmp168,
	movw	r8, #:lower16:11164304	@ tmp166,
	movt	ip, #:upper16:11164316	@ tmp168,
	movt	r8, #:upper16:11164304	@ tmp166,
	movw	r1, #:lower16:11164306	@ tmp169,
	movw	r2, #:lower16:11164328	@,
	movt	r1, #:upper16:11164306	@ tmp169,
	movt	r2, #:upper16:11164328	@,
	movw	sl, #:lower16:11164332	@ tmp171,
	movw	r7, #:lower16:11164336	@ tmp172,
	movt	sl, #:upper16:11164332	@ tmp171,
	movt	r7, #:upper16:11164336	@ tmp172,
	movw	r9, #:lower16:11164344	@ tmp174,
	movt	r9, #:upper16:11164344	@ tmp174,
	mov	r3, #0	@ tmp141,
	movw	r0, #:lower16:11164340	@,
	movt	r0, #:upper16:11164340	@,
	str	r0, [fp, #-48]	@, %sfp
	mov	r0, r3	@, tmp141
	str	r3, [r4, r7]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	movw	r7, #:lower16:88888	@ tmp165,
	strb	r3, [r4, r8]	@ tmp141, <variable>.PrevSlice.field_pic_flag
	movt	r7, #:upper16:88888	@ tmp165,
	str	r7, [r4, r6]	@ tmp165, <variable>.PrevSlice.frame_num
	mov	r6, #2	@ tmp144,
	strb	r6, [r4, r5]	@ tmp144, <variable>.PrevSlice.bottom_field_flag
	mov	r5, #7	@ tmp147,
	str	r5, [r4, ip]	@ tmp147, <variable>.PrevSlice.nal_ref_idc
	mov	ip, #32	@ tmp149,
	strb	ip, [r4, r1]	@ tmp149, <variable>.PrevSlice.nal_unit_type
	mov	r1, #3	@ tmp152,
	mvn	ip, #0	@ tmp154,
	str	r1, [r4, r2]	@ tmp152, <variable>.PrevSlice.pic_oder_cnt_lsb
	str	ip, [r4, sl]	@ tmp154, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	mov	r1, #262144	@ tmp160,
	str	r1, [r4, r9]	@ tmp160, <variable>.PrevSlice.first_mb_in_slice
	ldr	r2, [fp, #-48]	@, %sfp
	str	r3, [r4, r2]	@ tmp141, <variable>.PrevSlice.delta_pic_order_cnt
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	MVC_ClearCurrPic, .-MVC_ClearCurrPic
	.align	2
	.global	MVC_ClearAllNal
	.type	MVC_ClearAllNal, %function
MVC_ClearAllNal:
	.fnstart
.LFB1518:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r0, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	movw	r7, #:lower16:11199520	@ tmp147,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	cmp	r3, #1	@ <variable>.is_valid,
	movt	r7, #:upper16:11199520	@ tmp147,
	beq	.L1415	@,
.L1408:
	mov	r3, #1	@ i,
	add	r2, r6, #96	@ ivtmp.4562, pMvcCtx,
	b	.L1405	@
.L1404:
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	beq	.L1416	@,
.L1410:
	add	r3, r5, #1	@ i, tmp148,
	add	r2, r4, #96	@ ivtmp.4562, tmp149,
	cmp	r3, #137	@ i,
	beq	.L1417	@,
.L1405:
	add	r4, r2, #96	@ tmp149, ivtmp.4562,
	ldrb	r2, [r2, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r5, r3, #1	@ tmp148, i,
	cmp	r2, #1	@ <variable>.is_valid,
	bne	.L1404	@,
	add	ip, r3, r3, asl #1	@, tmp142, i, i,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	r1, r6, ip, asl #5	@, tmp144, pMvcCtx, tmp142,
	add	r1, r1, #376	@, tmp144,
	bl	MVC_ReleaseNAL	@
	ldrb	r0, [r4, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r0, #1	@ <variable>.is_valid,
	bne	.L1410	@,
.L1416:
	add	r3, r5, r5, asl #1	@, tmp166, tmp148, tmp148,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	add	lr, r6, r3, asl #5	@, tmp168, pMvcCtx, tmp166,
	add	r1, lr, #376	@, tmp168,
	bl	MVC_ReleaseNAL	@
	add	r3, r5, #1	@ i, tmp148,
	cmp	r3, #137	@ i,
	add	r2, r4, #96	@ ivtmp.4562, tmp149,
	bne	.L1405	@,
.L1417:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L1415:
	ldr	r0, [r0, r7]	@, <variable>.ChanID
	add	r1, r6, #376	@, pMvcCtx,
	bl	MVC_ReleaseNAL	@
	b	.L1408	@
	.fnend
	.size	MVC_ClearAllNal, .-MVC_ClearAllNal
	.align	2
	.global	MVC_DEC_Destroy
	.type	MVC_DEC_Destroy, %function
MVC_DEC_Destroy:
	.fnstart
.LFB1665:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r6	@, pMvcCtx
	bl	MVC_ClearAllNal	@
	movw	r0, #:lower16:11199456	@ tmp145,
	movt	r0, #:upper16:11199456	@ tmp145,
	movw	r8, #:lower16:11198024	@ tmp149,
	movt	r8, #:upper16:11198024	@ tmp149,
	ldr	r2, [r6, r0]	@ <variable>.MutexHold, <variable>.MutexHold
	ldr	r3, [r6, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r2, #1	@ <variable>.MutexHold,
	moveq	r2, #0	@ tmp148,
	streq	r2, [r6, r0]	@ tmp148, <variable>.MutexHold
	cmp	r3, #0	@ <variable>.TotalUsrDatNum,
	beq	.L1420	@,
	movw	r4, #:lower16:11198028	@ ivtmp.4606,
	movt	r4, #:upper16:11198028	@ ivtmp.4606,
	mov	r5, #0	@ i,
	movw	r7, #:lower16:11199520	@ tmp175,
	add	r4, r6, r4	@ ivtmp.4606, pMvcCtx, ivtmp.4606
	movt	r7, #:upper16:11199520	@ tmp175,
	mov	sl, r5	@ tmp176, i
.L1422:
	ldr	r1, [r4, #0]	@ D.45808, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i, i,
	cmp	r1, #0	@ D.45808,
	beq	.L1421	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	sl, [r4, #0]	@ tmp176, <variable>.pUsrDatArray
.L1421:
	ldr	r1, [r6, r8]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.4606, ivtmp.4606,
	cmp	r1, r5	@ <variable>.TotalUsrDatNum, i
	bhi	.L1422	@,
.L1420:
	movw	r5, #:lower16:11169488	@ ivtmp.4598,
	movw	sl, #:lower16:11196368	@ D.50239,
	movt	r5, #:upper16:11169488	@ ivtmp.4598,
	movt	sl, #:upper16:11196368	@ D.50239,
	movw	r7, #:lower16:11199520	@ tmp173,
	add	r4, r6, r5	@ ivtmp.4598, pMvcCtx, ivtmp.4598
	add	sl, r6, sl	@ D.50239, pMvcCtx, D.50239
	movt	r7, #:upper16:11199520	@ tmp173,
	mov	r8, #0	@ tmp174,
.L1423:
	ldr	r1, [r4, #0]	@ temp.4610, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4610,
	beq	.L1425	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp174, <variable>.fs_image.p_usrdat
.L1425:
	ldr	r1, [r4, #4]	@ temp.4613, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4613,
	beq	.L1426	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #4]	@ tmp174, <variable>.fs_image.p_usrdat
.L1426:
	ldr	r1, [r4, #8]	@ temp.4615, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4615,
	beq	.L1427	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #8]	@ tmp174, <variable>.fs_image.p_usrdat
.L1427:
	ldr	r1, [r4, #12]	@ D.45814, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.45814,
	beq	.L1429	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #12]	@ tmp174, <variable>.fs_image.p_usrdat
.L1429:
	ldr	r1, [r4, #672]	@ temp.4610, <variable>.fs_image.p_usrdat
	add	r5, r4, #672	@ tmp178, ivtmp.4598,
	cmp	r1, #0	@ temp.4610,
	beq	.L1433	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #672]	@ tmp174, <variable>.fs_image.p_usrdat
.L1433:
	ldr	r1, [r5, #4]	@ temp.4613, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4613,
	beq	.L1434	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #4]	@ tmp174, <variable>.fs_image.p_usrdat
.L1434:
	ldr	r1, [r5, #8]	@ temp.4615, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.4615,
	beq	.L1435	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #8]	@ tmp174, <variable>.fs_image.p_usrdat
.L1435:
	ldr	r1, [r5, #12]	@ D.45814, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.45814,
	beq	.L1439	@,
	ldr	r0, [r6, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r5, #12]	@ tmp174, <variable>.fs_image.p_usrdat
.L1439:
	add	r4, r5, #672	@ ivtmp.4598, tmp178,
	cmp	r4, sl	@ ivtmp.4598, D.50239
	bne	.L1423	@,
	movw	r1, #:lower16:.LC43	@,
	mov	r0, #2	@,
	movt	r1, #:upper16:.LC43	@,
	bl	dprint_vfmw	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_DEC_Destroy, .-MVC_DEC_Destroy
	.align	2
	.global	MVC_ClearCurrNal
	.type	MVC_ClearCurrNal, %function
MVC_ClearCurrNal:
	.fnstart
.LFB1517:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r1, [r0, #368]	@ D.36591, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ D.36591,
	beq	.L1441	@,
	movw	r2, #:lower16:11199520	@ tmp136,
	movt	r2, #:upper16:11199520	@ tmp136,
	ldr	r0, [r0, r2]	@, <variable>.ChanID
	bl	MVC_ReleaseNAL	@
	mov	r3, #0	@ tmp138,
	str	r3, [r4, #368]	@ tmp138, <variable>.pCurrNal
.L1441:
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearCurrNal, .-MVC_ClearCurrNal
	.align	2
	.global	MVC_ClearCurrSlice
	.type	MVC_ClearCurrSlice, %function
MVC_ClearCurrSlice:
	.fnstart
.LFB1519:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC44	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movt	r1, #:upper16:.LC44	@,
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	movw	r3, #:lower16:11199476	@ tmp141,
	movt	r3, #:upper16:11199476	@ tmp141,
	mov	r0, #0	@,
	ldr	r1, [r4, r3]	@ <variable>.TotalSlice, <variable>.TotalSlice
	add	r2, r1, #1	@ tmp139, <variable>.TotalSlice,
	str	r2, [r4, r3]	@ tmp139, <variable>.TotalSlice
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
	.fnend
	.size	MVC_ClearCurrSlice, .-MVC_ClearCurrSlice
	.align	2
	.global	MVC_RepairList
	.type	MVC_RepairList, %function
MVC_RepairList:
	.fnstart
.LFB1567:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11162624	@ tmp157,
	movt	r2, #:upper16:11162624	@ tmp157,
	mov	r3, r0	@ pMvcCtx, pMvcCtx
	ldrb	r2, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L1448	@,
	movcc	r9, #1	@ i_list_cnt,
	bcs	.L1486	@,
.L1451:
	movw	r6, #:lower16:11162668	@ ivtmp.4712,
	add	r7, r3, #11141120	@ ivtmp.4715, pMvcCtx,
	movt	r6, #:upper16:11162668	@ ivtmp.4712,
	mov	sl, #0	@ pRepairPic.4723,
	movw	r8, #:lower16:11196640	@ tmp193,
	add	r6, r3, r6	@ ivtmp.4712, pMvcCtx, ivtmp.4712
	add	r7, r7, #27904	@ ivtmp.4715, ivtmp.4715,
	movt	r8, #:upper16:11196640	@ tmp193,
	mov	r5, sl	@ i_list, pRepairPic.4723
.L1465:
	ldr	r4, [r6, #0]	@ temp.4718, <variable>.CurrSlice.listXsize
	cmp	r4, #0	@ temp.4718,
	beq	.L1452	@,
	ldr	r1, [r7, #0]	@ pRepairPic.4724, <variable>.pListX
	cmp	r1, #0	@ pRepairPic.4724,
	movne	ip, r1	@ pRepairPic, pRepairPic.4724
	bne	.L1454	@,
	add	r2, r5, r5, asl #5	@, tmp161, i_list, i_list,
	tst	r4, #1	@ temp.4718,
	mov	r0, r1	@ i, pRepairPic.4724
	mov	ip, r2, asl #2	@ tmp162, tmp161,
	add	r2, ip, #11141120	@ tmp163, tmp162,
	add	ip, r2, #27904	@ tmp163, tmp163,
	add	r2, r3, ip	@ ivtmp.4709, pMvcCtx, tmp163
	bne	.L1455	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	mov	r0, #1	@ i,
	cmp	ip, #0	@ pRepairPic,
	beq	.L1455	@,
	b	.L1454	@
.L1457:
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1454	@,
	ldr	ip, [r2, #4]!	@ pRepairPic, <variable>.pListX
	cmp	ip, #0	@ pRepairPic,
	bne	.L1454	@,
.L1455:
	add	r0, r0, #1	@ tmp204, i,
	cmp	r4, r0	@ temp.4718, tmp204
	add	r0, r0, #1	@ i, tmp204,
	bhi	.L1457	@,
	mov	ip, sl	@ pRepairPic, pRepairPic.4723
	mov	r2, #1	@ prephitmp.4679,
.L1456:
	cmp	ip, #0	@ pRepairPic,
	orreq	r2, r2, #1	@,, tmp169, prephitmp.4679
	cmp	r2, #0	@ tmp169,
	beq	.L1458	@,
	ldr	r2, [r3, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	ip, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1484	@,
	ldr	sl, [r3, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	ip, sl, #464	@ pRepairPic, <variable>.CurrPic.frame_store,
.L1458:
	add	r0, r5, r5, asl #5	@, tmp176, i_list, i_list,
	movw	r2, #:lower16:11169028	@ tmp178,
	tst	r4, #1	@ temp.4718,
	movt	r2, #:upper16:11169028	@ tmp178,
	mov	sl, r0, asl #2	@ tmp177, tmp176,
	mov	r0, #0	@ i.4719,
	add	r2, sl, r2	@ tmp178, tmp177, tmp178
	add	r2, r3, r2	@ ivtmp.4697, pMvcCtx, tmp178
	bne	.L1462	@,
	cmp	r1, #0	@ pRepairPic.4724,
	mov	r0, #1	@ i.4719,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4718, i.4719
	add	r2, r2, #4	@ ivtmp.4697, ivtmp.4697,
	ldrhi	r1, [r2, #-4]	@ pRepairPic.4724, <variable>.pListX
	bhi	.L1462	@,
	b	.L1461	@
.L1471:
	mov	r2, r1	@ ivtmp.4697, tmp200
	add	r0, r0, #1	@ i.4719, tmp199,
	ldr	r1, [r2], #4	@ pRepairPic.4724, <variable>.pListX
.L1462:
	add	r0, r0, #1	@ tmp199, i.4719,
	cmp	r1, #0	@ pRepairPic.4724,
	streq	ip, [r2, #-4]	@ pRepairPic, <variable>.pListX
	cmp	r4, r0	@ temp.4718, tmp199
	add	r1, r2, #4	@ tmp200, ivtmp.4697,
	bls	.L1461	@,
	ldr	r2, [r1, #-4]	@ pRepairPic.4724, <variable>.pListX
	cmp	r2, #0	@ pRepairPic.4724,
	streq	ip, [r1, #-4]	@ pRepairPic, <variable>.pListX
	b	.L1471	@
.L1452:
	ldr	ip, [r3, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [ip, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r1, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1484	@,
	ldr	r2, [r3, r8]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	ip, sl	@ pRepairPic, pRepairPic.4723
	mov	r1, #1	@,
	str	r1, [r6, #0]	@, <variable>.CurrSlice.listXsize
	add	r0, r2, #464	@ tmp185, <variable>.CurrPic.frame_store,
	str	r0, [r7, #0]	@ tmp185, <variable>.pListX
.L1461:
	add	r5, r5, #1	@ i_list, i_list,
	add	r6, r6, #4	@ ivtmp.4712, ivtmp.4712,
	cmp	r5, r9	@ i_list, i_list_cnt
	add	r7, r7, #132	@ ivtmp.4715, ivtmp.4715,
	bcs	.L1449	@,
	mov	sl, ip	@ pRepairPic.4723, pRepairPic
	b	.L1465	@
.L1454:
	mov	r2, #0	@ prephitmp.4679,
	b	.L1456	@
.L1486:
	cmp	r2, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L1449	@,
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.38966,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1449:
	mov	r0, #0	@ D.38966,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1484:
	mov	r0, r3	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.38966,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L1448:
	mov	r9, #2	@ i_list_cnt,
	b	.L1451	@
	.fnend
	.size	MVC_RepairList, .-MVC_RepairList
	.align	2
	.global	MVC_CombinePacket
	.type	MVC_CombinePacket, %function
MVC_CombinePacket:
	.fnstart
.LFB1658:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r0, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r3, [r0, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r3, #4096	@ <variable>.bitstream_length,
	bcs	.L1489	@,
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC45	@,
	movt	r1, #:upper16:.LC45	@,
	mov	r5, #0	@ tmp162,
	bl	dprint_vfmw	@
	ldr	ip, [r4, #368]	@ temp.4750, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC46	@,
	movt	r1, #:upper16:.LC46	@,
	ldr	r6, [ip, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [ip, #12]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	ldr	r3, [ip, #40]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	str	r6, [sp, #0]	@ <variable>.bitstream_length,
	ldr	lr, [ip, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	str	lr, [sp, #4]	@ <variable>.bitstream_length,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #368]	@ temp.4752, <variable>.pCurrNal
	ldr	r3, [r0, #8]	@ temp.4753, <variable>.bitstream_length
	ldr	r6, [r0, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	ldr	r1, [r0, #4]	@, <variable>.streamBuffer
	mov	r2, r3	@, temp.4753
	rsb	r0, r3, r6	@, temp.4753, <variable>.streamBuffer
	bl	memcpy	@
	ldr	ip, [r4, #368]	@ temp.4754, <variable>.pCurrNal
	mov	r0, #7	@,
	movw	r1, #:lower16:.LC47	@,
	movt	r1, #:upper16:.LC47	@,
	ldr	r2, [ip, #56]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r6, [ip, #28]	@ StreamId, <variable>.StreamID
	str	r2, [ip, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r3, #20]	@ tmp162, <variable>.bitsoffset
	ldr	r3, [r4, #368]	@ temp.4756, <variable>.pCurrNal
	ldr	r2, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #32]	@ <variable>.streamBuffer, <variable>.streamBuffer
	rsb	r2, r2, ip	@ tmp166, <variable>.bitstream_length, <variable>.streamBuffer
	str	r2, [r3, #4]	@ tmp166, <variable>.streamBuffer
	ldr	r3, [r4, #368]	@ temp.4761, <variable>.pCurrNal
	ldr	r2, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	ip, [r3, #40]	@ <variable>.stream_phy_addr, <variable>.stream_phy_addr
	rsb	r2, r2, ip	@ tmp169, <variable>.bitstream_length, <variable>.stream_phy_addr
	str	r2, [r3, #12]	@ tmp169, <variable>.stream_phy_addr
	ldr	r3, [r4, #368]	@ temp.4764, <variable>.pCurrNal
	ldr	ip, [r3, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r2, ip, r2	@ tmp172, <variable>.bitstream_length, <variable>.bitstream_length
	str	r2, [r3, #8]	@ tmp172, <variable>.bitstream_length
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #1	@ tmp174,
	str	ip, [r3, #64]	@ tmp174, <variable>.nal_segment
	ldr	r2, [r4, #368]	@ temp.4768, <variable>.pCurrNal
	ldr	r3, [r2, #8]	@, <variable>.bitstream_length
	ldr	r2, [r2, #12]	@, <variable>.stream_phy_addr
	bl	dprint_vfmw	@
	movw	r3, #:lower16:11199520	@ tmp178,
	movt	r3, #:upper16:11199520	@ tmp178,
	mov	r1, r6	@, StreamId
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [ip, #32]	@ tmp162, <variable>.streamBuffer
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r2, #48]	@ tmp162, <variable>.bitsoffset
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r5, [r1, #36]	@ tmp162, <variable>.bitstream_length
.L1489:
	sub	sp, fp, #24
	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
	.fnend
	.size	MVC_CombinePacket, .-MVC_CombinePacket
	.align	2
	.global	MVC_FindZeroBitsInSeg
	.type	MVC_FindZeroBitsInSeg, %function
MVC_FindZeroBitsInSeg:
	.fnstart
.LFB1656:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ands	r3, r1, #63	@ tmp154, len,
	add	r2, r1, #63	@ tmp157, len,
	str	r1, [fp, #-48]	@ len, %sfp
	movne	r3, #1	@, tmp154,
	cmp	r1, #0	@ len,
	mov	sl, r0	@ ptr, ptr
	movge	r2, r1	@ len, len
	add	r8, r3, r2, asr #6	@, nRound, tmp154, len,
	cmp	r8, #0	@ nRound,
	movle	r4, #0	@ zero_byte,
	ble	.L1492	@,
	movw	r5, #:lower16:.LANCHOR1	@ tmp192,
	ldr	r7, [fp, #-48]	@ ivtmp.4825, %sfp
	movt	r5, #:upper16:.LANCHOR1	@ tmp192,
	mov	r4, #0	@ zero_byte,
	mov	r9, r5	@ tmp193, tmp192
.L1496:
	cmp	r7, #64	@ ivtmp.4825,
	movlt	r6, r7	@ ThisRoundSize.886, ivtmp.4825
	movge	r6, #64	@ ThisRoundSize.886,
	movw	r0, #:lower16:.LANCHOR1	@,
	rsb	r1, r6, r7	@ tmp160, ThisRoundSize.886, ivtmp.4825
	movt	r0, #:upper16:.LANCHOR1	@,
	mov	r2, r6	@, ThisRoundSize.886
	sub	r6, r6, #1	@ tmp167, ThisRoundSize.886,
	add	r1, sl, r1	@, ptr, tmp160
	bl	memcpy	@
	ldrb	r0, [r5, r6]	@ zero_extendqisi2	@ tmp168,
	add	r3, r5, r6	@ pLastByte, tmp192, tmp167
	cmp	r0, #0	@ tmp168,
	bne	.L1492	@,
	cmp	r3, r9	@ pLastByte, tmp193
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1493	@,
	ldrb	r2, [r3, #-1]	@ zero_extendqisi2	@ tmp171,
	rsb	lr, r3, r5	@ tmp195, pLastByte, tmp192
	cmp	r2, #0	@ tmp171,
	mvn	ip, lr	@ tmp194, tmp195
	and	r2, ip, #1	@ tmp196, tmp194,
	bne	.L1492	@,
	sub	r3, r3, #1	@ ivtmp.4814, pLastByte,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4814, tmp192
	beq	.L1493	@,
	cmp	r2, #0	@ tmp196,
	beq	.L1494	@,
	ldrb	lr, [r3, #-1]	@ zero_extendqisi2	@ tmp203,
	cmp	lr, #0	@ tmp203,
	bne	.L1492	@,
	sub	r3, r3, #1	@ ivtmp.4814, ivtmp.4814,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r3, r5	@ ivtmp.4814, tmp192
	bne	.L1494	@,
	b	.L1493	@
.L1495:
	ldrb	r0, [r2, #-1]	@ zero_extendqisi2	@ tmp201,
	add	r4, r4, #1	@ zero_byte, zero_byte,
	cmp	r0, #0	@ tmp201,
	bne	.L1492	@,
	cmp	r3, r5	@ ivtmp.4814, tmp192
	add	r4, r4, #1	@ zero_byte, zero_byte,
	beq	.L1493	@,
.L1494:
	ldrb	r1, [r3, #-1]	@ zero_extendqisi2	@ tmp202,
	sub	r2, r3, #1	@ tmp198, ivtmp.4814,
	sub	r3, r2, #1	@ ivtmp.4814, tmp198,
	cmp	r1, #0	@ tmp202,
	beq	.L1495	@,
.L1492:
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r4, r0	@ zero_byte,
	bge	.L1514	@,
.L1497:
	ldr	r2, [fp, #-48]	@, %sfp
	sub	ip, r2, #1	@ tmp173,,
	rsb	r3, r4, ip	@ tmp172, zero_byte, tmp173
	ldrb	r3, [sl, r3]	@ zero_extendqisi2	@ Byte,
	tst	r3, #1	@ Byte,
	bne	.L1514	@,
	mov	r3, r3, lsr #1	@ Byte.4829, Byte,
	tst	r3, #1	@ Byte.4829,
	movne	r0, #1	@ zero_bit,
	bne	.L1498	@,
	mov	r3, r3, lsr #1	@ Byte.4832, Byte.4829,
	tst	r3, #1	@ Byte.4832,
	movne	r0, #2	@ zero_bit,
	bne	.L1498	@,
	mov	r3, r3, lsr #1	@ Byte.4835, Byte.4832,
	tst	r3, #1	@ Byte.4835,
	movne	r0, #3	@ zero_bit,
	bne	.L1498	@,
	mov	r3, r3, lsr #1	@ Byte.4838, Byte.4835,
	tst	r3, #1	@ Byte.4838,
	movne	r0, #4	@ zero_bit,
	bne	.L1498	@,
	mov	r3, r3, lsr #1	@ Byte.4841, Byte.4838,
	tst	r3, #1	@ Byte.4841,
	movne	r0, #5	@ zero_bit,
	bne	.L1498	@,
	mov	r3, r3, lsr #1	@ Byte.4844, Byte.4841,
	tst	r3, #1	@ Byte.4844,
	movne	r0, #6	@ zero_bit,
	bne	.L1498	@,
	movs	r3, r3, lsr #1	@, Byte.4844,
	movne	r0, #7	@, zero_bit,
	moveq	r0, #8	@, zero_bit,
.L1498:
	add	r0, r0, r4, asl #3	@,, zero_bit, zero_byte,
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1493:
	sub	r8, r8, #1	@ r, r,
	sub	r7, r7, #64	@ ivtmp.4825, ivtmp.4825,
	cmp	r8, #0	@ r,
	bgt	.L1496	@,
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r4, r0	@ zero_byte,
	blt	.L1497	@,
.L1514:
	mov	r0, #0	@ zero_bit,
	b	.L1498	@
	.fnend
	.size	MVC_FindZeroBitsInSeg, .-MVC_FindZeroBitsInSeg
	.align	2
	.global	MVC_FindTrailZeros
	.type	MVC_FindTrailZeros, %function
MVC_FindTrailZeros:
	.fnstart
.LFB1657:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r3, [r0, #368]	@ prephitmp.4872, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r2, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r2, #1	@ <variable>.nal_segment,
	bls	.L1516	@,
	ldr	r1, [r3, #36]	@, <variable>.bitstream_length
	ldr	r0, [r3, #32]	@, <variable>.streamBuffer
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4872, <variable>.pCurrNal
	ldr	r1, [r3, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	cmp	r0, r1, asl #3	@ zero_bit, <variable>.bitstream_length,
	bcs	.L1521	@,
	cmn	r0, #1	@ zero_bit,
	beq	.L1516	@,
.L1518:
	add	r0, r0, #1	@ tmp152, zero_bit,
	str	r0, [r3, #68]	@ tmp152, <variable>.nal_trail_zero_bit_num
	ldr	r3, [r4, #368]	@ temp.4887, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bls	.L1519	@,
	ldr	ip, [r3, #36]	@ <variable>.bitstream_length, <variable>.bitstream_length
	ldr	r2, [r3, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	cmp	r2, ip, asl #3	@ <variable>.nal_trail_zero_bit_num, <variable>.bitstream_length,
	bcc	.L1519	@,
	movw	lr, #:lower16:11199520	@ tmp157,
	movt	lr, #:upper16:11199520	@ tmp157,
	ldr	r1, [r3, #56]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp161,
	mov	r0, #1	@ tmp163,
	str	r3, [r2, #32]	@ tmp161, <variable>.streamBuffer
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [ip, #64]	@ tmp163, <variable>.nal_segment
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r3, [r1, #68]	@ tmp161, <variable>.nal_trail_zero_bit_num
.L1519:
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L1521:
	movw	lr, #:lower16:11199520	@ tmp143,
	movt	lr, #:upper16:11199520	@ tmp143,
	ldr	r1, [r3, #56]	@, <variable>.StreamID
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	ip, #0	@ tmp147,
	mov	r0, #1	@ tmp149,
	str	ip, [r2, #32]	@ tmp147, <variable>.streamBuffer
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r0, [r3, #64]	@ tmp149, <variable>.nal_segment
	ldr	r3, [r4, #368]	@ prephitmp.4872, <variable>.pCurrNal
.L1516:
	ldmib	r3, {r0, r1}	@ phole ldm
	bl	MVC_FindZeroBitsInSeg	@
	ldr	r3, [r4, #368]	@ prephitmp.4872, <variable>.pCurrNal
	b	.L1518	@
	.fnend
	.size	MVC_FindTrailZeros, .-MVC_FindTrailZeros
	.align	2
	.global	mvc_assign_quant_params
	.type	mvc_assign_quant_params, %function
mvc_assign_quant_params:
	.fnstart
.LFB1610:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r2, r0, #0	@, pSPS
	mov	r8, r1	@ pPPS, pPPS
	str	r2, [fp, #-56]	@, %sfp
	beq	.L1545	@,
	cmp	r1, #0	@ pPPS,
	beq	.L1546	@,
	ldrb	r3, [r1, #18]	@ zero_extendqisi2	@ <variable>.pic_scaling_matrix_present_flag, <variable>.pic_scaling_matrix_present_flag
	cmp	r3, #0	@ <variable>.pic_scaling_matrix_present_flag,
	beq	.L1526	@,
	ldr	sl, [fp, #-56]	@, %sfp
	add	r7, r1, #2016	@, pPPS,
	str	r7, [fp, #-60]	@, %sfp
	add	r7, r1, #1728	@ ivtmp.4927, pPPS,
	add	r9, sl, #2672	@,,
	str	r9, [fp, #-64]	@, %sfp
	ldr	r9, [fp, #-60]	@ ivtmp.4935, %sfp
	add	r6, r1, #2064	@, pPPS,
	ldr	r5, [fp, #-56]	@, %sfp
	mov	sl, r7	@ ivtmp.4949, ivtmp.4927
	str	r6, [fp, #-68]	@, %sfp
	mov	r6, r1	@ ivtmp.4926, pPPS
	ldr	r1, [fp, #-56]	@, %sfp
	add	r4, r5, #2720	@,,
	str	r8, [fp, #-52]	@ pPPS, %sfp
	mov	r5, #1	@ ivtmp.4923,
	str	r4, [fp, #-72]	@, %sfp
	mov	r8, r9	@ ivtmp.4948, ivtmp.4948
	mov	r4, #0	@ ivtmp.4922,
	add	r0, r1, #2384	@ ivtmp.4930,,
	str	r7, [fp, #-48]	@ ivtmp.4927, %sfp
	str	r0, [fp, #-80]	@ ivtmp.4930, %sfp
.L1527:
	cmp	r4, #5	@ ivtmp.4922,
	bhi	.L1528	@,
	ldr	r3, [fp, #-52]	@, %sfp
	add	r2, r3, r4	@ tmp164,, ivtmp.4922
	ldrsb	r1, [r2, #5]	@ tmp165, <variable>.pic_scaling_list_present_flag
	cmp	r1, #0	@ tmp165,
	bne	.L1529	@,
	cmp	r4, #0	@ ivtmp.4922,
	bne	.L1530	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldrb	r0, [ip, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r0, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1531	@,
	movw	ip, #:lower16:.LANCHOR2	@,
	movt	ip, #:upper16:.LANCHOR2	@,
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [fp, #-60]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1532	@
.L1528:
	ldr	ip, [fp, #-52]	@, %sfp
	add	r1, ip, r4	@ tmp195,, ivtmp.4922
	ldrsb	r0, [r1, #5]	@ tmp196, <variable>.pic_scaling_list_present_flag
	cmp	r0, #0	@ tmp196,
	bne	.L1538	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldrb	lr, [r2, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1539	@,
	ldr	r3, .L1548	@,
	cmp	r4, #6	@ ivtmp.4922,
	ldr	r1, .L1548+4	@,
	mov	r0, sl	@, ivtmp.4949
	mov	r2, #64	@,
	moveq	r1, r3	@,
	bl	memcpy	@
.L1533:
	cmp	r5, #7	@ ivtmp.4923,
	bhi	.L1526	@,
.L1532:
	ldr	ip, [fp, #-48]	@, %sfp
	add	r4, r4, #1	@ ivtmp.4922, ivtmp.4922,
	ldr	r3, [fp, #-80]	@, %sfp
	add	r5, r5, #1	@ ivtmp.4923, ivtmp.4923,
	add	r0, ip, #64	@,,
	add	r6, r6, #4	@ ivtmp.4926, ivtmp.4926,
	add	r2, r3, #64	@,,
	str	r0, [fp, #-48]	@, %sfp
	str	r2, [fp, #-80]	@, %sfp
	add	r7, r7, #64	@ ivtmp.4927, ivtmp.4927,
	add	r9, r9, #16	@ ivtmp.4935, ivtmp.4935,
	add	r8, r8, #16	@ ivtmp.4948, ivtmp.4948,
	add	sl, sl, #64	@ ivtmp.4949, ivtmp.4949,
	b	.L1527	@
.L1529:
	ldr	r2, [r6, #1984]	@ tmp188, <variable>.UseDefaultScalingMatrix4x4Flag
	cmp	r2, #0	@ tmp188,
	beq	.L1533	@,
	cmp	r4, #2	@ ivtmp.4922,
	movw	r3, #:lower16:.LANCHOR2	@,
	movt	r3, #:upper16:.LANCHOR2	@,
	ldr	r1, .L1548+8	@,
	mov	r0, r8	@, ivtmp.4948
	mov	r2, #16	@,
	movls	r1, r3	@,
	bl	memcpy	@
	cmp	r5, #7	@ ivtmp.4923,
	bls	.L1532	@,
.L1526:
	mov	r0, #0	@ D.41001,
.L1524:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1538:
	ldr	r0, [r6, #1984]	@ tmp208, <variable>.UseDefaultScalingMatrix8x8Flag
	cmp	r0, #0	@ tmp208,
	beq	.L1533	@,
	ldr	ip, .L1548	@,
	cmp	r4, #6	@ ivtmp.4922,
	ldr	r1, .L1548+4	@,
	mov	r0, r7	@, ivtmp.4927
	mov	r2, #64	@,
	moveq	r1, ip	@,
	bl	memcpy	@
	b	.L1533	@
.L1530:
	cmp	r4, #3	@ ivtmp.4922,
	beq	.L1547	@,
	mov	r0, r9	@, ivtmp.4935
	sub	r1, r9, #16	@, ivtmp.4935,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L1533	@
.L1531:
	ldr	ip, [fp, #-64]	@, %sfp
	ldmia	ip, {r0, r1, r2, r3}	@,,,,
	ldr	ip, [fp, #-60]	@, %sfp
	stmia	ip, {r0, r1, r2, r3}	@,,,,
	b	.L1533	@
.L1547:
	ldr	r1, [fp, #-56]	@, %sfp
	ldrb	lr, [r1, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #0	@ <variable>.seq_scaling_matrix_present_flag,
	bne	.L1535	@,
	ldr	r0, [fp, #-68]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, .L1548+8	@,
	bl	memcpy	@
	b	.L1532	@
.L1539:
	ldr	r0, [fp, #-48]	@, %sfp
	mov	r2, #64	@,
	ldr	r1, [fp, #-80]	@, %sfp
	bl	memcpy	@
	b	.L1533	@
.L1535:
	ldr	r0, [fp, #-68]	@, %sfp
	mov	r2, #16	@,
	ldr	r1, [fp, #-72]	@, %sfp
	bl	memcpy	@
	b	.L1533	@
.L1545:
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #6590	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41001,
	b	.L1524	@
.L1546:
	mov	r0, r1	@, pPPS
	movw	r2, #:lower16:.LC2	@,
	movw	r1, #:lower16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movw	r3, #6591	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41001,
	b	.L1524	@
.L1549:
	.align	2
.L1548:
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.word	.LANCHOR2+16
	.fnend
	.size	mvc_assign_quant_params, .-mvc_assign_quant_params
	.align	2
	.global	mvc_append_interview_list
	.type	mvc_append_interview_list, %function
mvc_append_interview_list:
	.fnstart
.LFB1592:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:10818504	@ tmp159,
	movt	ip, #:upper16:10818504	@ tmp159,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r0, #:lower16:11164280	@ tmp161,
	movt	r0, #:upper16:11164280	@ tmp161,
	ldr	ip, [r4, ip]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	str	r2, [fp, #-68]	@ list, %sfp
	adds	r2, ip, #1	@ D.39757, <variable>.CurrSUBSPS.num_views_minus1,
	str	r3, [fp, #-64]	@ listXsize, %sfp
	ldr	r5, [r4, r0]	@ D.39758, <variable>.CurrSlice.view_id
	beq	.L1551	@,
	movw	r7, #:lower16:10818508	@ tmp162,
	movt	r7, #:upper16:10818508	@ tmp162,
	ldr	r3, [r4, r7]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	r5, r3	@ D.39758, <variable>.CurrSUBSPS.view_id
	beq	.L1551	@,
	tst	ip, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r8, #:lower16:10818512	@ ivtmp.4998,
	movt	r8, #:upper16:10818512	@ ivtmp.4998,
	mov	ip, #0	@ i,
	add	r3, r4, r8	@ ivtmp.4998, pMvcCtx, ivtmp.4998
	beq	.L1552	@,
	ldr	r7, [r3], #4	@ D.46274, <variable>.CurrSUBSPS.view_id
	mov	ip, #1	@ i,
	mov	r8, ip	@ i.630, i
	cmp	r5, r7	@ D.39758, D.46274
	bne	.L1552	@,
.L1553:
	movw	r3, #:lower16:11164288	@ tmp165,
	movt	r3, #:upper16:11164288	@ tmp165,
	add	r9, r8, r1, asl #1	@, tmp168, i.630, listidx,
	movw	r7, #:lower16:11196171	@ tmp193,
	ldr	ip, [r4, r3]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r7, #:upper16:11196171	@ tmp193,
	movw	r1, #:lower16:11168612	@ tmp196,
	movt	r1, #:upper16:11168612	@ tmp196,
	cmp	ip, #0	@ <variable>.CurrSlice.anchor_pic_flag,
	ldr	r3, [r4, r1]	@ D.39774, <variable>.DPB.size
	movwne	r2, #:lower16:2704628	@ tmp169,
	movweq	r2, #:lower16:2704636	@ tmp182,
	movtne	r2, #:upper16:2704628	@ tmp169,
	movteq	r2, #:upper16:2704636	@ tmp182,
	addne	r2, r9, r2	@ tmp169, tmp168, tmp169
	addeq	r2, r9, r2	@ tmp182, tmp181, tmp182
	movwne	ip, #:lower16:10818532	@ tmp175,
	movweq	ip, #:lower16:10818564	@ tmp188,
	movtne	ip, #:upper16:10818532	@ tmp175,
	movteq	ip, #:upper16:10818564	@ tmp188,
	add	r5, r4, r2, asl #2	@, tmp186, pMvcCtx, tmp182,
	ldrb	r2, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r0, r4, ip	@ tmp188, pMvcCtx, tmp188
	add	r8, r0, r9, asl #2	@, ref_view_id, tmp188, tmp181,
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, fld_idx
	moveq	r2, #1	@, fld_idx
	ldr	r9, [r5, #4]	@ num_ref_views,
	subs	r5, r3, #1	@ i, D.39774,
	bmi	.L1569	@,
	movw	sl, #:lower16:2792104	@ tmp197,
	movt	sl, #:upper16:2792104	@ tmp197,
	add	r1, r3, sl	@ tmp197, D.39774, tmp197
	add	r3, r2, #164	@ tmp257, fld_idx,
	movw	sl, #:lower16:11196660	@ tmp259,
	movw	r0, #:lower16:11198000	@,
	add	r6, r4, r1, asl #2	@, tmp200, pMvcCtx, tmp197,
	mov	ip, r3, asl #2	@, tmp257,
	movt	r0, #:upper16:11198000	@,
	movw	r1, #:lower16:11196169	@,
	movw	r2, #:lower16:11196640	@,
	movt	r1, #:upper16:11196169	@,
	movt	r2, #:upper16:11196640	@,
	movt	sl, #:upper16:11196660	@ tmp259,
	str	ip, [fp, #-52]	@, %sfp
	add	r6, r6, #4	@ ivtmp.4994, tmp200,
	str	r0, [fp, #-60]	@, %sfp
	str	r1, [fp, #-48]	@, %sfp
	str	r2, [fp, #-56]	@, %sfp
	b	.L1568	@
.L1586:
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #3	@ <variable>.is_used,
	ldreq	r3, [r1, #484]	@ poc, <variable>.frame.MVC_DecPOC
	bne	.L1558	@,
.L1560:
	ldr	r0, [fp, #-52]	@, %sfp
	add	ip, r0, r1	@ tmp225,, D.39777
	ldr	r2, [ip, #4]	@ tmp227, <variable>.inter_view_flag
	cmp	r2, #0	@ tmp227,
	beq	.L1558	@,
	ldr	r2, [r4, sl]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	cmp	r2, r3	@ <variable>.CurrPic.thispoc, poc
	beq	.L1585	@,
.L1558:
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.4994, ivtmp.4994,
	bmi	.L1569	@,
.L1568:
	ldr	r1, [r6, #-4]	@ D.39777, <variable>.DPB.fs
	cmp	r1, #0	@ D.39777,
	beq	.L1558	@,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ temp.5005, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.5005,
	beq	.L1586	@,
	cmp	r3, #1	@ temp.5005,
	beq	.L1587	@,
	cmp	r3, #2	@ temp.5005,
	bne	.L1558	@,
	ldr	r0, [fp, #-48]	@, %sfp
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	ubfx	r3, r3, #1, #1	@ pic_avail.5001, <variable>.is_used,,
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	beq	.L1563	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	ip, [r1, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	r2, [r0, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	ip, r2	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail.5001
	andeq	r3, r3, #1	@,, pic_avail.5001, pic_avail.5001
.L1563:
	cmp	r3, #0	@ pic_avail.5001,
	beq	.L1558	@,
	ldr	r3, [r1, #564]	@ poc, <variable>.bottom_field.MVC_DecPOC
	b	.L1560	@
.L1554:
	ldr	r6, [r0], #4	@ D.46274, <variable>.CurrSUBSPS.view_id
	cmp	r5, r6	@ D.39758, D.46274
	beq	.L1553	@,
	ldr	r6, [r3, #4]	@ D.46274, <variable>.CurrSUBSPS.view_id
	mov	r8, ip	@ i.630, i
	add	r3, r0, #4	@ ivtmp.4998, tmp271,
	cmp	r5, r6	@ D.39758, D.46274
	beq	.L1553	@,
.L1552:
	add	r8, ip, #1	@ i.630, i,
	mov	r0, r3	@ tmp271, ivtmp.4998
	cmp	r2, r8	@ D.39757, i.630
	add	ip, r8, #1	@ i, i.630,
	bhi	.L1554	@,
	b	.L1553	@
.L1587:
	ldr	ip, [fp, #-48]	@, %sfp
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	ldrb	r2, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	and	r3, r0, #1	@ pic_avail, <variable>.is_used,
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	beq	.L1562	@,
	ldr	ip, [fp, #-56]	@, %sfp
	ldr	r0, [r1, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	r2, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r2, [r2, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	r0, r2	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	movne	r3, #0	@, pic_avail
	andeq	r3, r3, #1	@,, pic_avail, pic_avail
.L1562:
	cmp	r3, #0	@ pic_avail,
	ldrne	r3, [r1, #524]	@ poc, <variable>.top_field.MVC_DecPOC
	bne	.L1560	@,
	subs	r5, r5, #1	@ i, i,
	sub	r6, r6, #4	@ ivtmp.4994, ivtmp.4994,
	bpl	.L1568	@,
.L1569:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1585:
	cmp	r9, #0	@ num_ref_views,
	ldr	r0, [r1, #644]	@ D.39821, <variable>.view_id
	beq	.L1558	@,
	ldr	r3, [r8, #0]	@ tmp230,* ref_view_id
	cmp	r0, r3	@ D.39821, tmp230
	moveq	r3, #0	@ i.632,
	beq	.L1565	@,
	tst	r9, #1	@ num_ref_views,
	mov	r2, #0	@ i,
	bne	.L1566	@,
	ldr	ip, [r8, #4]	@ tmp277,
	mov	r2, #1	@ i,
	mov	r3, r2	@ i.632, i
	cmp	r0, ip	@ D.39821, tmp277
	bne	.L1566	@,
	b	.L1565	@
.L1567:
	ldr	ip, [r8, r3, asl #2]	@ tmp232,* ref_view_id
	cmp	r0, ip	@ D.39821, tmp232
	beq	.L1565	@,
	ldr	ip, [r8, r2, asl #2]	@ tmp279,* ref_view_id
	mov	r3, r2	@ i.632, i
	cmp	r0, ip	@ D.39821, tmp279
	beq	.L1565	@,
.L1566:
	add	r3, r2, #1	@ i.632, i,
	cmp	r9, r3	@ num_ref_views, i.632
	add	r2, r3, #1	@ i, i.632,
	bhi	.L1567	@,
.L1565:
	cmp	r9, r3	@ num_ref_views, i.632
	bls	.L1558	@,
	ldr	r0, [fp, #-64]	@, %sfp
	mov	r2, #672	@,
	ldr	ip, [fp, #-68]	@, %sfp
	ldr	lr, [r0, #0]	@ tmp237,
	mla	r0, r2, lr, ip	@,, tmp237,
	bl	memcpy	@
	ldr	ip, [fp, #-64]	@, %sfp
	ldr	r1, [fp, #-68]	@, %sfp
	mov	r0, #672	@,
	ldr	r2, [ip, #0]	@ tmp245,
	mla	r3, r0, r2, r1	@ D.39829,, tmp245,
	str	r3, [r3, #468]	@ D.39829, <variable>.frame.frame_store
	str	r3, [r3, #548]	@ D.39829, <variable>.bottom_field.frame_store
	str	r3, [r3, #508]	@ D.39829, <variable>.top_field.frame_store
	ldr	r2, [ip, #0]	@ tmp247,
	ldr	ip, [fp, #-60]	@, %sfp
	mla	r2, r0, r2, r1	@ tmp250,, tmp247,
	ldr	r3, [r4, ip]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	sub	r1, r3, #1	@ tmp253, <variable>.TotalPmvNum,
	str	r1, [r2, #628]	@ tmp253, <variable>.pmv_address_idc
	ldr	r0, [fp, #-64]	@, %sfp
	ldr	r3, [r0, #0]	@ temp.5015,
	cmp	r3, r9	@ temp.5015, num_ref_views
	beq	.L1569	@,
	add	r1, r3, #1	@ tmp254, temp.5015,
	str	r1, [r0, #0]	@ tmp254,
	b	.L1558	@
.L1551:
	mov	r8, #0	@ i.630,
	b	.L1553	@
	.fnend
	.size	mvc_append_interview_list, .-mvc_append_interview_list
	.align	2
	.global	MVC_IsNewPicNal
	.type	MVC_IsNewPicNal, %function
MVC_IsNewPicNal:
	.fnstart
.LFB1654:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ tmp140,
	mov	r4, r0	@ pNewPicDetector, pNewPicDetector
	add	r1, r1, #3	@ pu8.5041, pu8,
	and	r0, r2, #31	@ tmp141, tmp140,
	sub	r3, r0, #1	@ tmp142, tmp141,
	cmp	r3, #7	@ tmp142,
	ldrls	pc, [pc, r3, asl #2]	@ tmp142
	b	.L1589	@
.L1592:
	.word	.L1590
	.word	.L1589
	.word	.L1589
	.word	.L1589
	.word	.L1590
	.word	.L1589
	.word	.L1591
	.word	.L1591
.L1591:
	ldr	r0, [r4, #0]	@ tmp157,* pNewPicDetector
	mov	r3, #1	@ tmp158,
	str	r3, [r4, #0]	@ tmp158,* pNewPicDetector
	cmp	r0, #0	@ tmp157,
	mvnne	r0, #0	@, ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1590:
	ldr	r5, [r4, #0]	@ tmp143,* pNewPicDetector
	cmp	r5, #0	@ tmp143,
	beq	.L1599	@,
.L1594:
	mvn	r0, #0	@ ret,
.L1595:
	mov	r1, #0	@ tmp156,
	str	r1, [r4, #0]	@ tmp156,* pNewPicDetector
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1589:
	mvn	r0, #0	@ ret,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1599:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ tmp146,
	ldrb	r0, [r1, #3]	@ zero_extendqisi2	@ tmp144,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ tmp151,
	ldrb	lr, [r1, #4]	@ zero_extendqisi2	@ tmp149,
	mov	r3, r2, asl #16	@ tmp147, tmp146,
	orr	r1, r3, r0, asl #8	@, tmp148, tmp147, tmp144,
	orr	r6, r1, lr	@ tmp150, tmp148, tmp149
	orr	r6, r6, ip, asl #24	@, tmpbits, tmp150, tmp151,
	mov	r0, r6	@, tmpbits
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	bhi	.L1594	@,
	mov	ip, r0, asl #1	@ tmp153, zeros,
	rsb	r0, ip, #31	@ tmp154, tmp153,
	mov	r6, r6, lsr r0	@ tmp155, tmpbits,
	cmp	r6, #1	@ tmp155,
	moveq	r0, r5	@ ret, tmp143
	bne	.L1594	@,
	b	.L1595	@
	.fnend
	.size	MVC_IsNewPicNal, .-MVC_IsNewPicNal
	.align	2
	.global	MVC_WritePicMsg
	.type	MVC_WritePicMsg, %function
MVC_WritePicMsg:
	.fnstart
.LFB1613:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r0, #:lower16:11196724	@,
	movt	r0, #:upper16:11196724	@,
	str	r0, [fp, #-72]	@, %sfp
	movw	r8, #:lower16:11196360	@ tmp167,
	ldr	r7, [fp, #-72]	@, %sfp
	movt	r8, #:upper16:11196360	@ tmp167,
	movw	r6, #:lower16:11196656	@ tmp163,
	movw	r5, #:lower16:11196171	@ tmp165,
	ldr	r9, [r4, r8]	@ <variable>.CurrPic.fs_image.image_id, <variable>.CurrPic.fs_image.image_id
	movt	r6, #:upper16:11196656	@ tmp163,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movt	r5, #:upper16:11196171	@ tmp165,
	movw	sl, #:lower16:11196192	@ tmp174,
	movt	sl, #:upper16:11196192	@ tmp174,
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	mov	r0, #2	@,
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC48	@,
	movt	r1, #:upper16:.LC48	@,
	stmia	sp, {r9, lr}	@ phole stm
	bl	dprint_vfmw	@
	ldrd	r8, [r4, sl]	@, pMvcCtx, tmp174
	movw	ip, #:lower16:11199440	@ tmp177,
	movt	ip, #:upper16:11199440	@ tmp177,
	movw	r2, #:lower16:11196356	@ tmp180,
	movw	r3, #:lower16:11152036	@ tmp191,
	movt	r2, #:upper16:11196356	@ tmp180,
	strd	r8, [fp, #-52]	@,,
	movt	r3, #:upper16:11152036	@ tmp191,
	ldr	r1, [r4, ip]	@, <variable>.DecSlicePara
	movw	r0, #:lower16:11198056	@,
	ldr	r3, [r4, r3]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r0, #:upper16:11198056	@,
	ldrd	r8, [fp, #-52]	@,,
	movw	sl, #:lower16:11199444	@ tmp171,
	str	r1, [fp, #-56]	@, %sfp
	movt	sl, #:upper16:11199444	@ tmp171,
	ldr	ip, [r4, r2]	@, <variable>.CurrPic.fs_image.image_stride
	movw	lr, #:lower16:11198960	@ tmp179,
	str	r0, [fp, #-76]	@, %sfp
	movt	lr, #:upper16:11198960	@ tmp179,
	movw	r0, #:lower16:11198048	@ tmp185,
	movt	r0, #:upper16:11198048	@ tmp185,
	str	ip, [fp, #-60]	@, %sfp
	movw	ip, #:lower16:11198064	@ tmp182,
	ldr	r1, [r4, r6]	@, <variable>.CurrPic.nal_ref_idc
	movw	r6, #:lower16:11199172	@ tmp176,
	movt	r6, #:upper16:11199172	@ tmp176,
	movt	ip, #:upper16:11198064	@ tmp182,
	movw	r7, #:lower16:11196640	@ tmp234,
	movt	r7, #:upper16:11196640	@ tmp234,
	str	r1, [fp, #-64]	@, %sfp
	movw	r1, #:lower16:11196708	@ tmp194,
	ldrb	r2, [r4, r5]	@ zero_extendqisi2	@, <variable>.CurrPic.structure
	movt	r1, #:upper16:11196708	@ tmp194,
	ldr	r5, [fp, #-76]	@, %sfp
	str	r2, [fp, #-80]	@, %sfp
	movw	r2, #:lower16:11196712	@ tmp197,
	strd	r8, [r4, r5]	@, pMvcCtx,
	mov	r9, #0	@ tmp172,
	ldr	r8, [fp, #-56]	@, %sfp
	movt	r2, #:upper16:11196712	@ tmp197,
	str	r9, [r4, sl]	@ tmp172, <variable>.SliceParaNum
	movw	r9, #:lower16:11159240	@ tmp212,
	ldr	sl, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movt	r9, #:upper16:11159240	@ tmp212,
	str	r8, [r4, r6]	@, <variable>.DecPicPara.pFirstSlice
	movw	r6, #:lower16:11155268	@ tmp205,
	ldr	r5, [fp, #-60]	@, %sfp
	movt	r6, #:upper16:11155268	@ tmp205,
	movw	r1, #:lower16:11198080	@ tmp189,
	movt	r1, #:upper16:11198080	@ tmp189,
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@, <variable>.CurrSPS.frame_mbs_only_flag
	str	r5, [r4, lr]	@, <variable>.DecPicPara.imgstride
	movw	lr, #:lower16:11159300	@ tmp209,
	ldr	r8, [fp, #-64]	@, %sfp
	movt	lr, #:upper16:11159300	@ tmp209,
	ldr	r5, [r4, r2]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.CurrPic.frame_height_in_mb
	movw	r2, #:lower16:11198068	@ tmp193,
	movt	r2, #:upper16:11198068	@ tmp193,
	str	r8, [r4, ip]	@, <variable>.DecPicPara.nal_ref_idc
	movw	r8, #:lower16:11198072	@ tmp196,
	ldr	ip, [fp, #-80]	@, %sfp
	movt	r8, #:upper16:11198072	@ tmp196,
	strb	ip, [r4, r0]	@, <variable>.DecPicPara.pic_structure
	movw	ip, #:lower16:11198051	@ tmp204,
	ldrb	r0, [r3, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movt	ip, #:upper16:11198051	@ tmp204,
	str	r6, [fp, #-52]	@, %sfp
	movw	r6, #:lower16:11198076	@ tmp199,
	ldr	lr, [r4, lr]	@, <variable>.CurrPPS.transform_8x8_mode_flag
	movt	r6, #:upper16:11198076	@ tmp199,
	str	lr, [fp, #-56]	@, %sfp
	str	r0, [r4, r1]	@ <variable>.mb_adaptive_frame_field_flag, <variable>.DecPicPara.mb_adaptive_frame_field_flag
	movw	r0, #:lower16:11159244	@ tmp220,
	ldrb	lr, [r4, r9]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	movt	r0, #:upper16:11159244	@ tmp220,
	str	sl, [r4, r2]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.DecPicPara.pic_height_in_mb
	movw	sl, #:lower16:11198084	@ tmp208,
	str	r5, [r4, r8]	@ <variable>.CurrPic.frame_height_in_mb, <variable>.DecPicPara.frame_height_in_mb
	movt	sl, #:upper16:11198084	@ tmp208,
	ldr	r8, [fp, #-52]	@, %sfp
	movw	r2, #:lower16:11161512	@ tmp226,
	ldr	r9, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movt	r2, #:upper16:11161512	@ tmp226,
	movw	r5, #:lower16:11198088	@ tmp211,
	movw	r1, #:lower16:11161524	@ tmp223,
	strb	r8, [r4, ip]	@, <variable>.DecPicPara.frame_mbs_only_flag
	movt	r5, #:upper16:11198088	@ tmp211,
	ldr	ip, [fp, #-56]	@, %sfp
	movt	r1, #:upper16:11161524	@ tmp223,
	str	lr, [r4, r5]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.DecPicPara.entropy_coding_mode_flag
	add	r9, r9, #1	@ tmp203, <variable>.pic_width_in_mbs_minus1,
	ldr	lr, [r4, r1]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r1, #:lower16:11198100	@ tmp225,
	str	ip, [r4, sl]	@, <variable>.DecPicPara.transform_8x8_mode_flag
	movt	r1, #:upper16:11198100	@ tmp225,
	ldr	sl, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movw	r2, #:lower16:11161516	@ tmp229,
	str	r9, [r4, r6]	@ tmp203, <variable>.DecPicPara.pic_width_in_mb
	movt	r2, #:upper16:11161516	@ tmp229,
	ldrb	r6, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.CurrPPS.constrained_intra_pred_flag
	movw	ip, #:lower16:11198049	@ tmp214,
	ldr	r5, [r3, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	movw	r3, #:lower16:11198092	@ tmp219,
	movt	r3, #:upper16:11198092	@ tmp219,
	str	sl, [r4, r1]	@ <variable>.CurrPOC.toppoc, <variable>.DecPicPara.TopPoc
	ldr	r1, [r4, r2]	@ <variable>.CurrPOC.bottompoc, <variable>.CurrPOC.bottompoc
	movt	ip, #:upper16:11198049	@ tmp214,
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11198096	@ tmp222,
	str	r6, [r4, r3]	@ <variable>.CurrPPS.constrained_intra_pred_flag, <variable>.DecPicPara.constrained_intra_pred_flag
	movt	r0, #:upper16:11198096	@ tmp222,
	movw	r3, #:lower16:11198104	@ tmp228,
	movw	r6, #:lower16:11199520	@ tmp231,
	movt	r3, #:upper16:11198104	@ tmp228,
	movt	r6, #:upper16:11199520	@ tmp231,
	strb	r5, [r4, ip]	@ <variable>.chroma_format_idc, <variable>.DecPicPara.chroma_format_idc
	str	lr, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.DecPicPara.ThisPoc
	str	r1, [r4, r3]	@ <variable>.CurrPOC.bottompoc, <variable>.DecPicPara.BottomPoc
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r5, r0, #0	@ pstLogicFs,
	beq	.L1644	@,
	ldr	r2, [r5, #472]	@ D.41536, <variable>.pstDecodeFs
	cmp	r2, #0	@ D.41536,
	ldreq	r3, [r5, #476]	@ prephitmp.5063, <variable>.pstDispOutFs
	beq	.L1604	@,
	ldr	r3, [r5, #476]	@ prephitmp.5063, <variable>.pstDispOutFs
	cmp	r3, #0	@ prephitmp.5063,
	beq	.L1604	@,
	movw	r2, #:lower16:11198868	@,
	movw	r3, #:lower16:11198356	@,
	movt	r2, #:upper16:11198868	@,
	movt	r3, #:upper16:11198356	@,
	movw	lr, #:lower16:11198612	@,
	movt	lr, #:upper16:11198612	@,
	add	r1, r4, r2	@, pMvcCtx,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	add	r2, r4, r3	@, pMvcCtx,
	add	r3, r4, lr	@, pMvcCtx,
	bl	FSP_GetDecFsAddrTab	@
	ldr	r0, [r5, #472]	@ <variable>.pstDecodeFs, <variable>.pstDecodeFs
	movw	r8, #:lower16:11198340	@ tmp248,
	movt	r8, #:upper16:11198340	@ tmp248,
	movw	r1, #:lower16:11198952	@,
	movw	sl, #:lower16:11198872	@,
	ldr	ip, [r0, #4]	@ <variable>.PhyFsID, <variable>.PhyFsID
	movt	sl, #:upper16:11198872	@,
	movt	r1, #:upper16:11198952	@,
	add	r2, r4, sl	@, pMvcCtx,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	add	r1, r4, r1	@, pMvcCtx,
	str	ip, [r4, r8]	@ <variable>.PhyFsID, <variable>.DecPicPara.CurrPicImgIdc
	bl	FSP_GetPmvAddrTab	@
	ldr	r2, [fp, #-72]	@, %sfp
	movw	r3, #:lower16:11198348	@ tmp257,
	movt	r3, #:upper16:11198348	@ tmp257,
	movw	ip, #:lower16:11198956	@ tmp260,
	movt	ip, #:upper16:11198956	@ tmp260,
	ldr	sl, [r4, r2]	@ <variable>.CurrPic.pmv_address_idc, <variable>.CurrPic.pmv_address_idc
	movw	r1, #:lower16:11168888	@ tmp266,
	movt	r1, #:upper16:11168888	@ tmp266,
	movw	r2, #:lower16:11199164	@ tmp265,
	movt	r2, #:upper16:11199164	@ tmp265,
	str	sl, [r4, r3]	@ <variable>.CurrPic.pmv_address_idc, <variable>.DecPicPara.CurrPicPmvIdc
	movw	r3, #:lower16:11198344	@ tmp262,
	ldr	r0, [r5, #488]	@ <variable>.HalfPmvOffset, <variable>.HalfPmvOffset
	movt	r3, #:upper16:11198344	@ tmp262,
	ldr	sl, [r4, r1]	@ <variable>.APC.size, <variable>.APC.size
	str	r0, [r4, ip]	@ <variable>.HalfPmvOffset, <variable>.DecPicPara.half_pmvblk_offset
	cmp	sl, #0	@ <variable>.APC.size,
	ldr	r8, [r5, #476]	@ <variable>.pstDispOutFs, <variable>.pstDispOutFs
	ldr	r1, [r8, #12]	@ <variable>.PhyAddr, <variable>.PhyAddr
	str	sl, [r4, r2]	@ <variable>.APC.size, <variable>.DecPicPara.ApcSize
	str	r1, [r4, r3]	@ <variable>.PhyAddr, <variable>.DecPicPara.CurrPicImg2DAddr
	beq	.L1606	@,
	movw	r6, #:lower16:11168696	@ ivtmp.5151,
	movt	r6, #:upper16:11168696	@ ivtmp.5151,
	add	lr, r4, r6	@ ivtmp.5151, pMvcCtx, ivtmp.5151
	movw	r3, #:lower16:11198972	@ ivtmp.5154,
	movt	r3, #:upper16:11198972	@ ivtmp.5154,
	mov	ip, #1	@ i,
	ldr	r6, [lr, #0]	@ tmp271, <variable>.APC.idc
	add	r8, r4, r3	@ ivtmp.5154, pMvcCtx, ivtmp.5154
	ldr	r0, [lr, #64]	@ tmp272, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r1, [lr, #128]	@ tmp273, <variable>.APC.poc
	sub	r5, sl, #1	@ tmp362, <variable>.APC.size,
	str	r6, [r8, #0]	@ tmp271, <variable>.DecPicPara.Apc2Idc
	and	r5, r5, ip	@ tmp364, tmp362,
	str	r0, [r8, #64]	@ tmp272, <variable>.DecPicPara.Apc2Poc
	add	r2, lr, #4	@ ivtmp.5151, ivtmp.5151,
	str	r1, [r8, #128]	@ tmp273, <variable>.DecPicPara.Apc2Poc
	add	r3, r8, #4	@ ivtmp.5154, ivtmp.5154,
	bcs	.L1606	@,
	cmp	r5, #0	@ tmp364,
	beq	.L1643	@,
	ldr	r5, [r2, #0]	@ tmp440, <variable>.APC.idc
	mov	ip, #2	@ i,
	ldr	lr, [r2, #64]	@ tmp441, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r8, [r2, #128]	@ tmp442, <variable>.APC.poc
	add	r2, r2, #4	@ ivtmp.5151, ivtmp.5151,
	str	r5, [r3, #0]	@ tmp440, <variable>.DecPicPara.Apc2Idc
	str	lr, [r3, #64]	@ tmp441, <variable>.DecPicPara.Apc2Poc
	str	r8, [r3, #128]	@ tmp442, <variable>.DecPicPara.Apc2Poc
	add	r3, r3, #4	@ ivtmp.5154, ivtmp.5154,
	bcs	.L1606	@,
.L1643:
	mov	r9, r4	@ pMvcCtx, pMvcCtx
.L1607:
	add	r0, r2, #4	@ tmp366, ivtmp.5151,
	ldmia	r2, {r5, r8}	@ phole ldm
	add	ip, ip, #2	@ i, i,
	ldr	r7, [r2, #64]	@ tmp372, <variable>.APC.poc
	add	r1, r3, #4	@ tmp367, ivtmp.5154,
	ldr	r6, [r2, #128]	@ tmp373, <variable>.APC.poc
	cmp	ip, sl	@ i, <variable>.APC.size
	ldr	r4, [r0, #64]	@ tmp378, <variable>.APC.poc
	add	r2, r0, #4	@ ivtmp.5151, tmp366,
	ldr	lr, [r0, #128]	@ tmp379, <variable>.APC.poc
	str	r7, [r3, #64]	@ tmp372, <variable>.DecPicPara.Apc2Poc
	str	r6, [r3, #128]	@ tmp373, <variable>.DecPicPara.Apc2Poc
	stmia	r3, {r5, r8}	@ phole stm
	add	r3, r1, #4	@ ivtmp.5154, tmp367,
	str	r4, [r1, #64]	@ tmp378, <variable>.DecPicPara.Apc2Poc
	str	lr, [r1, #128]	@ tmp379, <variable>.DecPicPara.Apc2Poc
	bcc	.L1607	@,
	mov	r4, r9	@ pMvcCtx, pMvcCtx
.L1606:
	movw	r3, #:lower16:11152036	@ tmp274,
	movt	r3, #:upper16:11152036	@ tmp274,
	ldr	r2, [r4, r3]	@ prephitmp.5068, <variable>.pCurrSPS
	ldrb	ip, [r2, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	ip, #0	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L1645	@,
	movw	r1, #:lower16:11159258	@ tmp293,
	movt	r1, #:upper16:11159258	@ tmp293,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ prephitmp.5066, <variable>.CurrPPS.pic_scaling_matrix_present_flag
.L1609:
	cmp	r3, #1	@ prephitmp.5066,
	beq	.L1646	@,
	ldr	r2, [r2, #2672]	@ tmp316, <variable>.qmatrix4x4
	movw	r1, #:lower16:11198108	@ ivtmp.5143,
	movt	r1, #:upper16:11198108	@ ivtmp.5143,
	movw	r5, #:lower16:11152036	@ tmp349,
	add	r1, r4, r1	@ ivtmp.5143, pMvcCtx, ivtmp.5143
	movt	r5, #:upper16:11152036	@ tmp349,
	mov	r3, #1	@ i.5177,
	ldr	r0, [r4, r5]	@ prephitmp.5068, <variable>.pCurrSPS
	str	r2, [r1], #4	@ tmp316, <variable>.DecPicPara.Qmatrix
	b	.L1617	@
.L1647:
	ldr	r0, [r4, r5]	@ prephitmp.5068, <variable>.pCurrSPS
	ldr	ip, [r0, ip, asl #2]	@ tmp430, <variable>.qmatrix4x4
	str	ip, [r1, #4]	@ tmp430, <variable>.DecPicPara.Qmatrix
	add	r1, r2, #4	@ ivtmp.5143, tmp361,
.L1617:
	add	lr, r3, #668	@ tmp419, i.5177,
	add	r3, r3, #1	@ tmp360, i.5177,
	cmp	r3, #24	@ tmp360,
	mov	r2, r1	@ tmp361, ivtmp.5143
	ldr	r0, [r0, lr, asl #2]	@ tmp420, <variable>.qmatrix4x4
	add	ip, r3, #668	@ tmp429, tmp360,
	add	r3, r3, #1	@ i.5177, tmp360,
	str	r0, [r2], #4	@ tmp420, <variable>.DecPicPara.Qmatrix
	bne	.L1647	@,
	movw	r8, #:lower16:11152036	@ tmp318,
	movt	r8, #:upper16:11152036	@ tmp318,
	movw	r5, #:lower16:11198204	@ ivtmp.5130,
	movt	r5, #:upper16:11198204	@ ivtmp.5130,
	ldr	r0, [r4, r8]	@ temp.5178, <variable>.pCurrSPS
	add	r1, r4, r5	@ ivtmp.5130, pMvcCtx, ivtmp.5130
	mov	r3, #0	@ i.5181,
.L1618:
	add	r5, r3, #692	@ tmp324, i.5181,
	add	r3, r3, #1	@ tmp358, i.5181,
	add	ip, r3, #692	@ tmp438, tmp358,
	mov	r2, r1	@ tmp359, ivtmp.5130
	ldr	r5, [r0, r5, asl #2]	@ tmp325, <variable>.qmatrix8x8
	add	r3, r3, #1	@ i.5181, tmp358,
	cmp	r3, #32	@ i.5181,
	str	r5, [r2], #4	@ tmp325, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r0, ip, asl #2]	@ tmp439, <variable>.qmatrix8x8
	str	lr, [r1, #4]	@ tmp439, <variable>.DecPicPara.Qmatrix
	add	r1, r2, #4	@ ivtmp.5130, tmp359,
	bne	.L1618	@,
.L1612:
	movw	r8, #:lower16:11168888	@ tmp326,
	movt	r8, #:upper16:11168888	@ tmp326,
	ldr	r1, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	cmp	r1, #0	@ <variable>.APC.size,
	beq	.L1619	@,
	movw	sl, #:lower16:11168696	@ ivtmp.5088,
	movt	sl, #:upper16:11168696	@ ivtmp.5088,
	movw	r7, #:lower16:11199304	@ ivtmp.5091,
	add	r6, r4, sl	@ ivtmp.5088, pMvcCtx, ivtmp.5088
	movt	r7, #:upper16:11199304	@ ivtmp.5091,
	movw	sl, #:lower16:11199520	@ tmp344,
	movt	sl, #:upper16:11199520	@ tmp344,
	add	r5, r4, r7	@ ivtmp.5091, pMvcCtx, ivtmp.5091
	mov	r7, #0	@ i.5186,
.L1620:
	ldr	r2, [r6, #0]	@, <variable>.APC.idc
	mov	r1, #0	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	add	r7, r7, #1	@ i.5186, i.5186,
	bl	FSP_GetStoreType	@
	ldr	ip, [r4, r8]	@ <variable>.APC.size, <variable>.APC.size
	ldr	r2, [r6], #4	@ tmp334, <variable>.APC.idc
	str	r2, [r5, #64]	@ tmp334, <variable>.DecPicPara.RefPicFsId
	subs	r0, r0, #0	@ tmp333,,
	movne	r0, #1	@ tmp333
	cmp	ip, r7	@ <variable>.APC.size, i.5186
	str	r0, [r5, #0]	@ tmp333, <variable>.DecPicPara.RefPicType
	add	r5, r5, #4	@ ivtmp.5091, ivtmp.5091,
	bhi	.L1620	@,
.L1619:
	mov	r0, #0	@ D.41533,
.L1602:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1645:
	movw	lr, #:lower16:11159258	@ tmp276,
	movt	lr, #:upper16:11159258	@ tmp276,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ prephitmp.5066, <variable>.CurrPPS.pic_scaling_matrix_present_flag
	cmp	r3, #0	@ prephitmp.5066,
	bne	.L1609	@,
	movw	r2, #:lower16:11198108	@ ivtmp.5106,
	movt	r2, #:upper16:11198108	@ ivtmp.5106,
	movw	r1, #:lower16:.LANCHOR2	@ tmp341,
	add	r0, r4, r2	@ ivtmp.5106, pMvcCtx, ivtmp.5106
	movt	r1, #:upper16:.LANCHOR2	@ tmp341,
.L1610:
	and	r5, r3, #3	@ tmp279, i.5169,
	add	r3, r3, #1	@ tmp352, i.5169,
	and	ip, r3, #3	@ tmp382, tmp352,
	mov	r8, r0	@ tmp353, ivtmp.5106
	add	r2, r1, r5, asl #2	@, tmp282, tmp341, tmp279,
	add	r3, r3, #1	@ i.5169, tmp352,
	add	ip, r1, ip, asl #2	@, tmp384, tmp341, tmp382,
	cmp	r3, #24	@ i.5169,
	ldr	lr, [r2, #352]	@ tmp284, MVC_quant_org
	str	lr, [r8], #4	@ tmp284, <variable>.DecPicPara.Qmatrix
	ldr	r5, [ip, #352]	@ tmp386, MVC_quant_org
	str	r5, [r0, #4]	@ tmp386, <variable>.DecPicPara.Qmatrix
	add	r0, r8, #4	@ ivtmp.5106, tmp353,
	bne	.L1610	@,
	movw	r0, #:lower16:11198204	@ ivtmp.5098,
	movt	r0, #:upper16:11198204	@ ivtmp.5098,
	add	r0, r4, r0	@ ivtmp.5098, pMvcCtx, ivtmp.5098
	mov	r3, #0	@ i.5170,
.L1611:
	and	lr, r3, #15	@ tmp287, i.5170,
	add	r3, r3, #1	@ tmp350, i.5170,
	and	ip, r3, #15	@ tmp389, tmp350,
	mov	r8, r0	@ tmp351, ivtmp.5098
	add	r5, r1, lr, asl #2	@, tmp290, tmp341, tmp287,
	add	r3, r3, #1	@ i.5170, tmp350,
	add	r2, r1, ip, asl #2	@, tmp391, tmp341, tmp389,
	cmp	r3, #32	@ i.5170,
	ldr	r5, [r5, #368]	@ tmp292, MVC_quant8_org
	str	r5, [r8], #4	@ tmp292, <variable>.DecPicPara.Qmatrix
	ldr	lr, [r2, #368]	@ tmp393, MVC_quant8_org
	str	lr, [r0, #4]	@ tmp393, <variable>.DecPicPara.Qmatrix
	add	r0, r8, #4	@ ivtmp.5098, tmp351,
	bne	.L1611	@,
	b	.L1612	@
.L1646:
	movw	r0, #:lower16:11198108	@ ivtmp.5122,
	movt	r0, #:upper16:11198108	@ ivtmp.5122,
	add	r0, r4, r0	@ ivtmp.5122, pMvcCtx, ivtmp.5122
	mov	r1, #0	@ i.5172,
.L1614:
	add	r8, r1, #1	@ tmp356, i.5172,
	movw	r2, #:lower16:2790314	@ tmp299,
	movt	r2, #:upper16:2790314	@ tmp299,
	add	lr, r1, r2	@ tmp299, i.5172, tmp299
	add	r3, r8, r2	@ tmp401, tmp356, tmp401
	add	r1, r8, #1	@ i.5172, tmp356,
	mov	r8, r0	@ tmp357, ivtmp.5122
	ldr	ip, [r4, lr, asl #2]	@ tmp301, <variable>.CurrPPS.qmatrix4x4
	cmp	r1, #24	@ i.5172,
	ldr	r2, [r4, r3, asl #2]	@ tmp402, <variable>.CurrPPS.qmatrix4x4
	str	ip, [r8], #4	@ tmp301, <variable>.DecPicPara.Qmatrix
	str	r2, [r0, #4]	@ tmp402, <variable>.DecPicPara.Qmatrix
	add	r0, r8, #4	@ ivtmp.5122, tmp357,
	bne	.L1614	@,
	movw	r1, #:lower16:11198204	@ ivtmp.5114,
	movt	r1, #:upper16:11198204	@ ivtmp.5114,
	add	r0, r4, r1	@ ivtmp.5114, pMvcCtx, ivtmp.5114
	mov	r1, #0	@ i.5174,
.L1615:
	add	ip, r1, #1	@ tmp354, i.5174,
	movw	r8, #:lower16:2790338	@ tmp307,
	movt	r8, #:upper16:2790338	@ tmp307,
	add	r3, ip, r8	@ tmp410, tmp354, tmp410
	add	r2, r1, r8	@ tmp307, i.5174, tmp307
	add	r1, ip, #1	@ i.5174, tmp354,
	ldr	lr, [r4, r3, asl #2]	@ tmp411, <variable>.CurrPPS.qmatrix8x8
	cmp	r1, #32	@ i.5174,
	ldr	r8, [r4, r2, asl #2]	@ tmp309, <variable>.CurrPPS.qmatrix8x8
	mov	r3, r0	@ tmp355, ivtmp.5114
	str	r8, [r3], #4	@ tmp309, <variable>.DecPicPara.Qmatrix
	str	lr, [r0, #4]	@ tmp411, <variable>.DecPicPara.Qmatrix
	add	r0, r3, #4	@ ivtmp.5114, tmp355,
	bne	.L1615	@,
	b	.L1612	@
.L1604:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC50	@,
	movt	r1, #:upper16:.LC50	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41533,
	b	.L1602	@
.L1644:
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #:lower16:.LC49	@,
	movt	r1, #:upper16:.LC49	@,
	ldr	r2, [ip, #584]	@, <variable>.logic_fs_id
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41533,
	b	.L1602	@
	.fnend
	.size	MVC_WritePicMsg, .-MVC_WritePicMsg
	.align	2
	.global	MVC_InitListX
	.type	MVC_InitListX, %function
MVC_InitListX:
	.fnstart
.LFB1593:
	@ args = 0, pretend = 0, frame = 200
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #212
	sub	sp, sp, #212	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11162624	@ tmp237,
	movt	r1, #:upper16:11162624	@ tmp237,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r2, #:lower16:11164300	@ tmp233,
	movw	r3, #:lower16:11164296	@ tmp235,
	ldrb	r0, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movt	r2, #:upper16:11164300	@ tmp233,
	movt	r3, #:upper16:11164296	@ tmp235,
	mov	r1, #0	@ tmp234,
	cmp	r0, #0	@ <variable>.CurrSlice.slice_type,
	str	r1, [r4, r2]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	str	r1, [r4, r3]	@ tmp234, <variable>.CurrSlice.interviewlistXsize
	bne	.L1649	@,
	movw	r6, #:lower16:11196171	@ tmp239,
	movt	r6, #:upper16:11196171	@ tmp239,
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r5, r1	@ <variable>.CurrPic.structure,
	beq	.L1650	@,
	movw	lr, #:lower16:11168620	@ tmp241,
	movt	lr, #:upper16:11168620	@ tmp241,
	ldr	r5, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, r1	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1652	@,
	movw	r7, #:lower16:11168484	@ ivtmp.5283,
	movt	r7, #:upper16:11168484	@ ivtmp.5283,
	add	r3, r4, r7	@ ivtmp.5283, pMvcCtx, ivtmp.5283
	mov	r5, r0	@ list0idx.5353, <variable>.CurrSlice.slice_type
	mov	r2, r0	@ i.5362, list0idx.5353
.L1663:
	ldr	r6, [r3, #0]	@ temp.5360, <variable>.DPB.fs_ref
	sub	r1, fp, #44	@,,
	add	ip, r1, r5, asl #2	@, tmp273,, list0idx.5353,
	add	r2, r2, #1	@ i.5362, i.5362,
	add	r3, r3, #4	@ ivtmp.5283, ivtmp.5283,
	ldrb	r0, [r6, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	strne	r6, [ip, #-64]	@ temp.5360, fs_list0
	ldr	r8, [r4, lr]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	addne	r5, r5, #1	@ list0idx.5353, list0idx.5353,
	cmp	r8, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5362
	bhi	.L1663	@,
.L1652:
	sub	r7, fp, #108	@ tmp277,,
	mov	r1, r5	@, list0idx.5353
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_frame_num_desc	@,
	mov	r0, r7	@, tmp277
	movt	r3, #:upper16:MVC_compare_fs_by_frame_num_desc	@,
	add	r8, r4, #11141120	@ D.39945, pMvcCtx,
	bl	qsort	@
	add	r8, r8, #27904	@ D.39945, D.39945,
	movw	r2, #:lower16:11196171	@ tmp283,
	movw	r3, #:lower16:11162668	@ tmp279,
	movt	r2, #:upper16:11196171	@ tmp283,
	movt	r3, #:upper16:11162668	@ tmp279,
	mov	r6, #0	@ tmp280,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r7	@, tmp277
	str	r6, [r4, r3]	@ tmp280, <variable>.CurrSlice.listXsize
	mov	r2, r5	@, list0idx.5353
	mov	r5, r3	@ D.39946, tmp279
	mov	r3, r8	@, D.39945
	add	r7, r4, r5	@ D.39946, pMvcCtx, D.39946
	str	r6, [sp, #4]	@ tmp280,
	str	r7, [sp, #0]	@ D.39946,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11168624	@ tmp287,
	movt	ip, #:upper16:11168624	@ tmp287,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp576,,
	beq	.L1665	@,
	mov	r2, r6	@ ivtmp.5277, tmp280
	sub	r6, fp, #236	@ tmp576,,
	mov	r5, r2	@ listltidx, ivtmp.5277
.L1666:
	add	r0, r4, r2	@ tmp290, pMvcCtx, ivtmp.5277
	movw	lr, #:lower16:11168548	@ tmp291,
	movt	lr, #:upper16:11168548	@ tmp291,
	ldr	r1, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	r3, r0, lr	@ tmp291, tmp290, tmp291
	add	r5, r5, #1	@ listltidx, listltidx,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx
	ldr	lr, [r3, #0]	@ tmp293, <variable>.DPB.fs_ltref
	str	lr, [r6, r2]	@ tmp293, fs_listlt
	add	r2, r2, #4	@ ivtmp.5277, ivtmp.5277,
	bhi	.L1666	@,
.L1665:
	mov	r0, r6	@, tmp576
	mov	r1, r5	@, listltidx
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	movw	r0, #:lower16:11196171	@ tmp298,
	movt	r0, #:upper16:11196171	@ tmp298,
	mov	r1, r6	@, tmp576
	mov	r2, r5	@, listltidx
	mov	r3, r8	@, D.39945
	ldrb	r0, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	ip, #1	@ tmp301,
	stmia	sp, {r7, ip}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
.L1661:
	movw	r1, #:lower16:11164272	@ tmp304,
	movt	r1, #:upper16:11164272	@ tmp304,
	movw	r3, #:lower16:11162672	@ tmp302,
	movt	r3, #:upper16:11162672	@ tmp302,
	ldr	r2, [r4, r1]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	mov	r1, #0	@ tmp303,
	str	r1, [r4, r3]	@ tmp303, <variable>.CurrSlice.listXsize
	cmp	r2, r1	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1667	@,
	movw	lr, #:lower16:11162668	@ tmp306,
	movt	lr, #:upper16:11162668	@ tmp306,
	ldr	r0, [r4, lr]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
	cmp	r0, r1	@ prephitmp.5368,
	bne	.L1888	@,
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r0, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	bne	.L1670	@,
	movw	r5, #:lower16:11196171	@ tmp310,
	movt	r5, #:upper16:11196171	@ tmp310,
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ temp.5369, <variable>.CurrPic.structure
	cmp	r3, #0	@ temp.5369,
	bne	.L1671	@,
	movw	ip, #:lower16:11196640	@ tmp312,
	movt	ip, #:upper16:11196640	@ tmp312,
	movw	r3, #:lower16:11169024	@ tmp311,
	movt	r3, #:upper16:11169024	@ tmp311,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r1, lr, #464	@ tmp314, <variable>.CurrPic.frame_store,
	str	r1, [r4, r3]	@ tmp314, <variable>.pListX
.L1672:
	movw	r3, #:lower16:11162668	@ tmp323,
	movt	r3, #:upper16:11162668	@ tmp323,
	mov	r1, #1	@ tmp324,
	str	r1, [r4, r3]	@ tmp324, <variable>.CurrSlice.listXsize
	b	.L1674	@
.L1649:
	movw	sl, #:lower16:11196171	@ tmp326,
	movt	sl, #:upper16:11196171	@ tmp326,
	ldrb	r7, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r7, #0	@ <variable>.CurrPic.structure,
	beq	.L1676	@,
	movw	ip, #:lower16:11168620	@ tmp328,
	movt	ip, #:upper16:11168620	@ tmp328,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r5, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L1678	@,
	movw	r9, #:lower16:11168484	@ ivtmp.5349,
	movt	r9, #:upper16:11168484	@ ivtmp.5349,
	movw	r7, #:lower16:11196660	@ tmp598,
	add	r3, r4, r9	@ ivtmp.5349, pMvcCtx, ivtmp.5349
	movt	r7, #:upper16:11196660	@ tmp598,
	mov	r5, r1	@ list0idx.5355, tmp234
	mov	r2, r1	@ i.5396, list0idx.5355
.L1697:
	ldr	r1, [r3, #0]	@ temp.5394, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.5396, i.5396,
	add	r3, r3, #4	@ ivtmp.5349, ivtmp.5349,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1696	@,
	ldr	r0, [r1, #600]	@ <variable>.poc, <variable>.poc
	sub	r9, fp, #44	@,,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r6, r9, r5, asl #2	@, tmp402,, list0idx.5355,
	cmp	lr, r0	@ <variable>.CurrPic.thispoc, <variable>.poc
	strge	r1, [r6, #-64]	@ temp.5394, fs_list0
	addge	r5, r5, #1	@ list0idx.5355, list0idx.5355,
.L1696:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5396
	bhi	.L1697	@,
.L1678:
	sub	r6, fp, #108	@ tmp569,,
	mov	r1, r5	@, list0idx.5355
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_desc	@,
	mov	r0, r6	@, tmp569
	movt	r3, #:upper16:MVC_compare_fs_by_poc_desc	@,
	bl	qsort	@
	movw	ip, #:lower16:11168620	@ tmp408,
	movt	ip, #:upper16:11168620	@ tmp408,
	ldr	r9, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r9, #0	@ <variable>.DPB.ref_frames_in_buffer,
	moveq	r7, r5	@ list0idx.5356, list0idx.5355
	beq	.L1699	@,
	movw	r8, #:lower16:11168484	@ ivtmp.5344,
	movt	r8, #:upper16:11168484	@ ivtmp.5344,
	add	r3, r4, r8	@ ivtmp.5344, pMvcCtx, ivtmp.5344
	movw	r8, #:lower16:11196660	@ tmp596,
	movt	r8, #:upper16:11196660	@ tmp596,
	mov	r7, r5	@ list0idx.5356, list0idx.5355
	mov	r2, #0	@ i.5402,
.L1701:
	ldr	r1, [r3, #0]	@ temp.5398, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.5402, i.5402,
	add	r3, r3, #4	@ ivtmp.5344, ivtmp.5344,
	ldrb	sl, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	sl, #0	@ <variable>.is_used,
	beq	.L1700	@,
	ldr	r0, [r1, #600]	@ <variable>.poc, <variable>.poc
	sub	sl, fp, #44	@,,
	ldr	lr, [r4, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	add	r9, sl, r7, asl #2	@, tmp417,, list0idx.5356,
	cmp	lr, r0	@ <variable>.CurrPic.thispoc, <variable>.poc
	strlt	r1, [r9, #-64]	@ temp.5398, fs_list0
	addlt	r7, r7, #1	@ list0idx.5356, list0idx.5356,
.L1700:
	ldr	r1, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r2	@ <variable>.DPB.ref_frames_in_buffer, i.5402
	bhi	.L1701	@,
	rsb	r9, r5, r7	@ prephitmp.5223, list0idx.5355, list0idx.5356
.L1699:
	mov	sl, r5, asl #2	@ tmp572, list0idx.5355,
	mov	r1, r9	@, prephitmp.5223
	add	r0, r6, sl	@, tmp569, tmp572
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_poc_asc	@,
	bl	qsort	@
	cmp	r5, #0	@ list0idx.5355,
	subeq	r8, fp, #172	@ tmp565,,
	beq	.L1702	@,
	sub	r8, fp, #172	@ tmp565,,
	ldr	ip, [r6, #0]	@ tmp427, fs_list0
	add	r9, r8, r9, asl #2	@, ivtmp.5341, tmp565, prephitmp.5223,
	cmp	sl, #4	@ tmp572,
	sub	r2, sl, #4	@ tmp671, tmp572,
	mov	r3, #4	@ ivtmp.5339,
	str	ip, [r9], #4	@ tmp427, fs_list1
	ubfx	r2, r2, #2, #1	@ tmp672, tmp671,,
	beq	.L1702	@,
	cmp	r2, #0	@ tmp672,
	beq	.L1703	@,
	ldr	r2, [r6, #4]	@ tmp900, fs_list0
	mov	r3, #8	@ ivtmp.5339,
	cmp	sl, r3	@ tmp572, ivtmp.5339
	str	r2, [r9], #4	@ tmp900, fs_list1
	beq	.L1702	@,
.L1703:
	add	r2, r3, #4	@ tmp674, ivtmp.5339,
	ldr	r0, [r6, r3]	@ tmp741, fs_list0
	add	r3, r2, #4	@ ivtmp.5339, tmp674,
	mov	lr, r9	@ tmp673, ivtmp.5341
	ldr	r1, [r6, r2]	@ tmp744, fs_list0
	cmp	sl, r3	@ tmp572, ivtmp.5339
	str	r0, [lr], #4	@ tmp741, fs_list1
	str	r1, [r9, #4]	@ tmp744, fs_list1
	add	r9, lr, #4	@ ivtmp.5341, tmp673,
	bne	.L1703	@,
.L1702:
	cmp	r5, r7	@ list0idx.5355, list0idx.5356
	bcs	.L1704	@,
	add	sl, r6, sl	@ ivtmp.5331, tmp569, tmp572
	add	lr, r6, r7, asl #2	@, D.51071, tmp569, list0idx.5356,
	rsb	r9, sl, lr	@ tmp664, ivtmp.5331, D.51071
	mov	r2, #4	@ ivtmp.5332,
	ldr	r5, [sl], #4	@ tmp433, fs_list0
	sub	r3, r9, #4	@ tmp665, tmp664,
	ubfx	r1, r3, #2, #1	@ tmp666, tmp665,,
	cmp	sl, lr	@ ivtmp.5331, D.51071
	str	r5, [r8, #0]	@ tmp433, fs_list1
	beq	.L1704	@,
	cmp	r1, #0	@ tmp666,
	beq	.L1705	@,
	ldr	r9, [sl], #4	@ tmp899, fs_list0
	mov	r2, #8	@ ivtmp.5332,
	cmp	sl, lr	@ ivtmp.5331, D.51071
	str	r9, [r8, #4]	@ tmp899, fs_list1
	beq	.L1704	@,
.L1705:
	mov	r5, sl	@ tmp667, ivtmp.5331
	ldr	r0, [sl, #4]	@ tmp750, fs_list0
	ldr	ip, [r5], #4	@ tmp747, fs_list0
	add	r1, r2, #4	@ tmp668, ivtmp.5332,
	add	sl, r5, #4	@ ivtmp.5331, tmp667,
	cmp	sl, lr	@ ivtmp.5331, D.51071
	str	ip, [r8, r2]	@ tmp747, fs_list1
	str	r0, [r8, r1]	@ tmp750, fs_list1
	add	r2, r1, #4	@ ivtmp.5332, tmp668,
	bne	.L1705	@,
.L1704:
	add	r3, r4, #11141120	@ temp.5409, pMvcCtx,
	movw	r5, #:lower16:11196171	@ tmp440,
	add	r9, r3, #27904	@ temp.5409, temp.5409,
	movt	r5, #:upper16:11196171	@ tmp440,
	movw	r2, #:lower16:11162668	@ tmp434,
	movw	lr, #:lower16:11162672	@ tmp436,
	movt	r2, #:upper16:11162668	@ tmp434,
	movt	lr, #:upper16:11162672	@ tmp436,
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r1, r6	@, tmp569
	mov	r3, r9	@, temp.5409
	mov	r6, #0	@ tmp435,
	movw	sl, #:lower16:11162668	@ temp.5410,
	str	r6, [r4, r2]	@ tmp435, <variable>.CurrSlice.listXsize
	movt	sl, #:upper16:11162668	@ temp.5410,
	str	r6, [r4, lr]	@ tmp435, <variable>.CurrSlice.listXsize
	mov	r2, r7	@, list0idx.5356
	str	r6, [sp, #4]	@ tmp435,
	add	sl, r4, sl	@ temp.5410, pMvcCtx, temp.5410
	str	sl, [sp, #0]	@ temp.5410,
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, r9, #132	@, temp.5409,
	mov	r2, r7	@, list0idx.5356
	mov	r1, r8	@, tmp565
	movw	r7, #:lower16:11162672	@ D.40015,
	movt	r7, #:upper16:11162672	@ D.40015,
	str	r6, [sp, #4]	@ tmp435,
	str	r3, [fp, #-240]	@, %sfp
	add	r7, r4, r7	@ D.40015, pMvcCtx, D.40015
	str	r7, [sp, #0]	@ D.40015,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	ip, #:lower16:11168624	@ tmp449,
	movt	ip, #:upper16:11168624	@ tmp449,
	ldr	r5, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r5, r6	@ <variable>.DPB.ltref_frames_in_buffer,
	subeq	r6, fp, #236	@ tmp751,,
	beq	.L1707	@,
	mov	r2, r6	@ ivtmp.5324, tmp435
	sub	r6, fp, #236	@ tmp751,,
	mov	r5, r2	@ listltidx.5404, ivtmp.5324
.L1708:
	add	r0, r4, r2	@ tmp452, pMvcCtx, ivtmp.5324
	movw	r3, #:lower16:11168548	@ tmp453,
	movt	r3, #:upper16:11168548	@ tmp453,
	ldr	r1, [r4, ip]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	add	lr, r0, r3	@ tmp453, tmp452, tmp453
	add	r5, r5, #1	@ listltidx.5404, listltidx.5404,
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, listltidx.5404
	ldr	r8, [lr, #0]	@ tmp455, <variable>.DPB.fs_ltref
	str	r8, [r6, r2]	@ tmp455, fs_listlt
	add	r2, r2, #4	@ ivtmp.5324, ivtmp.5324,
	bhi	.L1708	@,
.L1707:
	movw	r8, #:lower16:11196171	@ tmp460,
	movt	r8, #:upper16:11196171	@ tmp460,
	mov	r1, r5	@, listltidx.5404
	mov	r0, r6	@, tmp751
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	movt	r3, #:upper16:MVC_compare_fs_by_lt_pic_idx_asc	@,
	bl	qsort	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, listltidx.5404
	mov	r3, r9	@, temp.5409
	mov	r1, r6	@, tmp751
	mov	ip, #1	@,
	stmia	sp, {sl, ip}	@ phole stm
	bl	MVC_GenPiclistfromFrmlist	@
	ldrb	r0, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	mov	r2, r5	@, listltidx.5404
	mov	r1, r6	@, tmp751
	ldr	r3, [fp, #-240]	@, %sfp
	mov	r5, #1	@,
	str	r7, [sp, #0]	@ D.40015,
	str	r5, [sp, #4]	@,
	bl	MVC_GenPiclistfromFrmlist	@
	movw	r2, #:lower16:11162668	@ tmp468,
	movw	r1, #:lower16:11162672	@ tmp469,
	movt	r2, #:upper16:11162668	@ tmp468,
	movt	r1, #:upper16:11162672	@ tmp469,
	ldr	r5, [r4, r2]	@ list0idx.5417, <variable>.CurrSlice.listXsize
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	r5, ip	@ list0idx.5417, <variable>.CurrSlice.listXsize
	beq	.L1695	@,
.L1674:
	movw	r3, #:lower16:11164272	@ tmp474,
	movt	r3, #:upper16:11164272	@ tmp474,
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.svc_extension_flag, <variable>.CurrSlice.svc_extension_flag
	cmp	r5, #0	@ <variable>.CurrSlice.svc_extension_flag,
	beq	.L1667	@,
	movw	r2, #:lower16:11162624	@ tmp476,
	movw	ip, #:lower16:11162668	@ tmp477,
	movt	r2, #:upper16:11162624	@ tmp476,
	movt	ip, #:upper16:11162668	@ tmp477,
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ prephitmp.5213, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, ip]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
.L1669:
	cmp	r5, #0	@ prephitmp.5213,
	bne	.L1719	@,
	cmp	r0, #0	@ prephitmp.5368,
	beq	.L1889	@,
.L1720:
	movw	r1, #:lower16:11162680	@ tmp529,
	movt	r1, #:upper16:11162680	@ tmp529,
	movw	r2, #:lower16:11162684	@ tmp533,
	movt	r2, #:upper16:11162684	@ tmp533,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	movw	ip, #:lower16:11162668	@ tmp532,
	movw	r1, #:lower16:11162672	@ tmp535,
	movt	ip, #:upper16:11162668	@ tmp532,
	movt	r1, #:upper16:11162672	@ tmp535,
	add	r3, r3, #1	@ tmp530, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r0, r3	@ prephitmp.5368, tmp530
	movcc	r3, r0	@ i, prephitmp.5368
	str	r3, [r4, ip]	@ i, <variable>.CurrSlice.listXsize
	ldr	r0, [r4, r1]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	add	r2, r2, #1	@ prephitmp.5215, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r2, r0	@ prephitmp.5215, <variable>.CurrSlice.listXsize
	movcs	r2, r0	@ prephitmp.5215, <variable>.CurrSlice.listXsize
	cmp	r3, #32	@ i,
	str	r2, [r4, r1]	@ prephitmp.5215, <variable>.CurrSlice.listXsize
	bhi	.L1723	@,
.L1722:
	add	ip, r3, #2785280	@ tmp560, i,
	add	r1, r3, #1	@ i, i,
	add	r2, ip, #6976	@ tmp560, tmp560,
	cmp	r1, #32	@ i,
	mov	r0, #0	@ tmp582,
	and	r3, r3, #1	@ tmp606, i,
	add	r2, r4, r2, asl #2	@, ivtmp.5249, pMvcCtx, tmp560,
	str	r0, [r2], #4	@ tmp582, <variable>.pListX
	bhi	.L1849	@,
	cmp	r3, #0	@ tmp606,
	beq	.L1724	@,
	add	r1, r1, #1	@ i, i,
	str	r0, [r2], #4	@ tmp582, <variable>.pListX
	cmp	r1, #32	@ i,
	bhi	.L1849	@,
.L1724:
	add	r1, r1, #2	@ i, i,
	mov	ip, r2	@ tmp608, ivtmp.5249
	cmp	r1, #32	@ i,
	str	r0, [ip], #4	@ tmp582, <variable>.pListX
	str	r0, [r2, #4]	@ tmp582, <variable>.pListX
	add	r2, ip, #4	@ ivtmp.5249, tmp608,
	bls	.L1724	@,
.L1849:
	movw	r0, #:lower16:11162672	@ tmp539,
	movt	r0, #:upper16:11162672	@ tmp539,
	ldr	r2, [r4, r0]	@ prephitmp.5215, <variable>.CurrSlice.listXsize
.L1723:
	cmp	r2, #32	@ prephitmp.5215,
	bhi	.L1725	@,
	add	r0, r2, #2785280	@ tmp540, prephitmp.5215,
	movw	r1, #:lower16:11169156	@ D.50954,
	add	r3, r0, #6976	@ tmp540, tmp540,
	movt	r1, #:upper16:11169156	@ D.50954,
	add	r0, r4, r1	@ D.50954, pMvcCtx, D.50954
	mov	r1, #0	@ tmp581,
	add	r4, r4, r3, asl #2	@, ivtmp.5245, pMvcCtx, tmp540,
	add	r3, r4, #4	@ ivtmp.5245, ivtmp.5245,
	rsb	ip, r4, r0	@ tmp601, ivtmp.5245, D.50954
	cmp	r3, r0	@ ivtmp.5245, D.50954
	sub	r2, ip, #4	@ tmp602, tmp601,
	ubfx	r2, r2, #2, #1	@ tmp603, tmp602,,
	str	r1, [r4, #132]	@ tmp581, <variable>.pListX
	beq	.L1725	@,
	cmp	r2, #0	@ tmp603,
	beq	.L1726	@,
	str	r1, [r3, #132]	@ tmp581, <variable>.pListX
	add	r3, r3, #4	@ ivtmp.5245, ivtmp.5245,
	cmp	r3, r0	@ ivtmp.5245, D.50954
	beq	.L1725	@,
.L1726:
	add	r2, r3, #4	@ tmp604, ivtmp.5245,
	str	r1, [r3, #132]	@ tmp581, <variable>.pListX
	add	r3, r2, #4	@ ivtmp.5245, tmp604,
	cmp	r3, r0	@ ivtmp.5245, D.50954
	str	r1, [r2, #132]	@ tmp581, <variable>.pListX
	bne	.L1726	@,
.L1725:
	mov	r0, #0	@ D.39969,
.L1675:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L1676:
	movw	r6, #:lower16:11168620	@ tmp330,
	movt	r6, #:upper16:11168620	@ tmp330,
	ldr	lr, [r4, r6]	@ temp.5451, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.5451,
	moveq	r7, lr	@ list0idx.5354, temp.5451
	beq	.L1680	@,
	movw	r0, #:lower16:11168484	@ ivtmp.5318,
	movt	r0, #:upper16:11168484	@ ivtmp.5318,
	add	r3, r4, r0	@ ivtmp.5318, pMvcCtx, ivtmp.5318
	sub	ip, lr, #1	@ tmp658, temp.5451,
	movw	r5, #:lower16:11196664	@ tmp593,
	and	r0, ip, #1	@ tmp660, tmp658,
	ldr	r2, [r3, #0]	@ temp.5373, <variable>.DPB.fs_ref
	movt	r5, #:upper16:11196664	@ tmp593,
	ldrb	r8, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r8, #3	@ <variable>.is_reference,
	beq	.L1890	@,
.L1807:
	mov	r2, #1	@ i.5376,
	cmp	r2, lr	@ i.5376, temp.5451
	add	r3, r3, #4	@ ivtmp.5318, ivtmp.5318,
	bcs	.L1680	@,
	cmp	r0, #0	@ tmp660,
	beq	.L1682	@,
	ldr	r1, [r3, #0]	@ temp.5373, <variable>.DPB.fs_ref
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1891	@,
.L1809:
	add	r2, r2, #1	@ i.5376, i.5376,
	add	r3, r3, #4	@ ivtmp.5318, ivtmp.5318,
	cmp	r2, lr	@ i.5376, temp.5451
	bcc	.L1682	@,
.L1680:
	add	lr, r4, #11141120	@ temp.5377, pMvcCtx,
	mov	r2, #4	@,
	add	r8, lr, #27904	@ temp.5377, temp.5377,
	mov	r1, r7	@, list0idx.5354
	movw	r3, #:lower16:MVC_compare_pic_by_poc_desc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_poc_desc	@,
	mov	r0, r8	@, temp.5377
	bl	qsort	@
	movw	r2, #:lower16:11168620	@ tmp341,
	movt	r2, #:upper16:11168620	@ tmp341,
	ldr	sl, [r4, r2]	@ temp.5450, <variable>.DPB.ref_frames_in_buffer
	cmp	sl, #0	@ temp.5450,
	moveq	r5, r7	@ list0idx.5417, list0idx.5354
	beq	.L1684	@,
	movw	r3, #:lower16:11168484	@ ivtmp.5313,
	movt	r3, #:upper16:11168484	@ ivtmp.5313,
	add	r3, r4, r3	@ ivtmp.5313, pMvcCtx, ivtmp.5313
	sub	r5, sl, #1	@ tmp653, temp.5450,
	and	r0, r5, #1	@ tmp655, tmp653,
	movw	ip, #:lower16:11196664	@ tmp592,
	ldr	r2, [r3, #0]	@ temp.5378, <variable>.DPB.fs_ref
	movt	ip, #:upper16:11196664	@ tmp592,
	mov	r5, r7	@ list0idx.5417, list0idx.5354
	ldrb	r6, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1892	@,
.L1800:
	mov	r2, #1	@ i.5383,
	cmp	r2, sl	@ i.5383, temp.5450
	add	r3, r3, #4	@ ivtmp.5313, ivtmp.5313,
	bcs	.L1853	@,
	cmp	r0, #0	@ tmp655,
	beq	.L1686	@,
	ldr	r1, [r3, #0]	@ temp.5378, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1893	@,
.L1802:
	add	r2, r2, #1	@ i.5383, i.5383,
	add	r3, r3, #4	@ ivtmp.5313, ivtmp.5313,
	cmp	r2, sl	@ i.5383, temp.5450
	bcc	.L1686	@,
.L1853:
	rsb	sl, r7, r5	@ prephitmp.5219, list0idx.5354, list0idx.5417
.L1684:
	mov	r6, r7, asl #2	@ D.39983, list0idx.5354,
	mov	r1, sl	@, prephitmp.5219
	add	r0, r8, r6	@, temp.5377, D.39983
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_poc_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_poc_asc	@,
	bl	qsort	@
	cmp	r7, #0	@ list0idx.5354,
	beq	.L1687	@,
	add	r3, r4, #11141120	@ tmp356, pMvcCtx,
	add	lr, sl, #2785280	@ tmp352, prephitmp.5219,
	add	r2, r3, #27904	@ tmp356, tmp356,
	add	sl, lr, #6976	@ tmp352, tmp352,
	cmp	r6, #4	@ D.39983,
	sub	r0, r6, #4	@ tmp649, D.39983,
	ldr	ip, [r2, #0]	@ tmp358, <variable>.pListX
	add	sl, r4, sl, asl #2	@, ivtmp.5310, pMvcCtx, tmp352,
	ubfx	r2, r0, #2, #1	@ tmp650, tmp649,,
	mov	r3, #4	@ ivtmp.5307,
	add	r0, sl, #4	@ ivtmp.5310, ivtmp.5310,
	str	ip, [sl, #132]	@ tmp358, <variable>.pListX
	beq	.L1687	@,
	cmp	r2, #0	@ tmp650,
	beq	.L1688	@,
	movw	r2, #:lower16:11169028	@ tmp863,
	movt	r2, #:upper16:11169028	@ tmp863,
	add	lr, r4, r2	@ tmp863, pMvcCtx, tmp863
	mov	r3, #8	@ ivtmp.5307,
	cmp	r6, r3	@ D.39983, ivtmp.5307
	ldr	ip, [lr, #0]	@ tmp864, <variable>.pListX
	str	ip, [r0, #132]	@ tmp864, <variable>.pListX
	add	r0, r0, #4	@ ivtmp.5310, ivtmp.5310,
	beq	.L1687	@,
.L1688:
	add	r1, r4, r3	@ tmp709, pMvcCtx, ivtmp.5307
	add	r3, r3, #4	@ tmp651, ivtmp.5307,
	add	lr, r1, #11141120	@ tmp711, tmp709,
	add	r2, r4, r3	@ tmp715, pMvcCtx, tmp651
	add	r1, lr, #27904	@ tmp711, tmp711,
	add	ip, r2, #11141120	@ tmp717, tmp715,
	add	r2, ip, #27904	@ tmp717, tmp717,
	add	r3, r3, #4	@ ivtmp.5307, tmp651,
	ldr	lr, [r1, #0]	@ tmp712, <variable>.pListX
	cmp	r6, r3	@ D.39983, ivtmp.5307
	add	r1, r0, #4	@ tmp652, ivtmp.5310,
	str	lr, [r0, #132]	@ tmp712, <variable>.pListX
	add	r0, r1, #4	@ ivtmp.5310, tmp652,
	ldr	ip, [r2, #0]	@ tmp718, <variable>.pListX
	str	ip, [r1, #132]	@ tmp718, <variable>.pListX
	bne	.L1688	@,
.L1687:
	cmp	r7, r5	@ list0idx.5354, list0idx.5417
	bcs	.L1689	@,
	add	ip, r7, #2785280	@ tmp359, list0idx.5354,
	rsb	r7, r7, r5	@ tmp365, list0idx.5354, list0idx.5417
	add	r3, ip, #6976	@ tmp359, tmp359,
	movw	r0, #:lower16:11169156	@ tmp367,
	movt	r0, #:upper16:11169156	@ tmp367,
	mov	r7, r7, asl #2	@ D.51028, tmp365,
	add	ip, r4, r3, asl #2	@, ivtmp.5300, pMvcCtx, tmp359,
	add	r6, r4, r0	@ tmp367, pMvcCtx, tmp367
	mov	r1, #4	@ ivtmp.5301,
	cmp	r1, r7	@ ivtmp.5301, D.51028
	ldr	r0, [ip], #4	@ tmp369, <variable>.pListX
	sub	r2, r7, #4	@ tmp643, D.51028,
	ubfx	r2, r2, #2, #1	@ tmp644, tmp643,,
	str	r0, [r6, #0]	@ tmp369, <variable>.pListX
	beq	.L1689	@,
	cmp	r2, #0	@ tmp644,
	beq	.L1690	@,
	movw	r1, #:lower16:11169160	@ tmp859,
	ldr	r2, [ip], #4	@ tmp860, <variable>.pListX
	movt	r1, #:upper16:11169160	@ tmp859,
	add	r3, r4, r1	@ tmp859, pMvcCtx, tmp859
	mov	r1, #8	@ ivtmp.5301,
	cmp	r1, r7	@ ivtmp.5301, D.51028
	str	r2, [r3, #0]	@ tmp860, <variable>.pListX
	beq	.L1689	@,
.L1690:
	mov	r0, ip	@ tmp645, ivtmp.5300
	add	lr, r4, r1	@ tmp721, pMvcCtx, ivtmp.5301
	ldr	r6, [r0], #4	@ tmp724, <variable>.pListX
	movw	r2, #:lower16:11169156	@ tmp723,
	movt	r2, #:upper16:11169156	@ tmp723,
	add	r3, r1, #4	@ tmp646, ivtmp.5301,
	add	r2, lr, r2	@ tmp723, tmp721, tmp723
	add	r1, r3, #4	@ ivtmp.5301, tmp646,
	add	lr, r4, r3	@ tmp727, pMvcCtx, tmp646
	movw	r3, #:lower16:11169156	@ tmp729,
	str	r6, [r2, #0]	@ tmp724, <variable>.pListX
	movt	r3, #:upper16:11169156	@ tmp729,
	ldr	r6, [ip, #4]	@ tmp730, <variable>.pListX
	add	r2, lr, r3	@ tmp729, tmp727, tmp729
	cmp	r1, r7	@ ivtmp.5301, D.51028
	add	ip, r0, #4	@ ivtmp.5300, tmp645,
	str	r6, [r2, #0]	@ tmp730, <variable>.pListX
	bne	.L1690	@,
.L1689:
	movw	r3, #:lower16:11168624	@ tmp372,
	movt	r3, #:upper16:11168624	@ tmp372,
	movw	r6, #:lower16:11162672	@ tmp370,
	movw	ip, #:lower16:11162668	@ tmp371,
	ldr	r1, [r4, r3]	@ temp.5448, <variable>.DPB.ltref_frames_in_buffer
	movt	r6, #:upper16:11162672	@ tmp370,
	movt	ip, #:upper16:11162668	@ tmp371,
	cmp	r1, #0	@ temp.5448,
	str	r5, [r4, r6]	@ list0idx.5417, <variable>.CurrSlice.listXsize
	str	r5, [r4, ip]	@ list0idx.5417, <variable>.CurrSlice.listXsize
	moveq	r0, r5	@ list0idx.5352, list0idx.5417
	beq	.L1692	@,
	movw	lr, #:lower16:11168548	@ ivtmp.5294,
	movt	lr, #:upper16:11168548	@ ivtmp.5294,
	add	r3, r4, lr	@ ivtmp.5294, pMvcCtx, ivtmp.5294
	sub	r2, r1, #1	@ tmp636, temp.5448,
	and	ip, r2, #1	@ tmp638, tmp636,
	ldr	r2, [r3, #0]	@ temp.5386, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1894	@,
.L1785:
	mov	r2, #1	@ i.5390,
	cmp	r2, r1	@ i.5390, temp.5448
	add	r3, r3, #4	@ ivtmp.5294, ivtmp.5294,
	bcs	.L1852	@,
	cmp	ip, #0	@ tmp638,
	beq	.L1694	@,
	ldr	r0, [r3, #0]	@ temp.5386, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	ip, #3	@ <variable>.is_used,
	beq	.L1895	@,
.L1787:
	add	r2, r2, #1	@ i.5390, i.5390,
	add	r3, r3, #4	@ ivtmp.5294, ivtmp.5294,
	cmp	r2, r1	@ i.5390, temp.5448
	bcc	.L1694	@,
.L1852:
	movw	r1, #:lower16:11162668	@ tmp383,
	movt	r1, #:upper16:11162668	@ tmp383,
	ldr	r0, [r4, r1]	@ list0idx.5352, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.5454, list0idx.5352, list0idx.5417
.L1692:
	movw	r6, #:lower16:11162668	@ tmp387,
	movt	r6, #:upper16:11162668	@ tmp387,
	add	r0, r8, r0, asl #2	@,, temp.5377, list0idx.5352,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	ldr	r1, [r4, r6]	@ D.39937, <variable>.CurrSlice.listXsize
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	add	r0, r1, #33	@ tmp388, D.39937,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	rsb	r1, r1, r5	@, D.39937, list0idx.5417
	mla	r0, r0, r2, r8	@, tmp388,, temp.5377
	bl	qsort	@
	movw	ip, #:lower16:11162672	@ tmp393,
	movt	ip, #:upper16:11162672	@ tmp393,
	str	r5, [r4, ip]	@ list0idx.5417, <variable>.CurrSlice.listXsize
	str	r5, [r4, r6]	@ list0idx.5417, <variable>.CurrSlice.listXsize
.L1695:
	cmp	r5, #1	@ list0idx.5417,
	bls	.L1674	@,
	add	r3, r4, #11141120	@ ivtmp.5288, pMvcCtx,
	sub	ip, r5, #1	@ tmp631, list0idx.5417,
	add	r3, r3, #27904	@ ivtmp.5288, ivtmp.5288,
	and	r0, ip, #1	@ tmp633, tmp631,
	ldr	r1, [r3, #0]	@ tmp472, <variable>.pListX
	ldr	r2, [r3, #132]	@ tmp473, <variable>.pListX
	cmp	r1, r2	@ tmp472, tmp473
	bne	.L1674	@,
	mov	r2, #1	@ j,
	cmp	r2, r5	@ j, list0idx.5417
	add	r3, r3, #4	@ ivtmp.5288, ivtmp.5288,
	bcs	.L1851	@,
	cmp	r0, #0	@ tmp633,
	beq	.L1709	@,
	ldr	r0, [r3, #0]	@ tmp841, <variable>.pListX
	ldr	r2, [r3, #132]	@ tmp842, <variable>.pListX
	cmp	r0, r2	@ tmp841, tmp842
	bne	.L1674	@,
	mov	r2, #2	@ j,
	cmp	r2, r5	@ j, list0idx.5417
	add	r3, r3, #4	@ ivtmp.5288, ivtmp.5288,
	bcs	.L1851	@,
.L1709:
	ldr	ip, [r3, #0]	@ tmp753, <variable>.pListX
	add	r2, r2, #1	@ tmp634, j,
	ldr	r0, [r3, #132]	@ tmp754, <variable>.pListX
	add	r1, r3, #4	@ tmp635, ivtmp.5288,
	add	r2, r2, #1	@ j, tmp634,
	cmp	ip, r0	@ tmp753, tmp754
	bne	.L1674	@,
	ldr	r0, [r3, #4]	@ tmp758, <variable>.pListX
	add	r3, r1, #4	@ ivtmp.5288, tmp635,
	ldr	r1, [r1, #132]	@ tmp759, <variable>.pListX
	cmp	r0, r1	@ tmp758, tmp759
	bne	.L1674	@,
	cmp	r2, r5	@ j, list0idx.5417
	bcc	.L1709	@,
.L1851:
	movw	r1, #:lower16:11169156	@ tmp546,
	movw	ip, #:lower16:11169160	@ tmp548,
	movt	r1, #:upper16:11169156	@ tmp546,
	movt	ip, #:upper16:11169160	@ tmp548,
	ldr	r5, [r4, r1]	@ tmp_s, <variable>.pListX
	ldr	r3, [r4, ip]	@ <variable>.pListX, <variable>.pListX
	str	r3, [r4, r1]	@ <variable>.pListX, <variable>.pListX
	str	r5, [r4, ip]	@ tmp_s, <variable>.pListX
	b	.L1674	@
.L1650:
	movw	r0, #:lower16:11168620	@ tmp243,
	movt	r0, #:upper16:11168620	@ tmp243,
	ldr	lr, [r4, r0]	@ temp.5444, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ temp.5444,
	moveq	r5, lr	@ list0idx.5421, temp.5444
	beq	.L1654	@,
	movw	r3, #:lower16:11168484	@ ivtmp.5271,
	movt	r3, #:upper16:11168484	@ ivtmp.5271,
	add	r3, r4, r3	@ ivtmp.5271, pMvcCtx, ivtmp.5271
	sub	r2, lr, #1	@ tmp626, temp.5444,
	and	r0, r2, #1	@ tmp628, tmp626,
	ldr	r2, [r3, #0]	@ D.39915, <variable>.DPB.fs_ref
	ldrb	ip, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1896	@,
.L1774:
	mov	r2, #1	@ i.5357,
	cmp	r2, lr	@ i.5357, temp.5444
	add	r3, r3, #4	@ ivtmp.5271, ivtmp.5271,
	bcs	.L1654	@,
	cmp	r0, #0	@ tmp628,
	beq	.L1656	@,
	ldr	r1, [r3, #0]	@ D.39915, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1897	@,
.L1776:
	add	r2, r2, #1	@ i.5357, i.5357,
	add	r3, r3, #4	@ ivtmp.5271, ivtmp.5271,
	cmp	r2, lr	@ i.5357, temp.5444
	bcc	.L1656	@,
.L1654:
	add	lr, r4, #11141120	@ D.39926, pMvcCtx,
	mov	r1, r5	@, list0idx.5421
	add	r6, lr, #27904	@ D.39926, D.39926,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_pic_num_desc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_pic_num_desc	@,
	mov	r0, r6	@, D.39926
	bl	qsort	@
	movw	r2, #:lower16:11168624	@ tmp255,
	movt	r2, #:upper16:11168624	@ tmp255,
	movw	r0, #:lower16:11162668	@ tmp254,
	movt	r0, #:upper16:11162668	@ tmp254,
	ldr	r1, [r4, r2]	@ temp.5443, <variable>.DPB.ltref_frames_in_buffer
	str	r5, [r4, r0]	@ list0idx.5421, <variable>.CurrSlice.listXsize
	cmp	r1, #0	@ temp.5443,
	moveq	r0, r5	@ list0idx, list0idx.5421
	beq	.L1658	@,
	movw	r3, #:lower16:11168548	@ ivtmp.5266,
	movt	r3, #:upper16:11168548	@ ivtmp.5266,
	add	r3, r4, r3	@ ivtmp.5266, pMvcCtx, ivtmp.5266
	sub	r2, r1, #1	@ tmp621, temp.5443,
	and	ip, r2, #1	@ tmp623, tmp621,
	ldr	r2, [r3, #0]	@ D.39927, <variable>.DPB.fs_ltref
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1898	@,
.L1767:
	mov	r2, #1	@ i.5359,
	cmp	r2, r1	@ i.5359, temp.5443
	add	r3, r3, #4	@ ivtmp.5266, ivtmp.5266,
	bcs	.L1850	@,
	cmp	ip, #0	@ tmp623,
	beq	.L1660	@,
	ldr	r0, [r3, #0]	@ D.39927, <variable>.DPB.fs_ltref
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	beq	.L1899	@,
.L1769:
	add	r2, r2, #1	@ i.5359, i.5359,
	add	r3, r3, #4	@ ivtmp.5266, ivtmp.5266,
	cmp	r2, r1	@ i.5359, temp.5443
	bcc	.L1660	@,
.L1850:
	movw	ip, #:lower16:11162668	@ tmp264,
	movt	ip, #:upper16:11162668	@ tmp264,
	ldr	r0, [r4, ip]	@ list0idx, <variable>.CurrSlice.listXsize
	rsb	r1, r0, r5	@ prephitmp.5227, list0idx, list0idx.5421
.L1658:
	add	r0, r6, r0, asl #2	@,, D.39926, list0idx,
	mov	r2, #4	@,
	movw	r3, #:lower16:MVC_compare_pic_by_lt_pic_num_asc	@,
	movt	r3, #:upper16:MVC_compare_pic_by_lt_pic_num_asc	@,
	bl	qsort	@
	movw	r1, #:lower16:11162668	@ tmp268,
	movt	r1, #:upper16:11162668	@ tmp268,
	str	r5, [r4, r1]	@ list0idx.5421, <variable>.CurrSlice.listXsize
	b	.L1661	@
.L1901:
	add	sl, r7, #2785280	@ tmp336, list0idx.5354,
	ldr	r3, [r3, #4]	@ temp.5373, <variable>.DPB.fs_ref
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	add	ip, sl, #6976	@ tmp336, tmp336,
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #464	@ tmp338, temp.5373,
	cmp	r8, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	r1, [r4, ip, asl #2]	@ tmp338, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addge	r7, r7, #1	@ list0idx.5354, list0idx.5354,
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1900	@,
.L1812:
	add	r2, r2, #1	@ i.5376, tmp661,
	add	r3, r0, #4	@ ivtmp.5318, tmp662,
	cmp	r2, lr	@ i.5376, temp.5451
	bcs	.L1680	@,
.L1682:
	ldr	r1, [r3, #0]	@ temp.5373, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp661, i.5376,
	add	r0, r3, #4	@ tmp662, ivtmp.5318,
	ldrb	sl, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #3	@ <variable>.is_reference,
	beq	.L1901	@,
	ldr	r3, [r3, #4]	@ temp.5373, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1812	@,
.L1900:
	add	ip, r7, #2785280	@ tmp897, list0idx.5354,
	add	sl, r3, #464	@ tmp898, temp.5373,
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, ip, #6976	@ tmp897, tmp897,
	ldr	r3, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	cmp	r8, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strge	sl, [r4, r1, asl #2]	@ tmp898, <variable>.pListX
	addge	r7, r7, #1	@ list0idx.5354, list0idx.5354,
	b	.L1812	@
.L1903:
	ldr	ip, [r1, #464]	@ tmp248,
	ldr	r3, [r3, #4]	@ D.39915, <variable>.DPB.fs_ref
	bic	r6, ip, #-16777216	@ tmp246, tmp248,
	bic	ip, r6, #255	@ tmp246, tmp246,
	cmp	ip, #65536	@ tmp246,
	addeq	ip, r5, #2785280	@ tmp249, list0idx.5421,
	addeq	r1, r1, #464	@ tmp251, D.39915,
	addeq	ip, ip, #6976	@ tmp249, tmp249,
	addeq	r5, r5, #1	@ list0idx.5421, list0idx.5421,
	streq	r1, [r4, ip, asl #2]	@ tmp251, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1902	@,
.L1779:
	add	r2, r2, #1	@ i.5357, tmp629,
	add	r3, r0, #4	@ ivtmp.5271, tmp630,
	cmp	r2, lr	@ i.5357, temp.5444
	bcs	.L1654	@,
.L1656:
	ldr	r1, [r3, #0]	@ D.39915, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp629, i.5357,
	add	r0, r3, #4	@ tmp630, ivtmp.5271,
	ldrb	r6, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r6, #3	@ <variable>.is_reference,
	beq	.L1903	@,
	ldr	r3, [r3, #4]	@ D.39915, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1779	@,
.L1902:
	ldr	ip, [r3, #464]	@ tmp837,
	bic	r6, ip, #-16777216	@ tmp838, tmp837,
	bic	r1, r6, #255	@ tmp838, tmp838,
	cmp	r1, #65536	@ tmp838,
	addeq	r1, r5, #2785280	@ tmp839, list0idx.5421,
	addeq	r3, r3, #464	@ tmp840, D.39915,
	addeq	r1, r1, #6976	@ tmp839, tmp839,
	addeq	r5, r5, #1	@ list0idx.5421, list0idx.5421,
	streq	r3, [r4, r1, asl #2]	@ tmp840, <variable>.pListX
	b	.L1779	@
.L1905:
	add	lr, r5, #2785280	@ tmp347, list0idx.5417,
	ldr	r3, [r3, #4]	@ temp.5378, <variable>.DPB.fs_ref
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	add	lr, lr, #6976	@ tmp347, tmp347,
	ldr	r9, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #464	@ tmp349, temp.5378,
	cmp	r9, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r1, [r4, lr, asl #2]	@ tmp349, <variable>.pListX
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	addlt	r5, r5, #1	@ list0idx.5417, list0idx.5417,
	cmp	r1, #3	@ <variable>.is_reference,
	beq	.L1904	@,
.L1805:
	add	r2, r2, #1	@ i.5383, tmp656,
	add	r3, r0, #4	@ ivtmp.5313, tmp657,
	cmp	r2, sl	@ i.5383, temp.5450
	bcs	.L1853	@,
.L1686:
	ldr	r1, [r3, #0]	@ temp.5378, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp656, i.5383,
	add	r0, r3, #4	@ tmp657, ivtmp.5313,
	ldrb	lr, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1905	@,
	ldr	r3, [r3, #4]	@ temp.5378, <variable>.DPB.fs_ref
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #3	@ <variable>.is_reference,
	bne	.L1805	@,
.L1904:
	add	r1, r5, #2785280	@ tmp880, list0idx.5417,
	add	r6, r3, #464	@ tmp881, temp.5378,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	add	r1, r1, #6976	@ tmp880, tmp880,
	ldr	r3, [r3, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	cmp	lr, r3	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	strlt	r6, [r4, r1, asl #2]	@ tmp881, <variable>.pListX
	addlt	r5, r5, #1	@ list0idx.5417, list0idx.5417,
	b	.L1805	@
.L1907:
	ldr	lr, [r0, #464]	@ tmp260,
	ldr	r3, [r3, #4]	@ D.39927, <variable>.DPB.fs_ltref
	bic	lr, lr, #-16777216	@ tmp258, tmp260,
	bic	lr, lr, #255	@ tmp258, tmp258,
	cmp	lr, #256	@ tmp258,
	addeq	lr, r5, #2785280	@ tmp261, list0idx.5421,
	addeq	r0, r0, #464	@ tmp263, D.39927,
	addeq	lr, lr, #6976	@ tmp261, tmp261,
	addeq	r5, r5, #1	@ list0idx.5421, list0idx.5421,
	streq	r0, [r4, lr, asl #2]	@ tmp263, <variable>.pListX
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	beq	.L1906	@,
.L1772:
	add	r2, r2, #1	@ i.5359, tmp624,
	add	r3, ip, #4	@ ivtmp.5266, tmp625,
	cmp	r2, r1	@ i.5359, temp.5443
	bcs	.L1850	@,
.L1660:
	ldr	r0, [r3, #0]	@ D.39927, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp624, i.5359,
	add	ip, r3, #4	@ tmp625, ivtmp.5266,
	ldrb	lr, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	lr, #3	@ <variable>.is_reference,
	beq	.L1907	@,
	ldr	r3, [r3, #4]	@ D.39927, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #3	@ <variable>.is_reference,
	bne	.L1772	@,
.L1906:
	ldr	r0, [r3, #464]	@ tmp823,
	bic	lr, r0, #-16777216	@ tmp824, tmp823,
	bic	r0, lr, #255	@ tmp824, tmp824,
	cmp	r0, #256	@ tmp824,
	addeq	r0, r5, #2785280	@ tmp825, list0idx.5421,
	addeq	r3, r3, #464	@ tmp826, D.39927,
	addeq	r0, r0, #6976	@ tmp825, tmp825,
	addeq	r5, r5, #1	@ list0idx.5421, list0idx.5421,
	streq	r3, [r4, r0, asl #2]	@ tmp826, <variable>.pListX
	b	.L1772	@
.L1909:
	ldrb	lr, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, #1	@ <variable>.frame.is_long_term,
	bne	.L1693	@,
	add	r6, r5, #2785280	@ tmp376, list0idx.5417,
	movw	lr, #:lower16:2792289	@ tmp379,
	movt	lr, #:upper16:2792289	@ tmp379,
	add	r6, r6, #6976	@ tmp376, tmp376,
	add	lr, r5, lr	@ tmp379, list0idx.5417, tmp379
	add	r5, r5, #1	@ list0idx.5417, list0idx.5417,
	add	r0, r0, #464	@ tmp378, temp.5386,
	str	r0, [r4, r6, asl #2]	@ tmp378, <variable>.pListX
	str	r0, [r4, lr, asl #2]	@ tmp378, <variable>.pListX
.L1693:
	ldr	r3, [r3, #4]	@ temp.5386, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	beq	.L1908	@,
.L1790:
	add	r2, r2, #1	@ i.5390, tmp639,
	add	r3, ip, #4	@ ivtmp.5294, tmp640,
	cmp	r2, r1	@ i.5390, temp.5448
	bcs	.L1852	@,
.L1694:
	ldr	r0, [r3, #0]	@ temp.5386, <variable>.DPB.fs_ltref
	add	r2, r2, #1	@ tmp639, i.5390,
	add	ip, r3, #4	@ tmp640, ivtmp.5294,
	ldrb	r6, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r6, #3	@ <variable>.is_used,
	beq	.L1909	@,
	ldr	r3, [r3, #4]	@ temp.5386, <variable>.DPB.fs_ltref
	ldrb	r0, [r3, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #3	@ <variable>.is_used,
	bne	.L1790	@,
.L1908:
	ldrb	r0, [r3, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	r0, #1	@ <variable>.frame.is_long_term,
	bne	.L1790	@,
	add	r6, r5, #2785280	@ tmp854, list0idx.5417,
	movw	r0, #:lower16:2792289	@ tmp856,
	movt	r0, #:upper16:2792289	@ tmp856,
	add	lr, r6, #6976	@ tmp854, tmp854,
	add	r6, r5, r0	@ tmp856, list0idx.5417, tmp856
	add	r3, r3, #464	@ tmp855, temp.5386,
	add	r5, r5, #1	@ list0idx.5417, list0idx.5417,
	str	r3, [r4, lr, asl #2]	@ tmp855, <variable>.pListX
	str	r3, [r4, r6, asl #2]	@ tmp855, <variable>.pListX
	b	.L1790	@
.L1719:
	cmp	r0, #0	@ prephitmp.5368,
	bne	.L1720	@,
	movw	r2, #:lower16:11162672	@ tmp526,
	movt	r2, #:upper16:11162672	@ tmp526,
	ldr	ip, [r4, r2]	@ <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	cmp	ip, #0	@ <variable>.CurrSlice.listXsize,
	beq	.L1910	@,
	movw	r3, #:lower16:11162684	@ tmp554,
	movt	r3, #:upper16:11162684	@ tmp554,
	movw	r1, #:lower16:11162668	@ tmp551,
	movt	r1, #:upper16:11162668	@ tmp551,
	ldr	r5, [r4, r3]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	mov	r3, r0	@ i, prephitmp.5368
	str	r0, [r4, r1]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
	add	r0, r5, #1	@ tmp555, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r0, ip	@ tmp555, <variable>.CurrSlice.listXsize
	strls	r0, [r4, r2]	@, tmp555, <variable>.CurrSlice.listXsize
	strhi	ip, [r4, r2]	@, <variable>.CurrSlice.listXsize, <variable>.CurrSlice.listXsize
	b	.L1722	@
.L1667:
	movw	r6, #:lower16:11152056	@ D.40029,
	movt	r6, #:upper16:11152056	@ D.40029,
	add	r6, r4, r6	@ D.40029, pMvcCtx, D.40029
	movw	lr, #:lower16:11164296	@,
	movw	r7, #:lower16:11196171	@ tmp481,
	movt	lr, #:upper16:11164296	@,
	movt	r7, #:upper16:11196171	@ tmp481,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, lr	@, pMvcCtx,
	mov	r1, #0	@,
	mov	r2, r6	@, D.40029
	movw	r5, #:lower16:11164296	@ tmp480,
	bl	mvc_append_interview_list	@
	ldrb	r0, [r4, r7]	@ zero_extendqisi2	@ temp.5424, <variable>.CurrPic.structure
	movt	r5, #:upper16:11164296	@ tmp480,
	cmp	r0, #0	@ temp.5424,
	bne	.L1711	@,
	ldr	r8, [r4, r5]	@ D.40034, <variable>.CurrSlice.interviewlistXsize
	movw	r0, #:lower16:11162668	@ tmp482,
	movt	r0, #:upper16:11162668	@ tmp482,
	cmp	r8, #0	@ D.40034,
	ldr	r5, [r4, r0]	@ list0idx.5420, <variable>.CurrSlice.listXsize
	beq	.L1712	@,
	add	r7, r5, #2785280	@ tmp484, list0idx.5420,
	cmp	r8, #1	@ D.40034,
	add	ip, r7, #6976	@ tmp484, tmp484,
	sub	r2, r8, #1	@ tmp615, D.40034,
	movw	r3, #:lower16:11152520	@ tmp491,
	movt	r3, #:upper16:11152520	@ tmp491,
	add	ip, r4, ip, asl #2	@, ivtmp.5262, pMvcCtx, tmp484,
	add	r1, r4, r3	@ tmp491, pMvcCtx, tmp491
	and	r2, r2, #1	@ tmp617, tmp615,
	add	r5, r5, #1	@ list0idx.5420, list0idx.5420,
	str	r1, [ip], #4	@ tmp491, <variable>.pListX
	mov	r7, #672	@ tmp585,
	mov	r1, #1	@ i.5384,
	bls	.L1712	@,
	cmp	r2, #0	@ tmp617,
	beq	.L1713	@,
	mov	r1, #2	@ i.5384,
	cmp	r8, r1	@ D.40034, i.5384
	movw	r3, #:lower16:11153192	@ tmp812,
	movt	r3, #:upper16:11153192	@ tmp812,
	add	r0, r4, r3	@ tmp812, pMvcCtx, tmp812
	add	r5, r5, #1	@ list0idx.5420, list0idx.5420,
	str	r0, [ip], #4	@ tmp812, <variable>.pListX
	bls	.L1712	@,
.L1713:
	add	r3, r1, #1	@ tmp619, i.5384,
	movw	r2, #:lower16:11152520	@ tmp765,
	mul	r0, r7, r1	@ tmp763, tmp585, i.5384
	movt	r2, #:upper16:11152520	@ tmp765,
	mul	sl, r7, r3	@ tmp771, tmp585, tmp619
	add	r1, r3, #1	@ i.5384, tmp619,
	cmp	r8, r1	@ D.40034, i.5384
	mov	lr, r2	@ tmp773, tmp765
	add	r2, r0, r2	@ tmp765, tmp763, tmp765
	add	r5, r5, #2	@ list0idx.5420, list0idx.5420,
	add	r3, sl, lr	@ tmp773, tmp771, tmp773
	mov	lr, ip	@ tmp620, ivtmp.5262
	add	r2, r4, r2	@ tmp766, pMvcCtx, tmp765
	add	r0, r4, r3	@ tmp774, pMvcCtx, tmp773
	str	r2, [lr], #4	@ tmp766, <variable>.pListX
	str	r0, [ip, #4]	@ tmp774, <variable>.pListX
	add	ip, lr, #4	@ ivtmp.5262, tmp620,
	bhi	.L1713	@,
.L1712:
	movw	r1, #:lower16:11162668	@ tmp492,
	movt	r1, #:upper16:11162668	@ tmp492,
	str	r5, [r4, r1]	@ list0idx.5420, <variable>.CurrSlice.listXsize
.L1714:
	movw	r7, #:lower16:11162624	@ tmp499,
	movt	r7, #:upper16:11162624	@ tmp499,
	ldrb	r5, [r4, r7]	@ zero_extendqisi2	@ prephitmp.5213, <variable>.CurrSlice.slice_type
	cmp	r5, #1	@ prephitmp.5213,
	beq	.L1715	@,
	movw	lr, #:lower16:11162668	@ tmp500,
	movt	lr, #:upper16:11162668	@ tmp500,
	ldr	r0, [r4, lr]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
	b	.L1669	@
.L1888:
	movw	ip, #:lower16:11162624	@ tmp307,
	movt	ip, #:upper16:11162624	@ tmp307,
	ldrb	r5, [r4, ip]	@ zero_extendqisi2	@ prephitmp.5213, <variable>.CurrSlice.slice_type
	b	.L1669	@
.L1896:
	ldr	ip, [r2, #464]	@ tmp827,
	bic	r1, ip, #-16777216	@ tmp828, tmp827,
	bic	r6, r1, #255	@ tmp828, tmp828,
	cmp	r6, #65536	@ tmp828,
	addeq	r2, r2, #464	@ tmp830, D.39915,
	movweq	r6, #:lower16:2792256	@ tmp829,
	movteq	r6, #:upper16:2792256	@ tmp829,
	moveq	r5, #1	@ list0idx.5421,
	streq	r2, [r4, r6, asl #2]	@ tmp830, <variable>.pListX
	b	.L1774	@
.L1890:
	ldr	sl, [r2, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r8, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r8, sl	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r2, r2, #464	@ tmp886, temp.5373,
	movwge	sl, #:lower16:2792256	@ tmp885,
	movtge	sl, #:upper16:2792256	@ tmp885,
	movge	r7, #1	@ list0idx.5354,
	strge	r2, [r4, sl, asl #2]	@ tmp886, <variable>.pListX
	b	.L1807	@
.L1898:
	ldr	lr, [r2, #464]	@ tmp813,
	bic	r0, lr, #-16777216	@ tmp814, tmp813,
	bic	lr, r0, #255	@ tmp814, tmp814,
	cmp	lr, #256	@ tmp814,
	addeq	lr, r5, #2785280	@ tmp815, list0idx.5421,
	addeq	r2, r2, #464	@ tmp816, D.39927,
	addeq	lr, lr, #6976	@ tmp815, tmp815,
	addeq	r5, r5, #1	@ list0idx.5421, list0idx.5421,
	streq	r2, [r4, lr, asl #2]	@ tmp816, <variable>.pListX
	b	.L1767	@
.L1892:
	ldr	r6, [r2, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r1, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r1, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r6, r7, #2785280	@ tmp868, list0idx.5354,
	addlt	r2, r2, #464	@ tmp869, temp.5378,
	addlt	r6, r6, #6976	@ tmp868, tmp868,
	addlt	r5, r7, #1	@ list0idx.5417, list0idx.5354,
	strlt	r2, [r4, r6, asl #2]	@ tmp869, <variable>.pListX
	b	.L1800	@
.L1894:
	ldrb	lr, [r2, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, #1	@ <variable>.frame.is_long_term,
	bne	.L1785	@,
	add	r6, r5, #2785280	@ tmp844, list0idx.5417,
	movw	r0, #:lower16:2792289	@ tmp846,
	movt	r0, #:upper16:2792289	@ tmp846,
	add	lr, r6, #6976	@ tmp844, tmp844,
	add	r6, r5, r0	@ tmp846, list0idx.5417, tmp846
	add	r2, r2, #464	@ tmp845, temp.5386,
	add	r5, r5, #1	@ list0idx.5417, list0idx.5417,
	str	r2, [r4, lr, asl #2]	@ tmp845, <variable>.pListX
	str	r2, [r4, r6, asl #2]	@ tmp845, <variable>.pListX
	b	.L1785	@
.L1899:
	ldr	lr, [r0, #464]	@ tmp819,
	bic	ip, lr, #-16777216	@ tmp820, tmp819,
	bic	lr, ip, #255	@ tmp820, tmp820,
	cmp	lr, #256	@ tmp820,
	addeq	lr, r5, #2785280	@ tmp821, list0idx.5421,
	addeq	r0, r0, #464	@ tmp822, D.39927,
	addeq	lr, lr, #6976	@ tmp821, tmp821,
	addeq	r5, r5, r2	@ list0idx.5421, list0idx.5421,
	streq	r0, [r4, lr, asl #2]	@ tmp822, <variable>.pListX
	b	.L1769	@
.L1897:
	ldr	r0, [r1, #464]	@ tmp833,
	bic	ip, r0, #-16777216	@ tmp834, tmp833,
	bic	r6, ip, #255	@ tmp834, tmp834,
	cmp	r6, #65536	@ tmp834,
	addeq	r6, r5, #2785280	@ tmp835, list0idx.5421,
	addeq	r1, r1, #464	@ tmp836, D.39915,
	addeq	r6, r6, #6976	@ tmp835, tmp835,
	addeq	r5, r5, r2	@ list0idx.5421, list0idx.5421,
	streq	r1, [r4, r6, asl #2]	@ tmp836, <variable>.pListX
	b	.L1776	@
.L1891:
	ldr	r0, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	r6, [r4, r5]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	r6, r0	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addge	r0, r7, #2785280	@ tmp892, list0idx.5354,
	addge	r1, r1, #464	@ tmp893, temp.5373,
	addge	r0, r0, #6976	@ tmp892, tmp892,
	addge	r7, r7, r2	@ list0idx.5354, list0idx.5354,
	strge	r1, [r4, r0, asl #2]	@ tmp893, <variable>.pListX
	b	.L1809	@
.L1893:
	ldr	r6, [r1, #480]	@ <variable>.frame.poc, <variable>.frame.poc
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.framepoc, <variable>.CurrPic.framepoc
	cmp	lr, r6	@ <variable>.CurrPic.framepoc, <variable>.frame.poc
	addlt	r6, r5, #2785280	@ tmp875, list0idx.5417,
	addlt	r1, r1, #464	@ tmp876, temp.5378,
	addlt	r6, r6, #6976	@ tmp875, tmp875,
	addlt	r5, r5, r2	@ list0idx.5417, list0idx.5417,
	strlt	r1, [r4, r6, asl #2]	@ tmp876, <variable>.pListX
	b	.L1802	@
.L1895:
	ldrb	lr, [r0, #465]	@ zero_extendqisi2	@ <variable>.frame.is_long_term, <variable>.frame.is_long_term
	cmp	lr, r2	@ <variable>.frame.is_long_term,
	bne	.L1787	@,
	add	r6, r5, #2785280	@ tmp850, list0idx.5417,
	movw	ip, #:lower16:2792289	@ tmp852,
	movt	ip, #:upper16:2792289	@ tmp852,
	add	lr, r6, #6976	@ tmp850, tmp850,
	add	r6, r5, ip	@ tmp852, list0idx.5417, tmp852
	add	r0, r0, #464	@ tmp851, temp.5386,
	add	r5, r5, r2	@ list0idx.5417, list0idx.5417,
	str	r0, [r4, lr, asl #2]	@ tmp851, <variable>.pListX
	str	r0, [r4, r6, asl #2]	@ tmp851, <variable>.pListX
	b	.L1787	@
.L1711:
	add	r7, r4, #11141120	@, pMvcCtx,
	ldr	r2, [r4, r5]	@ <variable>.CurrSlice.interviewlistXsize, <variable>.CurrSlice.interviewlistXsize
	add	r3, r7, #27904	@,,
	movw	ip, #:lower16:11162668	@ tmp498,
	mov	r1, r6	@, D.40029
	movt	ip, #:upper16:11162668	@ tmp498,
	add	r5, r4, ip	@ tmp498, pMvcCtx, tmp498
	str	r5, [sp, #0]	@ tmp498,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	b	.L1714	@
.L1671:
	movw	r2, #:lower16:11196640	@ tmp316,
	movt	r2, #:upper16:11196640	@ tmp316,
	movw	r5, #:lower16:11169024	@ tmp315,
	movt	r5, #:upper16:11169024	@ tmp315,
	ldr	r0, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	cmp	r3, #1	@ temp.5369,
	addeq	r0, r0, #504	@ tmp318, <variable>.CurrPic.frame_store,
	addne	r0, r0, #544	@ tmp322, <variable>.CurrPic.frame_store,
	str	r0, [r4, r5]	@ tmp322, <variable>.pListX
	b	.L1672	@
.L1715:
	add	r8, r6, #1344	@ D.40038, D.40029,
	movw	r6, #:lower16:11164300	@,
	movt	r6, #:upper16:11164300	@,
	mov	r0, r4	@, pMvcCtx
	add	r3, r4, r6	@, pMvcCtx,
	mov	r2, r8	@, D.40038
	mov	r1, r5	@, prephitmp.5213
	movw	r6, #:lower16:11164300	@ tmp502,
	bl	mvc_append_interview_list	@
	movw	r2, #:lower16:11196171	@ tmp503,
	movt	r2, #:upper16:11196171	@ tmp503,
	movt	r6, #:upper16:11164300	@ tmp502,
	ldrb	r0, [r4, r2]	@ zero_extendqisi2	@ temp.5430, <variable>.CurrPic.structure
	cmp	r0, #0	@ temp.5430,
	bne	.L1716	@,
	ldr	r7, [r4, r6]	@ D.39907, <variable>.CurrSlice.interviewlistXsize
	movw	r0, #:lower16:11162672	@ tmp504,
	movt	r0, #:upper16:11162672	@ tmp504,
	cmp	r7, #0	@ D.39907,
	ldr	ip, [r4, r0]	@ list0idx.5395, <variable>.CurrSlice.listXsize
	beq	.L1717	@,
	add	r0, ip, #2785280	@ tmp506, list0idx.5395,
	cmp	r7, #1	@ D.39907,
	add	r2, r0, #6976	@ tmp506, tmp506,
	sub	r1, r7, #1	@ tmp609, D.39907,
	movw	r6, #:lower16:11153864	@ tmp513,
	movt	r6, #:upper16:11153864	@ tmp513,
	add	lr, r4, r2, asl #2	@, ivtmp.5257, pMvcCtx, tmp506,
	add	r3, r4, r6	@ tmp513, pMvcCtx, tmp513
	and	r0, r1, #1	@ tmp611, tmp609,
	add	ip, ip, #1	@ list0idx.5395, list0idx.5395,
	str	r3, [lr, #132]	@ tmp513, <variable>.pListX
	add	r1, lr, #4	@ ivtmp.5257, ivtmp.5257,
	mov	r6, #672	@ tmp583,
	bls	.L1717	@,
	cmp	r0, #0	@ tmp611,
	beq	.L1718	@,
	cmp	r7, #2	@ D.39907,
	movw	r5, #:lower16:11154536	@ tmp807,
	movt	r5, #:upper16:11154536	@ tmp807,
	add	ip, ip, #1	@ list0idx.5395, list0idx.5395,
	add	lr, r4, r5	@ tmp807, pMvcCtx, tmp807
	mov	r5, #2	@ i.5358,
	str	lr, [r1, #132]	@ tmp807, <variable>.pListX
	add	r1, r1, #4	@ ivtmp.5257, ivtmp.5257,
	bls	.L1717	@,
.L1718:
	add	r2, r5, #1	@ tmp613, i.5358,
	add	lr, r1, #4	@ tmp614, ivtmp.5257,
	mul	r8, r6, r5	@ tmp778, tmp583, i.5358
	add	r5, r2, #1	@ i.5358, tmp613,
	mul	sl, r6, r2	@ tmp786, tmp583, tmp613
	movw	r0, #:lower16:11153864	@ tmp780,
	cmp	r7, r5	@ D.39907, i.5358
	movt	r0, #:upper16:11153864	@ tmp780,
	add	r2, r8, r0	@ tmp780, tmp778, tmp780
	add	ip, ip, #2	@ list0idx.5395, list0idx.5395,
	add	r0, sl, r0	@ tmp788, tmp786, tmp788
	add	r2, r4, r2	@ tmp781, pMvcCtx, tmp780
	add	r3, r4, r0	@ tmp789, pMvcCtx, tmp788
	str	r2, [r1, #132]	@ tmp781, <variable>.pListX
	str	r3, [lr, #132]	@ tmp789, <variable>.pListX
	add	r1, lr, #4	@ ivtmp.5257, tmp614,
	bhi	.L1718	@,
.L1717:
	movw	r5, #:lower16:11162672	@ tmp514,
	movw	r3, #:lower16:11162624	@ tmp515,
	movt	r5, #:upper16:11162672	@ tmp514,
	movt	r3, #:upper16:11162624	@ tmp515,
	movw	lr, #:lower16:11162668	@ tmp516,
	movt	lr, #:upper16:11162668	@ tmp516,
	str	ip, [r4, r5]	@ list0idx.5395, <variable>.CurrSlice.listXsize
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ prephitmp.5213, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, lr]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
	b	.L1669	@
.L1716:
	movw	r3, #:lower16:11169156	@,
	movt	r3, #:upper16:11169156	@,
	ldr	r2, [r4, r6]	@, <variable>.CurrSlice.interviewlistXsize
	mov	r1, r8	@, D.40038
	add	r3, r4, r3	@, pMvcCtx,
	movw	r5, #:lower16:11162672	@ tmp522,
	movt	r5, #:upper16:11162672	@ tmp522,
	add	lr, r4, r5	@ tmp522, pMvcCtx, tmp522
	str	lr, [sp, #0]	@ tmp522,
	bl	MVC_GenPiclistfromFrmlist_Interview	@
	movw	ip, #:lower16:11162668	@ tmp524,
	movt	ip, #:upper16:11162668	@ tmp524,
	ldrb	r5, [r4, r7]	@ zero_extendqisi2	@ prephitmp.5213, <variable>.CurrSlice.slice_type
	ldr	r0, [r4, ip]	@ prephitmp.5368, <variable>.CurrSlice.listXsize
	b	.L1669	@
.L1889:
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC52	@,
	movt	r1, #:upper16:.LC52	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.39969,
	b	.L1675	@
.L1670:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC51	@,
	movt	r1, #:upper16:.LC51	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.39969,
	b	.L1675	@
.L1910:
	add	r0, r0, #1	@,,
	movw	r1, #:lower16:.LC53	@,
	movt	r1, #:upper16:.LC53	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.39969,
	b	.L1675	@
	.fnend
	.size	MVC_InitListX, .-MVC_InitListX
	.align	2
	.global	MVC_DecList
	.type	MVC_DecList, %function
MVC_DecList:
	.fnstart
.LFB1597:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11168616	@ tmp148,
	movt	r1, #:upper16:11168616	@ tmp148,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, #0	@ <variable>.DPB.used_size,
	mvneq	ip, #0	@ nearest_pic_id,
	beq	.L1914	@,
	movw	r2, #:lower16:11168612	@ tmp151,
	movt	r2, #:upper16:11168612	@ tmp151,
	movw	r3, #:lower16:11196660	@ tmp150,
	movt	r3, #:upper16:11196660	@ tmp150,
	ldr	r4, [r0, r2]	@ D.46298, <variable>.DPB.size
	ldr	r0, [r0, r3]	@ curr_poc, <variable>.CurrPic.thispoc
	cmp	r4, #0	@ D.46298,
	moveq	ip, r4	@ nearest_pic_id, D.46298
	beq	.L1914	@,
	mov	r4, r4, asl #2	@ D.51229, D.46298,
	mov	ip, #0	@ nearest_pic_id,
	tst	r4, #4	@ D.51229,
	mov	r2, ip	@ ivtmp.5485, nearest_pic_id
	mvn	r6, #-2147483648	@ nearest_poc_diff,
	bne	.L1917	@,
	movw	r2, #:lower16:11168420	@ tmp187,
	movt	r2, #:upper16:11168420	@ tmp187,
	add	r3, r5, r2	@ tmp187, pMvcCtx, tmp187
	ldr	r2, [r3, #0]	@ D.46302, <variable>.DPB.fs
	cmp	r2, #0	@ D.46302,
	beq	.L1926	@,
	ldr	r1, [r2, #600]	@ <variable>.poc, <variable>.poc
	rsb	r3, r1, r0	@ tmp191, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp191,
	rsblt	r3, r3, #0	@ nearest_poc_diff.5488, tmp191
	cmp	r6, r3	@ nearest_poc_diff, nearest_poc_diff.5488
	ble	.L1926	@,
	ldr	ip, [r2, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1934:
	mov	r6, r3	@ nearest_poc_diff, nearest_poc_diff.5488
	mov	r2, #4	@ ivtmp.5485,
.L1917:
	add	r1, r5, r2	@ tmp152, pMvcCtx, ivtmp.5485
	movw	r3, #:lower16:11168420	@ tmp153,
	movt	r3, #:upper16:11168420	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.46302, <variable>.DPB.fs
	cmp	r3, #0	@ D.46302,
	beq	.L1915	@,
.L1936:
	ldr	r1, [r3, #600]	@ <variable>.poc, <variable>.poc
	rsb	r1, r1, r0	@ tmp155, <variable>.poc, curr_poc
	cmp	r1, #0	@ tmp155,
	rsblt	r1, r1, #0	@ nearest_poc_diff.5488, tmp155
	cmp	r6, r1	@ nearest_poc_diff, nearest_poc_diff.5488
	ldrgt	ip, [r3, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
	ble	.L1915	@,
	add	r2, r2, #4	@ tmp178, ivtmp.5485,
	cmp	r2, r4	@ tmp178, D.51229
	beq	.L1914	@,
.L1937:
	add	r6, r5, r2	@ tmp181, pMvcCtx, tmp178
	movw	r3, #:lower16:11168420	@ tmp183,
	movt	r3, #:upper16:11168420	@ tmp183,
	add	r3, r6, r3	@ tmp183, tmp181, tmp183
	ldr	r6, [r3, #0]	@ D.46302, <variable>.DPB.fs
	cmp	r6, #0	@ D.46302,
	beq	.L1928	@,
	ldr	r3, [r6, #600]	@ <variable>.poc, <variable>.poc
	rsb	r3, r3, r0	@ tmp194, <variable>.poc, curr_poc
	cmp	r3, #0	@ tmp194,
	rsblt	r3, r3, #0	@ nearest_poc_diff.5488, tmp194
	cmp	r1, r3	@ nearest_poc_diff.5488, nearest_poc_diff.5488
	ble	.L1928	@,
	ldr	ip, [r6, #184]	@ nearest_pic_id, <variable>.fs_image.image_id
.L1935:
	add	r2, r2, #4	@ ivtmp.5485, tmp178,
	mov	r6, r3	@ nearest_poc_diff, nearest_poc_diff.5488
	add	r1, r5, r2	@ tmp152, pMvcCtx, ivtmp.5485
	movw	r3, #:lower16:11168420	@ tmp153,
	movt	r3, #:upper16:11168420	@ tmp153,
	add	r3, r1, r3	@ tmp153, tmp152, tmp153
	ldr	r3, [r3, #0]	@ D.46302, <variable>.DPB.fs
	cmp	r3, #0	@ D.46302,
	bne	.L1936	@,
.L1915:
	add	r2, r2, #4	@ tmp178, ivtmp.5485,
	mov	r1, r6	@ nearest_poc_diff.5488, nearest_poc_diff
	cmp	r2, r4	@ tmp178, D.51229
	bne	.L1937	@,
.L1914:
	movw	r1, #:lower16:11162624	@ tmp160,
	movt	r1, #:upper16:11162624	@ tmp160,
	movw	r2, #:lower16:11164256	@ tmp157,
	movw	r0, #:lower16:11164252	@ tmp158,
	ldrb	r4, [r5, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	movt	r2, #:upper16:11164256	@ tmp157,
	movt	r0, #:upper16:11164252	@ tmp158,
	cmp	r4, #2	@ <variable>.CurrSlice.slice_type,
	str	ip, [r5, r2]	@ nearest_pic_id, <variable>.CurrSlice.picid_nearpoc
	mvn	r4, #0	@ tmp159,
	str	r4, [r5, r0]	@ tmp159, <variable>.CurrSlice.picid_refidx0
	beq	.L1938	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_InitListX	@
	cmp	r0, #0	@,
	beq	.L1920	@,
	mov	r0, #13	@,
	movw	r1, #:lower16:.LC54	@,
	movt	r1, #:upper16:.LC54	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@ D.40164, tmp159
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1920:
	mov	r0, r5	@, pMvcCtx
	bl	MVC_ReorderListX	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_RepairList	@
	cmp	r0, #0	@,
	movne	r0, r4	@ D.40164, tmp159
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_FindMinRefIdx	@
	movw	r1, #:lower16:11169024	@ tmp167,
	movt	r1, #:upper16:11169024	@ tmp167,
	movw	r2, #:lower16:11164252	@ tmp169,
	movt	r2, #:upper16:11164252	@ tmp169,
	ldr	r0, [r5, r1]	@ D.40173, <variable>.pListX
	cmp	r0, #0	@ D.40173,
	ldrne	r0, [r0, #4]	@ <variable>.frame_store, <variable>.frame_store
	ldrne	r4, [r0, #184]	@ iftmp.650, <variable>.fs_image.image_id
	mov	r0, #0	@ D.40164,
	str	r4, [r5, r2]	@ iftmp.650, <variable>.CurrSlice.picid_refidx0
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1928:
	mov	r3, r1	@ nearest_poc_diff.5488, nearest_poc_diff.5488
	b	.L1935	@
.L1938:
	movw	r3, #:lower16:11162668	@ tmp162,
	movw	ip, #:lower16:11162672	@ tmp164,
	movt	r3, #:upper16:11162668	@ tmp162,
	movt	ip, #:upper16:11162672	@ tmp164,
	mov	r0, #0	@ tmp163,
	str	r0, [r5, r3]	@ tmp163, <variable>.CurrSlice.listXsize
	str	r0, [r5, ip]	@ tmp163, <variable>.CurrSlice.listXsize
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L1926:
	mvn	r3, #-2147483648	@ nearest_poc_diff.5488,
	b	.L1934	@
	.fnend
	.size	MVC_DecList, .-MVC_DecList
	.align	2
	.global	MVC_ArrangeVahbMem
	.type	MVC_ArrangeVahbMem, %function
MVC_ArrangeVahbMem:
	.fnstart
.LFB1566:
	@ args = 4, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #44
	sub	sp, sp, #44	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	sub	r6, fp, #76	@ tmp185,,
	mov	r5, r1	@ ImgWidth, ImgWidth
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r1, #36	@,
	mov	r0, r6	@, tmp185
	mov	r7, r2	@ ImgHeight, ImgHeight
	bl	__memzero	@
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	r8, #0	@ tmp151,
	mov	r1, #0	@ tmp162,
	mov	r2, #5	@ tmp164,
	ldr	ip, [r0, #20]	@ <variable>.s32DnrDispOutEnable, <variable>.s32DnrDispOutEnable
	strb	r8, [fp, #-75]	@ tmp151, FspInstCfg.s32TfEnable
	strb	r8, [fp, #-74]	@ tmp151, FspInstCfg.s32RprEnable
	str	r7, [fp, #-44]	@ ImgHeight, FspInstCfg.s32DispFsHeight
	str	r7, [fp, #-60]	@ ImgHeight, FspInstCfg.s32DecFsHeight
	str	r7, [fp, #-52]	@ ImgHeight, FspInstCfg.s32TfFsHeight
	movw	r7, #:lower16:11199520	@ tmp173,
	str	r5, [fp, #-48]	@ ImgWidth, FspInstCfg.s32DispFsWidth
	movt	r7, #:upper16:11199520	@ tmp173,
	strb	ip, [fp, #-76]	@ <variable>.s32DnrDispOutEnable, FspInstCfg.s32DispLoopEnable
	str	r5, [fp, #-64]	@ ImgWidth, FspInstCfg.s32DecFsWidth
	str	r5, [fp, #-56]	@ ImgWidth, FspInstCfg.s32TfFsWidth
	ldr	r5, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r5, #24	@ <variable>.eCapLevel,
	mov	r5, #1	@ tmp171,
	movwne	r8, #:lower16:11168612	@ tmp157,
	movtne	r8, #:upper16:11168612	@ tmp157,
	ldrne	r8, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	strb	r1, [fp, #-70]	@ tmp162, FspInstCfg.s32ExpectedTfFsNum
	mov	r1, r6	@, tmp185
	addne	r8, r8, #3	@ tmp160, <variable>.DPB.size,
	strb	r2, [fp, #-69]	@ tmp164, FspInstCfg.s32ExpectedDispFsNum
	uxtbne	r8, r8	@ iftmp.577, tmp160
	strb	r8, [fp, #-71]	@ iftmp.577, FspInstCfg.s32ExpectedDecFsNum
	ldr	r3, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	mov	r8, #0	@ tmp169,
	cmp	r3, #24	@ <variable>.eCapLevel,
	ldrneb	r3, [fp, #4]	@ zero_extendqisi2	@ iftmp.578, PmvBlkNum
	moveq	r3, #1	@ iftmp.578,
	strb	r3, [fp, #-68]	@ iftmp.578, FspInstCfg.s32ExpectedPmvNum
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	strb	r8, [fp, #-72]	@ tmp169, FspInstCfg.s32UserDec
	strb	r5, [fp, #-73]	@ tmp171, FspInstCfg.s8SubLevelEnable
	bl	FSP_ConfigInstance	@
	subs	r6, r0, #0	@ D.38930,
	bne	.L1944	@,
	ldr	lr, [r4, #0]	@ temp.5516, <variable>.pstExtraData
	sub	r3, fp, #40	@,,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r2, [lr, #28]	@, <variable>.s32SyntaxMemSize
	ldr	r1, [lr, #24]	@, <variable>.s32SyntaxMemAddr
	bl	FSP_PartitionFsMemory	@
	cmp	r0, r8	@,
	moveq	r0, r5	@ D.38939, tmp171
	bne	.L1948	@,
.L1946:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L1944:
	mov	r0, r8	@, tmp169
	movw	r1, #:lower16:.LC56	@,
	movt	r1, #:upper16:.LC56	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.38939,
	b	.L1946	@
.L1948:
	mov	r0, r6	@, D.38930
	movw	r1, #:lower16:.LC55	@,
	movt	r1, #:upper16:.LC55	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.38939,
	b	.L1946	@
	.fnend
	.size	MVC_ArrangeVahbMem, .-MVC_ArrangeVahbMem
	.align	2
	.global	MVC_GetImagePara
	.type	MVC_GetImagePara, %function
MVC_GetImagePara:
	.fnstart
.LFB1546:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r4, #:lower16:11162632	@ tmp161,
	movw	r3, #:lower16:11155244	@ tmp163,
	movt	r4, #:upper16:11162632	@ tmp161,
	movt	r3, #:upper16:11155244	@ tmp163,
	mov	lr, #2240	@ tmp165,
	ldr	r2, [r0, r4]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	ip, [r0, r3]	@ <variable>.PPS, <variable>.PPS
	mov	r4, r1	@ pFrameStore, pFrameStore
	ldr	r3, [r1, #148]	@ prephitmp.5536, <variable>.fs_image.format
	movw	r0, #:lower16:11155240	@ tmp159,
	movw	r1, #:lower16:11198020	@ tmp173,
	movt	r0, #:upper16:11155240	@ tmp159,
	mla	r2, lr, r2, ip	@ tmp166, tmp165, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	movt	r1, #:upper16:11198020	@ tmp173,
	bic	r3, r3, #768	@ prephitmp.5536, prephitmp.5536,
	ldr	ip, [r5, r0]	@ <variable>.SPS, <variable>.SPS
	bic	r3, r3, #3	@ prephitmp.5536, prephitmp.5536,
	ldrb	r0, [r4, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	movw	lr, #3992	@ tmp169,
	ldr	r2, [r2, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	str	r3, [r4, #148]	@ prephitmp.5536, <variable>.fs_image.format
	ldr	r1, [r5, r1]	@ <variable>.frame_rate, <variable>.frame_rate
	mla	r2, lr, r2, ip	@ sps, tmp169, <variable>.seq_parameter_set_id, <variable>.SPS
	mov	r1, r1, asl #10	@ tmp175, <variable>.frame_rate,
	str	r1, [r4, #176]	@ tmp175, <variable>.fs_image.frame_rate
	cmp	r0, #3	@ <variable>.is_used,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.is_used
	b	.L1950	@
.L1954:
	.word	.L1951
	.word	.L1952
	.word	.L1953
	.word	.L1951
.L1951:
	ldrb	r6, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r6, #0	@ <variable>.frame.structure,
	bne	.L1955	@,
	ldr	r7, [r4, #616]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	mov	lr, #3072	@ prephitmp.5571,
	ldr	r1, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	cmp	r7, #0	@ <variable>.MbaffFrameFlag,
	ldr	ip, [r4, #620]	@ pic_type, <variable>.pic_type
	moveq	r7, #512	@ prephitmp.5572,
	movne	r7, #768	@ prephitmp.5572,
	str	r1, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
.L1957:
	ldr	r6, [r4, #520]	@ D.37567, <variable>.top_field.poc
	ldr	r1, [r4, #560]	@ D.37568, <variable>.bottom_field.poc
	cmp	r6, r1	@ D.37567, D.37568
	beq	.L1987	@,
	movgt	r6, #0	@, top_field_first
	movle	r6, #1	@, top_field_first
.L1968:
	movw	r1, #:lower16:11168408	@ tmp191,
	movt	r1, #:upper16:11168408	@ tmp191,
	ldrb	r1, [r5, r1]	@ zero_extendqisi2	@ D.37582, <variable>.PicTimingSEI.pic_struct
	cmp	r1, #3	@ D.37582,
	moveq	r6, #4096	@ prephitmp.5540,
	beq	.L1970	@,
	cmp	r1, #4	@ D.37582,
	movne	r6, r6, asl #12	@ prephitmp.5540, top_field_first,
	moveq	r6, #0	@ prephitmp.5540,
.L1970:
	orr	r1, r7, lr	@ tmp192, prephitmp.5572, prephitmp.5571
	bic	lr, r3, #12288	@ tmp193, prephitmp.5536,
	orr	r3, r1, lr	@ tmp194, tmp192, tmp193
	and	r1, ip, #3	@ tmp195, pic_type,
	orr	lr, r3, r1	@ tmp196, tmp194, tmp195
	orr	ip, lr, r6	@ tmp197, tmp196, prephitmp.5540
	str	ip, [r4, #148]	@ tmp197, <variable>.fs_image.format
.L1950:
	ldrb	r1, [r2, #20]	@ zero_extendqisi2	@ D.37607, <variable>.frame_mbs_only_flag
	movw	lr, #:lower16:11164276	@ tmp210,
	movt	lr, #:upper16:11164276	@ tmp210,
	mov	ip, #1	@ tmp209,
	str	r1, [r4, #444]	@ D.37607, <variable>.fs_image.optm_inf.IsProgressiveFrm
	str	r1, [r4, #440]	@ D.37607, <variable>.fs_image.optm_inf.IsProgressiveSeq
	ldrb	r3, [r2, #24]	@ zero_extendqisi2	@ <variable>.vui_parameters_present_flag, <variable>.vui_parameters_present_flag
	cmp	r3, #0	@ <variable>.vui_parameters_present_flag,
	ldrne	r2, [r2, #68]	@ iftmp.483, <variable>.vui_seq_parameters.matrix_coefficients
	moveq	r2, r3	@ iftmp.483, <variable>.vui_parameters_present_flag
	str	ip, [r4, #448]	@ tmp209, <variable>.fs_image.optm_inf.RealFrmRate
	str	r2, [r4, #452]	@ iftmp.483, <variable>.fs_image.optm_inf.MatrixCoef
	ldr	r1, [r5, lr]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	cmp	r1, ip	@ <variable>.CurrSlice.mvcinfo_flag,
	movne	r1, #0	@ tmp213,
	str	r1, [r4, #236]	@ tmp213, <variable>.fs_image.is_3D
	ldr	r3, [r5, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r3, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L1976	@,
	ldrb	r3, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	cmp	r3, #0	@ <variable>.frame.structure,
	beq	.L1988	@,
.L1976:
	movw	r2, #:lower16:11168372	@ tmp220,
	movt	r2, #:upper16:11168372	@ tmp220,
	ldrsb	r0, [r5, r2]	@ <variable>.FramePackSEI.frame_packing_dec_ok, <variable>.FramePackSEI.frame_packing_dec_ok
	cmp	r0, #0	@ <variable>.FramePackSEI.frame_packing_dec_ok,
	beq	.L1977	@,
	movw	r3, #:lower16:11168388	@ tmp222,
	movt	r3, #:upper16:11168388	@ tmp222,
	ldr	r2, [r5, r3]	@ D.37630, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	r2, #3	@ D.37630,
	moveq	r3, #1	@ tmp223,
	streq	r3, [r4, #324]	@ tmp223, <variable>.fs_image.eFramePackingType
	beq	.L1977	@,
	cmp	r2, #4	@ D.37630,
	moveq	r3, #2	@ tmp224,
	streq	r3, [r4, #324]	@ tmp224, <variable>.fs_image.eFramePackingType
	beq	.L1977	@,
	cmp	r2, #5	@ D.37630,
	moveq	r3, #3	@ tmp225,
	streq	r3, [r4, #324]	@ tmp225, <variable>.fs_image.eFramePackingType
	beq	.L1977	@,
	mov	r0, #0	@ tmp226,
	movw	r1, #:lower16:.LC57	@,
	str	r0, [r4, #324]	@ tmp226, <variable>.fs_image.eFramePackingType
	movt	r1, #:upper16:.LC57	@,
	ldr	r2, [r5, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	bl	dprint_vfmw	@
.L1977:
	movw	ip, #:lower16:11199520	@ tmp230,
	movt	ip, #:upper16:11199520	@ tmp230,
	ldr	r1, [r4, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r5, ip]	@, <variable>.ChanID
	bl	FSP_GetFsImagePtr	@
	subs	r5, r0, #0	@ pstLogicFsImage,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	add	r1, r4, #8	@, pFrameStore,
	mov	r2, #456	@,
	bl	memcpy	@
	mov	r2, #15	@ tmp238,
	str	r2, [r5, #336]	@ tmp238, <variable>.ImageDnr.video_standard
	mov	r1, #1	@ tmp241,
	ldrb	r0, [r4, #464]	@ zero_extendqisi2	@ <variable>.frame.structure, <variable>.frame.structure
	strb	r1, [r5, #331]	@ tmp241, <variable>.ImageDnr.use_pic_qp_en
	cmp	r0, #0	@ <variable>.frame.structure,
	movne	r0, #4	@, iftmp.485,
	strb	r0, [r5, #324]	@ iftmp.485, <variable>.ImageDnr.pic_structure
	ldr	r3, [r4, #496]	@ D.37651, <variable>.frame.MaxQp
	strb	r1, [r5, #329]	@ tmp241, <variable>.ImageDnr.chroma_format_idc
	str	r3, [r5, #344]	@ D.37651, <variable>.ImageDnr.QP_U
	str	r3, [r5, #340]	@ D.37651, <variable>.ImageDnr.QP_Y
	str	r3, [r5, #348]	@ D.37651, <variable>.ImageDnr.QP_V
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L1988:
	cmp	r0, #3	@ <variable>.is_used,
	ldreq	r3, [r4, #148]	@ <variable>.fs_image.format, <variable>.fs_image.format
	biceq	r3, r3, #768	@ tmp219, <variable>.fs_image.format,
	streq	r3, [r4, #148]	@ tmp219, <variable>.fs_image.format
	b	.L1976	@
.L1953:
	ldr	ip, [r4, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	lr, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	and	r1, ip, #3	@ tmp198, <variable>.pic_type,
	orr	r3, r3, r1	@ tmp200, prephitmp.5536, tmp198
	orr	ip, r3, #2816	@ tmp201, tmp200,
	str	lr, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
	str	ip, [r4, #148]	@ tmp201, <variable>.fs_image.format
	b	.L1950	@
.L1952:
	ldr	lr, [r4, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r1, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	and	ip, lr, #3	@ tmp203, <variable>.pic_type,
	orr	lr, r3, ip	@ tmp205, prephitmp.5536, tmp203
	orr	r3, lr, #1792	@ tmp206, tmp205,
	str	r1, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
	str	r3, [r4, #148]	@ tmp206, <variable>.fs_image.format
	b	.L1950	@
.L1955:
	movw	r7, #:lower16:11199516	@ tmp180,
	movt	r7, #:upper16:11199516	@ tmp180,
	ldr	r8, [r4, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	ldr	r1, [r5, r7]	@ D.37551, <variable>.out_error_thr
	cmp	r8, r1	@ <variable>.top_field.err_level, D.37551
	bhi	.L1989	@,
	ldr	sl, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, sl	@ D.37551, <variable>.bottom_field.err_level
	bcc	.L1961	@,
.L1959:
	ldr	r6, [r4, #624]	@ <variable>.err_level, <variable>.err_level
	mov	lr, #3	@ valid_field,
	ldr	ip, [r4, #620]	@ pic_type, <variable>.pic_type
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	r6, [r4, #188]	@ <variable>.err_level, <variable>.fs_image.error_level
	ldr	r6, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
.L1962:
	ldrb	r7, [r4, #3]	@ zero_extendqisi2	@ D.37559, <variable>.mode_skip_flag
	cmp	r7, #1	@ D.37559,
	streq	sl, [r4, #188]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r1	@ pic_type, <variable>.bottom_field.pic_type
	moveq	lr, #2	@ valid_field,
	beq	.L1964	@,
	cmp	r7, #2	@ D.37559,
	streq	r8, [r4, #188]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	moveq	ip, r6	@ pic_type, pic_type
	moveq	lr, #1	@ valid_field,
.L1964:
	mov	lr, lr, asl #10	@ prephitmp.5571, valid_field,
	mov	r7, #768	@ prephitmp.5572,
	str	r6, [r4, #140]	@ pic_type, <variable>.fs_image.top_fld_type
	str	r1, [r4, #144]	@ <variable>.bottom_field.pic_type, <variable>.fs_image.bottom_fld_type
	b	.L1957	@
.L1961:
	ldr	r6, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
	mov	lr, #1	@ valid_field,
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	str	r8, [r4, #188]	@ <variable>.top_field.err_level, <variable>.fs_image.error_level
	mov	ip, r6	@ pic_type, pic_type
	b	.L1962	@
.L1987:
	ldr	r1, [r4, #152]	@ <variable>.fs_image.image_width, <variable>.fs_image.image_width
	cmp	r1, #720	@ <variable>.fs_image.image_width,
	movne	r6, #1	@ top_field_first,
	bne	.L1968	@,
	ldr	r6, [r4, #156]	@ <variable>.fs_image.image_height, <variable>.fs_image.image_height
	subs	r6, r6, #480	@ top_field_first, <variable>.fs_image.image_height,
	movne	r6, #1	@ top_field_first
	b	.L1968	@
.L1989:
	ldr	sl, [r4, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	cmp	r1, sl	@ D.37551, <variable>.bottom_field.err_level
	bcc	.L1959	@,
	ldr	r1, [r4, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	mov	lr, #2	@ valid_field,
	str	sl, [r4, #188]	@ <variable>.bottom_field.err_level, <variable>.fs_image.error_level
	ldr	r6, [r4, #532]	@ pic_type, <variable>.top_field.pic_type
	mov	ip, r1	@ pic_type, <variable>.bottom_field.pic_type
	b	.L1962	@
	.fnend
	.size	MVC_GetImagePara, .-MVC_GetImagePara
	.align	2
	.global	MVC_RemoveFrameStoreOutDPB
	.type	MVC_RemoveFrameStoreOutDPB, %function
MVC_RemoveFrameStoreOutDPB:
	.fnstart
.LFB1542:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2792104	@ tmp139,
	movt	r2, #:upper16:2792104	@ tmp139,
	mov	r5, r1	@ pos, pos
	add	r1, r1, r2	@ tmp139, pos, tmp139
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r3, r0, r1, asl #2	@, tmp143, pMvcCtx, tmp139,
	ldr	r3, [r3, #4]	@ D.37343, <variable>.DPB.fs
	cmp	r3, #0	@ D.37343,
	ldmeqfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	movw	r6, #:lower16:2792104	@ tmp153,
	movt	r6, #:upper16:2792104	@ tmp153,
	add	r7, r5, r6	@ tmp153, pos, tmp153
	ldr	lr, [r3, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	movw	r2, #:lower16:11168892	@ tmp149,
	movt	r2, #:upper16:11168892	@ tmp149,
	add	r7, r4, r7, asl #2	@, tmp158, pMvcCtx, tmp153,
	movw	ip, #:lower16:2792158	@ tmp145,
	movt	ip, #:upper16:2792158	@ tmp145,
	ldr	r0, [r0, r2]	@ D.37348, <variable>.APC.used_size
	add	r3, lr, ip	@ tmp145, <variable>.apc_idc, tmp145
	ldr	ip, [r7, #4]	@ tmp155, <variable>.DPB.fs
	movw	lr, #:lower16:11168892	@ tmp150,
	movw	r6, #:lower16:11199520	@ tmp151,
	movt	lr, #:upper16:11168892	@ tmp150,
	movt	r6, #:upper16:11199520	@ tmp151,
	cmp	r0, #0	@ D.37348,
	mov	r1, #0	@ tmp148,
	subne	r0, r0, #1	@ iftmp.474, D.37348,
	str	r1, [r4, r3, asl #2]	@ tmp148, <variable>.APC.is_used
	str	r0, [r4, lr]	@ iftmp.474, <variable>.APC.used_size
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pstLogic
	beq	.L1994	@,
	ldrsb	r1, [r0, #1]	@ <variable>.s32DispState, <variable>.s32DispState
	cmp	r1, #3	@ <variable>.s32DispState,
	beq	.L1995	@,
	ldr	r3, [r7, #4]	@ tmp166, <variable>.DPB.fs
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L1995:
	movw	r2, #:lower16:2792104	@ tmp174,
	movt	r2, #:upper16:2792104	@ tmp174,
	add	r0, r5, r2	@ tmp174, pos, tmp174
	movw	r1, #:lower16:11199520	@ tmp172,
	movt	r1, #:upper16:11199520	@ tmp172,
	mov	r2, #0	@,
	add	lr, r4, r0, asl #2	@, tmp179, pMvcCtx, tmp174,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	ip, [lr, #4]	@ tmp176, <variable>.DPB.fs
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
.L1994:
	movw	ip, #:lower16:2792104	@ tmp182,
	movt	ip, #:upper16:2792104	@ tmp182,
	add	r3, r5, ip	@ tmp182, pos, tmp182
	mov	r1, #0	@ tmp189,
	movw	ip, #:lower16:11168616	@ tmp216,
	movt	ip, #:upper16:11168616	@ tmp216,
	add	r2, r4, r3, asl #2	@, tmp187, pMvcCtx, tmp182,
	ldr	r0, [r2, #4]	@ tmp184, <variable>.DPB.fs
	strb	r1, [r0, #1]	@ tmp189, <variable>.is_used
	ldr	lr, [r2, #4]	@ tmp193, <variable>.DPB.fs
	strb	r1, [lr, #4]	@ tmp189, <variable>.is_in_dpb
	ldr	r0, [r2, #4]	@ tmp202, <variable>.DPB.fs
	strb	r1, [r0, #2]	@ tmp189, <variable>.is_reference
	ldr	lr, [r4, ip]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r1, [r2, #4]	@ tmp189, <variable>.DPB.fs
	sub	r3, lr, #1	@ tmp219, <variable>.DPB.used_size,
	str	r3, [r4, ip]	@ tmp219, <variable>.DPB.used_size
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
	.fnend
	.size	MVC_RemoveFrameStoreOutDPB, .-MVC_RemoveFrameStoreOutDPB
	.align	2
	.global	MVC_RemoveUnUsedFrameStore
	.type	MVC_RemoveUnUsedFrameStore, %function
MVC_RemoveUnUsedFrameStore:
	.fnstart
.LFB1543:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11168612	@ tmp140,
	movt	r3, #:upper16:11168612	@ tmp140,
	mov	r8, r0	@ pMvcCtx, pMvcCtx
	mov	r7, r1	@ CurrViewId, CurrViewId
	ldr	r6, [r0, r3]	@ k, <variable>.DPB.size
	cmp	r6, #0	@ k,
	beq	.L1998	@,
	movw	r4, #:lower16:11168420	@ ivtmp.5638,
	movt	r4, #:upper16:11168420	@ ivtmp.5638,
	add	r4, r0, r4	@ ivtmp.5638, pMvcCtx, ivtmp.5638
	sub	sl, r6, #1	@ tmp156, k,
	and	sl, sl, #1	@ tmp158, tmp156,
	ldr	r3, [r4, #0]	@ D.37374, <variable>.DPB.fs
	cmp	r3, #0	@ D.37374,
	beq	.L2003	@,
	ldrb	r5, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #0	@ <variable>.is_reference,
	beq	.L2014	@,
.L2003:
	mov	r5, #1	@ j,
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.5638, ivtmp.5638,
	bls	.L1998	@,
	cmp	sl, #0	@ tmp158,
	beq	.L2000	@,
	ldr	r3, [r4, #0]	@ D.37374, <variable>.DPB.fs
	cmp	r3, #0	@ D.37374,
	beq	.L2008	@,
	ldrb	r1, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2015	@,
.L2008:
	add	r5, r5, #1	@ j, tmp160,
	add	r4, r4, #4	@ ivtmp.5638, tmp159,
	cmp	r6, r5	@ k, j
	bls	.L1998	@,
.L2000:
	ldr	r3, [r4, #0]	@ D.37374, <variable>.DPB.fs
	cmp	r3, #0	@ D.37374,
	beq	.L1999	@,
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L1999	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L1999	@,
	ldr	r1, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L1999	@,
	ldr	r0, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L1999	@,
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	mov	r1, r5	@, j
	bl	MVC_RemoveFrameStoreOutDPB	@
.L1999:
	ldr	r3, [r4, #4]	@ D.37374, <variable>.DPB.fs
	add	r5, r5, #1	@ tmp160, j,
	add	r4, r4, #4	@ tmp159, ivtmp.5638,
	cmp	r3, #0	@ D.37374,
	beq	.L2008	@,
	ldrb	r2, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L2008	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L2008	@,
	ldr	r1, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r1, r7	@, <variable>.view_id, CurrViewId
	bne	.L2008	@,
	ldr	r0, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r0, #1	@ <variable>.eFoState,
	beq	.L2008	@,
.L2013:
	mov	r1, r5	@, tmp160
	strb	r2, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	mov	r0, r8	@, pMvcCtx
	add	r5, r5, #1	@ j, tmp160,
	bl	MVC_RemoveFrameStoreOutDPB	@
	cmp	r6, r5	@ k, j
	add	r4, r4, #4	@ ivtmp.5638, tmp159,
	bhi	.L2000	@,
.L1998:
	mov	r0, #0	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2014:
	ldrb	r1, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r1, #0	@ <variable>.is_in_dpb,
	bne	.L2003	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	ip, r7	@, <variable>.view_id, CurrViewId
	bne	.L2003	@,
	ldr	r2, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	r2, #1	@ <variable>.eFoState,
	beq	.L2003	@,
	strb	r1, [r3, #1]	@ <variable>.is_in_dpb, <variable>.is_used
	bl	MVC_RemoveFrameStoreOutDPB	@
	b	.L2003	@
.L2015:
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	bne	.L2008	@,
	ldr	r0, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r7, #1	@ CurrViewId,
	cmpne	r0, r7	@, <variable>.view_id, CurrViewId
	bne	.L2008	@,
	ldr	ip, [r3, #608]	@ <variable>.eFoState, <variable>.eFoState
	cmp	ip, r5	@ <variable>.eFoState,
	bne	.L2013	@,
	b	.L2008	@
	.fnend
	.size	MVC_RemoveUnUsedFrameStore, .-MVC_RemoveUnUsedFrameStore
	.align	2
	.global	MVC_UnMarkFrameStoreRef
	.type	MVC_UnMarkFrameStoreRef, %function
MVC_UnMarkFrameStoreRef:
	.fnstart
.LFB1532:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r2, [r1, #1]	@ zero_extendqisi2	@ prephitmp.5657, <variable>.is_used
	mov	r3, r1	@ pFrameStore, pFrameStore
	tst	r2, #1	@ prephitmp.5657,
	beq	.L2017	@,
	ldrb	lr, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp142,
	strb	r1, [r3, #506]	@ tmp142, <variable>.top_field.is_short_term
	and	ip, lr, #2	@ tmp140, <variable>.is_reference,
	strb	r1, [r3, #505]	@ tmp142, <variable>.top_field.is_long_term
	strb	ip, [r3, #2]	@ tmp140, <variable>.is_reference
.L2017:
	tst	r2, #2	@ prephitmp.5657,
	beq	.L2018	@,
	ldrb	lr, [r3, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	mov	r1, #0	@ tmp151,
	strb	r1, [r3, #546]	@ tmp151, <variable>.bottom_field.is_short_term
	and	ip, lr, #1	@ tmp149, <variable>.is_reference,
	strb	r1, [r3, #545]	@ tmp151, <variable>.bottom_field.is_long_term
	strb	ip, [r3, #2]	@ tmp149, <variable>.is_reference
.L2018:
	cmp	r2, #3	@ prephitmp.5657,
	movw	ip, #:lower16:11199520	@ tmp163,
	movt	ip, #:upper16:11199520	@ tmp163,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	moveq	r2, #0	@ tmp155,
	streqb	r2, [r3, #2]	@ tmp155, <variable>.is_reference
	streqb	r2, [r3, #466]	@ tmp155, <variable>.frame.is_short_term
	streqb	r2, [r3, #465]	@ tmp155, <variable>.frame.is_long_term
	mov	r2, #0	@ tmp161,
	strb	r2, [r3, #2]	@ tmp161, <variable>.is_reference
	ldr	r0, [r0, ip]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkFrameStoreRef, .-MVC_UnMarkFrameStoreRef
	.align	2
	.global	MVC_SimpleSlideDPB
	.type	MVC_SimpleSlideDPB, %function
MVC_SimpleSlideDPB:
	.fnstart
.LFB1563:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11168612	@ tmp143,
	movw	r1, #:lower16:11168616	@ tmp144,
	movt	r2, #:upper16:11168612	@ tmp143,
	movt	r1, #:upper16:11168616	@ tmp144,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r5, [r0, r2]	@ D.38610, <variable>.DPB.size
	ldr	r3, [r0, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r3, r5	@ <variable>.DPB.used_size, D.38610
	bcc	.L2022	@,
	cmp	r5, #0	@ D.38610,
	moveq	lr, r5	@ pos, prephitmp.5687
	beq	.L2024	@,
	tst	r5, #1	@ D.38610,
	movw	r0, #:lower16:11168420	@ ivtmp.5700,
	mov	lr, #0	@ pos,
	movt	r0, #:upper16:11168420	@ ivtmp.5700,
	movw	r7, #:lower16:11196732	@ tmp165,
	add	r3, r4, r0	@ ivtmp.5700, pMvcCtx, ivtmp.5700
	movt	r7, #:upper16:11196732	@ tmp165,
	mvn	r1, #-2147483648	@ poc.5704,
	mov	ip, lr	@ i, pos
	bne	.L2028	@,
	ldr	r2, [r3, #0]	@ D.38614, <variable>.DPB.fs
	cmp	r2, #0	@ D.38614,
	beq	.L2032	@,
	ldr	r1, [r2, #668]	@ poc, <variable>.dpb_cnt
	cmn	r1, #-2147483647	@ poc,
	bge	.L2032	@,
	ldr	r6, [r2, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2040	@,
.L2032:
	mvn	r1, #-2147483648	@ poc,
.L2040:
	add	r3, r3, #4	@ ivtmp.5700, ivtmp.5700,
	mov	ip, #1	@ i,
.L2028:
	ldr	r0, [r3, #0]	@ D.38614, <variable>.DPB.fs
	cmp	r0, #0	@ D.38614,
	beq	.L2025	@,
	ldr	r2, [r0, #668]	@ poc, <variable>.dpb_cnt
	cmp	r2, r1	@ poc, poc.5704
	bge	.L2025	@,
	ldr	r6, [r0, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	moveq	lr, ip	@ pos, i
	beq	.L2026	@,
.L2025:
	mov	r2, r1	@ poc, poc.5704
.L2026:
	add	r0, ip, #1	@ tmp169, i,
	add	r6, r3, #4	@ tmp170, ivtmp.5700,
	cmp	r0, r5	@ tmp169, D.38610
	beq	.L2027	@,
	ldr	r3, [r3, #4]	@ D.38614, <variable>.DPB.fs
	cmp	r3, #0	@ D.38614,
	beq	.L2034	@,
	ldr	r1, [r3, #668]	@ poc, <variable>.dpb_cnt
	cmp	r1, r2	@ poc, poc
	bge	.L2034	@,
	ldr	ip, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2042	@,
.L2034:
	mov	r1, r2	@ poc, poc
.L2041:
	add	ip, r0, #1	@ i, tmp169,
	add	r3, r6, #4	@ ivtmp.5700, tmp170,
	b	.L2028	@
.L2027:
	mov	r5, lr	@ prephitmp.5687, pos
.L2024:
	movw	r1, #:lower16:2792104	@ tmp150,
	movt	r1, #:upper16:2792104	@ tmp150,
	add	r3, lr, r1	@ tmp150, pos, tmp150
	mov	r0, r4	@, pMvcCtx
	add	ip, r4, r3, asl #2	@, tmp154, pMvcCtx, tmp150,
	ldr	r1, [ip, #4]	@, <variable>.DPB.fs
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, prephitmp.5687
	bl	MVC_RemoveFrameStoreOutDPB	@
.L2022:
	movw	r3, #:lower16:11196656	@ tmp160,
	movt	r3, #:upper16:11196656	@ tmp160,
	mov	ip, #0	@ tmp158,
	movw	r0, #:lower16:11196172	@ tmp157,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	movt	r0, #:upper16:11196172	@ tmp157,
	cmp	r2, ip	@ <variable>.CurrPic.nal_ref_idc,
	strb	ip, [r4, r0]	@ tmp158, <variable>.CurrPic.is_long_term
	movwne	r0, #:lower16:11196173	@ tmp162,
	movtne	r0, #:upper16:11196173	@ tmp162,
	movne	r2, #1	@ tmp163,
	strneb	r2, [r4, r0]	@ tmp163, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}	@
.L2042:
	mov	lr, r0	@ pos, tmp169
	b	.L2041	@
	.fnend
	.size	MVC_SimpleSlideDPB, .-MVC_SimpleSlideDPB
	.align	2
	.global	MVC_SlidingWinMark
	.type	MVC_SlidingWinMark, %function
MVC_SlidingWinMark:
	.fnstart
.LFB1557:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11152036	@ tmp146,
	movt	r3, #:upper16:11152036	@ tmp146,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r2, #:lower16:11168624	@ tmp147,
	movt	r2, #:upper16:11168624	@ tmp147,
	ldr	r0, [r0, r3]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	ip, #:lower16:11168620	@ tmp144,
	movt	ip, #:upper16:11168620	@ tmp144,
	ldr	r1, [r4, r2]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	ldr	r0, [r0, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldr	r2, [r4, ip]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	rsb	r3, r1, r0	@ tmp148, <variable>.DPB.ltref_frames_in_buffer, <variable>.num_ref_frames
	cmp	r2, r3	@ <variable>.DPB.ref_frames_in_buffer, tmp148
	beq	.L2062	@,
.L2050:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2062:
	movw	r5, #:lower16:11168612	@ tmp152,
	movt	r5, #:upper16:11168612	@ tmp152,
	ldr	r9, [r4, r5]	@ D.38313, <variable>.DPB.size
	cmp	r9, #0	@ D.38313,
	streq	r9, [fp, #-48]	@ D.38313, %sfp
	beq	.L2048	@,
	tst	r9, #1	@ D.38313,
	mov	r6, #0	@,
	movw	r7, #:lower16:11168420	@ ivtmp.5731,
	movt	r7, #:upper16:11168420	@ ivtmp.5731,
	add	r5, r4, r7	@ ivtmp.5731, pMvcCtx, ivtmp.5731
	movw	r3, #:lower16:11196732	@ tmp168,
	str	r6, [fp, #-48]	@, %sfp
	movt	r3, #:upper16:11196732	@ tmp168,
	mvn	r7, #-2147483648	@ poc.5734,
	mov	sl, r6	@ i,
	beq	.L2057	@,
.L2049:
	ldr	r8, [r5, #0]	@ D.38297, <variable>.DPB.fs
	cmp	r8, #0	@ D.38297,
	beq	.L2046	@,
	ldr	r6, [r8, #668]	@ poc, <variable>.dpb_cnt
	cmp	r6, r7	@ poc, poc.5734
	bge	.L2046	@,
	ldrb	r1, [r8, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L2063	@,
.L2046:
	mov	r6, r7	@ poc, poc.5734
.L2047:
	add	sl, sl, #1	@ tmp172, i,
	add	r8, r5, #4	@ tmp173, ivtmp.5731,
	cmp	sl, r9	@ tmp172, D.38313
	beq	.L2048	@,
	ldr	r5, [r5, #4]	@ D.38297, <variable>.DPB.fs
	cmp	r5, #0	@ D.38297,
	beq	.L2054	@,
	ldr	r7, [r5, #668]	@ poc, <variable>.dpb_cnt
	cmp	r7, r6	@ poc, poc
	bge	.L2054	@,
	ldrb	r2, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	bne	.L2064	@,
.L2054:
	mov	r7, r6	@ poc, poc
.L2061:
	add	sl, sl, #1	@ i, tmp172,
	add	r5, r8, #4	@ ivtmp.5731, tmp173,
	b	.L2049	@
.L2063:
	mov	r0, r8	@, D.38297
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2046	@,
	ldr	lr, [r8, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	streq	sl, [fp, #-48]	@ i, %sfp
	bne	.L2046	@,
	b	.L2047	@
.L2064:
	mov	r0, r5	@, D.38297
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2054	@,
	ldr	r1, [r5, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2054	@,
	str	sl, [fp, #-48]	@ tmp172, %sfp
	b	.L2061	@
.L2057:
	ldr	r6, [r5, #0]	@ D.38297, <variable>.DPB.fs
	cmp	r6, #0	@ D.38297,
	beq	.L2052	@,
	ldr	r7, [r6, #668]	@ poc, <variable>.dpb_cnt
	cmn	r7, #-2147483647	@ poc,
	blt	.L2065	@,
.L2052:
	mvn	r7, #-2147483648	@ poc,
.L2060:
	add	r5, r5, #4	@ ivtmp.5731, ivtmp.5731,
	mov	sl, #1	@ i,
	b	.L2049	@
.L2048:
	ldr	r2, [fp, #-48]	@, %sfp
	movw	r3, #:lower16:2792104	@ tmp158,
	movt	r3, #:upper16:2792104	@ tmp158,
	add	r0, r2, r3	@ tmp158,, tmp158
	add	ip, r4, r0, asl #2	@, tmp162, pMvcCtx, tmp158,
	ldr	r5, [ip, #4]	@ D.38315, <variable>.DPB.fs
	cmp	r5, #0	@ D.38315,
	beq	.L2050	@,
	ldrb	r1, [r5, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2050	@,
	mov	r0, r5	@, D.38315
	bl	MVC_NonLongTermRefFlg	@
	cmp	r0, #0	@,
	beq	.L2050	@,
	movw	r0, #:lower16:11196732	@ tmp165,
	movt	r0, #:upper16:11196732	@ tmp165,
	ldr	lr, [r5, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2050	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, D.38315
	bl	MVC_UnMarkFrameStoreRef	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	b	.L2050	@
.L2065:
	ldrb	sl, [r6, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	sl, #0	@ <variable>.is_reference,
	beq	.L2052	@,
	mov	r0, r6	@, D.38297
	str	r3, [fp, #-52]	@,
	bl	MVC_NonLongTermRefFlg	@
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #0	@,
	beq	.L2052	@,
	ldr	r8, [r6, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r4, r3]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2052	@,
	b	.L2060	@
	.fnend
	.size	MVC_SlidingWinMark, .-MVC_SlidingWinMark
	.align	2
	.global	MVC_UnMarkAllSTRef
	.type	MVC_UnMarkAllSTRef, %function
MVC_UnMarkAllSTRef:
	.fnstart
.LFB1540:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11168620	@ tmp137,
	movt	r8, #:upper16:11168620	@ tmp137,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r3, #0	@ <variable>.DPB.ref_frames_in_buffer,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r4, #:lower16:11168484	@ ivtmp.5763,
	movt	r4, #:upper16:11168484	@ ivtmp.5763,
	movw	r7, #:lower16:11196732	@ tmp147,
	add	r4, r0, r4	@ ivtmp.5763, pMvcCtx, ivtmp.5763
	movt	r7, #:upper16:11196732	@ tmp147,
	mov	r5, #0	@ i,
	b	.L2069	@
.L2068:
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bls	.L2072	@,
.L2069:
	ldr	r1, [r4, #0]	@ D.37320, <variable>.DPB.fs_ref
	add	r5, r5, #1	@ i, i,
	ldr	r0, [r6, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	add	r4, r4, #4	@ ivtmp.5763, ivtmp.5763,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r2, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2068	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r8]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ref_frames_in_buffer, i
	bhi	.L2069	@,
.L2072:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkAllSTRef, .-MVC_UnMarkAllSTRef
	.align	2
	.global	MVC_UpdateMaxLTFrmIdx
	.type	MVC_UpdateMaxLTFrmIdx, %function
MVC_UpdateMaxLTFrmIdx:
	.fnstart
.LFB1539:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r7, #:lower16:11168624	@ tmp139,
	movt	r7, #:upper16:11168624	@ tmp139,
	movw	r8, #:lower16:11168628	@ tmp138,
	movt	r8, #:upper16:11168628	@ tmp138,
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	mov	r2, r1	@ max_long_term_frame_idx_plus1, max_long_term_frame_idx_plus1
	str	r1, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
	cmp	r3, #0	@ <variable>.DPB.ltref_frames_in_buffer,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11168548	@ ivtmp.5797,
	movt	r4, #:upper16:11168548	@ ivtmp.5797,
	movw	sl, #:lower16:11196732	@ tmp151,
	add	r4, r0, r4	@ ivtmp.5797, pMvcCtx, ivtmp.5797
	movt	sl, #:upper16:11196732	@ tmp151,
	mov	r5, #0	@ i,
	b	.L2076	@
.L2075:
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	ldmlsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2078:
	ldr	r2, [r6, r8]	@ max_long_term_frame_idx_plus1, <variable>.DPB.max_long_term_pic_idx
.L2076:
	ldr	r1, [r4, #0]	@ D.37302, <variable>.DPB.fs_ltref
	add	r5, r5, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.5797, ivtmp.5797,
	ldr	r0, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r0, r2	@ <variable>.long_term_frame_idx, max_long_term_frame_idx_plus1
	bcc	.L2075	@,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r6, sl]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r2, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2075	@,
	mov	r0, r6	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r6, r7]	@ <variable>.DPB.ltref_frames_in_buffer, <variable>.DPB.ltref_frames_in_buffer
	cmp	r1, r5	@ <variable>.DPB.ltref_frames_in_buffer, i
	bhi	.L2078	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	.fnend
	.size	MVC_UpdateMaxLTFrmIdx, .-MVC_UpdateMaxLTFrmIdx
	.align	2
	.global	MVC_UnMarkLTFldByFrmIdx
	.type	MVC_UnMarkLTFldByFrmIdx, %function
MVC_UnMarkLTFldByFrmIdx:
	.fnstart
.LFB1534:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11168624	@ tmp141,
	movt	ip, #:upper16:11168624	@ tmp141,
	ldr	ip, [r0, ip]	@ D.36983, <variable>.DPB.ltref_frames_in_buffer
	cmp	ip, #0	@ D.36983,
	ldmeqfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	movw	r5, #:lower16:11168548	@ ivtmp.5830,
	movt	r5, #:upper16:11168548	@ ivtmp.5830,
	add	r5, r0, r5	@ ivtmp.5830, pMvcCtx, ivtmp.5830
	sub	r7, ip, #1	@ tmp150, D.36983,
	movw	r8, #:lower16:11196732	@ tmp149,
	and	r7, r7, #1	@ tmp152, tmp150,
	ldr	r4, [r5, #0]	@ D.36963, <variable>.DPB.fs_ltref
	movt	r8, #:upper16:11196732	@ tmp149,
	ldr	r6, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r6, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2109	@,
.L2088:
	mov	r6, #1	@ i,
	cmp	r6, ip	@ i, D.36983
	add	r5, r5, #4	@ ivtmp.5830, ivtmp.5830,
	ldmcsfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
	cmp	r7, #0	@ tmp152,
	beq	.L2085	@,
	ldr	r4, [r5, #0]	@ D.36963, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2110	@,
.L2091:
	add	r6, r6, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.5830, ivtmp.5830,
	cmp	r6, ip	@ i, D.36983
	bcc	.L2085	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2081:
	ldr	r4, [r5, #4]	@ D.36963, <variable>.DPB.fs_ltref
	add	r6, r6, #1	@ tmp153, i,
	add	r5, r5, #4	@ tmp154, ivtmp.5830,
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2111	@,
.L2095:
	add	r6, r6, #1	@ i, tmp153,
	add	r5, r5, #4	@ ivtmp.5830, tmp154,
	cmp	r6, ip	@ i, D.36983
	bcs	.L2112	@,
.L2085:
	ldr	r4, [r5, #0]	@ D.36963, <variable>.DPB.fs_ltref
	ldr	r7, [r4, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r7, r3	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2081	@,
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2081	@,
	cmp	r2, #1	@ structure,
	beq	.L2113	@,
	cmp	r2, #2	@ structure,
	bne	.L2081	@,
	ldrb	r7, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2084	@,
.L2108:
	cmp	r4, r1	@ D.36963, pFS
	beq	.L2081	@,
.L2084:
	mov	r1, r4	@, D.36963
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2111:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2095	@,
	cmp	r2, #1	@ structure,
	beq	.L2103	@,
	cmp	r2, #2	@ structure,
	bne	.L2095	@,
	ldrb	r7, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2084	@,
.L2106:
	cmp	r4, r1	@ D.36963, pFS
	bne	.L2084	@,
	add	r6, r6, #1	@ i, tmp153,
	add	r5, r5, #4	@ ivtmp.5830, tmp154,
	cmp	r6, ip	@ i, D.36983
	bcc	.L2085	@,
.L2112:
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2103:
	ldrb	r7, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2106	@,
	b	.L2084	@
.L2113:
	ldrb	r7, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2108	@,
	b	.L2084	@
.L2109:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2088	@,
	cmp	r2, #1	@ structure,
	beq	.L2101	@,
	cmp	r2, #2	@ structure,
	bne	.L2088	@,
	ldrb	r6, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r6, #0	@ <variable>.top_field.is_long_term,
	beq	.L2084	@,
.L2104:
	cmp	r4, r1	@ D.36963, pFS
	beq	.L2088	@,
	b	.L2084	@
.L2110:
	ldr	sl, [r4, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r7, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r7	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2091	@,
	cmp	r2, r6	@ structure,
	beq	.L2102	@,
	cmp	r2, #2	@ structure,
	bne	.L2091	@,
	ldrb	r7, [r4, #505]	@ zero_extendqisi2	@ <variable>.top_field.is_long_term, <variable>.top_field.is_long_term
	cmp	r7, #0	@ <variable>.top_field.is_long_term,
	beq	.L2084	@,
.L2105:
	cmp	r4, r1	@ D.36963, pFS
	beq	.L2091	@,
	b	.L2084	@
.L2101:
	ldrb	r6, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r6, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2104	@,
	b	.L2084	@
.L2102:
	ldrb	r7, [r4, #545]	@ zero_extendqisi2	@ <variable>.bottom_field.is_long_term, <variable>.bottom_field.is_long_term
	cmp	r7, #0	@ <variable>.bottom_field.is_long_term,
	bne	.L2105	@,
	b	.L2084	@
	.fnend
	.size	MVC_UnMarkLTFldByFrmIdx, .-MVC_UnMarkLTFldByFrmIdx
	.align	2
	.global	MVC_UnMarkLTFrmByFrmIdx
	.type	MVC_UnMarkLTFrmByFrmIdx, %function
MVC_UnMarkLTFrmByFrmIdx:
	.fnstart
.LFB1533:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11168624	@ tmp139,
	movt	r3, #:upper16:11168624	@ tmp139,
	ldr	r6, [r0, r3]	@ D.36951, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ D.36951,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	movw	r2, #:lower16:11168548	@ ivtmp.5859,
	movt	r2, #:upper16:11168548	@ ivtmp.5859,
	add	r2, r0, r2	@ ivtmp.5859, pMvcCtx, ivtmp.5859
	sub	r7, r6, #1	@ tmp146, D.36951,
	and	r4, r7, #1	@ tmp148, tmp146,
	movw	r7, #:lower16:11196732	@ tmp145,
	ldr	r3, [r2, #0]	@ D.36943, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11196732	@ tmp145,
	ldr	ip, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	ip, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2131	@,
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.36951, i
	add	r2, r2, #4	@ ivtmp.5859, ivtmp.5859,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2135:
	cmp	r4, #0	@ tmp148,
	beq	.L2117	@,
	ldr	r3, [r2, #0]	@ D.36943, <variable>.DPB.fs_ltref
	ldr	r4, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2132	@,
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.5859, ivtmp.5859,
	cmp	r6, ip	@ D.36951, i
	bhi	.L2117	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2116:
	ldr	r3, [r2, #4]	@ D.36943, <variable>.DPB.fs_ltref
	ldr	r2, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r2, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	beq	.L2133	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.5859, tmp150,
	cmp	r6, ip	@ D.36951, i
	bls	.L2134	@,
.L2117:
	ldr	r3, [r2, #0]	@ D.36943, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp149, i,
	add	r5, r2, #4	@ tmp150, ivtmp.5859,
	ldr	r4, [r3, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	cmp	r4, r1	@ <variable>.long_term_frame_idx, long_term_frame_idx
	bne	.L2116	@,
	ldr	r8, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2116	@,
.L2130:
	mov	r1, r3	@, D.36943
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2133:
	ldr	r4, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r4, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2130	@,
	add	ip, ip, #1	@ i, tmp149,
	add	r2, r5, #4	@ ivtmp.5859, tmp150,
	cmp	r6, ip	@ D.36951, i
	bhi	.L2117	@,
.L2134:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2131:
	ldr	r5, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2130	@,
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.36951, i
	add	r2, r2, #4	@ ivtmp.5859, ivtmp.5859,
	bhi	.L2135	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L2132:
	ldr	r5, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2130	@,
	add	ip, ip, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.5859, ivtmp.5859,
	cmp	r6, ip	@ D.36951, i
	bhi	.L2117	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_UnMarkLTFrmByFrmIdx, .-MVC_UnMarkLTFrmByFrmIdx
	.align	2
	.global	MVC_MarkCurrPicLT
	.type	MVC_MarkCurrPicLT, %function
MVC_MarkCurrPicLT:
	.fnstart
.LFB1541:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r2	@ long_term_frame_idx, long_term_frame_idx
	ldrb	r2, [r1, #3]	@ zero_extendqisi2	@ D.37331, <variable>.structure
	mov	r4, r1	@ pCurrPic, pCurrPic
	cmp	r2, #0	@ D.37331,
	beq	.L2140	@,
	mov	r3, r5	@, long_term_frame_idx
	ldr	r1, [r1, #472]	@, <variable>.frame_store
	bl	MVC_UnMarkLTFldByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #484]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
.L2140:
	mov	r1, r5	@, long_term_frame_idx
	bl	MVC_UnMarkLTFrmByFrmIdx	@
	mov	r0, #1	@ tmp138,
	mov	r3, #0	@ tmp140,
	str	r5, [r4, #484]	@ long_term_frame_idx, <variable>.long_term_frame_idx
	strb	r0, [r4, #4]	@ tmp138, <variable>.is_long_term
	strb	r3, [r4, #5]	@ tmp140, <variable>.is_short_term
	ldmfd	sp, {r4, r5, fp, sp, pc}	@
	.fnend
	.size	MVC_MarkCurrPicLT, .-MVC_MarkCurrPicLT
	.align	2
	.global	MVC_MarkSTToLTRef
	.type	MVC_MarkSTToLTRef, %function
MVC_MarkSTToLTRef:
	.fnstart
.LFB1538:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r6, r1	@ pCurrPic, pCurrPic
	ldrb	r1, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	mov	r7, r3	@ long_term_frame_idx, long_term_frame_idx
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	cmp	r1, #0	@ <variable>.structure,
	bne	.L2142	@,
	ldr	r3, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	mov	r1, r7	@, long_term_frame_idx
	mvn	r4, r2	@ tmp144, difference_of_pic_nums_minus1
	add	r4, r4, r3	@ picNumX, tmp144, <variable>.frame_num
	bl	MVC_UnMarkLTFrmByFrmIdx	@
.L2143:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, long_term_frame_idx
	mov	r2, r4	@, picNumX
	mov	r3, r6	@, pCurrPic
	bl	MVC_MarkPicLTRef	@
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2142:
	movw	ip, #:lower16:11168620	@ tmp150,
	movt	ip, #:upper16:11168620	@ tmp150,
	ldr	r0, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	ldr	lr, [r5, ip]	@ D.37292, <variable>.DPB.ref_frames_in_buffer
	cmp	lr, #0	@ D.37292,
	rsb	r4, r2, r0, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	beq	.L2143	@,
	movw	r8, #:lower16:11168484	@ ivtmp.5916,
	movt	r8, #:upper16:11168484	@ ivtmp.5916,
	add	r3, r5, r8	@ ivtmp.5916, pMvcCtx, ivtmp.5916
	sub	r2, lr, #1	@ tmp169, D.37292,
	and	r0, r2, #1	@ tmp171, tmp169,
	movw	r8, #:lower16:11196732	@ tmp168,
	ldr	r1, [r3, #0]	@ D.37262, <variable>.DPB.fs_ref
	movt	r8, #:upper16:11196732	@ tmp168,
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ D.37264, <variable>.is_reference
	tst	r2, #1	@ D.37264,
	beq	.L2149	@,
	ldr	ip, [r1, #504]	@ tmp182,
	bic	ip, ip, #-16777216	@ tmp183, tmp182,
	bic	ip, ip, #255	@ tmp183, tmp183,
	cmp	ip, #65536	@ tmp183,
	beq	.L2175	@,
.L2149:
	tst	r2, #2	@ D.37264,
	beq	.L2150	@,
	ldr	r2, [r1, #544]	@ tmp189,
	bic	ip, r2, #-16777216	@ tmp190, tmp189,
	bic	r2, ip, #255	@ tmp190, tmp190,
	cmp	r2, #65536	@ tmp190,
	beq	.L2176	@,
.L2150:
	mov	r2, #1	@ i,
	cmp	r2, lr	@ i, D.37292
	add	r3, r3, #4	@ ivtmp.5916, ivtmp.5916,
	bcs	.L2143	@,
	cmp	r0, #0	@ tmp171,
	beq	.L2146	@,
	ldr	r1, [r3, #0]	@ D.37262, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.37264, <variable>.is_reference
	tst	r0, #1	@ D.37264,
	bne	.L2161	@,
.L2156:
	tst	r0, #2	@ D.37264,
	beq	.L2157	@,
	ldr	r0, [r1, #544]	@ tmp217,
	bic	ip, r0, #-16777216	@ tmp218, tmp217,
	bic	r0, ip, #255	@ tmp218, tmp218,
	cmp	r0, #65536	@ tmp218,
	beq	.L2177	@,
.L2157:
	add	r2, r2, #1	@ i, tmp172,
	add	r3, r3, #4	@ ivtmp.5916, tmp173,
	cmp	r2, lr	@ i, D.37292
	bcs	.L2143	@,
.L2146:
	ldr	r1, [r3, #0]	@ D.37262, <variable>.DPB.fs_ref
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.37264, <variable>.is_reference
	tst	r0, #1	@ D.37264,
	beq	.L2144	@,
	ldr	ip, [r1, #504]	@ tmp155,
	bic	ip, ip, #-16777216	@ tmp153, tmp155,
	bic	ip, ip, #255	@ tmp153, tmp153,
	cmp	ip, #65536	@ tmp153,
	beq	.L2178	@,
.L2144:
	tst	r0, #2	@ D.37264,
	beq	.L2145	@,
	ldr	r0, [r1, #544]	@ tmp163,
	bic	ip, r0, #-16777216	@ tmp161, tmp163,
	bic	r0, ip, #255	@ tmp161, tmp161,
	cmp	r0, #65536	@ tmp161,
	beq	.L2179	@,
.L2145:
	ldr	r1, [r3, #4]	@ D.37262, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp172, i,
	add	r3, r3, #4	@ tmp173, ivtmp.5916,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ D.37264, <variable>.is_reference
	tst	r0, #1	@ D.37264,
	beq	.L2156	@,
.L2161:
	ldr	ip, [r1, #504]	@ tmp210,
	bic	ip, ip, #-16777216	@ tmp211, tmp210,
	bic	ip, ip, #255	@ tmp211, tmp211,
	cmp	ip, #65536	@ tmp211,
	bne	.L2156	@,
	ldr	ip, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2156	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2156	@,
	b	.L2162	@
.L2177:
	ldr	ip, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2157	@,
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2157	@,
	b	.L2163	@
.L2178:
	ldr	ip, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2144	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2144	@,
	b	.L2162	@
.L2179:
	ldr	ip, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2145	@,
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2145	@,
	b	.L2163	@
.L2176:
	ldr	ip, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	ip, r4	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2150	@,
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	ip, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2150	@,
.L2163:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #2	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2143	@
.L2175:
	ldr	ip, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	ip, r4	@ <variable>.top_field.pic_num, picNumX
	bne	.L2149	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r5, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2149	@,
.L2162:
	mov	r0, r5	@, pMvcCtx
	mov	r2, #1	@,
	mov	r3, r7	@, long_term_frame_idx
	bl	MVC_UnMarkLTFldByFrmIdx	@
	b	.L2143	@
	.fnend
	.size	MVC_MarkSTToLTRef, .-MVC_MarkSTToLTRef
	.align	2
	.global	MVC_UnMarkLTRef
	.type	MVC_UnMarkLTRef, %function
MVC_UnMarkLTRef:
	.fnstart
.LFB1536:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #0	@ <variable>.structure,
	beq	.L2181	@,
	movw	r1, #:lower16:11168624	@ tmp153,
	movt	r1, #:upper16:11168624	@ tmp153,
	ldr	r7, [r0, r1]	@ D.37098, <variable>.DPB.ltref_frames_in_buffer
	cmp	r7, #0	@ D.37098,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r8, #:lower16:11168548	@ ivtmp.5962,
	movt	r8, #:upper16:11168548	@ ivtmp.5962,
	add	r5, r0, r8	@ ivtmp.5962, pMvcCtx, ivtmp.5962
	sub	r6, r7, #1	@ tmp306, D.37098,
	movw	r8, #:lower16:11196732	@ tmp300,
	and	r6, r6, #1	@ tmp308, tmp306,
	ldr	r1, [r5, #0]	@ temp.5966, <variable>.DPB.fs_ltref
	movt	r8, #:upper16:11196732	@ tmp300,
	mov	ip, #0	@ i,
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5967, <variable>.is_reference
	ands	r4, r3, #1	@ tmp298, temp.5967,
	beq	.L2201	@,
	ldr	sl, [r1, #504]	@ tmp338,
	bic	sl, sl, #-16777216	@ tmp339, tmp338,
	bic	sl, sl, #255	@ tmp339, tmp339,
	cmp	sl, #256	@ tmp339,
	beq	.L2224	@,
.L2201:
	tst	r3, #2	@ temp.5967,
	beq	.L2202	@,
	ldr	r3, [r1, #544]	@ tmp345,
	bic	r3, r3, #-16777216	@ tmp346, tmp345,
	bic	r3, r3, #255	@ tmp346, tmp346,
	cmp	r3, #256	@ tmp346,
	beq	.L2225	@,
.L2202:
	mov	ip, #1	@ i,
	cmp	r7, ip	@ D.37098, i
	add	r5, r5, #4	@ ivtmp.5962, ivtmp.5962,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r6, #0	@ tmp308,
	beq	.L2190	@,
	ldr	r1, [r5, #0]	@ temp.5966, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5967, <variable>.is_reference
	ands	r4, r3, ip	@ tmp298, temp.5967,
	beq	.L2204	@,
	ldr	r6, [r1, #504]	@ tmp351,
	bic	r6, r6, #-16777216	@ tmp352, tmp351,
	bic	r6, r6, #255	@ tmp352, tmp352,
	cmp	r6, #256	@ tmp352,
	beq	.L2226	@,
.L2204:
	tst	r3, #2	@ temp.5967,
	beq	.L2205	@,
	ldr	r3, [r1, #544]	@ tmp358,
	bic	r3, r3, #-16777216	@ tmp359, tmp358,
	bic	r3, r3, #255	@ tmp359, tmp359,
	cmp	r3, #256	@ tmp359,
	beq	.L2227	@,
.L2205:
	add	ip, ip, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.5962, ivtmp.5962,
	cmp	r7, ip	@ D.37098, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	ldr	r1, [r5, #0]	@ temp.5966, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5967, <variable>.is_reference
	ands	r4, r3, #1	@ tmp298, temp.5967,
	bne	.L2228	@,
.L2186:
	tst	r3, #2	@ temp.5967,
	beq	.L2188	@,
	ldr	r6, [r1, #544]	@ tmp234,
	bic	r3, r6, #-16777216	@ tmp232, tmp234,
	bic	r6, r3, #255	@ tmp232, tmp232,
	cmp	r6, #256	@ tmp232,
	beq	.L2229	@,
.L2188:
	ldr	r1, [r5, #4]	@ temp.5966, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ i, i,
	add	r5, r5, #4	@ tmp310, ivtmp.5962,
	mov	r6, ip	@ tmp309, i
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5967, <variable>.is_reference
	ands	r4, r3, #1	@ tmp298, temp.5967,
	beq	.L2208	@,
	ldr	sl, [r1, #504]	@ tmp364,
	bic	sl, sl, #-16777216	@ tmp365, tmp364,
	bic	sl, sl, #255	@ tmp365, tmp365,
	cmp	sl, #256	@ tmp365,
	beq	.L2230	@,
.L2208:
	tst	r3, #2	@ temp.5967,
	beq	.L2209	@,
	ldr	r3, [r1, #544]	@ tmp371,
	bic	r3, r3, #-16777216	@ tmp372, tmp371,
	bic	r3, r3, #255	@ tmp372, tmp372,
	cmp	r3, #256	@ tmp372,
	beq	.L2231	@,
.L2209:
	add	ip, r6, #1	@ i, tmp309,
	add	r5, r5, #4	@ ivtmp.5962, tmp310,
	cmp	r7, ip	@ D.37098, i
	bls	.L2232	@,
.L2190:
	ldr	r1, [r5, #0]	@ temp.5966, <variable>.DPB.fs_ltref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.5967, <variable>.is_reference
	ands	r4, r3, #1	@ tmp298, temp.5967,
	beq	.L2186	@,
.L2228:
	ldr	r6, [r1, #504]	@ tmp168,
	bic	r6, r6, #-16777216	@ tmp166, tmp168,
	bic	r6, r6, #255	@ tmp166, tmp166,
	cmp	r6, #256	@ tmp166,
	bne	.L2186	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2186	@,
	ldr	r6, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2186	@,
	b	.L2218	@
.L2181:
	movw	ip, #:lower16:11168624	@ tmp154,
	movt	ip, #:upper16:11168624	@ tmp154,
	ldr	r6, [r0, ip]	@ temp.5970, <variable>.DPB.ltref_frames_in_buffer
	cmp	r6, #0	@ temp.5970,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11168548	@ ivtmp.5957,
	movt	r4, #:upper16:11168548	@ ivtmp.5957,
	add	r3, r0, r4	@ ivtmp.5957, pMvcCtx, ivtmp.5957
	sub	r7, r6, #1	@ tmp301, temp.5970,
	and	r4, r7, #1	@ tmp303, tmp301,
	movw	r7, #:lower16:11196732	@ tmp299,
	ldr	r1, [r3, #0]	@ D.37083, <variable>.DPB.fs_ltref
	movt	r7, #:upper16:11196732	@ tmp299,
	ldr	ip, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	ip, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2233	@,
.L2194:
	mov	ip, #1	@ i.5965,
	cmp	ip, r6	@ i.5965, temp.5970
	add	r3, r3, #4	@ ivtmp.5957, ivtmp.5957,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp303,
	beq	.L2185	@,
	ldr	r1, [r3, #0]	@ D.37083, <variable>.DPB.fs_ltref
	ldr	r4, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r4, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2234	@,
.L2196:
	add	ip, ip, #1	@ i.5965, i.5965,
	add	r3, r3, #4	@ ivtmp.5957, ivtmp.5957,
	cmp	ip, r6	@ i.5965, temp.5970
	bcc	.L2185	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2184:
	ldr	r1, [r3, #4]	@ D.37083, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	beq	.L2235	@,
.L2199:
	add	ip, ip, #1	@ i.5965, tmp304,
	add	r3, r4, #4	@ ivtmp.5957, tmp305,
	cmp	ip, r6	@ i.5965, temp.5970
	bcs	.L2236	@,
.L2185:
	ldr	r1, [r3, #0]	@ D.37083, <variable>.DPB.fs_ltref
	add	ip, ip, #1	@ tmp304, i.5965,
	add	r4, r3, #4	@ tmp305, ivtmp.5957,
	ldr	r5, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r5, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2184	@,
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2184	@,
	ldr	r5, [r1, #464]	@ tmp160,
	bic	r5, r5, #-16777216	@ tmp158, tmp160,
	bic	r5, r5, #255	@ tmp158, tmp158,
	cmp	r5, #256	@ tmp158,
	bne	.L2184	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2217	@,
	ldr	r1, [r3, #4]	@ D.37083, <variable>.DPB.fs_ltref
	ldr	r3, [r1, #472]	@ <variable>.frame.long_term_pic_num, <variable>.frame.long_term_pic_num
	cmp	r3, r2	@ <variable>.frame.long_term_pic_num, long_term_pic_num
	bne	.L2199	@,
.L2235:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #3	@ <variable>.is_reference,
	bne	.L2199	@,
	ldr	r3, [r1, #464]	@ tmp333,
	bic	r3, r3, #-16777216	@ tmp334, tmp333,
	bic	r3, r3, #255	@ tmp334, tmp334,
	cmp	r3, #256	@ tmp334,
	bne	.L2199	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2217	@,
	add	ip, ip, #1	@ i.5965, tmp304,
	add	r3, r4, #4	@ ivtmp.5957, tmp305,
	cmp	ip, r6	@ i.5965, temp.5970
	bcc	.L2185	@,
.L2236:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2229:
	ldr	r6, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2188	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2188	@,
	b	.L2219	@
.L2230:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2208	@,
	ldr	sl, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2208	@,
	b	.L2218	@
.L2231:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2209	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	beq	.L2219	@,
	add	ip, r6, #1	@ i, tmp309,
	add	r5, r5, #4	@ ivtmp.5962, tmp310,
	cmp	r7, ip	@ D.37098, i
	bhi	.L2190	@,
.L2232:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2225:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2202	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2202	@,
.L2219:
	movw	r3, #:lower16:2792136	@ tmp241,
	movt	r3, #:upper16:2792136	@ tmp241,
	add	r2, ip, r3	@ tmp241, i, tmp241
	strb	r4, [r1, #2]	@ tmp298, <variable>.is_reference
	mov	r1, #0	@ tmp248,
	add	r3, r0, r2, asl #2	@, tmp246, pMvcCtx, tmp241,
	ldr	r4, [r3, #4]	@ tmp243, <variable>.DPB.fs_ltref
	strb	r1, [r4, #545]	@ tmp248, <variable>.bottom_field.is_long_term
	ldr	r2, [r3, #4]	@ prephitmp.5975, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #464]	@ zero_extendqisi2	@ D.37139, <variable>.frame.structure
	cmp	r4, #3	@ D.37139,
	cmpne	r4, r1	@, D.37139,
	bne	.L2189	@,
	b	.L2222	@
.L2224:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	sl, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2201	@,
	ldr	sl, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	sl, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2201	@,
.L2218:
	movw	r2, #:lower16:2792136	@ tmp175,
	movt	r2, #:upper16:2792136	@ tmp175,
	add	r4, ip, r2	@ tmp175, i, tmp175
	and	r3, r3, #2	@ tmp173, temp.5967,
	strb	r3, [r1, #2]	@ tmp173, <variable>.is_reference
	mov	r1, #0	@ tmp182,
	add	r3, r0, r4, asl #2	@, tmp180, pMvcCtx, tmp175,
	ldr	r2, [r3, #4]	@ tmp177, <variable>.DPB.fs_ltref
	strb	r1, [r2, #505]	@ tmp182, <variable>.top_field.is_long_term
	ldr	r2, [r3, #4]	@ prephitmp.5944, <variable>.DPB.fs_ltref
	ldrb	r4, [r2, #464]	@ zero_extendqisi2	@ D.37115, <variable>.frame.structure
	cmp	r4, #3	@ D.37115,
	cmpne	r4, r1	@, D.37115,
	bne	.L2189	@,
.L2222:
	strb	r1, [r2, #466]	@ tmp248, <variable>.frame.is_short_term
	ldr	r2, [r3, #4]	@ tmp267, <variable>.DPB.fs_ltref
	strb	r1, [r2, #465]	@ tmp248, <variable>.frame.is_long_term
	ldr	r2, [r3, #4]	@ prephitmp.5975, <variable>.DPB.fs_ltref
.L2189:
	ldrb	r3, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:2792136	@ tmp290,
	movt	lr, #:upper16:2792136	@ tmp290,
	add	r1, ip, lr	@ tmp290, i, tmp290
	ldr	r2, [r2, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	lr, #:lower16:2799480	@ tmp281,
	movt	lr, #:upper16:2799480	@ tmp281,
	add	r1, r0, r1, asl #2	@, tmp295, pMvcCtx, tmp290,
	add	ip, r2, lr	@ tmp281, <variable>.pmv_address_idc, tmp281
	movw	r2, #:lower16:11199520	@ tmp289,
	movt	r2, #:upper16:11199520	@ tmp289,
	ldr	lr, [r1, #4]	@ tmp292, <variable>.DPB.fs_ltref
	add	ip, r0, ip, asl #2	@, tmp286, pMvcCtx, tmp281,
	ldr	r0, [r0, r2]	@, <variable>.ChanID
	mov	r2, r3	@, <variable>.is_reference
	str	r3, [ip, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2226:
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r6, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r6	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2204	@,
	ldr	r6, [r1, #512]	@ <variable>.top_field.long_term_pic_num, <variable>.top_field.long_term_pic_num
	cmp	r6, r2	@ <variable>.top_field.long_term_pic_num, long_term_pic_num
	bne	.L2204	@,
	b	.L2218	@
.L2227:
	ldr	r6, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2205	@,
	ldr	r3, [r1, #552]	@ <variable>.bottom_field.long_term_pic_num, <variable>.bottom_field.long_term_pic_num
	cmp	r3, r2	@ <variable>.bottom_field.long_term_pic_num, long_term_pic_num
	bne	.L2205	@,
	b	.L2219	@
.L2233:
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	ip, #3	@ <variable>.is_reference,
	bne	.L2194	@,
	ldr	ip, [r1, #464]	@ tmp320,
	bic	ip, ip, #-16777216	@ tmp321, tmp320,
	bic	ip, ip, #255	@ tmp321, tmp321,
	cmp	ip, #256	@ tmp321,
	bne	.L2194	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	ip, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, ip	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2194	@,
.L2217:
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2234:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2196	@,
	ldr	r4, [r1, #464]	@ tmp327,
	bic	r4, r4, #-16777216	@ tmp328, tmp327,
	bic	r4, r4, #255	@ tmp328, tmp328,
	cmp	r4, #256	@ tmp328,
	bne	.L2196	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2196	@,
	b	.L2217	@
	.fnend
	.size	MVC_UnMarkLTRef, .-MVC_UnMarkLTRef
	.align	2
	.global	MVC_UnMarkSTRef
	.type	MVC_UnMarkSTRef, %function
MVC_UnMarkSTRef:
	.fnstart
.LFB1535:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r3, #0	@ <variable>.structure,
	bne	.L2238	@,
	movw	ip, #:lower16:11168620	@ tmp158,
	movt	ip, #:upper16:11168620	@ tmp158,
	ldr	r1, [r1, #480]	@ <variable>.frame_num, <variable>.frame_num
	mvn	r2, r2	@ tmp156, difference_of_pic_nums_minus1
	ldr	r6, [r0, ip]	@ temp.6051, <variable>.DPB.ref_frames_in_buffer
	add	ip, r2, r1	@ picNumX.6053, tmp156, <variable>.frame_num
	cmp	r6, #0	@ temp.6051,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	r4, #:lower16:11168484	@ ivtmp.6020,
	movt	r4, #:upper16:11168484	@ ivtmp.6020,
	add	r3, r0, r4	@ ivtmp.6020, pMvcCtx, ivtmp.6020
	sub	r7, r6, #1	@ tmp310, temp.6051,
	and	r4, r7, #1	@ tmp312, tmp310,
	movw	r7, #:lower16:11196732	@ tmp308,
	ldr	r1, [r3, #0]	@ D.37003, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11196732	@ tmp308,
	ldr	r2, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r2, ip	@ <variable>.frame.pic_num, picNumX.6053
	beq	.L2282	@,
.L2252:
	mov	r2, #1	@ i.6028,
	cmp	r2, r6	@ i.6028, temp.6051
	add	r3, r3, #4	@ ivtmp.6020, ivtmp.6020,
	ldmcsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r4, #0	@ tmp312,
	beq	.L2243	@,
	ldr	r1, [r3, #0]	@ D.37003, <variable>.DPB.fs_ref
	ldr	r4, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r4, ip	@ <variable>.frame.pic_num, picNumX.6053
	beq	.L2283	@,
.L2254:
	add	r2, r2, #1	@ i.6028, i.6028,
	add	r3, r3, #4	@ ivtmp.6020, ivtmp.6020,
	cmp	r2, r6	@ i.6028, temp.6051
	bcc	.L2243	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2242:
	ldr	r1, [r3, #4]	@ D.37003, <variable>.DPB.fs_ref
	ldr	r3, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r3, ip	@ <variable>.frame.pic_num, picNumX.6053
	beq	.L2284	@,
.L2257:
	add	r2, r2, #1	@ i.6028, tmp313,
	add	r3, r4, #4	@ ivtmp.6020, tmp314,
	cmp	r2, r6	@ i.6028, temp.6051
	bcs	.L2285	@,
.L2243:
	ldr	r1, [r3, #0]	@ D.37003, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ tmp313, i.6028,
	add	r4, r3, #4	@ tmp314, ivtmp.6020,
	ldr	r5, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r5, ip	@ <variable>.frame.pic_num, picNumX.6053
	bne	.L2242	@,
	ldrb	r5, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r5, #3	@ <variable>.is_reference,
	bne	.L2242	@,
	ldr	r5, [r1, #464]	@ tmp169,
	bic	r5, r5, #-16777216	@ tmp167, tmp169,
	bic	r5, r5, #255	@ tmp167, tmp167,
	cmp	r5, #65536	@ tmp167,
	bne	.L2242	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2275	@,
	ldr	r1, [r3, #4]	@ D.37003, <variable>.DPB.fs_ref
	ldr	r3, [r1, #476]	@ <variable>.frame.pic_num, <variable>.frame.pic_num
	cmp	r3, ip	@ <variable>.frame.pic_num, picNumX.6053
	bne	.L2257	@,
.L2284:
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #3	@ <variable>.is_reference,
	bne	.L2257	@,
	ldr	r3, [r1, #464]	@ tmp342,
	bic	r3, r3, #-16777216	@ tmp343, tmp342,
	bic	r3, r3, #255	@ tmp343, tmp343,
	cmp	r3, #65536	@ tmp343,
	bne	.L2257	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2275	@,
	add	r2, r2, #1	@ i.6028, tmp313,
	add	r3, r4, #4	@ ivtmp.6020, tmp314,
	cmp	r2, r6	@ i.6028, temp.6051
	bcc	.L2243	@,
.L2285:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2238:
	movw	r3, #:lower16:11168620	@ tmp163,
	movt	r3, #:upper16:11168620	@ tmp163,
	ldr	sl, [r1, #480]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r6, [r0, r3]	@ D.37018, <variable>.DPB.ref_frames_in_buffer
	cmp	r6, #0	@ D.37018,
	rsb	sl, r2, sl, asl #1	@, picNumX, difference_of_pic_nums_minus1, <variable>.frame_num,
	ldmeqfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	ip, #:lower16:11168484	@ ivtmp.6025,
	movt	ip, #:upper16:11168484	@ ivtmp.6025,
	add	r4, r0, ip	@ ivtmp.6025, pMvcCtx, ivtmp.6025
	sub	r1, r6, #1	@ tmp315, D.37018,
	and	r5, r1, #1	@ tmp317, tmp315,
	movw	r7, #:lower16:11196732	@ tmp309,
	ldr	r1, [r4, #0]	@ temp.6029, <variable>.DPB.fs_ref
	movt	r7, #:upper16:11196732	@ tmp309,
	mov	ip, #0	@ i,
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6030, <variable>.is_reference
	ands	r2, r3, #1	@ tmp307, temp.6030,
	beq	.L2259	@,
	ldr	r8, [r1, #504]	@ tmp347,
	bic	r8, r8, #-16777216	@ tmp348, tmp347,
	bic	r8, r8, #255	@ tmp348, tmp348,
	cmp	r8, #65536	@ tmp348,
	beq	.L2286	@,
.L2259:
	tst	r3, #2	@ temp.6030,
	beq	.L2260	@,
	ldr	r3, [r1, #544]	@ tmp354,
	bic	r3, r3, #-16777216	@ tmp355, tmp354,
	bic	r3, r3, #255	@ tmp355, tmp355,
	cmp	r3, #65536	@ tmp355,
	beq	.L2287	@,
.L2260:
	mov	ip, #1	@ i,
	cmp	r6, ip	@ D.37018, i
	add	r4, r4, #4	@ ivtmp.6025, ivtmp.6025,
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	cmp	r5, #0	@ tmp317,
	beq	.L2248	@,
	ldr	r1, [r4, #0]	@ temp.6029, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6030, <variable>.is_reference
	ands	r2, r3, ip	@ tmp307, temp.6030,
	beq	.L2262	@,
	ldr	r5, [r1, #504]	@ tmp360,
	bic	r5, r5, #-16777216	@ tmp361, tmp360,
	bic	r5, r5, #255	@ tmp361, tmp361,
	cmp	r5, #65536	@ tmp361,
	beq	.L2288	@,
.L2262:
	tst	r3, #2	@ temp.6030,
	beq	.L2263	@,
	ldr	r3, [r1, #544]	@ tmp367,
	bic	r3, r3, #-16777216	@ tmp368, tmp367,
	bic	r3, r3, #255	@ tmp368, tmp368,
	cmp	r3, #65536	@ tmp368,
	beq	.L2289	@,
.L2263:
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.6025, ivtmp.6025,
	cmp	r6, ip	@ D.37018, i
	ldmlsfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	ldr	r1, [r4, #0]	@ temp.6029, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6030, <variable>.is_reference
	ands	r2, r3, #1	@ tmp307, temp.6030,
	bne	.L2290	@,
.L2244:
	tst	r3, #2	@ temp.6030,
	beq	.L2246	@,
	ldr	r5, [r1, #544]	@ tmp243,
	bic	r3, r5, #-16777216	@ tmp241, tmp243,
	bic	r5, r3, #255	@ tmp241, tmp241,
	cmp	r5, #65536	@ tmp241,
	beq	.L2291	@,
.L2246:
	ldr	r1, [r4, #4]	@ temp.6029, <variable>.DPB.fs_ref
	add	ip, ip, #1	@ i, i,
	add	r4, r4, #4	@ tmp319, ivtmp.6025,
	mov	r5, ip	@ tmp318, i
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6030, <variable>.is_reference
	ands	r2, r3, #1	@ tmp307, temp.6030,
	beq	.L2266	@,
	ldr	r8, [r1, #504]	@ tmp373,
	bic	r8, r8, #-16777216	@ tmp374, tmp373,
	bic	r8, r8, #255	@ tmp374, tmp374,
	cmp	r8, #65536	@ tmp374,
	beq	.L2292	@,
.L2266:
	tst	r3, #2	@ temp.6030,
	beq	.L2267	@,
	ldr	r3, [r1, #544]	@ tmp380,
	bic	r3, r3, #-16777216	@ tmp381, tmp380,
	bic	r3, r3, #255	@ tmp381, tmp381,
	cmp	r3, #65536	@ tmp381,
	beq	.L2293	@,
.L2267:
	add	ip, r5, #1	@ i, tmp318,
	add	r4, r4, #4	@ ivtmp.6025, tmp319,
	cmp	r6, ip	@ D.37018, i
	bls	.L2294	@,
.L2248:
	ldr	r1, [r4, #0]	@ temp.6029, <variable>.DPB.fs_ref
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ temp.6030, <variable>.is_reference
	ands	r2, r3, #1	@ tmp307, temp.6030,
	beq	.L2244	@,
.L2290:
	ldr	r5, [r1, #504]	@ tmp177,
	bic	r5, r5, #-16777216	@ tmp175, tmp177,
	bic	r5, r5, #255	@ tmp175, tmp175,
	cmp	r5, #65536	@ tmp175,
	bne	.L2244	@,
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2244	@,
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2244	@,
	b	.L2276	@
.L2291:
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2246	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2246	@,
	b	.L2277	@
.L2292:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2266	@,
	ldr	r8, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r8, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2266	@,
	b	.L2276	@
.L2293:
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2267	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, sl	@ <variable>.bottom_field.pic_num, picNumX
	beq	.L2277	@,
	add	ip, r5, #1	@ i, tmp318,
	add	r4, r4, #4	@ ivtmp.6025, tmp319,
	cmp	r6, ip	@ D.37018, i
	bhi	.L2248	@,
.L2294:
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2287:
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2260	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2260	@,
.L2277:
	movw	r4, #:lower16:2792120	@ tmp250,
	movt	r4, #:upper16:2792120	@ tmp250,
	add	r3, ip, r4	@ tmp250, i, tmp250
	strb	r2, [r1, #2]	@ tmp307, <variable>.is_reference
	mov	r1, #0	@ tmp257,
	add	r3, r0, r3, asl #2	@, tmp255, pMvcCtx, tmp250,
	ldr	r4, [r3, #4]	@ tmp252, <variable>.DPB.fs_ref
	strb	r1, [r4, #546]	@ tmp257, <variable>.bottom_field.is_short_term
	ldr	r2, [r3, #4]	@ prephitmp.6007, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #464]	@ zero_extendqisi2	@ D.37059, <variable>.frame.structure
	cmp	r4, #3	@ D.37059,
	cmpne	r4, r1	@, D.37059,
	bne	.L2247	@,
	b	.L2280	@
.L2286:
	ldr	r9, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r9, r8	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2259	@,
	ldr	r8, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r8, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2259	@,
.L2276:
	movw	r2, #:lower16:2792120	@ tmp184,
	movt	r2, #:upper16:2792120	@ tmp184,
	add	r4, ip, r2	@ tmp184, i, tmp184
	and	r3, r3, #2	@ tmp182, temp.6030,
	strb	r3, [r1, #2]	@ tmp182, <variable>.is_reference
	mov	r1, #0	@ tmp191,
	add	r3, r0, r4, asl #2	@, tmp189, pMvcCtx, tmp184,
	ldr	r2, [r3, #4]	@ tmp186, <variable>.DPB.fs_ref
	strb	r1, [r2, #506]	@ tmp191, <variable>.top_field.is_short_term
	ldr	r2, [r3, #4]	@ prephitmp.6033, <variable>.DPB.fs_ref
	ldrb	r4, [r2, #464]	@ zero_extendqisi2	@ D.37035, <variable>.frame.structure
	cmp	r4, #3	@ D.37035,
	cmpne	r4, r1	@, D.37035,
	bne	.L2247	@,
.L2280:
	strb	r1, [r2, #466]	@ tmp257, <variable>.frame.is_short_term
	ldr	r2, [r3, #4]	@ tmp276, <variable>.DPB.fs_ref
	strb	r1, [r2, #465]	@ tmp257, <variable>.frame.is_long_term
	ldr	r2, [r3, #4]	@ prephitmp.6007, <variable>.DPB.fs_ref
.L2247:
	ldrb	r3, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r3, #0	@ <variable>.is_reference,
	ldmnefd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
	movw	lr, #:lower16:2792120	@ tmp299,
	movt	lr, #:upper16:2792120	@ tmp299,
	add	r1, ip, lr	@ tmp299, i, tmp299
	ldr	r2, [r2, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	lr, #:lower16:2799480	@ tmp290,
	movt	lr, #:upper16:2799480	@ tmp290,
	add	r1, r0, r1, asl #2	@, tmp304, pMvcCtx, tmp299,
	add	ip, r2, lr	@ tmp290, <variable>.pmv_address_idc, tmp290
	movw	r2, #:lower16:11199520	@ tmp298,
	movt	r2, #:upper16:11199520	@ tmp298,
	ldr	lr, [r1, #4]	@ tmp301, <variable>.DPB.fs_ref
	add	ip, r0, ip, asl #2	@, tmp295, pMvcCtx, tmp290,
	ldr	r0, [r0, r2]	@, <variable>.ChanID
	mov	r2, r3	@, <variable>.is_reference
	str	r3, [ip, #4]	@ <variable>.is_reference, <variable>.PmvStoreUsedFlag
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2288:
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r5, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r8, r5	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2262	@,
	ldr	r5, [r1, #516]	@ <variable>.top_field.pic_num, <variable>.top_field.pic_num
	cmp	r5, sl	@ <variable>.top_field.pic_num, picNumX
	bne	.L2262	@,
	b	.L2276	@
.L2289:
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2263	@,
	ldr	r3, [r1, #556]	@ <variable>.bottom_field.pic_num, <variable>.bottom_field.pic_num
	cmp	r3, sl	@ <variable>.bottom_field.pic_num, picNumX
	bne	.L2263	@,
	b	.L2277	@
.L2282:
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #3	@ <variable>.is_reference,
	bne	.L2252	@,
	ldr	r2, [r1, #464]	@ tmp329,
	bic	r2, r2, #-16777216	@ tmp330, tmp329,
	bic	r2, r2, #255	@ tmp330, tmp330,
	cmp	r2, #65536	@ tmp330,
	bne	.L2252	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2252	@,
.L2275:
	bl	MVC_UnMarkFrameStoreRef	@
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2283:
	ldrb	r4, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r4, #3	@ <variable>.is_reference,
	bne	.L2254	@,
	ldr	r4, [r1, #464]	@ tmp336,
	bic	r4, r4, #-16777216	@ tmp337, tmp336,
	bic	r4, r4, #255	@ tmp337, tmp337,
	cmp	r4, #65536	@ tmp337,
	bne	.L2254	@,
	ldr	r5, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r4, [r0, r7]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r5, r4	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2254	@,
	b	.L2275	@
	.fnend
	.size	MVC_UnMarkSTRef, .-MVC_UnMarkSTRef
	.align	2
	.global	MVC_ClearAll
	.type	MVC_ClearAll, %function
MVC_ClearAll:
	.fnstart
.LFB1523:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #76
	sub	sp, sp, #76	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r0, [fp, #-68]	@ pMvcCtx, %sfp
	mov	r4, r1	@ flag, flag
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC58	@,
	movt	r1, #:upper16:.LC58	@,
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-68]	@, %sfp
	bl	MVC_ClearCurrPic	@
	ldr	r0, [fp, #-68]	@, %sfp
	bl	MVC_ClearAllNal	@
	ldr	r0, [fp, #-68]	@, %sfp
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	bne	.L2314	@,
.L2296:
	cmp	r4, #0	@ flag,
	beq	.L2297	@,
	ldr	r0, [fp, #-68]	@, %sfp
	movw	r3, #:lower16:11199520	@ tmp160,
	movt	r3, #:upper16:11199520	@ tmp160,
	add	r1, r0, #8	@,,
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FSP_ClearNotInVoQueue	@
.L2298:
	ldr	ip, [fp, #-68]	@, %sfp
	movw	r3, #:lower16:11169488	@,
	movw	sl, #:lower16:11169500	@,
	movt	r3, #:upper16:11169488	@,
	movt	sl, #:upper16:11169500	@,
	movw	r8, #:lower16:11169496	@,
	movw	r5, #:lower16:11169492	@,
	movt	r8, #:upper16:11169496	@,
	movt	r5, #:upper16:11169492	@,
	mov	lr, #0	@,
	add	r0, ip, r3	@,,
	add	r9, ip, sl	@,,
	add	r6, ip, r8	@,,
	add	r7, ip, r5	@,,
	str	r0, [fp, #-92]	@, %sfp
	str	r9, [fp, #-88]	@, %sfp
	str	r6, [fp, #-84]	@, %sfp
	str	r7, [fp, #-80]	@, %sfp
	str	lr, [fp, #-96]	@, %sfp
	str	lr, [fp, #-72]	@, %sfp
.L2303:
	ldr	ip, [fp, #-72]	@, %sfp
	mov	r0, #672	@ tmp210,
	ldr	r2, [fp, #-92]	@, %sfp
	movw	r5, #:lower16:11169876	@,
	ldr	r7, [fp, #-68]	@, %sfp
	movt	r5, #:upper16:11169876	@,
	mul	r1, r0, ip	@, tmp210,
	ldr	lr, [fp, #-96]	@, %sfp
	movw	r9, #:lower16:11169880	@,
	movt	r9, #:upper16:11169880	@,
	add	r3, r7, lr	@ D.51891,,
	movw	r4, #:lower16:11169888	@,
	add	r7, r3, #11141120	@, D.51891,
	movt	r4, #:upper16:11169888	@,
	movw	r8, #:lower16:11169292	@,
	movt	r8, #:upper16:11169292	@,
	str	r1, [fp, #-104]	@, %sfp
	movw	sl, #:lower16:11169900	@,
	ldr	r6, [r2, #0]	@, <variable>.fs_image.p_usrdat
	movt	sl, #:upper16:11169900	@,
	str	r5, [fp, #-48]	@, %sfp
	movw	lr, #:lower16:11169752	@,
	str	r7, [fp, #-76]	@, %sfp
	movt	lr, #:upper16:11169752	@,
	ldr	r7, [fp, #-48]	@, %sfp
	movw	ip, #:lower16:11169288	@ tmp170,
	str	r9, [fp, #-112]	@, %sfp
	movt	ip, #:upper16:11169288	@ tmp170,
	add	r7, r3, r7	@, D.51891,
	str	r7, [fp, #-48]	@, %sfp
	ldr	r7, [fp, #-112]	@, %sfp
	movw	r0, #:lower16:11169289	@ tmp174,
	str	r4, [fp, #-52]	@, %sfp
	movt	r0, #:upper16:11169289	@ tmp174,
	add	r7, r3, r7	@, D.51891,
	str	r7, [fp, #-112]	@, %sfp
	ldr	r7, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:11169290	@ tmp178,
	str	r8, [fp, #-56]	@, %sfp
	movt	r1, #:upper16:11169290	@ tmp178,
	add	r7, r3, r7	@, D.51891,
	str	r7, [fp, #-52]	@, %sfp
	ldr	r7, [fp, #-56]	@, %sfp
	movw	r2, #:lower16:11169884	@ tmp182,
	str	sl, [fp, #-60]	@, %sfp
	movt	r2, #:upper16:11169884	@ tmp182,
	add	r7, r3, r7	@, D.51891,
	str	r7, [fp, #-56]	@, %sfp
	ldr	r7, [fp, #-60]	@, %sfp
	movw	r5, #:lower16:11169920	@ tmp204,
	str	lr, [fp, #-64]	@, %sfp
	movt	r5, #:upper16:11169920	@ tmp204,
	add	r7, r3, r7	@, D.51891,
	str	r7, [fp, #-60]	@, %sfp
	ldr	r7, [fp, #-64]	@, %sfp
	movw	r9, #:lower16:11169472	@ tmp207,
	str	r6, [fp, #-100]	@, %sfp
	movt	r9, #:upper16:11169472	@ tmp207,
	movw	r6, #:lower16:11169916	@ tmp201,
	movw	r4, #:lower16:11169836	@ tmp213,
	movt	r6, #:upper16:11169916	@ tmp201,
	movt	r4, #:upper16:11169836	@ tmp213,
	movw	r8, #:lower16:11169796	@ tmp215,
	movw	sl, #:lower16:11169756	@ tmp217,
	movt	r8, #:upper16:11169796	@ tmp215,
	movt	sl, #:upper16:11169756	@ tmp217,
	movw	lr, #:lower16:11169832	@ tmp227,
	movt	lr, #:upper16:11169832	@ tmp227,
	add	lr, r3, lr	@ tmp227, D.51891, tmp227
	add	r1, r3, r1	@ tmp178, D.51891, tmp178
	add	r2, r3, r2	@ tmp182, D.51891, tmp182
	add	r6, r3, r6	@ tmp201, D.51891, tmp201
	add	r5, r3, r5	@ tmp204, D.51891, tmp204
	add	r9, r3, r9	@ tmp207, D.51891, tmp207
	add	r4, r3, r4	@ tmp213, D.51891, tmp213
	add	r8, r3, r8	@ tmp215, D.51891, tmp215
	add	sl, r3, sl	@ tmp217, D.51891, tmp217
	add	r7, r3, r7	@, D.51891,
	add	ip, r3, ip	@ tmp170, D.51891, tmp170
	add	r0, r3, r0	@ tmp174, D.51891, tmp174
	ldr	r3, [fp, #-76]	@, %sfp
	str	r7, [fp, #-64]	@, %sfp
	add	r7, r3, #28672	@,,
	ldr	r3, [fp, #-100]	@, %sfp
	str	r7, [fp, #-76]	@, %sfp
	ldr	r7, [fp, #-104]	@, %sfp
	cmp	r3, #0	@,
	movw	r3, #:lower16:11169288	@ tmp211,
	movt	r3, #:upper16:11169288	@ tmp211,
	add	r3, r7, r3	@ tmp211,, tmp211
	ldr	r7, [fp, #-72]	@, %sfp
	str	r7, [r9, #0]	@, <variable>.fs_image.image_id
	ldr	r7, [fp, #-68]	@, %sfp
	add	r9, r7, r3	@ D.36686,, tmp211
	str	r9, [sl, #0]	@ D.36686, <variable>.frame.frame_store
	str	r9, [r4, #0]	@ D.36686, <variable>.bottom_field.frame_store
	mvn	r7, #0	@ tmp190,
	str	r9, [r8, #0]	@ D.36686, <variable>.top_field.frame_store
	mov	r9, #1	@ tmp200,
	ldr	r8, [fp, #-76]	@, %sfp
	mov	r4, #0	@ tmp172,
	mov	sl, #18	@ tmp203,
	strb	r9, [r8, #0]	@ tmp200, <variable>.top_field.structure
	mov	r8, #16	@ tmp206,
	ldr	r3, [fp, #-112]	@, %sfp
	str	sl, [r6, #0]	@ tmp203, <variable>.pmv_address_idc
	mov	r6, #2	@ tmp229,
	str	r8, [r5, #0]	@ tmp206, <variable>.apc_idc
	str	r7, [r3, #0]	@ tmp190, <variable>.frame_num_wrap
	strb	r6, [lr, #0]	@ tmp229, <variable>.bottom_field.structure
	strb	r4, [ip, #0]	@ tmp172, <variable>.non_existing
	strb	r4, [r0, #0]	@ tmp172, <variable>.is_used
	strb	r4, [r1, #0]	@ tmp172, <variable>.is_reference
	str	r4, [r2, #0]	@ tmp172, <variable>.long_term_frame_idx
	ldr	r5, [fp, #-48]	@, %sfp
	str	r4, [r5, #0]	@ tmp172, <variable>.frame_num
	ldr	r7, [fp, #-52]	@, %sfp
	str	r4, [r7, #0]	@ tmp172, <variable>.poc
	ldr	lr, [fp, #-56]	@, %sfp
	strb	r4, [lr, #0]	@ tmp172, <variable>.is_in_dpb
	ldr	r1, [fp, #-60]	@, %sfp
	str	r9, [r1, #0]	@ tmp200, <variable>.is_displayed
	ldr	r2, [fp, #-64]	@, %sfp
	strb	r4, [r2, #0]	@ tmp172, <variable>.frame.structure
	beq	.L2299	@,
	ldr	r8, [fp, #-68]	@, %sfp
	movw	sl, #:lower16:11199520	@ tmp231,
	movt	sl, #:upper16:11199520	@ tmp231,
	ldr	r1, [fp, #-100]	@, %sfp
	ldr	r0, [r8, sl]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r3, [fp, #-92]	@, %sfp
	str	r4, [r3, #0]	@ tmp172, <variable>.fs_image.p_usrdat
.L2299:
	ldr	r4, [fp, #-80]	@, %sfp
	ldr	r1, [r4, #0]	@ temp.6132, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6132,
	beq	.L2300	@,
	ldr	r2, [fp, #-68]	@, %sfp
	movw	r6, #:lower16:11199520	@ tmp234,
	movt	r6, #:upper16:11199520	@ tmp234,
	mov	r5, #0	@ tmp236,
	ldr	r0, [r2, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r9, [fp, #-80]	@, %sfp
	str	r5, [r9, #0]	@ tmp236, <variable>.fs_image.p_usrdat
.L2300:
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r1, [r0, #0]	@ temp.6134, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6134,
	beq	.L2301	@,
	ldr	lr, [fp, #-68]	@, %sfp
	movw	r7, #:lower16:11199520	@ tmp237,
	movt	r7, #:upper16:11199520	@ tmp237,
	ldr	r0, [lr, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	ip, [fp, #-84]	@, %sfp
	mov	r1, #0	@ tmp239,
	str	r1, [ip, #0]	@ tmp239, <variable>.fs_image.p_usrdat
.L2301:
	ldr	r7, [fp, #-88]	@, %sfp
	ldr	r1, [r7, #0]	@ D.36690, <variable>.fs_image.p_usrdat
	cmp	r1, #0	@ D.36690,
	beq	.L2302	@,
	ldr	r8, [fp, #-68]	@, %sfp
	movw	sl, #:lower16:11199520	@ tmp240,
	movt	sl, #:upper16:11199520	@ tmp240,
	ldr	r0, [r8, sl]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	mov	r3, #0	@ tmp242,
	str	r3, [r7, #0]	@ tmp242, <variable>.fs_image.p_usrdat
.L2302:
	ldr	lr, [fp, #-72]	@, %sfp
	ldr	sl, [fp, #-96]	@, %sfp
	add	r7, lr, #1	@,,
	ldr	ip, [fp, #-92]	@, %sfp
	ldr	r0, [fp, #-88]	@, %sfp
	cmp	r7, #40	@,
	ldr	r6, [fp, #-84]	@, %sfp
	add	r3, sl, #672	@,,
	ldr	r9, [fp, #-80]	@, %sfp
	add	r1, ip, #672	@,,
	add	r2, r0, #672	@,,
	add	r5, r6, #672	@,,
	add	r4, r9, #672	@,,
	str	r7, [fp, #-72]	@, %sfp
	str	r3, [fp, #-96]	@, %sfp
	str	r1, [fp, #-92]	@, %sfp
	str	r2, [fp, #-88]	@, %sfp
	str	r5, [fp, #-84]	@, %sfp
	str	r4, [fp, #-80]	@, %sfp
	bne	.L2303	@,
	ldr	r6, [fp, #-68]	@, %sfp
	movw	r4, #:lower16:11196376	@ tmp243,
	movt	r4, #:upper16:11196376	@ tmp243,
	ldr	r1, [r6, r4]	@ temp.6136, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6136,
	beq	.L2304	@,
	movw	r9, #:lower16:11199520	@ tmp244,
	movt	r9, #:upper16:11199520	@ tmp244,
	mov	r8, #0	@ tmp247,
	ldr	r0, [r6, r9]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r6, r4]	@ tmp247, <variable>.CurrPic.fs_image.p_usrdat
.L2304:
	ldr	r7, [fp, #-68]	@, %sfp
	movw	r4, #:lower16:11196380	@ tmp248,
	movt	r4, #:upper16:11196380	@ tmp248,
	ldr	r1, [r7, r4]	@ temp.6138, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6138,
	beq	.L2305	@,
	movw	r6, #:lower16:11199520	@ tmp249,
	movt	r6, #:upper16:11199520	@ tmp249,
	mov	r5, #0	@ tmp252,
	ldr	r0, [r7, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r5, [r7, r4]	@ tmp252, <variable>.CurrPic.fs_image.p_usrdat
.L2305:
	ldr	ip, [fp, #-68]	@, %sfp
	movw	r4, #:lower16:11196384	@ tmp253,
	movt	r4, #:upper16:11196384	@ tmp253,
	ldr	r1, [ip, r4]	@ temp.6140, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ temp.6140,
	beq	.L2306	@,
	movw	r7, #:lower16:11199520	@ tmp254,
	movt	r7, #:upper16:11199520	@ tmp254,
	ldr	r0, [ip, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r0, [fp, #-68]	@, %sfp
	mov	r2, #0	@ tmp257,
	str	r2, [r0, r4]	@ tmp257, <variable>.CurrPic.fs_image.p_usrdat
.L2306:
	ldr	r0, [fp, #-68]	@, %sfp
	movw	r4, #:lower16:11196388	@ tmp258,
	movt	r4, #:upper16:11196388	@ tmp258,
	ldr	r1, [r0, r4]	@ D.36693, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r1, #0	@ D.36693,
	beq	.L2307	@,
	movw	r3, #:lower16:11199520	@ tmp259,
	movt	r3, #:upper16:11199520	@ tmp259,
	ldr	r0, [r0, r3]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	ldr	r1, [fp, #-68]	@, %sfp
	mov	ip, #0	@ tmp262,
	str	ip, [r1, r4]	@ tmp262, <variable>.CurrPic.fs_image.p_usrdat
.L2307:
	ldr	r2, [fp, #-68]	@, %sfp
	movw	r7, #:lower16:11198024	@ tmp263,
	movt	r7, #:upper16:11198024	@ tmp263,
	ldr	r4, [r2, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r4, #0	@ <variable>.TotalUsrDatNum,
	beq	.L2308	@,
	movw	sl, #:lower16:11198028	@ ivtmp.6091,
	mov	r5, #0	@ i.6129,
	movt	sl, #:upper16:11198028	@ ivtmp.6091,
	movw	r6, #:lower16:11199520	@ tmp343,
	movt	r6, #:upper16:11199520	@ tmp343,
	add	r4, r2, sl	@ ivtmp.6091,, ivtmp.6091
	mov	r8, r5	@ tmp344, i.6129
	mov	sl, r2	@ pMvcCtx,
.L2310:
	ldr	r1, [r4, #0]	@ D.36696, <variable>.pUsrDatArray
	add	r5, r5, #1	@ i.6129, i.6129,
	cmp	r1, #0	@ D.36696,
	beq	.L2309	@,
	ldr	r0, [sl, r6]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	str	r8, [r4, #0]	@ tmp344, <variable>.pUsrDatArray
.L2309:
	ldr	lr, [sl, r7]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r4, r4, #4	@ ivtmp.6091, ivtmp.6091,
	cmp	lr, r5	@ <variable>.TotalUsrDatNum, i.6129
	bhi	.L2310	@,
.L2308:
	movw	r3, #:lower16:11164361	@,
	movt	r3, #:upper16:11164361	@,
	str	r3, [fp, #-56]	@, %sfp
	movw	r8, #:lower16:11198024	@ tmp271,
	ldr	r3, [fp, #-68]	@, %sfp
	movt	r8, #:upper16:11198024	@ tmp271,
	movw	r1, #:lower16:11199496	@ tmp273,
	movw	r5, #:lower16:11198004	@ tmp275,
	movt	r1, #:upper16:11199496	@ tmp273,
	movt	r5, #:upper16:11198004	@ tmp275,
	movw	r7, #:lower16:11199444	@ tmp277,
	movw	r6, #:lower16:11199504	@ tmp279,
	movt	r7, #:upper16:11199444	@ tmp277,
	movt	r6, #:upper16:11199504	@ tmp279,
	movw	lr, #:lower16:11199452	@ tmp281,
	movw	ip, #:lower16:11198012	@ tmp283,
	movt	lr, #:upper16:11199452	@ tmp281,
	movt	ip, #:upper16:11198012	@ tmp283,
	movw	r2, #:lower16:11199528	@ tmp285,
	movw	r4, #:lower16:11164360	@,
	movt	r2, #:upper16:11199528	@ tmp285,
	movt	r4, #:upper16:11164360	@,
	str	r4, [fp, #-48]	@, %sfp
	movw	r9, #:lower16:11198016	@,
	ldr	r4, [fp, #-68]	@, %sfp
	movt	r9, #:upper16:11198016	@,
	movw	r0, #:lower16:11166365	@,
	str	r9, [fp, #-60]	@, %sfp
	movt	r0, #:upper16:11166365	@,
	str	r0, [fp, #-52]	@, %sfp
	add	r0, r4, #11141120	@,,
	mov	r4, #0	@ tmp272,
	str	r4, [r3, r1]	@ tmp272, <variable>.IDRPicOfCurrPic
	movw	sl, #:lower16:11168368	@ tmp290,
	str	r4, [r3, r5]	@ tmp272, <variable>.AllowStartDec
	movt	sl, #:upper16:11168368	@ tmp290,
	str	r4, [r3, ip]	@ tmp272, <variable>.IDRFound
	movw	r9, #:lower16:11166364	@ tmp292,
	str	r4, [r3, r2]	@ tmp272, <variable>.FirstFrameDisplayed
	movt	r9, #:upper16:11166364	@ tmp292,
	str	r4, [r3, r8]	@ tmp272, <variable>.TotalUsrDatNum
	add	r0, r0, #21504	@,,
	str	r4, [r3, r7]	@ tmp272, <variable>.SliceParaNum
	mov	r1, #1680	@,
	str	r4, [r3, r6]	@ tmp272, <variable>.MaxBytesReceived
	movw	r5, #:lower16:11162624	@ tmp305,
	str	r4, [r3, lr]	@ tmp272, <variable>.IModeOutFlag
	movt	r5, #:upper16:11162624	@ tmp305,
	ldr	r7, [fp, #-60]	@, %sfp
	str	r4, [r3, sl]	@ tmp272, <variable>.CurrMarkIdx
	str	r4, [r3, #368]	@ tmp272, <variable>.pCurrNal
	str	r4, [r3, r7]	@ tmp272, <variable>.PPicFound
	strb	r4, [r3, r9]	@ tmp272, <variable>.is_valid
	ldr	r7, [fp, #-52]	@, %sfp
	strb	r4, [r3, r7]	@ tmp272, <variable>.no_output_of_prior_pics_flag
	ldr	lr, [fp, #-48]	@, %sfp
	strb	r4, [r3, lr]	@ tmp272, <variable>.is_valid
	ldr	r6, [fp, #-56]	@, %sfp
	strb	r4, [r3, r6]	@ tmp272, <variable>.no_output_of_prior_pics_flag
	bl	__memzero	@
	ldr	r6, [fp, #-68]	@, %sfp
	movw	r2, #:lower16:11162629	@ tmp309,
	movw	ip, #:lower16:11196168	@ tmp312,
	movt	r2, #:upper16:11162629	@ tmp309,
	movt	ip, #:upper16:11196168	@ tmp312,
	movw	r0, #:lower16:11197336	@ tmp315,
	movw	r3, #:lower16:11197344	@ tmp318,
	movt	r0, #:upper16:11197336	@ tmp315,
	movt	r3, #:upper16:11197344	@ tmp318,
	movw	r1, #:lower16:11197340	@ tmp320,
	movt	r1, #:upper16:11197340	@ tmp320,
	strb	r4, [r6, ip]	@ tmp272, <variable>.CurrPic.state
	mov	ip, #2	@ tmp307,
	strb	r4, [r6, r0]	@ tmp272, <variable>.PrevPic.structure
	mov	r0, r4	@, tmp272
	str	r4, [r6, r1]	@ tmp272, <variable>.PrevPic.nal_ref_idc
	mov	r1, #1	@ tmp310,
	strb	ip, [r6, r5]	@ tmp307, <variable>.CurrSlice.slice_type
	strb	r1, [r6, r2]	@ tmp310, <variable>.CurrSlice.new_pic_flag
	mov	r2, #256	@ tmp319,
	str	r2, [r6, r3]	@ tmp319, <variable>.PrevPic.frame_num
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2297:
	ldr	r4, [fp, #-68]	@, %sfp
	add	r0, r4, #8	@,,
	bl	ResetVoQueue	@
	ldr	r2, [fp, #-68]	@, %sfp
	movw	r1, #:lower16:11199520	@ tmp164,
	movt	r1, #:upper16:11199520	@ tmp164,
	ldr	r0, [r2, r1]	@, <variable>.ChanID
	bl	FSP_EmptyInstance	@
	b	.L2298	@
.L2314:
	movw	r1, #:lower16:.LC59	@,
	ldr	r2, .L2315	@,
	movt	r1, #:upper16:.LC59	@,
	movw	r3, #370	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L2296	@
.L2316:
	.align	2
.L2315:
	.word	.LANCHOR0+236
	.fnend
	.size	MVC_ClearAll, .-MVC_ClearAll
	.align	2
	.global	MVC_DEC_GetImageBuffer
	.type	MVC_DEC_GetImageBuffer, %function
MVC_DEC_GetImageBuffer:
	.fnstart
.LFB1669:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11197996	@ tmp157,
	movt	r3, #:upper16:11197996	@ tmp157,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, r3]	@ D.46003, <variable>.TotalFsNum
	cmp	r3, #0	@ D.46003,
	beq	.L2318	@,
	movw	r6, #:lower16:11169289	@ ivtmp.6188,
	movt	r6, #:upper16:11169289	@ ivtmp.6188,
	add	r6, r0, r6	@ ivtmp.6188, pMvcCtx, ivtmp.6188
	movw	sl, #:lower16:11168420	@ ivtmp.6180,
	movt	sl, #:upper16:11168420	@ ivtmp.6180,
	movw	r9, #:lower16:11168612	@ tmp211,
	add	sl, r0, sl	@ ivtmp.6180, pMvcCtx, ivtmp.6180
	movt	r9, #:upper16:11168612	@ tmp211,
	mov	r8, r6	@ ivtmp.6185, ivtmp.6188
	mov	r7, #0	@ i,
.L2325:
	ldrb	r2, [r8, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.is_used,
	bne	.L2319	@,
	mov	r1, #672	@,
	movw	r0, #:lower16:11169288	@ tmp162,
	mul	r4, r1, r7	@ tmp160,, i
	movt	r0, #:upper16:11169288	@ tmp162,
	add	ip, r4, r0	@ tmp162, tmp160, tmp162
	adds	ip, r5, ip	@ D.46013, pMvcCtx, tmp162
	beq	.L2320	@,
	ldr	r4, [r5, r9]	@ D.46332, <variable>.DPB.size
	cmp	r4, #0	@ D.46332,
	beq	.L2320	@,
	ldr	r2, [sl, #0]	@ D.46333, <variable>.DPB.fs
	sub	lr, r4, #1	@ tmp219, D.46332,
	and	r0, lr, #1	@ tmp221, tmp219,
	cmp	r2, #0	@ D.46333,
	beq	.L2344	@,
	cmp	ip, r2	@ D.46013, D.46333
	beq	.L2319	@,
.L2344:
	mov	r1, #1	@ i,
	cmp	r1, r4	@ i, D.46332
	add	r2, sl, #4	@ ivtmp.6180, ivtmp.6180,
	bcs	.L2320	@,
	cmp	r0, #0	@ tmp221,
	beq	.L2322	@,
	ldr	r0, [sl, #4]	@ D.46333, <variable>.DPB.fs
	cmp	r0, #0	@ D.46333,
	beq	.L2346	@,
	cmp	ip, r0	@ D.46013, D.46333
	beq	.L2319	@,
.L2346:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6180, ivtmp.6180,
	cmp	r1, r4	@ i, D.46332
	bcs	.L2320	@,
.L2322:
	ldr	r0, [r2, #0]	@ D.46333, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp222, i,
	add	lr, r2, #4	@ tmp223, ivtmp.6180,
	cmp	r0, #0	@ D.46333,
	beq	.L2321	@,
	cmp	ip, r0	@ D.46013, D.46333
	beq	.L2319	@,
.L2321:
	ldr	r2, [r2, #4]	@ D.46333, <variable>.DPB.fs
	cmp	r2, #0	@ D.46333,
	beq	.L2349	@,
	cmp	ip, r2	@ D.46013, D.46333
	beq	.L2319	@,
.L2349:
	add	r1, r1, #1	@ i, tmp222,
	add	r2, lr, #4	@ ivtmp.6180, tmp223,
	cmp	r1, r4	@ i, D.46332
	bcc	.L2322	@,
.L2320:
	movw	r4, #:lower16:11199520	@ tmp166,
	movt	r4, #:upper16:11199520	@ tmp166,
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmp	r0, #1	@,
	beq	.L2318	@,
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	bl	FSP_IsNewFsAvalible	@
	cmn	r0, #1	@,
	beq	.L2368	@,
.L2323:
	mov	r0, #0	@ D.46006,
.L2324:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2319:
	add	r7, r7, #1	@ i, i,
	add	r8, r8, #672	@ ivtmp.6185, ivtmp.6185,
	cmp	r3, r7	@ D.46003, i
	bhi	.L2325	@,
	sub	r2, fp, #52	@,,
	add	r0, r5, #8	@, pMvcCtx,
	sub	r1, fp, #48	@,,
	movw	r8, #:lower16:11197996	@ tmp176,
	bl	GetQueueImgNum	@
	movt	r8, #:upper16:11197996	@ tmp176,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC60	@,
	movt	r1, #:upper16:.LC60	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC61	@,
	movt	r1, #:upper16:.LC61	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, r8]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	cmp	r3, #0	@ <variable>.TotalFsNum,
	beq	.L2326	@,
	movw	r7, #:lower16:11168420	@ ivtmp.6169,
	movt	r7, #:upper16:11168420	@ ivtmp.6169,
	add	r7, r5, r7	@ ivtmp.6169, pMvcCtx, ivtmp.6169
	mov	r4, #0	@ i.6196,
	movw	r2, #:lower16:11168612	@,
	movt	r2, #:upper16:11168612	@,
	str	r2, [fp, #-56]	@, %sfp
.L2331:
	mov	lr, #672	@,
	movw	r0, #:lower16:11169288	@ tmp180,
	mul	r1, lr, r4	@ tmp178,, i.6196
	movt	r0, #:upper16:11169288	@ tmp180,
	ldrb	r3, [r6, #0]	@ zero_extendqisi2	@ temp.6194, <variable>.is_used
	ldrb	lr, [r6, #3]	@ zero_extendqisi2	@ D.46029, <variable>.is_in_dpb
	add	ip, r1, r0	@ tmp180, tmp178, tmp180
	adds	ip, r5, ip	@ temp.6195, pMvcCtx, tmp180
	beq	.L2327	@,
	ldr	r2, [fp, #-56]	@, %sfp
	ldr	r9, [r5, r2]	@ D.46339, <variable>.DPB.size
	cmp	r9, #0	@ D.46339,
	beq	.L2327	@,
	ldr	r2, [r7, #0]	@ D.46340, <variable>.DPB.fs
	sub	r0, r9, #1	@ tmp214, D.46339,
	and	r0, r0, #1	@ tmp216, tmp214,
	cmp	r2, #0	@ D.46340,
	beq	.L2337	@,
	cmp	ip, r2	@ temp.6195, D.46340
	beq	.L2357	@,
.L2337:
	mov	r1, #1	@ i,
	cmp	r1, r9	@ i, D.46339
	add	r2, r7, #4	@ ivtmp.6169, ivtmp.6169,
	bcs	.L2327	@,
	cmp	r0, #0	@ tmp216,
	beq	.L2330	@,
	ldr	r0, [r7, #4]	@ D.46340, <variable>.DPB.fs
	cmp	r0, #0	@ D.46340,
	beq	.L2339	@,
	cmp	ip, r0	@ temp.6195, D.46340
	beq	.L2357	@,
.L2339:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6169, ivtmp.6169,
	cmp	r1, r9	@ i, D.46339
	bcs	.L2327	@,
.L2330:
	ldr	r0, [r2, #0]	@ D.46340, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp217, i,
	add	sl, r2, #4	@ tmp218, ivtmp.6169,
	cmp	r0, #0	@ D.46340,
	beq	.L2328	@,
	cmp	ip, r0	@ temp.6195, D.46340
	beq	.L2357	@,
.L2328:
	ldr	r2, [r2, #4]	@ D.46340, <variable>.DPB.fs
	cmp	r2, #0	@ D.46340,
	beq	.L2342	@,
	cmp	ip, r2	@ temp.6195, D.46340
	beq	.L2357	@,
.L2342:
	add	r1, r1, #1	@ i, tmp217,
	add	r2, sl, #4	@ ivtmp.6169, tmp218,
	cmp	r1, r9	@ i, D.46339
	bcc	.L2330	@,
.L2327:
	mov	ip, #1	@ D.46338,
.L2329:
	mov	r2, r4	@, i.6196
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC62	@,
	movt	r1, #:upper16:.LC62	@,
	str	lr, [sp, #0]	@ D.46029,
	add	r4, r4, #1	@ i.6196, i.6196,
	str	ip, [sp, #4]	@ D.46338,
	bl	dprint_vfmw	@
	ldr	r3, [r5, r8]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	add	r6, r6, #672	@ ivtmp.6188, ivtmp.6188,
	cmp	r3, r4	@ <variable>.TotalFsNum, i.6196
	bhi	.L2331	@,
.L2326:
	ldr	r2, [fp, #-48]	@, ReadImgNum
	mov	r0, #0	@,
	ldr	r3, [fp, #-52]	@, NewImgNum
	movw	r1, #:lower16:.LC63	@,
	movt	r1, #:upper16:.LC63	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:11197996	@ tmp192,
	movt	r2, #:upper16:11197996	@ tmp192,
	movw	r1, #:lower16:11168616	@ tmp195,
	movt	r1, #:upper16:11168616	@ tmp195,
	ldr	r0, [r5, r2]	@ <variable>.TotalFsNum, <variable>.TotalFsNum
	ldr	r3, [r5, r1]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	ldr	r2, [fp, #-48]	@ ReadImgNum, ReadImgNum
	sub	ip, r0, #2	@ tmp193, <variable>.TotalFsNum,
	ldr	r1, [fp, #-52]	@ NewImgNum, NewImgNum
	rsb	r0, r3, ip	@ tmp196, <variable>.DPB.used_size, tmp193
	add	ip, r1, r2	@ tmp189, NewImgNum, ReadImgNum
	cmp	ip, r0	@ tmp189, tmp196
	bge	.L2323	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC64	@,
	movt	r1, #:upper16:.LC64	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.46006,
	b	.L2324	@
.L2318:
	mov	r0, #1	@ D.46006,
	b	.L2324	@
.L2357:
	mov	ip, #0	@ D.46338,
	b	.L2329	@
.L2368:
	ldr	r0, [r5, r4]	@, <variable>.ChanID
	add	r1, r5, #8	@, pMvcCtx,
	bl	FSP_ClearNotInVoQueue	@
	mov	r0, #0	@ D.46006,
	b	.L2324	@
	.fnend
	.size	MVC_DEC_GetImageBuffer, .-MVC_DEC_GetImageBuffer
	.align	2
	.global	MVC_DEC_Init
	.type	MVC_DEC_Init, %function
MVC_DEC_Init:
	.fnstart
.LFB1664:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r6, [r0, #352]	@ D.45702, <variable>.ImageQue.ResetMagicWord
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ pstExtraData, pstExtraData
	movw	r1, #:lower16:11199560	@,
	movt	r1, #:upper16:11199560	@,
	bl	__memzero	@
	add	r0, r4, #8	@, pMvcCtx,
	str	r6, [r4, #352]	@ D.45702, <variable>.ImageQue.ResetMagicWord
	bl	ResetVoQueue	@
	mov	r0, #0	@ tmp152,
	str	r5, [r4, #0]	@ pstExtraData, <variable>.pstExtraData
	str	r0, [r4, #364]	@ tmp152, <variable>.StartMode
	str	r0, [r4, #360]	@ tmp152, <variable>.pMvcDecParam
	ldr	r3, [r5, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r3, #25	@ <variable>.eCapLevel,
	beq	.L2383	@,
	movw	r3, #:lower16:11155232	@ tmp161,
	movw	r2, #:lower16:11155236	@ tmp163,
	movt	r3, #:upper16:11155232	@ tmp161,
	movt	r2, #:upper16:11155236	@ tmp163,
	movw	ip, #:lower16:11155228	@ tmp165,
	movt	ip, #:upper16:11155228	@ tmp165,
	mov	lr, #32	@ tmp162,
	mov	r1, #256	@ tmp164,
	mov	r6, #136	@ tmp166,
	str	lr, [r4, r3]	@ tmp162, <variable>.MaxSpsNum
	str	r1, [r4, r2]	@ tmp164, <variable>.MaxPpsNum
	str	r6, [r4, ip]	@ tmp166, <variable>.MaxSliceNum
.L2371:
	ldr	r0, [r5, #504]	@, <variable>.s32ContextMemAddr
	movw	r6, #:lower16:11155244	@ tmp175,
	bl	MEM_Phy2Vir	@
	movw	r1, #:lower16:11155232	@ tmp171,
	movt	r1, #:upper16:11155232	@ tmp171,
	ldr	ip, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #:lower16:11155236	@ tmp176,
	movt	r3, #:upper16:11155236	@ tmp176,
	ldr	r2, [r4, r1]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movw	r1, #3992	@ tmp174,
	ldr	lr, [ip, #500]	@ <variable>.s32BasicCtxSize, <variable>.s32BasicCtxSize
	movt	r6, #:upper16:11155244	@ tmp175,
	ldr	ip, [r4, r3]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movw	r3, #:lower16:11199440	@ tmp180,
	mul	r1, r1, r2	@ tmp172, tmp174, <variable>.MaxSpsNum
	movw	r2, #:lower16:11155240	@ tmp170,
	movt	r2, #:upper16:11155240	@ tmp170,
	movt	r3, #:upper16:11199440	@ tmp180,
	add	r0, r0, lr	@ D.45723,, <variable>.s32BasicCtxSize
	str	r0, [r4, r2]	@ D.45723, <variable>.SPS
	add	r2, r0, r1	@ prephitmp.6228, D.45723, tmp172
	mov	lr, #2240	@ tmp179,
	cmp	r0, #0	@ D.45723,
	str	r2, [r4, r6]	@ prephitmp.6228, <variable>.PPS
	mla	lr, lr, ip, r2	@ D.45735, tmp179, <variable>.MaxPpsNum, prephitmp.6228
	str	lr, [r4, r3]	@ D.45735, <variable>.DecSlicePara
	beq	.L2372	@,
	cmp	r2, #0	@ prephitmp.6228,
	beq	.L2372	@,
	cmp	lr, #0	@ D.45735,
	beq	.L2372	@,
	ldr	r7, [r5, #524]	@ <variable>.s32KeepSPSPPS, <variable>.s32KeepSPSPPS
	cmp	r7, #0	@ <variable>.s32KeepSPSPPS,
	beq	.L2384	@,
.L2376:
	movw	r2, #:lower16:11155228	@ tmp199,
	movt	r2, #:upper16:11155228	@ tmp199,
	movw	lr, #4060	@ tmp201,
	movw	r3, #:lower16:11155232	@ tmp196,
	ldr	r6, [r4, r2]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	movt	r3, #:upper16:11155232	@ tmp196,
	movw	r0, #:lower16:11159264	@ tmp194,
	movw	r9, #:lower16:11155992	@ tmp195,
	ldr	sl, [r4, r3]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	movt	r0, #:upper16:11159264	@ tmp194,
	mul	r1, lr, r6	@ __n, tmp201, <variable>.MaxSliceNum
	movt	r9, #:upper16:11155992	@ tmp195,
	movw	r5, #:lower16:11199440	@ tmp198,
	movt	r5, #:upper16:11199440	@ tmp198,
	str	ip, [r4, r0]	@ prephitmp.6226, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r1, #0	@ __n,
	str	sl, [r4, r9]	@ <variable>.MaxSpsNum, <variable>.CurrSPS.seq_parameter_set_id
	ldr	r0, [r4, r5]	@ __p, <variable>.DecSlicePara
	bne	.L2385	@,
.L2378:
	movw	r9, #:lower16:11199508	@ tmp203,
	movt	r9, #:upper16:11199508	@ tmp203,
	movw	r3, #:lower16:11199448	@ tmp202,
	movw	ip, #:lower16:11199464	@ tmp207,
	ldr	sl, [r4, r9]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	movt	r3, #:upper16:11199448	@ tmp202,
	movt	ip, #:upper16:11199464	@ tmp207,
	movw	r2, #:lower16:11199468	@ tmp209,
	movw	r9, #:lower16:11199472	@ tmp211,
	movt	r2, #:upper16:11199468	@ tmp209,
	movt	r9, #:upper16:11199472	@ tmp211,
	movw	r1, #:lower16:11199476	@,
	movw	r8, #:lower16:11199484	@,
	movt	r1, #:upper16:11199476	@,
	movt	r8, #:upper16:11199484	@,
	str	r1, [fp, #-48]	@, %sfp
	str	r8, [fp, #-56]	@, %sfp
	movw	r7, #:lower16:11199488	@,
	movw	r6, #:lower16:11199492	@,
	movt	r7, #:upper16:11199488	@,
	movt	r6, #:upper16:11199492	@,
	str	r7, [fp, #-60]	@, %sfp
	str	r6, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:11197996	@ tmp223,
	movw	r6, #:lower16:11198000	@ tmp225,
	movt	r7, #:upper16:11197996	@ tmp223,
	movt	r6, #:upper16:11198000	@ tmp225,
	movw	r5, #:lower16:11199456	@,
	movw	lr, #:lower16:11198024	@,
	movt	r5, #:upper16:11199456	@,
	movt	lr, #:upper16:11198024	@,
	str	r5, [fp, #-68]	@, %sfp
	str	lr, [fp, #-72]	@, %sfp
	movw	r8, #:lower16:11198028	@ tmp231,
	movw	r5, #:lower16:11198032	@ tmp233,
	movt	r8, #:upper16:11198028	@ tmp231,
	movt	r5, #:upper16:11198032	@ tmp233,
	movw	lr, #:lower16:11198036	@ tmp235,
	movw	r1, #:lower16:11198040	@,
	movt	lr, #:upper16:11198036	@ tmp235,
	movt	r1, #:upper16:11198040	@,
	str	r1, [fp, #-76]	@, %sfp
	movw	r1, #:lower16:11198012	@,
	movt	r1, #:upper16:11198012	@,
	str	r1, [fp, #-84]	@, %sfp
	movw	r1, #:lower16:11198016	@,
	movt	r1, #:upper16:11198016	@,
	str	r1, [fp, #-92]	@, %sfp
	movw	r1, #:lower16:11198020	@ tmp247,
	movt	r1, #:upper16:11198020	@ tmp247,
	movw	r0, #:lower16:11199480	@,
	ubfx	sl, sl, #16, #2	@ tmp206, <variable>.advanced_cfg,,
	movt	r0, #:upper16:11199480	@,
	str	r0, [fp, #-52]	@, %sfp
	movw	r0, #:lower16:11198004	@,
	movt	r0, #:upper16:11198004	@,
	str	r0, [fp, #-80]	@, %sfp
	movw	r0, #:lower16:11199528	@,
	movt	r0, #:upper16:11199528	@,
	str	r0, [fp, #-88]	@, %sfp
	str	sl, [r4, r3]	@ tmp206, <variable>.OldDecMode
	mov	r3, #0	@ tmp208,
	str	r3, [r4, r8]	@ tmp208, <variable>.pUsrDatArray
	mov	r8, #40	@ tmp224,
	str	r3, [r4, r5]	@ tmp208, <variable>.pUsrDatArray
	add	r0, r4, #13568	@, pMvcCtx,
	str	r3, [r4, lr]	@ tmp208, <variable>.pUsrDatArray
	add	r0, r0, #32	@,,
	str	r3, [r4, ip]	@ tmp208, <variable>.TotalNal
	mov	r5, r3	@ tmp289, tmp208
	str	r3, [r4, r2]	@ tmp208, <variable>.TotalSPS
	str	r3, [r4, r9]	@ tmp208, <variable>.TotalPPS
	str	r8, [r4, r7]	@ tmp224, <variable>.TotalFsNum
	mov	r7, #18	@ tmp226,
	mov	r8, #25	@ tmp248,
	str	r7, [r4, r6]	@ tmp226, <variable>.TotalPmvNum
	str	r8, [r4, r1]	@ tmp248, <variable>.frame_rate
	movw	r1, #:lower16:10800896	@,
	ldr	r7, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:10800896	@,
	str	r3, [r4, r7]	@ tmp208, <variable>.TotalSlice
	ldr	ip, [fp, #-52]	@, %sfp
	str	r3, [r4, ip]	@ tmp208, <variable>.SeqCnt
	ldr	r2, [fp, #-56]	@, %sfp
	str	r3, [r4, r2]	@ tmp208, <variable>.TotalPicNum
	ldr	lr, [fp, #-60]	@, %sfp
	str	r3, [r4, lr]	@ tmp208, <variable>.TotalFrameNum
	ldr	r6, [fp, #-64]	@, %sfp
	str	r3, [r4, r6]	@ tmp208, <variable>.TotalFieldNum
	ldr	r8, [fp, #-68]	@, %sfp
	str	r3, [r4, r8]	@ tmp208, <variable>.MutexHold
	ldr	r7, [fp, #-72]	@, %sfp
	str	r3, [r4, r7]	@ tmp208, <variable>.TotalUsrDatNum
	movw	r7, #:lower16:10814508	@,
	ldr	ip, [fp, #-76]	@, %sfp
	movt	r7, #:upper16:10814508	@,
	str	r3, [r4, ip]	@ tmp208, <variable>.pUsrDatArray
	ldr	r2, [fp, #-80]	@, %sfp
	str	r3, [r4, r2]	@ tmp208, <variable>.AllowStartDec
	ldr	lr, [fp, #-84]	@, %sfp
	str	r3, [r4, lr]	@ tmp208, <variable>.IDRFound
	ldr	r6, [fp, #-88]	@, %sfp
	str	r3, [r4, r6]	@ tmp208, <variable>.FirstFrameDisplayed
	ldr	r8, [fp, #-92]	@, %sfp
	str	r3, [r4, r8]	@ tmp208, <variable>.PPicFound
	bl	__memzero	@
	movw	r1, #:lower16:337528	@,
	add	r0, r4, r7	@, pMvcCtx,
	movt	r1, #:upper16:337528	@,
	bl	__memzero	@
	movw	r1, #:lower16:351124	@ ivtmp.6250,
	movw	ip, #:lower16:11152020	@ D.52067,
	movt	r1, #:upper16:351124	@ ivtmp.6250,
	movt	ip, #:upper16:11152020	@ D.52067,
	add	r3, r4, r1	@ ivtmp.6250, pMvcCtx, ivtmp.6250
	add	r1, r4, ip	@ D.52067, pMvcCtx, D.52067
.L2379:
	movw	lr, #:lower16:-337499	@ tmp258,
	movt	lr, #:upper16:-337499	@ tmp258,
	add	r2, r3, lr	@ tmp258, ivtmp.6250, tmp258
	str	r5, [r3, #0]	@ tmp289, <variable>.is_valid
	add	r3, r3, #335872	@ ivtmp.6250, ivtmp.6250,
	add	ip, r3, #1648	@ ivtmp.6250, ivtmp.6250,
	strb	r5, [r2, #0]	@ tmp289, <variable>.sps.is_valid
	add	r3, ip, #8	@ ivtmp.6250, ivtmp.6250,
	cmp	r3, r1	@ ivtmp.6250, D.52067
	bne	.L2379	@,
	movw	r7, #:lower16:10814496	@ tmp265,
	movw	r2, #:lower16:10814500	@ tmp267,
	movt	r7, #:upper16:10814496	@ tmp265,
	movt	r2, #:upper16:10814500	@ tmp267,
	movw	lr, #:lower16:10814504	@ tmp269,
	movw	ip, #:lower16:11152048	@ tmp271,
	movt	lr, #:upper16:10814504	@ tmp269,
	movt	ip, #:upper16:11152048	@ tmp271,
	movw	r6, #:lower16:11152036	@ tmp273,
	movw	r3, #:lower16:11155224	@ tmp276,
	movt	r6, #:upper16:11152036	@ tmp273,
	movt	r3, #:upper16:11155224	@ tmp276,
	movw	r1, #:lower16:11155248	@ tmp275,
	movw	r0, #:lower16:11154744	@,
	movt	r1, #:upper16:11155248	@ tmp275,
	movt	r0, #:upper16:11154744	@,
	mov	r8, #13568	@ tmp263,
	add	r1, r4, r1	@ tmp275, pMvcCtx, tmp275
	add	r0, r4, r0	@, pMvcCtx,
	str	r1, [r4, r6]	@ tmp275, <variable>.pCurrSPS
	str	r5, [r4, ip]	@ tmp289, <variable>.Init_Subsps_Flag
	mov	r1, #480	@,
	mov	ip, #32	@ tmp268,
	str	r5, [r4, r3]	@ tmp289, <variable>.PicCount
	str	ip, [r4, lr]	@ tmp268, <variable>.CurrSUBSPSID
	str	ip, [r4, r2]	@ tmp268, <variable>.CurrSPSID
	str	r5, [r4, r8]	@ tmp289, <variable>.CurrNalMvcInfo.is_valid
	str	r5, [r4, r7]	@ tmp289, <variable>.TotalSUBSPS
	bl	__memzero	@
	mov	r0, r4	@, pMvcCtx
	bl	VCTRL_GetChanIDByCtx	@
	movw	r1, #:lower16:11199520	@ tmp280,
	movt	r1, #:upper16:11199520	@ tmp280,
	cmn	r0, #1	@ D.45785,
	str	r0, [r4, r1]	@ D.45785, <variable>.ChanID
	beq	.L2386	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp289
	bl	MVC_ClearAll	@
	mov	r0, #1	@ D.45742,
.L2374:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2384:
	cmp	r1, #0	@ tmp172,
	bne	.L2387	@,
.L2377:
	movw	r5, #:lower16:11155236	@ tmp191,
	movt	r5, #:upper16:11155236	@ tmp191,
	mov	r8, #2240	@ tmp192,
	ldr	ip, [r4, r5]	@ prephitmp.6226, <variable>.MaxPpsNum
	mul	r1, r8, ip	@ __n, tmp192, prephitmp.6226
	cmp	r1, #0	@ __n,
	beq	.L2376	@,
	mov	r0, r2	@, prephitmp.6228
	bl	__memzero	@
	ldr	ip, [r4, r5]	@ prephitmp.6226, <variable>.MaxPpsNum
	b	.L2376	@
.L2385:
	bl	__memzero	@
	b	.L2378	@
.L2383:
	ldr	r3, [r5, #580]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.stChanOption.s32MaxSpsNum
	movw	r0, #:lower16:11155232	@ tmp155,
	movt	r0, #:upper16:11155232	@ tmp155,
	movw	lr, #:lower16:11155236	@ tmp157,
	movt	lr, #:upper16:11155236	@ tmp157,
	movw	ip, #:lower16:11155228	@ tmp159,
	str	r3, [r4, r0]	@ <variable>.stChanOption.s32MaxSpsNum, <variable>.MaxSpsNum
	movt	ip, #:upper16:11155228	@ tmp159,
	ldr	r1, [r5, #584]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.stChanOption.s32MaxPpsNum
	str	r1, [r4, lr]	@ <variable>.stChanOption.s32MaxPpsNum, <variable>.MaxPpsNum
	ldr	r2, [r5, #576]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.stChanOption.s32MaxSliceNum
	str	r2, [r4, ip]	@ <variable>.stChanOption.s32MaxSliceNum, <variable>.MaxSliceNum
	b	.L2371	@
.L2387:
	bl	__memzero	@
	ldr	r2, [r4, r6]	@ prephitmp.6228, <variable>.PPS
	b	.L2377	@
.L2372:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC65	@,
	ldr	r2, .L2388	@,
	movt	r1, #:upper16:.LC65	@,
	movw	r3, #12788	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.45742,
	b	.L2374	@
.L2386:
	mov	r0, r5	@, tmp289
	movw	r1, #:lower16:.LC66	@,
	movt	r1, #:upper16:.LC66	@,
	bl	dprint_vfmw	@
	mvn	r0, #19	@ D.45742,
	b	.L2374	@
.L2389:
	.align	2
.L2388:
	.word	.LANCHOR0+252
	.fnend
	.size	MVC_DEC_Init, .-MVC_DEC_Init
	.align	2
	.global	MVC_AllocFrameStore
	.type	MVC_AllocFrameStore, %function
MVC_AllocFrameStore:
	.fnstart
.LFB1607:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11162625	@ tmp166,
	movt	r3, #:upper16:11162625	@ tmp166,
	str	r1, [fp, #-48]	@ IsDecGap, %sfp
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r5, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L2392	@,
	movw	r1, #:lower16:11162626	@ tmp168,
	movt	r1, #:upper16:11162626	@ tmp168,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrSlice.bottom_field_flag, <variable>.CurrSlice.bottom_field_flag
	cmp	r5, #0	@ <variable>.CurrSlice.bottom_field_flag,
	movne	r5, #2	@ structure,
	moveq	r5, #1	@ structure,
.L2392:
	movw	r6, #:lower16:11199448	@ tmp170,
	ldr	ip, [fp, #-48]	@, %sfp
	movt	r6, #:upper16:11199448	@ tmp170,
	cmp	ip, #1	@,
	ldr	r2, [r4, r6]	@ <variable>.OldDecMode, <variable>.OldDecMode
	moveq	r5, #0	@ structure,
	cmp	r2, #2	@ <variable>.OldDecMode,
	beq	.L2411	@,
	sub	r1, r5, #1	@ tmp178, structure,
	movw	r3, #:lower16:11196169	@ tmp175,
	cmp	r1, #1	@ tmp178,
	movt	r3, #:upper16:11196169	@ tmp175,
	mov	r2, #0	@ tmp176,
	strb	r2, [r4, r3]	@ tmp176, <variable>.CurrPic.field_pair_flag
	bls	.L2488	@,
.L2396:
	movw	r3, #:lower16:11197996	@ tmp288,
	movt	r3, #:upper16:11197996	@ tmp288,
	mov	r6, #0	@ tmp286,
	movw	r0, #:lower16:11196168	@ tmp285,
	ldr	sl, [r4, r3]	@ D.40827, <variable>.TotalFsNum
	movt	r0, #:upper16:11196168	@ tmp285,
	cmp	sl, r6	@ D.40827,
	strb	r6, [r4, r0]	@ tmp286, <variable>.CurrPic.state
	beq	.L2418	@,
	movw	r7, #:lower16:11169289	@ ivtmp.6297,
	movw	r9, #:lower16:11168420	@ ivtmp.6292,
	movt	r7, #:upper16:11169289	@ ivtmp.6297,
	movt	r9, #:upper16:11168420	@ ivtmp.6292,
	add	r8, r4, r9	@ ivtmp.6292, pMvcCtx, ivtmp.6292
	add	r7, r4, r7	@ ivtmp.6297, pMvcCtx, ivtmp.6297
	movw	r9, #:lower16:11168612	@ tmp451,
	movt	r9, #:upper16:11168612	@ tmp451,
.L2424:
	ldrb	r2, [r7, #0]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r2, #0	@ <variable>.is_used,
	bne	.L2419	@,
	mov	r0, #672	@,
	movw	r1, #:lower16:11169288	@ tmp293,
	mul	lr, r0, r6	@ tmp291,, i
	movt	r1, #:upper16:11169288	@ tmp293,
	add	ip, lr, r1	@ tmp293, tmp291, tmp293
	adds	r3, r4, ip	@ D.40823, pMvcCtx, tmp293
	beq	.L2420	@,
	ldr	lr, [r4, r9]	@ D.46346, <variable>.DPB.size
	cmp	lr, #0	@ D.46346,
	beq	.L2420	@,
	ldr	r2, [r8, #0]	@ D.46347, <variable>.DPB.fs
	sub	ip, lr, #1	@ tmp459, D.46346,
	and	r0, ip, #1	@ tmp461, tmp459,
	cmp	r2, #0	@ D.46347,
	beq	.L2437	@,
	cmp	r3, r2	@ D.40823, D.46347
	beq	.L2419	@,
.L2437:
	mov	r1, #1	@ i,
	cmp	r1, lr	@ i, D.46346
	add	r2, r8, #4	@ ivtmp.6292, ivtmp.6292,
	bcs	.L2420	@,
	cmp	r0, #0	@ tmp461,
	beq	.L2422	@,
	ldr	r0, [r8, #4]	@ D.46347, <variable>.DPB.fs
	cmp	r0, #0	@ D.46347,
	beq	.L2439	@,
	cmp	r3, r0	@ D.40823, D.46347
	beq	.L2419	@,
.L2439:
	add	r1, r1, #1	@ i, i,
	add	r2, r2, #4	@ ivtmp.6292, ivtmp.6292,
	cmp	r1, lr	@ i, D.46346
	bcs	.L2420	@,
.L2422:
	ldr	r0, [r2, #0]	@ D.46347, <variable>.DPB.fs
	add	r1, r1, #1	@ tmp462, i,
	add	ip, r2, #4	@ tmp463, ivtmp.6292,
	cmp	r0, #0	@ D.46347,
	beq	.L2421	@,
	cmp	r3, r0	@ D.40823, D.46347
	beq	.L2419	@,
.L2421:
	ldr	r2, [r2, #4]	@ D.46347, <variable>.DPB.fs
	cmp	r2, #0	@ D.46347,
	beq	.L2442	@,
	cmp	r3, r2	@ D.40823, D.46347
	beq	.L2419	@,
.L2442:
	add	r1, r1, #1	@ i, tmp462,
	add	r2, ip, #4	@ ivtmp.6292, tmp463,
	cmp	r1, lr	@ i, D.46346
	bcc	.L2422	@,
.L2420:
	mov	r7, #672	@ tmp307,
	movw	sl, #:lower16:11196168	@ tmp297,
	mla	r6, r7, r6, r4	@ tmp308, tmp307, i, pMvcCtx
	movt	sl, #:upper16:11196168	@ tmp297,
	movw	r7, #:lower16:11196640	@ tmp300,
	movw	lr, #:lower16:11196700	@ tmp302,
	movt	r7, #:upper16:11196640	@ tmp300,
	movt	lr, #:upper16:11196700	@ tmp302,
	movw	r8, #:lower16:11196184	@,
	movw	r9, #:lower16:11169296	@,
	movt	r8, #:upper16:11196184	@,
	movt	r9, #:upper16:11169296	@,
	add	r1, r6, r9	@, tmp308,
	str	r3, [r4, r7]	@ D.40823, <variable>.CurrPic.frame_store
	mov	r6, #0	@ tmp301,
	add	r0, r4, r8	@, pMvcCtx,
	mov	r2, #456	@,
	mov	r8, #1	@ tmp298,
	strb	r8, [r4, sl]	@ tmp298, <variable>.CurrPic.state
	str	r6, [r3, #624]	@ tmp301, <variable>.err_level
	mov	r3, #101	@ tmp303,
	str	r3, [r4, lr]	@ tmp303, <variable>.CurrPic.err_level
	bl	memcpy	@
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	ip, #:lower16:11196364	@ tmp314,
	movt	ip, #:upper16:11196364	@ tmp314,
	str	r6, [r4, ip]	@ tmp301, <variable>.CurrPic.fs_image.error_level
	strb	r6, [r0, #3]	@ tmp301, <variable>.mode_skip_flag
	ldr	r1, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [r1, #612]	@ tmp301, <variable>.is_displayed
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r6, [r2, #2]	@ tmp301, <variable>.is_reference
	ldr	r9, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r8, [r9, #4]	@ tmp298, <variable>.is_in_dpb
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r6, [r3, #608]	@ tmp301, <variable>.eFoState
	ldrb	r9, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	cmp	r9, r8	@ <variable>.CurrPic.state,
	bne	.L2418	@,
	ldr	r2, [fp, #-48]	@, %sfp
	movw	r8, #:lower16:11199520	@ tmp337,
	movt	r8, #:upper16:11199520	@ tmp337,
	rsbs	r1, r2, #1	@,
	movcc	r1, #0	@
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_NewLogicFs	@
	mov	r6, r0	@ LogicFsID,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r1, r6	@, LogicFsID
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ tmp351, pstLFs.6328,
	movne	r3, #1	@ tmp351
	cmp	r6, #0	@ LogicFsID,
	mov	r8, r0	@ pstLFs.6328,
	movlt	r3, #0	@, tmp351,
	cmp	r3, #0	@ tmp351,
	beq	.L2425	@,
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r1, [r0, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r1, #25	@ <variable>.eCapLevel,
	beq	.L2489	@,
.L2426:
	movw	r7, #:lower16:11196640	@ tmp365,
	movt	r7, #:upper16:11196640	@ tmp365,
	add	r1, r8, #8	@, pstLFs.6328,
	mov	r2, #456	@,
	ldr	lr, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	add	r0, lr, #8	@, <variable>.CurrPic.frame_store,
	bl	memcpy	@
	ldr	r2, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	add	r1, r2, #8	@, <variable>.CurrPic.frame_store,
	add	r0, r4, r0	@, pMvcCtx,
	mov	r2, #456	@,
	bl	memcpy	@
	ldr	r3, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r1, #:lower16:11196724	@ tmp384,
	movt	r1, #:upper16:11196724	@ tmp384,
	str	r6, [r3, #584]	@ LogicFsID, <variable>.logic_fs_id
	ldrsb	ip, [r8, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	str	ip, [r4, r1]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
.L2427:
	ldr	r3, [fp, #-48]	@, %sfp
	movw	r1, #:lower16:11196171	@ tmp394,
	movt	r1, #:upper16:11196171	@ tmp394,
	cmp	r3, #1	@,
	uxtb	r3, r5	@ D.40876, structure
	strb	r3, [r4, r1]	@ D.40876, <variable>.CurrPic.structure
	moveq	r0, #0	@ D.40774,
	beq	.L2406	@,
	movw	r2, #:lower16:11162625	@ tmp397,
	movt	r2, #:upper16:11162625	@ tmp397,
	movw	r0, #:lower16:11196640	@ tmp396,
	movt	r0, #:upper16:11196640	@ tmp396,
	ldrb	r8, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movw	r9, #:lower16:11196169	@ tmp400,
	ldr	r7, [r4, r0]	@ temp.6337, <variable>.CurrPic.frame_store
	movt	r9, #:upper16:11196169	@ tmp400,
	cmp	r8, #0	@ <variable>.CurrSlice.field_pic_flag,
	movne	r8, #3	@, iftmp.675,
	strb	r8, [r7, #464]	@ iftmp.675, <variable>.frame.structure
	ldrb	sl, [r4, r9]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	sl, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2490	@,
	movw	r1, #:lower16:11199536	@ tmp430,
	movt	r1, #:upper16:11199536	@ tmp430,
	movw	r9, #:lower16:11162644	@ tmp424,
	movw	r8, #:lower16:11162656	@ tmp427,
	ldr	r0, [r4, r1]	@, <variable>.PicCounter
	movt	r9, #:upper16:11162644	@ tmp424,
	movt	r8, #:upper16:11162656	@ tmp427,
	movw	r2, #:lower16:11164280	@ tmp433,
	movt	r2, #:upper16:11164280	@ tmp433,
	ldr	sl, [r4, r9]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r9, [r4, r8]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movw	ip, #:lower16:11197340	@ tmp426,
	str	r0, [fp, #-48]	@, %sfp
	movt	ip, #:upper16:11197340	@ tmp426,
	ldr	r7, [r4, r2]	@, <variable>.CurrSlice.view_id
	movw	r8, #:lower16:11197336	@ tmp421,
	movt	r8, #:upper16:11197336	@ tmp421,
	movw	r0, #:lower16:11197352	@ tmp429,
	movt	r0, #:upper16:11197352	@ tmp429,
	cmp	r5, #0	@ structure,
	str	r7, [fp, #-52]	@, %sfp
	movw	r7, #:lower16:11197344	@ tmp423,
	movt	r7, #:upper16:11197344	@ tmp423,
	strb	r3, [r4, r8]	@ D.40876, <variable>.PrevPic.structure
	str	r9, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	movw	r1, #:lower16:11197368	@ tmp432,
	str	sl, [r4, r7]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movt	r1, #:upper16:11197368	@ tmp432,
	ldr	r8, [fp, #-48]	@, %sfp
	movw	r2, #:lower16:11197356	@ tmp435,
	movw	r3, #:lower16:11197360	@ tmp436,
	movt	r2, #:upper16:11197356	@ tmp435,
	movt	r3, #:upper16:11197360	@ tmp436,
	str	r8, [r4, r0]	@, <variable>.PrevPic.pic_counter
	movne	r0, #0	@ D.40774,
	ldr	ip, [fp, #-52]	@, %sfp
	moveq	r0, r5	@ D.40774, structure
	str	r6, [r4, r2]	@ LogicFsID, <variable>.PrevPic.image_id
	movne	r2, #1	@ tmp437,
	streqb	r5, [r4, r3]	@ structure, <variable>.PrevPic.FrameStoreFlag
	str	ip, [r4, r1]	@, <variable>.PrevPic.view_id
	strneb	r2, [r4, r3]	@ tmp437, <variable>.PrevPic.FrameStoreFlag
.L2406:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2419:
	add	r6, r6, #1	@ i, i,
	add	r7, r7, #672	@ ivtmp.6297, ivtmp.6297,
	cmp	sl, r6	@ D.40827, i
	bhi	.L2424	@,
.L2418:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC68	@,
	movt	r1, #:upper16:.LC68	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.40774,
	b	.L2406	@
.L2496:
	cmp	r3, #1	@ D.40740,
	beq	.L2410	@,
.L2411:
	movw	r3, #:lower16:11196169	@ tmp280,
	movt	r3, #:upper16:11196169	@ tmp280,
	mov	r2, #0	@ tmp281,
.L2485:
	strb	r2, [r4, r3]	@ tmp281, <variable>.CurrPic.field_pair_flag
	b	.L2396	@
.L2488:
	movw	r6, #:lower16:11197336	@ tmp179,
	movt	r6, #:upper16:11197336	@ tmp179,
	ldrb	r3, [r4, r6]	@ zero_extendqisi2	@ D.40740, <variable>.PrevPic.structure
	cmp	r3, r2	@ D.40740,
	beq	.L2397	@,
	movw	r1, #:lower16:11197368	@ tmp180,
	movw	r6, #:lower16:11164280	@ tmp181,
	movt	r1, #:upper16:11197368	@ tmp180,
	movt	r6, #:upper16:11164280	@ tmp181,
	ldr	ip, [r4, r1]	@ <variable>.PrevPic.view_id, <variable>.PrevPic.view_id
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	ip, r2	@ <variable>.PrevPic.view_id, <variable>.CurrSlice.view_id
	beq	.L2398	@,
.L2397:
	movw	r0, #:lower16:11168612	@ tmp184,
	movt	r0, #:upper16:11168612	@ tmp184,
	ldr	r1, [r4, r0]	@ D.40744, <variable>.DPB.size
	subs	r3, r1, #1	@ j, D.40744,
	bmi	.L2396	@,
	movw	sl, #:lower16:2792104	@ tmp185,
	movt	sl, #:upper16:2792104	@ tmp185,
	add	r7, r1, sl	@ tmp185, D.40744, tmp185
	mov	lr, #0	@ tmp455,
	movw	ip, #:lower16:11196169	@ tmp454,
	movw	r6, #:lower16:11162644	@ tmp456,
	add	r2, r4, r7, asl #2	@, ivtmp.6306, pMvcCtx, tmp185,
	movw	sl, #:lower16:11162656	@ tmp458,
	movw	r7, #:lower16:11164280	@ tmp457,
	movt	ip, #:upper16:11196169	@ tmp454,
	ldr	r1, [r2], #4	@ D.40747, <variable>.DPB.fs
	movt	r6, #:upper16:11162644	@ tmp456,
	movt	r7, #:upper16:11164280	@ tmp457,
	movt	sl, #:upper16:11162656	@ tmp458,
	cmp	r1, lr	@ D.40747,
	and	r0, r3, #1	@ tmp465, j,
	beq	.L2444	@,
	cmp	r5, #1	@ structure,
	beq	.L2491	@,
	ldrb	r8, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #1	@ <variable>.is_used,
	beq	.L2448	@,
.L2446:
	strb	lr, [r4, ip]	@ tmp455, <variable>.CurrPic.field_pair_flag
.L2444:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r2, #4	@ ivtmp.6306, ivtmp.6306,
	bmi	.L2396	@,
	cmp	r0, #0	@ tmp465,
	beq	.L2408	@,
	ldr	r1, [r2, #-4]	@ D.40747, <variable>.DPB.fs
	cmp	r1, #0	@ D.40747,
	beq	.L2450	@,
	cmp	r5, #1	@ structure,
	beq	.L2492	@,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2454	@,
.L2452:
	strb	lr, [r4, ip]	@ tmp455, <variable>.CurrPic.field_pair_flag
.L2450:
	subs	r3, r3, #1	@ j, j,
	sub	r2, r2, #4	@ ivtmp.6306, ivtmp.6306,
	bmi	.L2396	@,
.L2408:
	ldr	r1, [r2, #-4]	@ D.40747, <variable>.DPB.fs
	cmp	r1, #0	@ D.40747,
	beq	.L2399	@,
	cmp	r5, #1	@ structure,
	beq	.L2493	@,
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #1	@ <variable>.is_used,
	beq	.L2401	@,
.L2402:
	strb	lr, [r4, ip]	@ tmp455, <variable>.CurrPic.field_pair_flag
.L2399:
	sub	r2, r2, #4	@ tmp467, ivtmp.6306,
	sub	r3, r3, #1	@ j, j,
	ldr	r0, [r2, #-4]	@ D.40747, <variable>.DPB.fs
	mov	r1, r3	@ tmp466, j
	cmp	r0, #0	@ D.40747,
	beq	.L2457	@,
	cmp	r5, #1	@ structure,
	beq	.L2494	@,
	ldrb	r8, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #1	@ <variable>.is_used,
	beq	.L2461	@,
.L2459:
	strb	lr, [r4, ip]	@ tmp455, <variable>.CurrPic.field_pair_flag
.L2457:
	subs	r3, r1, #1	@ j, tmp466,
	sub	r2, r2, #4	@ ivtmp.6306, tmp467,
	bpl	.L2408	@,
	b	.L2396	@
.L2494:
	ldrb	r8, [r0, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #2	@ <variable>.is_used,
	bne	.L2459	@,
.L2461:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r8, [r0, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, r8	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2459	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r8, [r0, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, r8	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2459	@,
	ldr	r8, [r4, sl]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r8, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2475	@,
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2459	@,
	b	.L2404	@
.L2493:
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #2	@ <variable>.is_used,
	bne	.L2402	@,
.L2401:
	ldr	r8, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r8, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2402	@,
	ldr	r8, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2402	@,
	ldr	r0, [r4, sl]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2403	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L2402	@,
.L2404:
	movw	r8, #:lower16:2792104	@ tmp204,
	movt	r8, #:upper16:2792104	@ tmp204,
	add	r7, r3, r8	@ tmp204, j, tmp204
	movw	r6, #:lower16:11196640	@ tmp210,
	movw	r8, #:lower16:11196169	@ tmp201,
	movt	r6, #:upper16:11196640	@ tmp210,
	add	r7, r4, r7, asl #2	@, tmp208, pMvcCtx, tmp204,
	movt	r8, #:upper16:11196169	@ tmp201,
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	ldr	sl, [r7, #4]	@ temp.6316, <variable>.DPB.fs
	mov	lr, #1	@ tmp202,
	mov	r2, #456	@,
	strb	lr, [r4, r8]	@ tmp202, <variable>.CurrPic.field_pair_flag
	add	r1, sl, #8	@, temp.6316,
	add	r0, r4, r0	@, pMvcCtx,
	str	sl, [r4, r6]	@ temp.6316, <variable>.CurrPic.frame_store
	bl	memcpy	@
	ldr	r1, [r7, #4]	@ tmp225, <variable>.DPB.fs
	movw	ip, #:lower16:11199520	@ tmp231,
	movt	ip, #:upper16:11199520	@ tmp231,
	ldr	r2, [r1, #584]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	str	r2, [sl, #584]	@ <variable>.logic_fs_id, <variable>.logic_fs_id
	ldr	r3, [r7, #4]	@ tmp234, <variable>.DPB.fs
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetLogicFs	@
	subs	r3, r0, #0	@ pstLFs,
	beq	.L2495	@,
	ldrb	r2, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	movw	ip, #:lower16:11196724	@ tmp241,
	ldrsb	r3, [r3, #4]	@ <variable>.PmvIdc, <variable>.PmvIdc
	movt	ip, #:upper16:11196724	@ tmp241,
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	str	r3, [r4, ip]	@ <variable>.PmvIdc, <variable>.CurrPic.pmv_address_idc
	beq	.L2396	@,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	cmp	lr, #0	@ <variable>.CurrPic.frame_store,
	beq	.L2396	@,
.L2417:
	mov	r6, #0	@ LogicFsID,
	b	.L2427	@
.L2490:
	movw	ip, #:lower16:11162656	@ tmp409,
	movt	ip, #:upper16:11162656	@ tmp409,
	movw	r1, #:lower16:11162644	@ tmp406,
	movw	r2, #:lower16:11199536	@ tmp412,
	ldr	r3, [r4, ip]	@, <variable>.CurrSlice.nal_ref_idc
	movt	r1, #:upper16:11162644	@ tmp406,
	movt	r2, #:upper16:11199536	@ tmp412,
	movw	r5, #:lower16:11164280	@ tmp419,
	ldr	sl, [r4, r1]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	movt	r5, #:upper16:11164280	@ tmp419,
	str	r3, [fp, #-48]	@, %sfp
	movw	r8, #:lower16:11197344	@ tmp405,
	ldr	r9, [r4, r2]	@, <variable>.PicCounter
	movt	r8, #:upper16:11197344	@ tmp405,
	movw	r0, #:lower16:11197368	@ tmp418,
	movt	r0, #:upper16:11197368	@ tmp418,
	movw	r7, #:lower16:11197340	@ tmp408,
	movt	r7, #:upper16:11197340	@ tmp408,
	str	r9, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:11197336	@ tmp402,
	ldr	r9, [r4, r5]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movt	r1, #:upper16:11197336	@ tmp402,
	str	sl, [r4, r8]	@ <variable>.CurrSlice.frame_num, <variable>.PrevPic.frame_num
	movw	r5, #:lower16:11197352	@ tmp411,
	movw	ip, #:lower16:11197356	@ tmp414,
	movt	r5, #:upper16:11197352	@ tmp411,
	str	r9, [r4, r0]	@ <variable>.CurrSlice.view_id, <variable>.PrevPic.view_id
	movt	ip, #:upper16:11197356	@ tmp414,
	ldr	r8, [fp, #-48]	@, %sfp
	movw	r3, #:lower16:11197360	@ tmp415,
	movt	r3, #:upper16:11197360	@ tmp415,
	mov	r2, #0	@ tmp403,
	mov	r0, r2	@ D.40774, tmp403
	str	r8, [r4, r7]	@, <variable>.PrevPic.nal_ref_idc
	ldr	r7, [fp, #-52]	@, %sfp
	str	r6, [r4, ip]	@ LogicFsID, <variable>.PrevPic.image_id
	strb	r2, [r4, r1]	@ tmp403, <variable>.PrevPic.structure
	str	r7, [r4, r5]	@, <variable>.PrevPic.pic_counter
	strb	r2, [r4, r3]	@ tmp403, <variable>.PrevPic.FrameStoreFlag
	b	.L2406	@
.L2489:
	movw	lr, #13564	@ tmp354,
	ldr	r7, [r8, #180]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	ldr	r3, [r4, lr]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	movw	r2, #13560	@ tmp357,
	ldr	ip, [r4, r2]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	lr, [r8, #112]	@ <variable>.stDispImg.luma_phy_addr, <variable>.stDispImg.luma_phy_addr
	mov	r1, r3, asl #4	@ HeightAligh, <variable>.CurHeightInMb,
	str	r1, [r8, #156]	@ HeightAligh, <variable>.stDispImg.image_height
	mov	r0, ip, asl #4	@ tmp359, <variable>.CurWidthInMb,
	str	r0, [r8, #152]	@ tmp359, <variable>.stDispImg.image_width
	mul	r7, r7, r1	@ ChromOffset, <variable>.stDispImg.image_stride, HeightAligh
	add	r0, r7, lr	@ D.40852, ChromOffset, <variable>.stDispImg.luma_phy_addr
	str	r0, [r8, #116]	@ D.40852, <variable>.stDispImg.chrom_phy_addr
	bl	MEM_Phy2Vir	@
	ldr	r3, [r8, #128]	@ <variable>.stDispImg.luma_2d_phy_addr, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r1, [r8, #96]	@ <variable>.stDispImg.top_luma_phy_addr, <variable>.stDispImg.top_luma_phy_addr
	add	ip, r7, r3	@ D.40866, ChromOffset, <variable>.stDispImg.luma_2d_phy_addr
	ldr	r2, [r8, #180]	@ <variable>.stDispImg.image_stride, <variable>.stDispImg.image_stride
	add	r7, r7, r1	@ D.40859, ChromOffset, <variable>.stDispImg.top_luma_phy_addr
	str	ip, [r8, #132]	@ D.40866, <variable>.stDispImg.chrom_2d_phy_addr
	add	r2, r7, r2	@ tmp363, D.40859, <variable>.stDispImg.image_stride
	str	r7, [r8, #100]	@ D.40859, <variable>.stDispImg.top_chrom_phy_addr
	str	r2, [r8, #108]	@ tmp363, <variable>.stDispImg.btm_chrom_phy_addr
	str	r0, [r8, #44]	@, <variable>.stDispImg.chrom_vir_addr
	mov	r0, ip	@, D.40866
	bl	MEM_Phy2Vir	@
	str	r0, [r8, #60]	@, <variable>.stDispImg.chrom_2d_vir_addr
	b	.L2426	@
.L2492:
	ldrb	r0, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r0, #2	@ <variable>.is_used,
	bne	.L2452	@,
.L2454:
	ldr	r8, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r0, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r8, r0	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2452	@,
	ldr	r8, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r0, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r8, r0	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2452	@,
	ldr	r0, [r4, sl]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2473	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2452	@,
	b	.L2404	@
.L2491:
	ldrb	r8, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r8, #2	@ <variable>.is_used,
	bne	.L2446	@,
.L2448:
	ldr	r9, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	ldr	r8, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	r9, r8	@ <variable>.CurrSlice.frame_num, <variable>.frame_num
	bne	.L2446	@,
	ldr	r9, [r4, r7]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r8, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	r9, r8	@ <variable>.CurrSlice.view_id, <variable>.view_id
	bne	.L2446	@,
	ldr	r8, [r4, sl]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r8, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L2471	@,
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	beq	.L2446	@,
	b	.L2404	@
.L2398:
	cmp	r5, #2	@ structure,
	beq	.L2496	@,
	cmp	r3, #2	@ D.40740,
	bne	.L2411	@,
.L2410:
	movw	r1, #:lower16:11199448	@ tmp248,
	movt	r1, #:upper16:11199448	@ tmp248,
	ldr	r6, [r4, r1]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r6, #2	@ <variable>.OldDecMode,
	beq	.L2412	@,
	movw	r2, #:lower16:11197344	@ tmp250,
	movw	r6, #:lower16:11162644	@ tmp251,
	movt	r2, #:upper16:11197344	@ tmp250,
	movt	r6, #:upper16:11162644	@ tmp251,
	ldr	ip, [r4, r2]	@ <variable>.PrevPic.frame_num, <variable>.PrevPic.frame_num
	ldr	r3, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	cmp	ip, r3	@ <variable>.PrevPic.frame_num, <variable>.CurrSlice.frame_num
	bne	.L2396	@,
.L2412:
	movw	ip, #:lower16:11162656	@ tmp254,
	movt	ip, #:upper16:11162656	@ tmp254,
	ldr	r1, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L2413	@,
	movw	r6, #:lower16:11197340	@ tmp256,
	movt	r6, #:upper16:11197340	@ tmp256,
	ldr	r3, [r4, r6]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.PrevPic.nal_ref_idc,
	bne	.L2396	@,
.L2414:
	movw	r2, #:lower16:11199536	@ tmp260,
	movw	r1, #:lower16:11199532	@ tmp261,
	movt	r2, #:upper16:11199536	@ tmp260,
	movt	r1, #:upper16:11199532	@ tmp261,
	ldr	r6, [r4, r2]	@ <variable>.PicCounter, <variable>.PicCounter
	ldr	r3, [r4, r1]	@ <variable>.PrevStorePicCounter, <variable>.PrevStorePicCounter
	rsb	ip, r3, r6	@ tmp262, <variable>.PrevStorePicCounter, <variable>.PicCounter
	cmp	ip, #2	@ tmp262,
	bhi	.L2396	@,
	movw	ip, #:lower16:11196640	@ tmp268,
	movt	ip, #:upper16:11196640	@ tmp268,
	movw	r3, #:lower16:11196169	@ tmp265,
	movt	r3, #:upper16:11196169	@ tmp265,
	ldr	r2, [r4, ip]	@ D.40767, <variable>.CurrPic.frame_store
	mov	r1, #1	@ tmp266,
	strb	r1, [r4, r3]	@ tmp266, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ D.40767,
	beq	.L2485	@,
	cmp	r5, #2	@ structure,
	beq	.L2497	@,
	ldrb	r1, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r1, #2	@ <variable>.is_used,
	beq	.L2417	@,
.L2486:
	mov	sl, #0	@ tmp275,
	strb	sl, [r4, r3]	@ tmp275, <variable>.CurrPic.field_pair_flag
	b	.L2396	@
.L2403:
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2402	@,
	b	.L2404	@
.L2475:
	ldrb	r0, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L2459	@,
	b	.L2404	@
.L2425:
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, r3	@, tmp351
	strb	r3, [r4, sl]	@ tmp351, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC69	@,
	movt	r1, #:upper16:.LC69	@,
	strb	r3, [ip, #4]	@ tmp351, <variable>.is_in_dpb
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r9	@, <variable>.CurrPic.state
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.40774,
	b	.L2406	@
.L2495:
	movw	r1, #:lower16:.LC67	@,
	movw	r2, #6244	@,
	movt	r1, #:upper16:.LC67	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40774,
	b	.L2406	@
.L2497:
	ldrb	r6, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r6, r1	@ <variable>.is_used,
	bne	.L2486	@,
	mov	r6, #0	@ LogicFsID,
	b	.L2427	@
.L2413:
	movw	r1, #:lower16:11197340	@ tmp258,
	movt	r1, #:upper16:11197340	@ tmp258,
	ldr	r2, [r4, r1]	@ <variable>.PrevPic.nal_ref_idc, <variable>.PrevPic.nal_ref_idc
	cmp	r2, #0	@ <variable>.PrevPic.nal_ref_idc,
	beq	.L2396	@,
	b	.L2414	@
.L2471:
	ldrb	r1, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r1, #0	@ <variable>.is_reference,
	bne	.L2446	@,
	b	.L2404	@
.L2473:
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	bne	.L2452	@,
	b	.L2404	@
	.fnend
	.size	MVC_AllocFrameStore, .-MVC_AllocFrameStore
	.align	2
	.global	MVC_OutputFrmToVO
	.type	MVC_OutputFrmToVO, %function
MVC_OutputFrmToVO:
	.fnstart
.LFB1548:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r0, #0	@ pMvcCtx,
	cmpne	r1, #0	@, pFrameStore,
	mov	r5, r1	@ pFrameStore, pFrameStore
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movne	r3, #0	@, tmp153
	moveq	r3, #1	@, tmp153
	mov	r6, r2	@ is_last_frame, is_last_frame
	beq	.L2514	@,
	ldr	r1, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ <variable>.s32DecOrderOutput,
	ble	.L2501	@,
	movw	r2, #:lower16:11199448	@ tmp157,
	movt	r2, #:upper16:11199448	@ tmp157,
	ldr	ip, [r0, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	ip, #2	@ <variable>.OldDecMode,
	beq	.L2501	@,
	movw	ip, #:lower16:11197372	@ tmp159,
	movt	ip, #:upper16:11197372	@ tmp159,
	ldr	r1, [r0, ip]	@ D.37703, <variable>.pDirectOutBuf
	cmp	r1, #0	@ D.37703,
	strneb	r3, [r1, #1]	@ tmp153, <variable>.is_used
	movne	r0, #1	@ D.37695,
	strne	r3, [r4, ip]	@ tmp153, <variable>.pDirectOutBuf
	beq	.L2502	@,
.L2500:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L2501:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	cmn	r0, #3	@,
	beq	.L2502	@,
	movw	r7, #:lower16:11197372	@ tmp164,
	movt	r7, #:upper16:11197372	@ tmp164,
	ldr	r1, [r4, r7]	@ temp.6377, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6377,
	beq	.L2503	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r7]	@, <variable>.pDirectOutBuf
	bl	MVC_CheckFrameStore	@
	subs	r3, r0, #0	@ ret.6379,
	beq	.L2515	@,
	cmn	r3, #3	@ ret.6379,
	beq	.L2508	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC73	@,
	movw	r2, #1875	@,
	movt	r1, #:upper16:.LC73	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r3, #184]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
.L2508:
	movw	ip, #:lower16:11197372	@ tmp217,
	movt	ip, #:upper16:11197372	@ tmp217,
	mov	lr, #0	@ tmp218,
	ldr	r0, [r4, ip]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	lr, [r0, #1]	@ tmp218, <variable>.is_used
	str	lr, [r4, ip]	@ tmp218, <variable>.pDirectOutBuf
.L2503:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_GetImagePara	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pFrameStore
	bl	MVC_CheckFrameStore	@
	subs	r3, r0, #0	@ ret.6393,
	beq	.L2516	@,
	mov	r2, #1920	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC73	@,
	movt	r1, #:upper16:.LC73	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r5, #184]	@, <variable>.fs_image.image_id
	bl	MVC_DEC_RecycleImage	@
	mov	r0, #2	@ D.37695,
	b	.L2500	@
.L2514:
	mov	r2, r0	@, pMvcCtx
	mov	r3, r1	@, pFrameStore
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC70	@,
	movt	r1, #:upper16:.LC70	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@ D.37695,
	b	.L2500	@
.L2502:
	mov	r0, #1	@ D.37695,
	b	.L2500	@
.L2515:
	ldr	r0, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r8, #:lower16:11199520	@ tmp167,
	movt	r8, #:upper16:11199520	@ tmp167,
	mov	r2, #1	@,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r3, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r8, r0, #0	@ pstLogicFsImage,
	beq	.L2517	@,
	ldr	lr, [r4, r7]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11199520	@ tmp189,
	movt	r7, #:upper16:11199520	@ tmp189,
	mov	r1, #15	@,
	cmp	r6, #1	@ is_last_frame,
	cmpeq	lr, r5	@, <variable>.pDirectOutBuf, pFrameStore
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #8	@, pMvcCtx,
	moveq	lr, #1	@ tmp188,
	streq	lr, [r8, #216]	@ tmp188, <variable>.last_frame
	ldr	r0, [r4, r7]	@ <variable>.ChanID, <variable>.ChanID
	str	r8, [sp, #0]	@ pstLogicFsImage,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.6386,
	bne	.L2518	@,
	mov	r1, r8	@, pstLogicFsImage
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	movw	r1, #:lower16:11199552	@ tmp204,
	movw	r3, #:lower16:11199544	@ tmp208,
	movt	r1, #:upper16:11199552	@ tmp204,
	movt	r3, #:upper16:11199544	@ tmp208,
	ldr	r2, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	ip, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r2, #1	@ tmp207, <variable>.numOutputFrame,
	str	r0, [r4, r1]	@ tmp207, <variable>.numOutputFrame
	add	r2, ip, #2	@ tmp211, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp211, <variable>.PicOutCounter
	b	.L2508	@
.L2516:
	movw	r7, #:lower16:11199520	@ tmp222,
	movt	r7, #:upper16:11199520	@ tmp222,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r7, r0, #0	@ pstLogicFsImage.6397,
	beq	.L2519	@,
	cmp	r6, #1	@ is_last_frame,
	streq	r6, [r7, #216]	@ is_last_frame, <variable>.last_frame
	movw	r6, #:lower16:11199520	@ tmp231,
	movt	r6, #:upper16:11199520	@ tmp231,
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	ldr	r0, [r4, r6]	@ <variable>.ChanID, <variable>.ChanID
	add	r3, r4, #8	@, pMvcCtx,
	str	r7, [sp, #0]	@ pstLogicFsImage.6397,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@ ret.6401,
	bne	.L2520	@,
	mov	r1, r7	@, pstLogicFsImage.6397
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SetFrmRepeatCount	@
	movw	r2, #:lower16:11199552	@ tmp238,
	movw	r3, #:lower16:11199544	@ tmp242,
	movt	r2, #:upper16:11199552	@ tmp238,
	movt	r3, #:upper16:11199544	@ tmp242,
	mov	r0, #0	@ D.37695,
	ldr	ip, [r4, r2]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	ldr	r1, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	ip, ip, #1	@ tmp241, <variable>.numOutputFrame,
	str	ip, [r4, r2]	@ tmp241, <variable>.numOutputFrame
	add	r2, r1, #2	@ tmp245, <variable>.PicOutCounter,
	str	r2, [r4, r3]	@ tmp245, <variable>.PicOutCounter
	b	.L2500	@
.L2518:
	movw	r5, #:lower16:11197372	@ tmp194,
	movt	r5, #:upper16:11197372	@ tmp194,
	mov	r2, r0	@, ret.6386
	movw	r1, #:lower16:.LC72	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC72	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r6, #0	@ tmp195,
	mov	r2, r6	@, tmp195
	strb	r6, [r1, #1]	@ tmp195, <variable>.is_used
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	str	r6, [r4, r5]	@ tmp195, <variable>.pDirectOutBuf
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.37695,
	b	.L2500	@
.L2520:
	mov	r2, r0	@, ret.6401
	movw	r1, #:lower16:.LC72	@,
	mov	r0, #0	@,
	movt	r1, #:upper16:.LC72	@,
	bl	dprint_vfmw	@
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	mov	r2, #0	@,
	bl	FSP_SetDisplay	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.37695,
	b	.L2500	@
.L2517:
	movw	r1, #:lower16:.LC71	@,
	movw	r2, #1848	@,
	movt	r1, #:upper16:.LC71	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37695,
	b	.L2500	@
.L2519:
	movw	r1, #:lower16:.LC71	@,
	movw	r2, #1895	@,
	movt	r1, #:upper16:.LC71	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.37695,
	b	.L2500	@
	.fnend
	.size	MVC_OutputFrmToVO, .-MVC_OutputFrmToVO
	.align	2
	.global	MVC_InitDPB
	.type	MVC_InitDPB, %function
MVC_InitDPB:
	.fnstart
.LFB1599:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_ClearAllSlice	@
	movw	r3, #:lower16:11168420	@ tmp191,
	movt	r3, #:upper16:11168420	@ tmp191,
	ldr	r2, [r4, r3]	@ temp.6478, <variable>.DPB.fs
	cmp	r2, #0	@ temp.6478,
	beq	.L2522	@,
	movw	r5, #:lower16:11199520	@ tmp192,
	movt	r5, #:upper16:11199520	@ tmp192,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2522:
	movw	r0, #:lower16:11168484	@ tmp195,
	movt	r0, #:upper16:11168484	@ tmp195,
	ldr	r2, [r4, r0]	@ temp.6477, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6477,
	beq	.L2523	@,
	movw	r6, #:lower16:11199520	@ tmp196,
	movt	r6, #:upper16:11199520	@ tmp196,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2523:
	movw	r1, #:lower16:11168548	@ tmp199,
	movt	r1, #:upper16:11168548	@ tmp199,
	ldr	r2, [r4, r1]	@ temp.6480, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6480,
	beq	.L2524	@,
	movw	r7, #:lower16:11199520	@ tmp200,
	movt	r7, #:upper16:11199520	@ tmp200,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2524:
	movw	lr, #:lower16:11168420	@ tmp207,
	movw	ip, #:lower16:11168424	@ tmp209,
	movt	lr, #:upper16:11168420	@ tmp207,
	movt	ip, #:upper16:11168424	@ tmp209,
	mov	r2, #0	@ tmp204,
	movw	sl, #:lower16:11168548	@ tmp203,
	str	r2, [r4, lr]	@ tmp204, <variable>.DPB.fs
	movt	sl, #:upper16:11168548	@ tmp203,
	ldr	r0, [r4, ip]	@ temp.6483, <variable>.DPB.fs
	movw	r8, #:lower16:11168484	@ tmp205,
	movt	r8, #:upper16:11168484	@ tmp205,
	str	r2, [r4, sl]	@ tmp204, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6483,
	str	r2, [r4, r8]	@ tmp204, <variable>.DPB.fs_ref
	beq	.L2525	@,
	movw	r3, #:lower16:11199520	@ tmp210,
	movt	r3, #:upper16:11199520	@ tmp210,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2525:
	movw	r5, #:lower16:11168488	@ tmp213,
	movt	r5, #:upper16:11168488	@ tmp213,
	ldr	r2, [r4, r5]	@ temp.6486, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6486,
	beq	.L2526	@,
	movw	r6, #:lower16:11199520	@ tmp214,
	movt	r6, #:upper16:11199520	@ tmp214,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2526:
	movw	r0, #:lower16:11168552	@ tmp217,
	movt	r0, #:upper16:11168552	@ tmp217,
	ldr	r2, [r4, r0]	@ temp.6489, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6489,
	beq	.L2527	@,
	movw	r7, #:lower16:11199520	@ tmp218,
	movt	r7, #:upper16:11199520	@ tmp218,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2527:
	movw	ip, #:lower16:11168424	@ tmp225,
	movw	sl, #:lower16:11168428	@ tmp227,
	movt	ip, #:upper16:11168424	@ tmp225,
	movt	sl, #:upper16:11168428	@ tmp227,
	mov	r2, #0	@ tmp222,
	movw	r1, #:lower16:11168552	@ tmp221,
	str	r2, [r4, ip]	@ tmp222, <variable>.DPB.fs
	movt	r1, #:upper16:11168552	@ tmp221,
	ldr	r0, [r4, sl]	@ temp.6492, <variable>.DPB.fs
	movw	r8, #:lower16:11168488	@ tmp223,
	movt	r8, #:upper16:11168488	@ tmp223,
	str	r2, [r4, r1]	@ tmp222, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6492,
	str	r2, [r4, r8]	@ tmp222, <variable>.DPB.fs_ref
	beq	.L2528	@,
	movw	lr, #:lower16:11199520	@ tmp228,
	movt	lr, #:upper16:11199520	@ tmp228,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2528:
	movw	r3, #:lower16:11168492	@ tmp231,
	movt	r3, #:upper16:11168492	@ tmp231,
	ldr	r2, [r4, r3]	@ temp.6495, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6495,
	beq	.L2529	@,
	movw	r5, #:lower16:11199520	@ tmp232,
	movt	r5, #:upper16:11199520	@ tmp232,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2529:
	movw	r6, #:lower16:11168556	@ tmp235,
	movt	r6, #:upper16:11168556	@ tmp235,
	ldr	r2, [r4, r6]	@ temp.6498, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6498,
	beq	.L2530	@,
	movw	r7, #:lower16:11199520	@ tmp236,
	movt	r7, #:upper16:11199520	@ tmp236,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2530:
	movw	r0, #:lower16:11168428	@ tmp243,
	movw	sl, #:lower16:11168432	@ tmp245,
	movt	r0, #:upper16:11168428	@ tmp243,
	movt	sl, #:upper16:11168432	@ tmp245,
	mov	r2, #0	@ tmp240,
	movw	r1, #:lower16:11168556	@ tmp239,
	str	r2, [r4, r0]	@ tmp240, <variable>.DPB.fs
	movt	r1, #:upper16:11168556	@ tmp239,
	ldr	r0, [r4, sl]	@ temp.6501, <variable>.DPB.fs
	movw	r8, #:lower16:11168492	@ tmp241,
	movt	r8, #:upper16:11168492	@ tmp241,
	str	r2, [r4, r1]	@ tmp240, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6501,
	str	r2, [r4, r8]	@ tmp240, <variable>.DPB.fs_ref
	beq	.L2531	@,
	movw	ip, #:lower16:11199520	@ tmp246,
	movt	ip, #:upper16:11199520	@ tmp246,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2531:
	movw	lr, #:lower16:11168496	@ tmp249,
	movt	lr, #:upper16:11168496	@ tmp249,
	ldr	r2, [r4, lr]	@ temp.6504, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6504,
	beq	.L2532	@,
	movw	r3, #:lower16:11199520	@ tmp250,
	movt	r3, #:upper16:11199520	@ tmp250,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2532:
	movw	r5, #:lower16:11168560	@ tmp253,
	movt	r5, #:upper16:11168560	@ tmp253,
	ldr	r2, [r4, r5]	@ temp.6507, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6507,
	beq	.L2533	@,
	movw	r6, #:lower16:11199520	@ tmp254,
	movt	r6, #:upper16:11199520	@ tmp254,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2533:
	movw	r1, #:lower16:11168432	@ tmp261,
	movw	sl, #:lower16:11168436	@ tmp263,
	movt	r1, #:upper16:11168432	@ tmp261,
	movt	sl, #:upper16:11168436	@ tmp263,
	mov	r7, #0	@ tmp258,
	movw	r8, #:lower16:11168560	@ tmp257,
	str	r7, [r4, r1]	@ tmp258, <variable>.DPB.fs
	movt	r8, #:upper16:11168560	@ tmp257,
	ldr	r0, [r4, sl]	@ temp.6510, <variable>.DPB.fs
	movw	r2, #:lower16:11168496	@ tmp259,
	movt	r2, #:upper16:11168496	@ tmp259,
	str	r7, [r4, r8]	@ tmp258, <variable>.DPB.fs_ltref
	cmp	r0, r7	@ temp.6510,
	str	r7, [r4, r2]	@ tmp258, <variable>.DPB.fs_ref
	beq	.L2534	@,
	movw	ip, #:lower16:11199520	@ tmp264,
	movt	ip, #:upper16:11199520	@ tmp264,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2534:
	movw	r0, #:lower16:11168500	@ tmp267,
	movt	r0, #:upper16:11168500	@ tmp267,
	ldr	r2, [r4, r0]	@ temp.6513, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6513,
	beq	.L2535	@,
	movw	lr, #:lower16:11199520	@ tmp268,
	movt	lr, #:upper16:11199520	@ tmp268,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2535:
	movw	r3, #:lower16:11168564	@ tmp271,
	movt	r3, #:upper16:11168564	@ tmp271,
	ldr	r2, [r4, r3]	@ temp.6516, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6516,
	beq	.L2536	@,
	movw	r5, #:lower16:11199520	@ tmp272,
	movt	r5, #:upper16:11199520	@ tmp272,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2536:
	movw	sl, #:lower16:11168436	@ tmp279,
	movw	r8, #:lower16:11168440	@ tmp281,
	movt	sl, #:upper16:11168436	@ tmp279,
	movt	r8, #:upper16:11168440	@ tmp281,
	mov	r6, #0	@ tmp276,
	movw	r2, #:lower16:11168564	@ tmp275,
	str	r6, [r4, sl]	@ tmp276, <variable>.DPB.fs
	movt	r2, #:upper16:11168564	@ tmp275,
	ldr	r0, [r4, r8]	@ temp.6519, <variable>.DPB.fs
	movw	r7, #:lower16:11168500	@ tmp277,
	movt	r7, #:upper16:11168500	@ tmp277,
	str	r6, [r4, r2]	@ tmp276, <variable>.DPB.fs_ltref
	cmp	r0, r6	@ temp.6519,
	str	r6, [r4, r7]	@ tmp276, <variable>.DPB.fs_ref
	beq	.L2537	@,
	movw	ip, #:lower16:11199520	@ tmp282,
	movt	ip, #:upper16:11199520	@ tmp282,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2537:
	movw	r1, #:lower16:11168504	@ tmp285,
	movt	r1, #:upper16:11168504	@ tmp285,
	ldr	r2, [r4, r1]	@ temp.6522, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6522,
	beq	.L2538	@,
	movw	lr, #:lower16:11199520	@ tmp286,
	movt	lr, #:upper16:11199520	@ tmp286,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2538:
	movw	r0, #:lower16:11168568	@ tmp289,
	movt	r0, #:upper16:11168568	@ tmp289,
	ldr	r2, [r4, r0]	@ temp.6525, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6525,
	beq	.L2539	@,
	movw	r3, #:lower16:11199520	@ tmp290,
	movt	r3, #:upper16:11199520	@ tmp290,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2539:
	movw	r8, #:lower16:11168440	@ tmp297,
	movw	r2, #:lower16:11168444	@ tmp299,
	movt	r8, #:upper16:11168440	@ tmp297,
	movt	r2, #:upper16:11168444	@ tmp299,
	mov	r5, #0	@ tmp294,
	movw	r7, #:lower16:11168568	@ tmp293,
	str	r5, [r4, r8]	@ tmp294, <variable>.DPB.fs
	movt	r7, #:upper16:11168568	@ tmp293,
	ldr	r0, [r4, r2]	@ temp.6528, <variable>.DPB.fs
	movw	r6, #:lower16:11168504	@ tmp295,
	movt	r6, #:upper16:11168504	@ tmp295,
	str	r5, [r4, r7]	@ tmp294, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6528,
	str	r5, [r4, r6]	@ tmp294, <variable>.DPB.fs_ref
	beq	.L2540	@,
	movw	sl, #:lower16:11199520	@ tmp300,
	movt	sl, #:upper16:11199520	@ tmp300,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2540:
	movw	ip, #:lower16:11168508	@ tmp303,
	movt	ip, #:upper16:11168508	@ tmp303,
	ldr	r2, [r4, ip]	@ temp.6531, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6531,
	beq	.L2541	@,
	movw	lr, #:lower16:11199520	@ tmp304,
	movt	lr, #:upper16:11199520	@ tmp304,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2541:
	movw	r1, #:lower16:11168572	@ tmp307,
	movt	r1, #:upper16:11168572	@ tmp307,
	ldr	r2, [r4, r1]	@ temp.6534, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6534,
	beq	.L2542	@,
	movw	r3, #:lower16:11199520	@ tmp308,
	movt	r3, #:upper16:11199520	@ tmp308,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2542:
	movw	r0, #:lower16:11168444	@ tmp315,
	movw	r2, #:lower16:11168448	@ tmp317,
	movt	r0, #:upper16:11168444	@ tmp315,
	movt	r2, #:upper16:11168448	@ tmp317,
	mov	r5, #0	@ tmp312,
	movw	r7, #:lower16:11168572	@ tmp311,
	str	r5, [r4, r0]	@ tmp312, <variable>.DPB.fs
	movt	r7, #:upper16:11168572	@ tmp311,
	ldr	r0, [r4, r2]	@ temp.6537, <variable>.DPB.fs
	movw	r6, #:lower16:11168508	@ tmp313,
	movt	r6, #:upper16:11168508	@ tmp313,
	str	r5, [r4, r7]	@ tmp312, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6537,
	str	r5, [r4, r6]	@ tmp312, <variable>.DPB.fs_ref
	beq	.L2543	@,
	movw	r8, #:lower16:11199520	@ tmp318,
	movt	r8, #:upper16:11199520	@ tmp318,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2543:
	movw	sl, #:lower16:11168512	@ tmp321,
	movt	sl, #:upper16:11168512	@ tmp321,
	ldr	r2, [r4, sl]	@ temp.6540, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6540,
	beq	.L2544	@,
	movw	ip, #:lower16:11199520	@ tmp322,
	movt	ip, #:upper16:11199520	@ tmp322,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2544:
	movw	lr, #:lower16:11168576	@ tmp325,
	movt	lr, #:upper16:11168576	@ tmp325,
	ldr	r2, [r4, lr]	@ temp.6543, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6543,
	beq	.L2545	@,
	movw	r3, #:lower16:11199520	@ tmp326,
	movt	r3, #:upper16:11199520	@ tmp326,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2545:
	movw	r2, #:lower16:11168448	@ tmp333,
	movw	r7, #:lower16:11168452	@ tmp335,
	movt	r2, #:upper16:11168448	@ tmp333,
	movt	r7, #:upper16:11168452	@ tmp335,
	mov	r5, #0	@ tmp330,
	movw	r1, #:lower16:11168576	@ tmp329,
	str	r5, [r4, r2]	@ tmp330, <variable>.DPB.fs
	movt	r1, #:upper16:11168576	@ tmp329,
	ldr	r0, [r4, r7]	@ temp.6546, <variable>.DPB.fs
	movw	r6, #:lower16:11168512	@ tmp331,
	movt	r6, #:upper16:11168512	@ tmp331,
	str	r5, [r4, r1]	@ tmp330, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6546,
	str	r5, [r4, r6]	@ tmp330, <variable>.DPB.fs_ref
	beq	.L2546	@,
	movw	r8, #:lower16:11199520	@ tmp336,
	movt	r8, #:upper16:11199520	@ tmp336,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2546:
	movw	r0, #:lower16:11168516	@ tmp339,
	movt	r0, #:upper16:11168516	@ tmp339,
	ldr	r2, [r4, r0]	@ temp.6549, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6549,
	beq	.L2547	@,
	movw	sl, #:lower16:11199520	@ tmp340,
	movt	sl, #:upper16:11199520	@ tmp340,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2547:
	movw	ip, #:lower16:11168580	@ tmp343,
	movt	ip, #:upper16:11168580	@ tmp343,
	ldr	r2, [r4, ip]	@ temp.6552, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6552,
	beq	.L2548	@,
	movw	lr, #:lower16:11199520	@ tmp344,
	movt	lr, #:upper16:11199520	@ tmp344,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2548:
	movw	r1, #:lower16:11168452	@ tmp351,
	movw	r7, #:lower16:11168456	@ tmp353,
	movt	r1, #:upper16:11168452	@ tmp351,
	movt	r7, #:upper16:11168456	@ tmp353,
	mov	r5, #0	@ tmp348,
	movw	r6, #:lower16:11168580	@ tmp347,
	str	r5, [r4, r1]	@ tmp348, <variable>.DPB.fs
	movt	r6, #:upper16:11168580	@ tmp347,
	ldr	r0, [r4, r7]	@ temp.6555, <variable>.DPB.fs
	movw	r3, #:lower16:11168516	@ tmp349,
	movt	r3, #:upper16:11168516	@ tmp349,
	str	r5, [r4, r6]	@ tmp348, <variable>.DPB.fs_ltref
	cmp	r0, r5	@ temp.6555,
	str	r5, [r4, r3]	@ tmp348, <variable>.DPB.fs_ref
	beq	.L2549	@,
	movw	r8, #:lower16:11199520	@ tmp354,
	movt	r8, #:upper16:11199520	@ tmp354,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2549:
	movw	r0, #:lower16:11168520	@ tmp357,
	movt	r0, #:upper16:11168520	@ tmp357,
	ldr	r2, [r4, r0]	@ temp.6558, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6558,
	beq	.L2550	@,
	movw	sl, #:lower16:11199520	@ tmp358,
	movt	sl, #:upper16:11199520	@ tmp358,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2550:
	movw	ip, #:lower16:11168584	@ tmp361,
	movt	ip, #:upper16:11168584	@ tmp361,
	ldr	r2, [r4, ip]	@ temp.6561, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6561,
	beq	.L2551	@,
	movw	lr, #:lower16:11199520	@ tmp362,
	movt	lr, #:upper16:11199520	@ tmp362,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2551:
	movw	r7, #:lower16:11168456	@ tmp369,
	movw	r6, #:lower16:11168460	@ tmp371,
	movt	r7, #:upper16:11168456	@ tmp369,
	movt	r6, #:upper16:11168460	@ tmp371,
	mov	r2, #0	@ tmp366,
	movw	r3, #:lower16:11168584	@ tmp365,
	str	r2, [r4, r7]	@ tmp366, <variable>.DPB.fs
	movt	r3, #:upper16:11168584	@ tmp365,
	ldr	r0, [r4, r6]	@ temp.6564, <variable>.DPB.fs
	movw	r5, #:lower16:11168520	@ tmp367,
	movt	r5, #:upper16:11168520	@ tmp367,
	str	r2, [r4, r3]	@ tmp366, <variable>.DPB.fs_ltref
	cmp	r0, r2	@ temp.6564,
	str	r2, [r4, r5]	@ tmp366, <variable>.DPB.fs_ref
	beq	.L2552	@,
	movw	r8, #:lower16:11199520	@ tmp372,
	movt	r8, #:upper16:11199520	@ tmp372,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2552:
	movw	r1, #:lower16:11168524	@ tmp375,
	movt	r1, #:upper16:11168524	@ tmp375,
	ldr	r2, [r4, r1]	@ temp.6567, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6567,
	beq	.L2553	@,
	movw	sl, #:lower16:11199520	@ tmp376,
	movt	sl, #:upper16:11199520	@ tmp376,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2553:
	movw	r0, #:lower16:11168588	@ tmp379,
	movt	r0, #:upper16:11168588	@ tmp379,
	ldr	r2, [r4, r0]	@ temp.6570, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6570,
	beq	.L2554	@,
	movw	ip, #:lower16:11199520	@ tmp380,
	movt	ip, #:upper16:11199520	@ tmp380,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2554:
	movw	r6, #:lower16:11168460	@ tmp387,
	movw	r3, #:lower16:11168464	@ tmp389,
	movt	r6, #:upper16:11168460	@ tmp387,
	movt	r3, #:upper16:11168464	@ tmp389,
	mov	lr, #0	@ tmp384,
	movw	r5, #:lower16:11168588	@ tmp383,
	str	lr, [r4, r6]	@ tmp384, <variable>.DPB.fs
	movt	r5, #:upper16:11168588	@ tmp383,
	ldr	r0, [r4, r3]	@ temp.6573, <variable>.DPB.fs
	movw	r2, #:lower16:11168524	@ tmp385,
	movt	r2, #:upper16:11168524	@ tmp385,
	str	lr, [r4, r5]	@ tmp384, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6573,
	str	lr, [r4, r2]	@ tmp384, <variable>.DPB.fs_ref
	beq	.L2555	@,
	movw	r7, #:lower16:11199520	@ tmp390,
	movt	r7, #:upper16:11199520	@ tmp390,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2555:
	movw	r8, #:lower16:11168528	@ tmp393,
	movt	r8, #:upper16:11168528	@ tmp393,
	ldr	r2, [r4, r8]	@ temp.6576, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6576,
	beq	.L2556	@,
	movw	sl, #:lower16:11199520	@ tmp394,
	movt	sl, #:upper16:11199520	@ tmp394,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2556:
	movw	r1, #:lower16:11168592	@ tmp397,
	movt	r1, #:upper16:11168592	@ tmp397,
	ldr	r2, [r4, r1]	@ temp.6579, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6579,
	beq	.L2557	@,
	movw	ip, #:lower16:11199520	@ tmp398,
	movt	ip, #:upper16:11199520	@ tmp398,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2557:
	movw	r0, #:lower16:11168464	@ tmp405,
	movw	r3, #:lower16:11168468	@ tmp407,
	movt	r0, #:upper16:11168464	@ tmp405,
	movt	r3, #:upper16:11168468	@ tmp407,
	mov	lr, #0	@ tmp402,
	movw	r5, #:lower16:11168592	@ tmp401,
	str	lr, [r4, r0]	@ tmp402, <variable>.DPB.fs
	movt	r5, #:upper16:11168592	@ tmp401,
	ldr	r0, [r4, r3]	@ temp.6582, <variable>.DPB.fs
	movw	r2, #:lower16:11168528	@ tmp403,
	movt	r2, #:upper16:11168528	@ tmp403,
	str	lr, [r4, r5]	@ tmp402, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6582,
	str	lr, [r4, r2]	@ tmp402, <variable>.DPB.fs_ref
	beq	.L2558	@,
	movw	r6, #:lower16:11199520	@ tmp408,
	movt	r6, #:upper16:11199520	@ tmp408,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2558:
	movw	r7, #:lower16:11168532	@ tmp411,
	movt	r7, #:upper16:11168532	@ tmp411,
	ldr	r2, [r4, r7]	@ temp.6585, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6585,
	beq	.L2559	@,
	movw	r8, #:lower16:11199520	@ tmp412,
	movt	r8, #:upper16:11199520	@ tmp412,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2559:
	movw	sl, #:lower16:11168596	@ tmp415,
	movt	sl, #:upper16:11168596	@ tmp415,
	ldr	r2, [r4, sl]	@ temp.6588, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6588,
	beq	.L2560	@,
	movw	ip, #:lower16:11199520	@ tmp416,
	movt	ip, #:upper16:11199520	@ tmp416,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2560:
	movw	r3, #:lower16:11168468	@ tmp423,
	movw	r5, #:lower16:11168472	@ tmp425,
	movt	r3, #:upper16:11168468	@ tmp423,
	movt	r5, #:upper16:11168472	@ tmp425,
	mov	lr, #0	@ tmp420,
	movw	r1, #:lower16:11168596	@ tmp419,
	str	lr, [r4, r3]	@ tmp420, <variable>.DPB.fs
	movt	r1, #:upper16:11168596	@ tmp419,
	ldr	r0, [r4, r5]	@ temp.6591, <variable>.DPB.fs
	movw	r2, #:lower16:11168532	@ tmp421,
	movt	r2, #:upper16:11168532	@ tmp421,
	str	lr, [r4, r1]	@ tmp420, <variable>.DPB.fs_ltref
	cmp	r0, lr	@ temp.6591,
	str	lr, [r4, r2]	@ tmp420, <variable>.DPB.fs_ref
	beq	.L2561	@,
	movw	r6, #:lower16:11199520	@ tmp426,
	movt	r6, #:upper16:11199520	@ tmp426,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2561:
	movw	r0, #:lower16:11168536	@ tmp429,
	movt	r0, #:upper16:11168536	@ tmp429,
	ldr	r2, [r4, r0]	@ temp.6594, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6594,
	beq	.L2562	@,
	movw	r7, #:lower16:11199520	@ tmp430,
	movt	r7, #:upper16:11199520	@ tmp430,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2562:
	movw	r8, #:lower16:11168600	@ tmp433,
	movt	r8, #:upper16:11168600	@ tmp433,
	ldr	r2, [r4, r8]	@ temp.6597, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6597,
	beq	.L2563	@,
	movw	sl, #:lower16:11199520	@ tmp434,
	movt	sl, #:upper16:11199520	@ tmp434,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2563:
	movw	r1, #:lower16:11168472	@ tmp441,
	movw	r5, #:lower16:11168476	@ tmp443,
	movt	r1, #:upper16:11168472	@ tmp441,
	movt	r5, #:upper16:11168476	@ tmp443,
	mov	ip, #0	@ tmp438,
	movw	r2, #:lower16:11168600	@ tmp437,
	str	ip, [r4, r1]	@ tmp438, <variable>.DPB.fs
	movt	r2, #:upper16:11168600	@ tmp437,
	ldr	r0, [r4, r5]	@ temp.6600, <variable>.DPB.fs
	movw	lr, #:lower16:11168536	@ tmp439,
	movt	lr, #:upper16:11168536	@ tmp439,
	str	ip, [r4, r2]	@ tmp438, <variable>.DPB.fs_ltref
	cmp	r0, ip	@ temp.6600,
	str	ip, [r4, lr]	@ tmp438, <variable>.DPB.fs_ref
	beq	.L2564	@,
	movw	r3, #:lower16:11199520	@ tmp444,
	movt	r3, #:upper16:11199520	@ tmp444,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2564:
	movw	r6, #:lower16:11168540	@ tmp447,
	movt	r6, #:upper16:11168540	@ tmp447,
	ldr	r2, [r4, r6]	@ temp.6603, <variable>.DPB.fs_ref
	cmp	r2, #0	@ temp.6603,
	beq	.L2565	@,
	movw	r7, #:lower16:11199520	@ tmp448,
	movt	r7, #:upper16:11199520	@ tmp448,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2565:
	movw	r0, #:lower16:11168604	@ tmp451,
	movt	r0, #:upper16:11168604	@ tmp451,
	ldr	r2, [r4, r0]	@ temp.6606, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ temp.6606,
	beq	.L2566	@,
	movw	r8, #:lower16:11199520	@ tmp452,
	movt	r8, #:upper16:11199520	@ tmp452,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2566:
	movw	r5, #:lower16:11168476	@ tmp459,
	movw	r2, #:lower16:11168480	@ tmp461,
	movt	r5, #:upper16:11168476	@ tmp459,
	movt	r2, #:upper16:11168480	@ tmp461,
	mov	sl, #0	@ tmp456,
	movw	lr, #:lower16:11168604	@ tmp455,
	str	sl, [r4, r5]	@ tmp456, <variable>.DPB.fs
	movt	lr, #:upper16:11168604	@ tmp455,
	ldr	r0, [r4, r2]	@ D.40219, <variable>.DPB.fs
	movw	ip, #:lower16:11168540	@ tmp457,
	movt	ip, #:upper16:11168540	@ tmp457,
	str	sl, [r4, lr]	@ tmp456, <variable>.DPB.fs_ltref
	cmp	r0, sl	@ D.40219,
	str	sl, [r4, ip]	@ tmp456, <variable>.DPB.fs_ref
	beq	.L2567	@,
	movw	r3, #:lower16:11199520	@ tmp462,
	movt	r3, #:upper16:11199520	@ tmp462,
	ldr	r1, [r0, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2567:
	movw	r1, #:lower16:11168544	@ tmp465,
	movt	r1, #:upper16:11168544	@ tmp465,
	ldr	r2, [r4, r1]	@ D.40224, <variable>.DPB.fs_ref
	cmp	r2, #0	@ D.40224,
	beq	.L2568	@,
	movw	r6, #:lower16:11199520	@ tmp466,
	movt	r6, #:upper16:11199520	@ tmp466,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2568:
	movw	r7, #:lower16:11168608	@ tmp469,
	movt	r7, #:upper16:11168608	@ tmp469,
	ldr	r2, [r4, r7]	@ D.40228, <variable>.DPB.fs_ltref
	cmp	r2, #0	@ D.40228,
	beq	.L2569	@,
	movw	r8, #:lower16:11199520	@ tmp470,
	movt	r8, #:upper16:11199520	@ tmp470,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2569:
	movw	r5, #:lower16:11197372	@ tmp490,
	movt	r5, #:upper16:11197372	@ tmp490,
	movw	r3, #:lower16:11152052	@ tmp480,
	movt	r3, #:upper16:11152052	@ tmp480,
	ldr	r8, [r4, r5]	@ D.40233, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11168608	@ tmp473,
	ldr	sl, [r4, r3]	@ <variable>.CurrDPBSize, <variable>.CurrDPBSize
	movt	r7, #:upper16:11168608	@ tmp473,
	movw	r1, #:lower16:11168544	@ tmp475,
	movw	r6, #:lower16:11168480	@ tmp477,
	movt	r1, #:upper16:11168544	@ tmp475,
	movt	r6, #:upper16:11168480	@ tmp477,
	movw	r2, #:lower16:11168612	@ tmp479,
	movw	lr, #:lower16:11168616	@ tmp482,
	movt	r2, #:upper16:11168612	@ tmp479,
	movt	lr, #:upper16:11168616	@ tmp482,
	movw	ip, #:lower16:11168620	@ tmp484,
	movw	r0, #:lower16:11168624	@ tmp486,
	movt	ip, #:upper16:11168620	@ tmp484,
	movt	r0, #:upper16:11168624	@ tmp486,
	movw	r3, #:lower16:11168628	@ tmp488,
	cmp	r8, #0	@ D.40233,
	movt	r3, #:upper16:11168628	@ tmp488,
	str	sl, [r4, r2]	@ <variable>.CurrDPBSize, <variable>.DPB.size
	mov	r2, #0	@ tmp474,
	str	r2, [r4, r7]	@ tmp474, <variable>.DPB.fs_ltref
	str	r2, [r4, r1]	@ tmp474, <variable>.DPB.fs_ref
	str	r2, [r4, r6]	@ tmp474, <variable>.DPB.fs
	str	r2, [r4, lr]	@ tmp474, <variable>.DPB.used_size
	str	r2, [r4, ip]	@ tmp474, <variable>.DPB.ref_frames_in_buffer
	str	r2, [r4, r0]	@ tmp474, <variable>.DPB.ltref_frames_in_buffer
	str	r2, [r4, r3]	@ tmp474, <variable>.DPB.max_long_term_pic_idx
	beq	.L2570	@,
	movw	ip, #:lower16:11199448	@ tmp491,
	movt	ip, #:upper16:11199448	@ tmp491,
	ldr	r0, [r4, ip]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L2586	@,
.L2571:
	movw	r5, #:lower16:11196640	@ tmp495,
	movt	r5, #:upper16:11196640	@ tmp495,
	ldr	r2, [r4, r5]	@ D.40242, <variable>.CurrPic.frame_store
	cmp	r2, #0	@ D.40242,
	beq	.L2572	@,
	movw	lr, #:lower16:11199520	@ tmp496,
	movt	lr, #:upper16:11199520	@ tmp496,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
.L2572:
	movw	r2, #:lower16:11197372	@ tmp499,
	movt	r2, #:upper16:11197372	@ tmp499,
	mov	r1, #0	@ tmp500,
	str	r1, [r4, r2]	@ tmp500, <variable>.pDirectOutBuf
.L2570:
	movw	lr, #:lower16:11168632	@,
	movt	lr, #:upper16:11168632	@,
	add	r0, r4, lr	@, pMvcCtx,
	mov	r1, #392	@,
	bl	__memzero	@
	movw	r0, #:lower16:11168612	@ tmp503,
	movt	r0, #:upper16:11168612	@ tmp503,
	mov	r5, #0	@ tmp507,
	movw	r2, #:lower16:11154872	@ tmp504,
	movw	ip, #:lower16:11168888	@ tmp505,
	ldr	r6, [r4, r0]	@ D.40251, <variable>.DPB.size
	movt	r2, #:upper16:11154872	@ tmp504,
	movt	ip, #:upper16:11168888	@ tmp505,
	movw	r3, #:lower16:11168892	@ tmp506,
	movt	r3, #:upper16:11168892	@ tmp506,
	mov	r1, r5	@ ivtmp.6468, tmp507
	mov	r0, r5	@ tmp579, ivtmp.6468
	str	r6, [r4, ip]	@ D.40251, <variable>.APC.size
	str	r6, [r4, r2]	@ D.40251, <variable>.OutFRMBuffer.size
	str	r5, [r4, r3]	@ tmp507, <variable>.APC.used_size
.L2573:
	add	r3, r1, #4	@ tmp584, ivtmp.6468,
	add	r5, r4, r1	@ tmp508, pMvcCtx, ivtmp.6468
	movw	lr, #:lower16:11197924	@ tmp509,
	add	r1, r3, #4	@ ivtmp.6468, tmp584,
	movt	lr, #:upper16:11197924	@ tmp509,
	add	ip, r4, r3	@ tmp586, pMvcCtx, tmp584
	add	r2, r5, lr	@ tmp509, tmp508, tmp509
	add	r3, ip, lr	@ tmp588, tmp586, tmp588
	cmp	r1, #72	@ ivtmp.6468,
	str	r0, [r2, #0]	@ tmp579, <variable>.PmvStoreUsedFlag
	str	r0, [r3, #0]	@ tmp579, <variable>.PmvStoreUsedFlag
	bne	.L2573	@,
	movw	r1, #:lower16:11162668	@ ivtmp.6459,
	movt	r1, #:upper16:11162668	@ ivtmp.6459,
	add	r6, r4, r1	@ ivtmp.6459, pMvcCtx, ivtmp.6459
	mov	r5, r0	@ i, tmp579
	mov	ip, r0	@ j, i
.L2574:
	add	r3, r5, r5, asl #5	@, tmp517, i, i,
	mov	r1, #1	@ j,
	mov	r2, r3, asl #2	@ tmp518, tmp517,
	add	lr, r2, #11141120	@ tmp519, tmp518,
	add	r3, lr, #27904	@ tmp519, tmp519,
	add	r2, r4, r3	@ ivtmp.6451, pMvcCtx, tmp519
	add	r2, r2, #4	@ ivtmp.6451, ivtmp.6451,
	str	ip, [r4, r3]	@ j, <variable>.pListX
.L2575:
	add	r1, r1, #2	@ j, j,
	mov	lr, r2	@ tmp583, ivtmp.6451
	cmp	r1, #33	@ j,
	str	ip, [lr], #4	@ j, <variable>.pListX
	str	ip, [r2, #4]	@ j, <variable>.pListX
	add	r2, lr, #4	@ ivtmp.6451, tmp583,
	bne	.L2575	@,
	add	r5, r5, #1	@ i, i,
	str	r0, [r6], #4	@ tmp577, <variable>.CurrSlice.listXsize
	cmp	r5, #2	@ i,
	bne	.L2574	@,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L2586:
	mov	r1, r8	@, D.40233
	mov	r0, r4	@, pMvcCtx
	bl	MVC_OutputFrmToVO	@
	ldr	r6, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r6, #0	@ <variable>.pDirectOutBuf,
	bne	.L2571	@,
	b	.L2570	@
	.fnend
	.size	MVC_InitDPB, .-MVC_InitDPB
	.align	2
	.global	MVC_DEC_GetRemainImg
	.type	MVC_DEC_GetRemainImg, %function
MVC_DEC_GetRemainImg:
	.fnstart
.LFB1556:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	sl, #:lower16:11168612	@ tmp148,
	movt	sl, #:upper16:11168612	@ tmp148,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r0, sl]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2588	@,
	movw	r5, #:lower16:11168420	@ ivtmp.6645,
	movt	r5, #:upper16:11168420	@ ivtmp.6645,
	add	r5, r0, r5	@ ivtmp.6645, pMvcCtx, ivtmp.6645
	mov	r6, #0	@ flush_size,
	movw	r9, #:lower16:11199520	@ tmp181,
	mov	r7, r6	@ i, flush_size
	movt	r9, #:upper16:11199520	@ tmp181,
	mov	r8, r5	@ ivtmp.6651, ivtmp.6645
	b	.L2590	@
.L2589:
	ldr	r3, [r4, sl]	@ prephitmp.6623, <variable>.DPB.size
	cmp	r3, r7	@ prephitmp.6623, i
	bls	.L2615	@,
.L2590:
	ldr	r3, [r8, #0]	@ D.38248, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	add	r8, r8, #4	@ ivtmp.6651, ivtmp.6651,
	cmp	r3, #0	@ D.38248,
	beq	.L2589	@,
	ldrb	r2, [r3, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	r2, #0	@ <variable>.is_in_dpb,
	beq	.L2589	@,
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	bl	FSP_GetLogicFs	@
	cmp	r0, #0	@ pLogicfs
	beq	.L2589	@,
	ldrb	ip, [r0, #1]	@ zero_extendqisi2	@ <variable>.s32DispState, <variable>.s32DispState
	ldr	r3, [r4, sl]	@ prephitmp.6623, <variable>.DPB.size
	sub	r1, ip, #1	@ tmp157, <variable>.s32DispState,
	uxtb	r0, r1	@ tmp158, tmp157
	cmp	r0, #1	@ tmp158,
	addls	r6, r6, #1	@ flush_size, flush_size,
	cmp	r3, r7	@ prephitmp.6623, i
	bhi	.L2590	@,
.L2615:
	cmp	r6, #0	@ flush_size,
	mvneq	r7, #0	@ ret,
	beq	.L2592	@,
	sub	sl, fp, #52	@ tmp176,,
	sub	r8, fp, #48	@ tmp177,,
	mvn	r7, #0	@ ret,
	mov	r0, r4	@, pMvcCtx
	mov	r2, sl	@, tmp176
	mov	r3, r8	@, tmp177
	mov	r1, r7	@, ret
	add	r9, r6, r7	@ tmp183, flush_size, tmp1
	bl	MVC_GetMinPOC	@
	ldr	r2, [fp, #-48]	@ pos.538, pos
	and	r3, r9, #1	@ tmp184, tmp183,
	cmp	r2, r7	@ pos.538,
	beq	.L2613	@,
	movw	lr, #:lower16:2792104	@ tmp190,
	movt	lr, #:upper16:2792104	@ tmp190,
	add	r7, r2, lr	@ tmp190, pos.538, tmp190
	mov	r2, r6	@, flush_size
	mov	r0, r4	@, pMvcCtx
	add	r6, r4, r7, asl #2	@, tmp192, pMvcCtx, tmp190,
	ldr	r1, [r6, #4]	@, <variable>.DPB.fs
	str	r3, [fp, #-56]	@,
	bl	MVC_OutputFrmToVO	@
	subs	r6, r9, #0	@ flush_size, tmp183
	ldr	r3, [fp, #-56]	@,
	mov	r7, r0	@ ret,
	beq	.L2613	@,
	cmp	r3, #0	@ tmp184,
	beq	.L2596	@,
	mov	r2, sl	@, tmp176
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	mov	r3, r8	@, tmp177
	bl	MVC_GetMinPOC	@
	ldr	r2, [fp, #-48]	@ pos.538, pos
	cmn	r2, #1	@ pos.538,
	beq	.L2613	@,
	movw	r1, #:lower16:2792104	@ tmp196,
	movt	r1, #:upper16:2792104	@ tmp196,
	add	r3, r2, r1	@ tmp196, pos.538, tmp196
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, flush_size
	add	r3, r4, r3, asl #2	@, tmp198, pMvcCtx, tmp196,
	b	.L2610	@
.L2596:
	mov	r3, r8	@, tmp177
	mvn	r1, #0	@,
	mov	r2, sl	@, tmp176
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.538, pos
	movw	ip, #:lower16:2792104	@ tmp163,
	movt	ip, #:upper16:2792104	@ tmp163,
	add	r3, r1, ip	@ tmp163, pos.538, tmp163
	cmn	r1, #1	@ pos.538,
	mov	r2, r6	@, flush_size
	mov	r0, r4	@, pMvcCtx
	sub	r6, r6, #1	@ tmp185, flush_size,
	add	r3, r4, r3, asl #2	@, tmp167, pMvcCtx, tmp163,
	beq	.L2613	@,
	ldr	r1, [r3, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	mvn	r1, #0	@,
	mov	r2, sl	@, tmp176
	mov	r3, r8	@, tmp177
	mov	r7, r0	@ ret,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.538, pos
	movw	ip, #:lower16:2792104	@ tmp201,
	movt	ip, #:upper16:2792104	@ tmp201,
	add	r3, r1, ip	@ tmp201, pos.538, tmp201
	cmn	r1, #1	@ pos.538,
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, tmp185
	add	r3, r4, r3, asl #2	@, tmp203, pMvcCtx, tmp201,
	beq	.L2613	@,
.L2610:
	ldr	r1, [r3, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	subs	r6, r6, #1	@ flush_size, tmp185,
	mov	r7, r0	@ ret,
	bne	.L2596	@,
.L2613:
	movw	lr, #:lower16:11168612	@ tmp162,
	movt	lr, #:upper16:11168612	@ tmp162,
	ldr	r3, [r4, lr]	@ prephitmp.6623, <variable>.DPB.size
.L2592:
	cmp	r3, #0	@ prephitmp.6623,
	movwne	r8, #:lower16:11168612	@ tmp179,
	movne	r6, #0	@ i.6650,
	movtne	r8, #:upper16:11168612	@ tmp179,
	bne	.L2598	@,
	b	.L2595	@
.L2597:
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.6650
	bls	.L2595	@,
.L2598:
	ldr	r1, [r5, #0]	@ temp.6649, <variable>.DPB.fs
	add	r6, r6, #1	@ i.6650, i.6650,
	add	r5, r5, #4	@ ivtmp.6645, ivtmp.6645,
	cmp	r1, #0	@ temp.6649,
	beq	.L2597	@,
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r2, #0	@ <variable>.is_reference,
	beq	.L2597	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r0, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r0, r6	@ <variable>.DPB.size, i.6650
	bhi	.L2598	@,
.L2595:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
	cmp	r7, #0	@ ret,
	bne	.L2600	@,
.L2599:
	mov	r0, r7	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2588:
	mvn	r1, #0	@,
	bl	MVC_RemoveUnUsedFrameStore	@
.L2600:
	add	r0, r4, #8	@, pMvcCtx,
	bl	GetVoLastImageID	@
	mov	r7, r0	@ ret,
	b	.L2599	@
	.fnend
	.size	MVC_DEC_GetRemainImg, .-MVC_DEC_GetRemainImg
	.align	2
	.global	MVC_DirectOutput
	.type	MVC_DirectOutput, %function
MVC_DirectOutput:
	.fnstart
.LFB1554:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11196171	@ tmp182,
	movt	r3, #:upper16:11196171	@ tmp182,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #1	@ <variable>.CurrPic.structure,
	beq	.L2619	@,
	bcc	.L2618	@,
	cmp	r3, #2	@ <variable>.CurrPic.structure,
	movne	r6, #0	@ ret,
	beq	.L2665	@,
.L2621:
	mov	r0, r6	@, ret
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2618:
	movw	r6, #:lower16:11196640	@ tmp185,
	movt	r6, #:upper16:11196640	@ tmp185,
	movw	r5, #:lower16:11197372	@ tmp188,
	movt	r5, #:upper16:11197372	@ tmp188,
	ldr	r1, [r0, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #0	@ tmp186,
	strb	r2, [r1, #464]	@ tmp186, <variable>.frame.structure
	ldr	r1, [r0, r5]	@ temp.6706, <variable>.pDirectOutBuf
	cmp	r1, r2	@ temp.6706,
	beq	.L2622	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, #0	@ <variable>.pDirectOutBuf,
	beq	.L2623	@,
	ldr	r5, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movw	r6, #:lower16:11199520	@ tmp191,
	movt	r6, #:upper16:11199520	@ tmp191,
	mov	r2, #1	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2623:
	movw	r7, #:lower16:11197372	@ tmp196,
	movt	r7, #:upper16:11197372	@ tmp196,
	mov	r2, #0	@ tmp197,
	str	r2, [r4, r7]	@ tmp197, <variable>.pDirectOutBuf
.L2622:
	movw	r7, #:lower16:11196640	@ tmp198,
	movt	r7, #:upper16:11196640	@ tmp198,
	movw	r5, #:lower16:11197372	@ tmp199,
	movt	r5, #:upper16:11197372	@ tmp199,
	ldr	r2, [r4, r7]	@ temp.6709, <variable>.CurrPic.frame_store
	movw	lr, #:lower16:11196170	@ tmp212,
	movt	lr, #:upper16:11196170	@ tmp212,
	mov	r6, #0	@ tmp221,
	movw	r8, #:lower16:11196184	@,
	movt	r8, #:upper16:11196184	@,
	str	r2, [r4, r5]	@ temp.6709, <variable>.pDirectOutBuf
	add	r1, r4, r8	@, pMvcCtx,
	str	r2, [r2, #468]	@ temp.6709, <variable>.frame.frame_store
	mov	r2, #456	@,
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r8, #:lower16:11199520	@ tmp267,
	ldr	r0, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r8, #:upper16:11199520	@ tmp267,
	str	r0, [r3, #508]	@ <variable>.CurrPic.frame_store, <variable>.top_field.frame_store
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r9, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r9, [sl, #548]	@ <variable>.CurrPic.frame_store, <variable>.bottom_field.frame_store
	mov	r9, #3	@ tmp217,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [ip, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r9, [r3, #1]	@ tmp217, <variable>.is_used
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r6, [sl, #2]	@ tmp221, <variable>.is_reference
	movw	sl, #:lower16:11196692	@ tmp245,
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	sl, #:upper16:11196692	@ tmp245,
	strb	r6, [lr, #4]	@ tmp221, <variable>.is_in_dpb
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r6, [ip, #612]	@ tmp221, <variable>.is_displayed
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, r0, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r1, #:lower16:11196700	@ tmp238,
	movt	r1, #:upper16:11196700	@ tmp238,
	ldr	r2, [r4, r5]	@ temp.6721, <variable>.pDirectOutBuf
	movw	lr, #:lower16:11196177	@ tmp249,
	movt	lr, #:upper16:11196177	@ tmp249,
	ldr	r3, [r4, r1]	@ D.38061, <variable>.CurrPic.err_level
	movw	ip, #:lower16:11196175	@ tmp252,
	movt	ip, #:upper16:11196175	@ tmp252,
	movw	r0, #:lower16:11196660	@ tmp257,
	movt	r0, #:upper16:11196660	@ tmp257,
	movw	r1, #:lower16:11196732	@ tmp261,
	str	r3, [r2, #624]	@ D.38061, <variable>.err_level
	movt	r1, #:upper16:11196732	@ tmp261,
	str	r3, [r2, #488]	@ D.38061, <variable>.frame.err_level
	movw	r3, #:lower16:11196736	@ tmp265,
	ldr	r9, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	r3, #:upper16:11196736	@ tmp265,
	mov	r2, r6	@, tmp221
	strb	r6, [r9, #464]	@ tmp221, <variable>.frame.structure
	ldr	r9, [r4, sl]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r9, [sl, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldrb	sl, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.CurrPic.MbaffFrameFlag
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	sl, [lr, #616]	@ <variable>.CurrPic.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	lr, [r4, r5]	@ temp.6725, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	ip, r6	@ iftmp.518, tmp2
	moveq	ip, #3	@ iftmp.518,
	strb	ip, [lr, #3]	@ iftmp.518, <variable>.mode_skip_flag
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [lr, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #644]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r1, [r3, #648]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r2, r6	@, tmp221
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, #0	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2654	@,
	ldr	ip, [r4, r7]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
.L2654:
	movw	ip, #:lower16:11197372	@ tmp657,
	movt	ip, #:upper16:11197372	@ tmp657,
	mov	r2, #0	@ tmp658,
	str	r2, [r4, ip]	@ tmp658, <variable>.pDirectOutBuf
	b	.L2621	@
.L2619:
	movw	r5, #:lower16:11196640	@ tmp284,
	movt	r5, #:upper16:11196640	@ tmp284,
	movw	r7, #:lower16:11196169	@ tmp287,
	movt	r7, #:upper16:11196169	@ tmp287,
	ldr	r1, [r0, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r6, #3	@ tmp285,
	strb	r6, [r1, #464]	@ tmp285, <variable>.frame.structure
	ldrb	r2, [r0, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2627	@,
	movw	r7, #:lower16:11197372	@ tmp289,
	movt	r7, #:upper16:11197372	@ tmp289,
	ldr	r1, [r0, r7]	@ temp.6737, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6737,
	beq	.L2628	@,
	bl	MVC_OutputFrmToVO	@
	ldr	sl, [r4, r5]	@ temp.6738, <variable>.CurrPic.frame_store
	str	sl, [r4, r7]	@ temp.6738, <variable>.pDirectOutBuf
	str	sl, [sl, #508]	@ temp.6738, <variable>.top_field.frame_store
	mov	r6, r0	@ ret,
.L2629:
	movw	r5, #:lower16:11197372	@ tmp297,
	movw	r7, #:lower16:11196170	@ tmp298,
	movt	r5, #:upper16:11197372	@ tmp297,
	movt	r7, #:upper16:11196170	@ tmp298,
	mov	r8, #1	@ tmp303,
	movw	sl, #:lower16:11196692	@ tmp318,
	ldrb	r9, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r7, #0	@ tmp307,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	sl, #:upper16:11196692	@ tmp318,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r4, r1	@, pMvcCtx,
	strb	r9, [r2, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	mov	r2, #456	@,
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [ip, #1]	@ tmp303, <variable>.is_used
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [lr, #4]	@ tmp307, <variable>.is_in_dpb
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [r0, #612]	@ tmp307, <variable>.is_displayed
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r3, #2]	@ tmp307, <variable>.is_reference
	ldr	ip, [r4, sl]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r9, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r9, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [lr, #616]	@ tmp307, <variable>.MbaffFrameFlag
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, r0, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r3, #:lower16:11196700	@ tmp332,
	movt	r3, #:upper16:11196700	@ tmp332,
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	ip, #:lower16:11196175	@ tmp341,
	movt	ip, #:upper16:11196175	@ tmp341,
	ldr	r9, [r4, r3]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r0, #:lower16:11196660	@ tmp347,
	movw	r1, #:lower16:11196732	@ tmp351,
	movw	r2, #:lower16:11196736	@ tmp355,
	movw	r3, #:lower16:11199452	@ tmp357,
	movt	r0, #:upper16:11196660	@ tmp347,
	str	r9, [sl, #528]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	movt	r1, #:upper16:11196732	@ tmp351,
	ldr	sl, [r4, r5]	@ temp.6753, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11196736	@ tmp355,
	movt	r3, #:upper16:11199452	@ tmp357,
	ldr	r9, [sl, #528]	@ D.38085, <variable>.top_field.err_level
	str	r9, [sl, #624]	@ D.38085, <variable>.err_level
	str	r9, [sl, #488]	@ D.38085, <variable>.frame.err_level
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [sl, #504]	@ tmp303, <variable>.top_field.structure
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r8, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	movne	ip, #0	@, tmp343
	moveq	ip, #1	@, tmp343
	b	.L2664	@
.L2665:
	movw	r5, #:lower16:11196640	@ tmp473,
	movt	r5, #:upper16:11196640	@ tmp473,
	movw	r3, #:lower16:11196169	@ tmp476,
	movt	r3, #:upper16:11196169	@ tmp476,
	ldr	r2, [r0, r5]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r1, #3	@ tmp474,
	strb	r1, [r2, #464]	@ tmp474, <variable>.frame.structure
	ldrb	r2, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r2, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2640	@,
	movw	r7, #:lower16:11197372	@ tmp478,
	movt	r7, #:upper16:11197372	@ tmp478,
	ldr	r1, [r0, r7]	@ temp.6801, <variable>.pDirectOutBuf
	cmp	r1, #0	@ temp.6801,
	beq	.L2641	@,
	bl	MVC_OutputFrmToVO	@
	ldr	sl, [r4, r5]	@ temp.6802, <variable>.CurrPic.frame_store
	str	sl, [r4, r7]	@ temp.6802, <variable>.pDirectOutBuf
	str	sl, [sl, #548]	@ temp.6802, <variable>.bottom_field.frame_store
	mov	r6, r0	@ ret,
.L2642:
	movw	r5, #:lower16:11197372	@ tmp486,
	movw	r7, #:lower16:11196170	@ tmp487,
	movt	r5, #:upper16:11197372	@ tmp486,
	movt	r7, #:upper16:11196170	@ tmp487,
	mov	r8, #2	@ tmp492,
	movw	sl, #:lower16:11196692	@ tmp507,
	ldrb	r9, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	mov	r7, #0	@ tmp496,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movt	sl, #:upper16:11196692	@ tmp507,
	movw	r1, #:lower16:11196184	@,
	movt	r1, #:upper16:11196184	@,
	add	r1, r4, r1	@, pMvcCtx,
	strb	r9, [r2, #0]	@ <variable>.CurrPic.non_existing, <variable>.non_existing
	mov	r2, #456	@,
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [ip, #1]	@ tmp492, <variable>.is_used
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r0, #4]	@ tmp496, <variable>.is_in_dpb
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [lr, #612]	@ tmp496, <variable>.is_displayed
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r7, [r3, #2]	@ tmp496, <variable>.is_reference
	ldr	ip, [r4, sl]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	r9, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r9, #620]	@ <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r7, [r0, #616]	@ tmp496, <variable>.MbaffFrameFlag
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, <variable>.pDirectOutBuf,
	bl	memcpy	@
	movw	r3, #:lower16:11196700	@ tmp521,
	movt	r3, #:upper16:11196700	@ tmp521,
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	ip, #:lower16:11196175	@ tmp529,
	movt	ip, #:upper16:11196175	@ tmp529,
	ldr	r9, [r4, r3]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	movw	r0, #:lower16:11196660	@ tmp534,
	movw	r1, #:lower16:11196732	@ tmp538,
	movw	r2, #:lower16:11196736	@ tmp542,
	movw	r3, #:lower16:11199452	@ tmp544,
	movt	r0, #:upper16:11196660	@ tmp534,
	str	r9, [sl, #568]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	movt	r1, #:upper16:11196732	@ tmp538,
	ldr	sl, [r4, r5]	@ temp.6817, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11196736	@ tmp542,
	movt	r3, #:upper16:11199452	@ tmp544,
	ldr	r9, [sl, #568]	@ temp.6818, <variable>.bottom_field.err_level
	str	r9, [sl, #624]	@ temp.6818, <variable>.err_level
	str	r9, [sl, #488]	@ temp.6818, <variable>.frame.err_level
	ldr	sl, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r8, [sl, #544]	@ tmp492, <variable>.bottom_field.structure
	ldrb	ip, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	ldr	r8, [r4, r5]	@ temp.6820, <variable>.pDirectOutBuf
	cmp	ip, #1	@ <variable>.CurrPic.mode_skip_flag,
	moveq	ip, #2	@ iftmp.526,
	movne	ip, r7	@ iftmp.526,
.L2664:
	strb	ip, [r8, #3]	@ iftmp.526, <variable>.mode_skip_flag
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r8, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	lr, [r8, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r0, [ip, #644]	@ <variable>.CurrPic.view_id, <variable>.view_id
	ldr	r8, [r4, r2]	@ <variable>.CurrPic.voidx, <variable>.CurrPic.voidx
	ldr	lr, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	r8, [lr, #648]	@ <variable>.CurrPic.voidx, <variable>.voidx
	ldr	r8, [r4, r3]	@ <variable>.IModeOutFlag, <variable>.IModeOutFlag
	cmp	r8, #1	@ <variable>.IModeOutFlag,
	bne	.L2621	@,
	ldr	r6, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	sl, #:lower16:11199520	@ tmp546,
	movt	sl, #:upper16:11199520	@ tmp546,
	mov	r2, r7	@, tmp496
	ldr	r1, [r6, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	mov	r2, r7	@, tmp496
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	bl	MVC_OutputFrmToVO	@
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, r7	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2654	@,
	movw	r1, #:lower16:11196640	@ tmp558,
	movt	r1, #:upper16:11196640	@ tmp558,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	mov	r2, r8	@, <variable>.IModeOutFlag
	ldr	ip, [r4, r1]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	b	.L2654	@
.L2640:
	movw	r8, #:lower16:11197372	@ tmp562,
	movt	r8, #:upper16:11197372	@ tmp562,
	movw	r7, #:lower16:11196184	@,
	movt	r7, #:upper16:11196184	@,
	ldr	lr, [r0, r8]	@ prephitmp.6785, <variable>.pDirectOutBuf
	add	r1, r4, r7	@, pMvcCtx,
	mov	r2, #456	@,
	cmp	lr, #0	@ prephitmp.6785,
	ldreq	lr, [r0, r5]	@ temp.6837, <variable>.CurrPic.frame_store
	streq	lr, [r0, r8]	@ temp.6837, <variable>.pDirectOutBuf
	streq	lr, [lr, #548]	@ temp.6837, <variable>.bottom_field.frame_store
	ldreq	lr, [r0, r8]	@ prephitmp.6785, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.6785,
	ldrd	r6, [lr, #24]	@, prephitmp.6785,
	ldr	r5, [lr, #16]	@ OtherFieldPts.6838, <variable>.fs_image.PTS
	ldr	r8, [lr, #20]	@ OtherFieldPts.6838, <variable>.fs_image.PTS
	strd	r6, [fp, #-60]	@,,
	ldrd	r6, [lr, #32]	@, prephitmp.6785,
	strd	r6, [fp, #-52]	@,,
	bl	memcpy	@
	movw	ip, #:lower16:11196192	@ tmp580,
	movt	ip, #:upper16:11196192	@ tmp580,
	add	r9, r4, ip	@ tmp580, pMvcCtx, tmp580
	movw	r0, #:lower16:11196192	@ tmp574,
	movt	r0, #:upper16:11196192	@ tmp574,
	and	ip, r5, r8	@ tmp572, OtherFieldPts.6838, OtherFieldPts.6838
	ldr	r1, [r9, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r0]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r0, #:lower16:11196200	@ tmp590,
	movt	r0, #:upper16:11196200	@ tmp590,
	and	r3, r2, r1	@ tmp576, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r1, #:lower16:11197372	@ tmp589,
	cmn	r3, #1	@ tmp576,
	movne	r9, #0	@, tmp585
	moveq	r9, #1	@, tmp585
	cmn	ip, #1	@ tmp572,
	movt	r1, #:upper16:11197372	@ tmp589,
	moveq	r9, #0	@, tmp585,
	cmp	r9, #0	@ tmp585,
	movwne	r9, #:lower16:11197372	@ tmp587,
	movtne	r9, #:upper16:11197372	@ tmp587,
	ldrne	r9, [r4, r9]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r5, [r9, #16]	@ OtherFieldPts.6838, <variable>.fs_image.PTS
	movw	r5, #:lower16:11197372	@ tmp593,
	strne	r8, [r9, #20]	@ OtherFieldPts.6838, <variable>.fs_image.PTS
	movt	r5, #:upper16:11197372	@ tmp593,
	ldrd	r2, [fp, #-60]	@,,
	ldrd	r8, [r4, r0]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp590
	ldr	ip, [r4, r1]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r9, r3	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r8, r2	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r8, r2	@ <variable>.CurrPic.fs_image.Usertag,
	movw	r2, #:lower16:11196208	@ tmp594,
	movt	r2, #:upper16:11196208	@ tmp594,
	movhi	r9, r3	@ <variable>.CurrPic.fs_image.Usertag,
	strd	r8, [ip, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	ldrd	r0, [r4, r2]	@ <variable>.CurrPic.fs_image.DispTime, pMvcCtx, tmp594
	ldrd	r6, [fp, #-52]	@,,
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r1, r7	@ <variable>.CurrPic.fs_image.DispTime,
	cmpeq	r0, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movhi	r1, r7	@ <variable>.CurrPic.fs_image.DispTime,
	movw	r7, #:lower16:11197372	@ tmp596,
	movt	r7, #:upper16:11197372	@ tmp596,
	movhi	r0, r6	@ <variable>.CurrPic.fs_image.DispTime,
	strd	r0, [ip, #32]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	mov	r0, #2	@ tmp612,
	ldr	r2, [r4, r7]	@ temp.6852, <variable>.pDirectOutBuf
	movw	r7, #:lower16:11196692	@ tmp606,
	movt	r7, #:upper16:11196692	@ tmp606,
	ldrb	r3, [r2, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #:lower16:11196170	@ tmp598,
	movtne	r3, #:upper16:11196170	@ tmp598,
	moveq	r1, r3	@ iftmp.528, <variable>.non_existing
	ldrneb	r1, [r4, r3]	@ zero_extendqisi2	@ iftmp.528, <variable>.CurrPic.non_existing
	movw	r3, #:lower16:11197372	@ tmp600,
	movt	r3, #:upper16:11197372	@ tmp600,
	strb	r1, [r2, #0]	@ iftmp.528, <variable>.non_existing
	movw	r1, #:lower16:11196700	@ tmp620,
	ldr	ip, [r4, r3]	@ temp.6854, <variable>.pDirectOutBuf
	movt	r1, #:upper16:11196700	@ tmp620,
	movw	r2, #:lower16:11196175	@ tmp631,
	movt	r2, #:upper16:11196175	@ tmp631,
	ldrb	r5, [ip, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	r6, r5, #2	@ tmp603, <variable>.is_used,
	strb	r6, [ip, #1]	@ tmp603, <variable>.is_used
	ldr	r5, [r4, r3]	@ temp.6857, <variable>.pDirectOutBuf
	mov	ip, #3	@ tmp616,
	ldr	r6, [r4, r7]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	ldr	lr, [r5, #620]	@ <variable>.pic_type, <variable>.pic_type
	cmp	lr, r6	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	lr, [r5, #620]	@, <variable>.pic_type, <variable>.pic_type
	strcc	r6, [r5, #620]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r7, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r0, [r7, #544]	@ tmp612, <variable>.bottom_field.structure
	ldr	r5, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	ip, [r5, #464]	@ tmp616, <variable>.frame.structure
	ldr	lr, [r4, r1]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r6, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	lr, [r6, #568]	@ <variable>.CurrPic.err_level, <variable>.bottom_field.err_level
	ldr	r1, [r4, r3]	@ temp.6864, <variable>.pDirectOutBuf
	ldr	r0, [r1, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r7, [r1, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r5, r0, r7	@ tmp623, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	ip, r5, lsr #1	@ tmp626, tmp623,
	str	ip, [r1, #488]	@ tmp626, <variable>.frame.err_level
	ldr	r6, [r4, r3]	@ temp.6869, <variable>.pDirectOutBuf
	ldr	lr, [r6, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	lr, [r6, #624]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	r0, [r4, r3]	@ temp.6871, <variable>.pDirectOutBuf
	ldr	r7, [r0, #548]	@ <variable>.bottom_field.frame_store, <variable>.bottom_field.frame_store
	str	r7, [r0, #468]	@ <variable>.bottom_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	beq	.L2666	@,
.L2652:
	ldr	r2, [r4, r3]	@ temp.6705, <variable>.pDirectOutBuf
	ldrb	r1, [r2, #3]	@ zero_extendqisi2	@ iftmp.529, <variable>.mode_skip_flag
.L2653:
	movw	r5, #:lower16:11197372	@ tmp640,
	movw	r6, #:lower16:11196660	@ tmp641,
	movt	r5, #:upper16:11197372	@ tmp640,
	movt	r6, #:upper16:11196660	@ tmp641,
	strb	r1, [r2, #3]	@ iftmp.529, <variable>.mode_skip_flag
	movw	r7, #:lower16:11199520	@ tmp643,
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	movt	r7, #:upper16:11199520	@ tmp643,
	ldr	r0, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	mov	r2, #0	@,
	str	r1, [r0, #600]	@ <variable>.CurrPic.thispoc, <variable>.poc
	ldr	ip, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r5]	@, <variable>.pDirectOutBuf
	mov	r2, #0	@,
	bl	MVC_OutputFrmToVO	@
	ldr	r3, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r3, #0	@ <variable>.pDirectOutBuf,
	mov	r6, r0	@ ret,
	beq	.L2654	@,
	movw	r3, #:lower16:11196640	@ tmp655,
	movt	r3, #:upper16:11196640	@ tmp655,
	mov	r2, #1	@,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	movw	ip, #:lower16:11197372	@ tmp657,
	movt	ip, #:upper16:11197372	@ tmp657,
	mov	r2, #0	@ tmp658,
	str	r2, [r4, ip]	@ tmp658, <variable>.pDirectOutBuf
	b	.L2621	@
.L2627:
	movw	r8, #:lower16:11197372	@ tmp375,
	movt	r8, #:upper16:11197372	@ tmp375,
	movw	r7, #:lower16:11196184	@,
	movt	r7, #:upper16:11196184	@,
	ldr	lr, [r0, r8]	@ prephitmp.6683, <variable>.pDirectOutBuf
	add	r1, r4, r7	@, pMvcCtx,
	mov	r2, #456	@,
	cmp	lr, #0	@ prephitmp.6683,
	ldreq	lr, [r0, r5]	@ temp.6771, <variable>.CurrPic.frame_store
	streq	lr, [r0, r8]	@ temp.6771, <variable>.pDirectOutBuf
	streq	lr, [lr, #508]	@ temp.6771, <variable>.top_field.frame_store
	ldreq	lr, [r0, r8]	@ prephitmp.6683, <variable>.pDirectOutBuf
	add	r0, lr, #8	@, prephitmp.6683,
	ldrd	r6, [lr, #24]	@, prephitmp.6683,
	ldr	r5, [lr, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	r8, [lr, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r6, [fp, #-60]	@,,
	ldrd	r6, [lr, #32]	@, prephitmp.6683,
	strd	r6, [fp, #-52]	@,,
	bl	memcpy	@
	movw	ip, #:lower16:11196192	@ tmp393,
	movt	ip, #:upper16:11196192	@ tmp393,
	add	r9, r4, ip	@ tmp393, pMvcCtx, tmp393
	movw	r1, #:lower16:11196192	@ tmp387,
	movt	r1, #:upper16:11196192	@ tmp387,
	and	ip, r5, r8	@ tmp385, OtherFieldPts, OtherFieldPts
	ldr	r0, [r9, #4]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	ldr	r2, [r4, r1]	@ <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r1, #:lower16:11196200	@ tmp403,
	movt	r1, #:upper16:11196200	@ tmp403,
	and	r3, r2, r0	@ tmp389, <variable>.CurrPic.fs_image.PTS, <variable>.CurrPic.fs_image.PTS
	movw	r0, #:lower16:11197372	@ tmp402,
	cmn	r3, #1	@ tmp389,
	movne	r9, #0	@, tmp398
	moveq	r9, #1	@, tmp398
	cmn	ip, #1	@ tmp385,
	movt	r0, #:upper16:11197372	@ tmp402,
	moveq	r9, #0	@, tmp398,
	cmp	r9, #0	@ tmp398,
	movwne	r9, #:lower16:11197372	@ tmp400,
	movtne	r9, #:upper16:11197372	@ tmp400,
	ldrne	r9, [r4, r9]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strne	r5, [r9, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	movw	r5, #:lower16:11197372	@ tmp406,
	strne	r8, [r9, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	movt	r5, #:upper16:11197372	@ tmp406,
	ldrd	r2, [fp, #-60]	@,,
	ldrd	r8, [r4, r1]	@ <variable>.CurrPic.fs_image.Usertag, pMvcCtx, tmp403
	ldr	ip, [r4, r0]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r9, r3	@ <variable>.CurrPic.fs_image.Usertag,
	cmpeq	r8, r2	@ <variable>.CurrPic.fs_image.Usertag,
	movhi	r9, r3	@ <variable>.CurrPic.fs_image.Usertag,
	movw	r3, #:lower16:11196208	@ tmp407,
	movt	r3, #:upper16:11196208	@ tmp407,
	movhi	r8, r2	@ <variable>.CurrPic.fs_image.Usertag,
	strd	r8, [ip, #24]	@ <variable>.CurrPic.fs_image.Usertag, <variable>.pDirectOutBuf,
	ldrd	r0, [r4, r3]	@ <variable>.CurrPic.fs_image.DispTime, pMvcCtx, tmp407
	ldrd	r6, [fp, #-52]	@,,
	ldr	r2, [r4, r5]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	movw	r5, #:lower16:11196692	@ tmp419,
	cmp	r1, r7	@ <variable>.CurrPic.fs_image.DispTime,
	cmpeq	r0, r6	@ <variable>.CurrPic.fs_image.DispTime,
	movt	r5, #:upper16:11196692	@ tmp419,
	movhi	r1, r7	@ <variable>.CurrPic.fs_image.DispTime,
	movw	r7, #:lower16:11197372	@ tmp409,
	movt	r7, #:upper16:11197372	@ tmp409,
	movhi	r0, r6	@ <variable>.CurrPic.fs_image.DispTime,
	strd	r0, [r2, #32]	@ <variable>.CurrPic.fs_image.DispTime, <variable>.pDirectOutBuf,
	movw	r2, #:lower16:11196700	@ tmp433,
	ldr	r6, [r4, r7]	@ temp.6775, <variable>.pDirectOutBuf
	movt	r2, #:upper16:11196700	@ tmp433,
	ldrb	r3, [r6, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r3, #0	@ <variable>.non_existing,
	movwne	r3, #:lower16:11196170	@ tmp411,
	movtne	r3, #:upper16:11196170	@ tmp411,
	moveq	r1, r3	@ iftmp.522, <variable>.non_existing
	ldrneb	r1, [r4, r3]	@ zero_extendqisi2	@ iftmp.522, <variable>.CurrPic.non_existing
	movw	r3, #:lower16:11197372	@ tmp413,
	movt	r3, #:upper16:11197372	@ tmp413,
	strb	r1, [r6, #0]	@ iftmp.522, <variable>.non_existing
	movw	r6, #:lower16:11196175	@ tmp444,
	ldr	r1, [r4, r3]	@ temp.6776, <variable>.pDirectOutBuf
	movt	r6, #:upper16:11196175	@ tmp444,
	ldrb	ip, [r1, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	lr, ip, #1	@ tmp416, <variable>.is_used,
	strb	lr, [r1, #1]	@ tmp416, <variable>.is_used
	ldr	ip, [r4, r3]	@ temp.6778, <variable>.pDirectOutBuf
	mov	lr, #1	@ tmp425,
	ldr	r1, [r4, r5]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	mov	r5, #3	@ tmp429,
	ldr	r7, [ip, #620]	@ <variable>.pic_type, <variable>.pic_type
	cmp	r7, r1	@ <variable>.pic_type, <variable>.CurrPic.pic_type
	strcs	r7, [ip, #620]	@, <variable>.pic_type, <variable>.pic_type
	strcc	r1, [ip, #620]	@, <variable>.CurrPic.pic_type, <variable>.pic_type
	ldr	r0, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	lr, [r0, #504]	@ tmp425, <variable>.top_field.structure
	ldr	r7, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	strb	r5, [r7, #464]	@ tmp429, <variable>.frame.structure
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.err_level, <variable>.CurrPic.err_level
	ldr	r1, [r4, r3]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	str	ip, [r1, #528]	@ <variable>.CurrPic.err_level, <variable>.top_field.err_level
	ldr	r7, [r4, r3]	@ temp.6783, <variable>.pDirectOutBuf
	ldr	lr, [r7, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r0, [r7, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r5, lr, r0	@ tmp436, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	mov	r2, r5, lsr #1	@ tmp439, tmp436,
	str	r2, [r7, #488]	@ tmp439, <variable>.frame.err_level
	ldr	r1, [r4, r3]	@ temp.6786, <variable>.pDirectOutBuf
	ldr	ip, [r1, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	str	ip, [r1, #624]	@ <variable>.frame.err_level, <variable>.err_level
	ldr	lr, [r4, r3]	@ temp.6787, <variable>.pDirectOutBuf
	ldr	r0, [lr, #508]	@ <variable>.top_field.frame_store, <variable>.top_field.frame_store
	str	r0, [lr, #468]	@ <variable>.top_field.frame_store, <variable>.frame.frame_store
	ldrb	r5, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.mode_skip_flag, <variable>.CurrPic.mode_skip_flag
	cmp	r5, #1	@ <variable>.CurrPic.mode_skip_flag,
	bne	.L2652	@,
	ldr	r2, [r4, r3]	@ D.38052, <variable>.pDirectOutBuf
	ldrb	r5, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r5, #1	@ iftmp.523, <variable>.mode_skip_flag,
	b	.L2653	@
.L2628:
	ldr	lr, [r0, r5]	@ temp.6740, <variable>.CurrPic.frame_store
	mov	r6, r1	@ ret, temp.6737
	str	lr, [r0, r7]	@ temp.6740, <variable>.pDirectOutBuf
	str	lr, [lr, #508]	@ temp.6740, <variable>.top_field.frame_store
	b	.L2629	@
.L2641:
	ldr	r0, [r0, r5]	@ temp.6804, <variable>.CurrPic.frame_store
	mov	r6, r1	@ ret, temp.6801
	str	r0, [r4, r7]	@ temp.6804, <variable>.pDirectOutBuf
	str	r0, [r0, #548]	@ temp.6804, <variable>.bottom_field.frame_store
	b	.L2642	@
.L2666:
	ldr	r2, [r4, r3]	@ temp.6705, <variable>.pDirectOutBuf
	ldrb	r5, [r2, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	orr	r1, r5, #2	@ iftmp.529, <variable>.mode_skip_flag,
	b	.L2653	@
	.fnend
	.size	MVC_DirectOutput, .-MVC_DirectOutput
	.align	2
	.global	MVC_OutputFrmFromDPB
	.type	MVC_OutputFrmFromDPB, %function
MVC_OutputFrmFromDPB:
	.fnstart
.LFB1549:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:2792104	@ tmp138,
	movt	r2, #:upper16:2792104	@ tmp138,
	mov	r5, r1	@ pos, pos
	add	r4, r1, r2	@ tmp138, pos, tmp138
	mov	r6, r0	@ pMvcCtx, pMvcCtx
	add	r4, r0, r4, asl #2	@, tmp142, pMvcCtx, tmp138,
	ldr	r3, [r4, #4]	@ D.37763, <variable>.DPB.fs
	cmp	r3, #0	@ D.37763,
	moveq	r4, r3	@ ret, D.37763
	beq	.L2669	@,
	mov	r2, #0	@ tmp144,
	strb	r2, [r3, #4]	@ tmp144, <variable>.is_in_dpb
	ldr	r1, [r4, #4]	@, <variable>.DPB.fs
	bl	MVC_OutputFrmToVO	@
	ldr	r1, [r4, #4]	@ tmp155, <variable>.DPB.fs
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmn	r0, #1	@ ret,
	moveq	r4, r0	@, ret, ret
	movne	r4, #0	@, ret,
	cmp	r3, #0	@ <variable>.is_reference,
	beq	.L2672	@,
.L2669:
	mov	r0, r4	@, ret
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2672:
	mov	r0, r6	@, pMvcCtx
	mov	r1, r5	@, pos
	bl	MVC_RemoveFrameStoreOutDPB	@
	mov	r0, r4	@, ret
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_OutputFrmFromDPB, .-MVC_OutputFrmFromDPB
	.align	2
	.global	MVC_FlushDPB
	.type	MVC_FlushDPB, %function
MVC_FlushDPB:
	.fnstart
.LFB1555:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r8, #:lower16:11168612	@ tmp158,
	movt	r8, #:upper16:11168612	@ tmp158,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	mov	r4, r1	@ CurrViewId, CurrViewId
	ldr	r3, [r0, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r3, #0	@ <variable>.DPB.size,
	beq	.L2674	@,
	movw	r6, #:lower16:11168420	@ ivtmp.6946,
	movt	r6, #:upper16:11168420	@ ivtmp.6946,
	add	r6, r0, r6	@ ivtmp.6946, pMvcCtx, ivtmp.6946
	mov	r7, #0	@ i,
	b	.L2676	@
.L2675:
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bls	.L2674	@,
.L2676:
	ldr	r1, [r6, #0]	@ D.38183, <variable>.DPB.fs
	add	r7, r7, #1	@ i, i,
	add	r6, r6, #4	@ ivtmp.6946, ivtmp.6946,
	cmp	r1, #0	@ D.38183,
	beq	.L2675	@,
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2675	@,
	ldr	r2, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r2, r4	@, <variable>.view_id, CurrViewId
	bne	.L2675	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UnMarkFrameStoreRef	@
	ldr	r1, [r5, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	r1, r7	@ <variable>.DPB.size, i
	bhi	.L2676	@,
.L2674:
	mov	r0, r5	@, pMvcCtx
	mov	r1, r4	@, CurrViewId
	bl	MVC_RemoveUnUsedFrameStore	@
	movw	ip, #:lower16:11168612	@ tmp172,
	movt	ip, #:upper16:11168612	@ tmp172,
	ldr	r0, [r5, ip]	@ temp.6961, <variable>.DPB.size
	cmp	r0, #0	@ temp.6961,
	beq	.L2677	@,
	mov	r0, r0, asl #2	@ D.52800, temp.6961,
	mov	r2, #0	@ ivtmp.6942,
	tst	r0, #4	@ D.52800,
	mvn	ip, #0	@ other_view_id.6962,
	mov	sl, r2	@ flush_size, ivtmp.6942
	beq	.L2712	@,
.L2682:
	add	r6, r5, r2	@ tmp173, pMvcCtx, ivtmp.6942
	movw	r3, #:lower16:11168420	@ tmp174,
	movt	r3, #:upper16:11168420	@ tmp174,
	add	lr, r6, r3	@ tmp174, tmp173, tmp174
	ldr	r3, [lr, #0]	@ temp.6949, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6949,
	beq	.L2678	@,
	ldr	r6, [r3, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	r6, r4	@, other_view_id, CurrViewId
	bne	.L2679	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2679	@,
.L2678:
	add	r2, r2, #4	@ tmp213, ivtmp.6942,
	mov	r6, ip	@ other_view_id, other_view_id.6962
	cmp	r2, r0	@ tmp213, D.52800
	beq	.L2681	@,
.L2737:
	add	r1, r5, r2	@ tmp216, pMvcCtx, tmp213
	movw	lr, #:lower16:11168420	@ tmp218,
	movt	lr, #:upper16:11168420	@ tmp218,
	add	ip, r1, lr	@ tmp218, tmp216, tmp218
	ldr	r3, [ip, #0]	@ temp.6949, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6949,
	beq	.L2706	@,
	ldr	ip, [r3, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	ip, r4	@, other_view_id, CurrViewId
	bne	.L2707	@,
	cmn	r4, #1	@ CurrViewId,
	add	sl, sl, #1	@ flush_size, flush_size,
	bne	.L2707	@,
.L2706:
	mov	ip, r6	@ other_view_id, other_view_id
	add	r2, r2, #4	@ ivtmp.6942, tmp213,
	b	.L2682	@
.L2679:
	cmp	r4, r6	@ CurrViewId, other_view_id
	beq	.L2678	@,
	add	r2, r2, #4	@ tmp213, ivtmp.6942,
	cmp	r2, r0	@ tmp213, D.52800
	bne	.L2737	@,
.L2681:
	cmp	sl, #0	@ flush_size,
	beq	.L2677	@,
	adds	r9, r6, #1	@ pretmp.6923, other_view_id,
	movne	r9, #1	@ pretmp.6923
	sub	r0, sl, #1	@ tmp206, flush_size,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movge	r7, #0	@,
	andlt	r7, r9, #1	@,,, pretmp.6923
	and	r8, r0, #1	@, tmp206,
	cmp	r7, #0	@,
	str	r7, [fp, #-56]	@, %sfp
	str	r8, [fp, #-60]	@, %sfp
	sub	r7, fp, #52	@ tmp203,,
	sub	r8, fp, #48	@ tmp200,,
	bne	.L2738	@,
.L2691:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6954, pos
	cmn	r1, #1	@ pos.6954,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2684	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	lr, #0	@, tmp229
	andgt	lr, r9, #1	@,, tmp229, pretmp.6923
	cmp	lr, #0	@ tmp229,
	bne	.L2739	@,
.L2692:
	subs	sl, sl, #1	@ flush_size, flush_size,
	beq	.L2677	@,
	ldr	r1, [fp, #-60]	@, %sfp
	cmp	r1, #0	@,
	beq	.L2686	@,
	ldr	r0, [fp, #-56]	@, %sfp
	cmp	r0, #0	@,
	bne	.L2715	@,
.L2698:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6954, pos
	cmn	r1, #1	@ pos.6954,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2684	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r2, #0	@, tmp249
	andgt	r2, r9, #1	@,, tmp249, pretmp.6923
	cmp	r2, #0	@ tmp249,
	bne	.L2740	@,
	subs	sl, sl, #1	@ flush_size, tmp208,
	beq	.L2677	@,
.L2686:
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r2, #0	@,
	beq	.L2683	@,
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.532, pos
	cmn	r1, #1	@ pos.532,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2684	@,
.L2683:
	mov	r1, r4	@, CurrViewId
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6954, pos
	cmn	r1, #1	@ pos.6954,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2684	@,
	cmp	r6, r4	@ other_view_id, CurrViewId
	movle	r3, #0	@, tmp196
	andgt	r3, r9, #1	@,, tmp196, pretmp.6923
	cmp	r3, #0	@ tmp196,
	bne	.L2741	@,
.L2685:
	ldr	ip, [fp, #-56]	@, %sfp
	sub	sl, sl, #1	@ tmp208, flush_size,
	cmp	ip, #0	@,
	beq	.L2698	@,
.L2715:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.532, pos
	cmn	r1, #1	@ pos.532,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2698	@,
.L2684:
	mvn	r0, #0	@ D.38214,
	b	.L2687	@
.L2707:
	cmp	r4, ip	@ CurrViewId, other_view_id
	beq	.L2706	@,
	add	r2, r2, #4	@ ivtmp.6942, tmp213,
	b	.L2682	@
.L2712:
	movw	r3, #:lower16:11168420	@ tmp254,
	movt	r3, #:upper16:11168420	@ tmp254,
	add	r6, r5, r3	@ tmp254, pMvcCtx, tmp254
	ldr	r3, [r6, #0]	@ temp.6949, <variable>.DPB.fs
	cmp	r3, #0	@ temp.6949,
	beq	.L2702	@,
	ldr	ip, [r3, #644]	@ other_view_id, <variable>.view_id
	cmn	r4, #1	@ CurrViewId,
	cmpne	ip, r4	@, other_view_id, CurrViewId
	bne	.L2703	@,
	cmn	r4, #1	@ CurrViewId,
	mov	sl, #1	@ flush_size,
	bne	.L2703	@,
.L2702:
	mvn	ip, #0	@ other_view_id,
	mov	r2, #4	@ ivtmp.6942,
	b	.L2682	@
.L2703:
	cmp	r4, ip	@ CurrViewId, other_view_id
	beq	.L2702	@,
	mov	r2, #4	@ ivtmp.6942,
	b	.L2682	@
.L2740:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6957, pos
	cmn	r1, #1	@ pos.6957,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	bne	.L2684	@,
	subs	sl, sl, #1	@ flush_size, tmp208,
	bne	.L2686	@,
.L2677:
	mov	r0, #0	@ D.38214,
.L2687:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2741:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6957, pos
	cmn	r1, #1	@ pos.6957,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2685	@,
	mvn	r0, #0	@ D.38214,
	b	.L2687	@
.L2738:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.532, pos
	cmn	r1, #1	@ pos.532,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2691	@,
	mvn	r0, #0	@ D.38214,
	b	.L2687	@
.L2739:
	mov	r1, r6	@, other_view_id
	mov	r0, r5	@, pMvcCtx
	mov	r2, r7	@, tmp203
	mov	r3, r8	@, tmp200
	bl	MVC_GetMinPOC	@
	ldr	r1, [fp, #-48]	@ pos.6957, pos
	cmn	r1, #1	@ pos.6957,
	beq	.L2677	@,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_OutputFrmFromDPB	@
	cmp	r0, #0	@,
	beq	.L2692	@,
	mvn	r0, #0	@ D.38214,
	b	.L2687	@
	.fnend
	.size	MVC_FlushDPB, .-MVC_FlushDPB
	.align	2
	.global	MVC_IDRMemMarking
	.type	MVC_IDRMemMarking, %function
MVC_IDRMemMarking:
	.fnstart
.LFB1560:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11196644	@ tmp150,
	movt	r2, #:upper16:11196644	@ tmp150,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	r1, [r0, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r1, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r3, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2743	@,
	movw	r0, #:lower16:11198000	@ tmp152,
	movt	r0, #:upper16:11198000	@ tmp152,
	ldr	lr, [r4, r0]	@ D.38445, <variable>.TotalPmvNum
	cmp	lr, #0	@ D.38445,
	beq	.L2744	@,
	movw	sl, #:lower16:11168420	@ ivtmp.7003,
	movt	sl, #:upper16:11168420	@ ivtmp.7003,
	add	r3, r4, sl	@ ivtmp.7003, pMvcCtx, ivtmp.7003
	sub	r5, lr, #1	@ tmp247, D.38445,
	and	r1, r5, #1	@ tmp249, tmp247,
	mov	r5, #0	@ tmp241,
	ldr	r2, [r3, #0]	@ D.38438, <variable>.DPB.fs
	movw	r0, #:lower16:11196732	@ tmp240,
	movt	r0, #:upper16:11196732	@ tmp240,
	cmp	r2, r5	@ D.38438,
	beq	.L2766	@,
	ldr	sl, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r2, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, sl	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	sl, r3, #29440	@ tmp353, ivtmp.7003,
	addeq	sl, sl, #64	@ tmp353, tmp353,
	streq	r5, [sl, #0]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2766:
	mov	r2, #1	@ i,
	cmp	r2, lr	@ i, D.38445
	add	r3, r3, #4	@ ivtmp.7003, ivtmp.7003,
	bcs	.L2744	@,
	cmp	r1, #0	@ tmp249,
	beq	.L2746	@,
	ldr	r1, [r3, #0]	@ D.38438, <variable>.DPB.fs
	cmp	r1, #0	@ D.38438,
	beq	.L2768	@,
	ldr	sl, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	sl, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r1, r3, #29440	@ tmp360, ivtmp.7003,
	addeq	r1, r1, #64	@ tmp360, tmp360,
	streq	r5, [r1, #0]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2768:
	add	r2, r2, #1	@ i, i,
	add	r3, r3, #4	@ ivtmp.7003, ivtmp.7003,
	cmp	r2, lr	@ i, D.38445
	bcs	.L2744	@,
.L2746:
	ldr	r1, [r3, #0]	@ D.38438, <variable>.DPB.fs
	add	r2, r2, #1	@ tmp250, i,
	add	ip, r3, #4	@ tmp251, ivtmp.7003,
	cmp	r1, #0	@ D.38438,
	beq	.L2745	@,
	ldr	r6, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r6, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r1, r3, #29440	@ tmp158, ivtmp.7003,
	streq	r5, [r1, #64]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2745:
	ldr	r3, [r3, #4]	@ D.38438, <variable>.DPB.fs
	cmp	r3, #0	@ D.38438,
	beq	.L2771	@,
	ldr	r1, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r1, r3	@ <variable>.view_id, <variable>.CurrPic.view_id
	addeq	r3, ip, #29440	@ tmp365, tmp251,
	streq	r5, [r3, #64]	@ tmp241, <variable>.PmvStoreUsedFlag
.L2771:
	add	r2, r2, #1	@ i, tmp250,
	add	r3, ip, #4	@ ivtmp.7003, tmp251,
	cmp	r2, lr	@ i, D.38445
	bcc	.L2746	@,
.L2744:
	movw	ip, #:lower16:11168612	@ tmp160,
	movt	ip, #:upper16:11168612	@ tmp160,
	ldr	sl, [r4, ip]	@ D.38446, <variable>.DPB.size
	cmp	sl, #0	@ D.38446,
	beq	.L2747	@,
	movw	r8, #:lower16:11168484	@ ivtmp.6999,
	movt	r8, #:upper16:11168484	@ ivtmp.6999,
	add	r5, r4, r8	@ ivtmp.6999, pMvcCtx, ivtmp.6999
	sub	r7, sl, #1	@ tmp242, D.38446,
	movw	r8, #:lower16:11196732	@ tmp235,
	movw	r6, #:lower16:11199520	@,
	ldr	r1, [r5, #-64]	@ temp.7007, <variable>.DPB.fs
	movt	r6, #:upper16:11199520	@,
	movw	r9, #:lower16:11168616	@ tmp239,
	str	r6, [fp, #-48]	@, %sfp
	cmp	r1, #0	@ temp.7007,
	and	r3, r7, #1	@ tmp244, tmp242,
	movt	r8, #:upper16:11196732	@ tmp235,
	movt	r9, #:upper16:11168616	@ tmp239,
	mov	r6, #0	@ tmp236,
	beq	.L2756	@,
	ldr	r7, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2782	@,
.L2756:
	mov	r7, #1	@ i.7019,
	cmp	sl, r7	@ D.38446, i.7019
	add	r5, r5, #4	@ ivtmp.6999, ivtmp.6999,
	bls	.L2747	@,
	cmp	r3, #0	@ tmp244,
	beq	.L2750	@,
	ldr	r3, [r5, #-64]	@ temp.7007, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7007,
	beq	.L2763	@,
	ldr	r0, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r0, r1	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2783	@,
.L2763:
	add	r7, r7, #1	@ i.7019, tmp245,
	add	r5, r5, #4	@ ivtmp.6999, tmp246,
	cmp	sl, r7	@ D.38446, i.7019
	bls	.L2747	@,
.L2750:
	ldr	r3, [r5, #-64]	@ temp.7007, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7007,
	beq	.L2748	@,
	ldr	lr, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	beq	.L2784	@,
.L2748:
	add	r5, r5, #4	@ tmp246, ivtmp.6999,
	add	r7, r7, #1	@ tmp245, i.7019,
	ldr	r3, [r5, #-64]	@ temp.7007, <variable>.DPB.fs
	cmp	r3, #0	@ temp.7007,
	beq	.L2763	@,
	ldr	lr, [r3, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r2, [r4, r8]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	lr, r2	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L2763	@,
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	r1, [r5, #-64]	@ temp.7010, <variable>.DPB.fs
	strb	r6, [r1, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [r1, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.7011, <variable>.DPB.fs
	strb	r6, [ip, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [ip, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r0, [r5, #-64]	@ tmp327, <variable>.DPB.fs
	strb	r6, [r0, #2]	@ tmp236, <variable>.is_reference
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	lr, [r5, #-64]	@ tmp330, <variable>.DPB.fs
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp332, <variable>.DPB.fs
	mov	ip, #1	@,
	movw	r3, #:lower16:2792158	@ tmp338,
	movt	r3, #:upper16:2792158	@ tmp338,
	strb	r6, [r2, #1]	@ tmp236, <variable>.is_used
	ldr	r1, [r5, #-64]	@ tmp333, <variable>.DPB.fs
	strb	r6, [r1, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r0, [r5, #-64]	@ tmp334, <variable>.DPB.fs
	str	ip, [r0, #612]	@, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.7017, <variable>.DPB.fs
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	r1, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	add	r3, r1, r3	@ tmp338, <variable>.apc_idc, tmp338
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2764	@,
.L2781:
	ldr	r3, [r5, #-64]	@ tmp347, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
.L2764:
	add	r7, r7, #1	@ i.7019, tmp245,
	ldr	lr, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	sl, r7	@ D.38446, i.7019
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r2, lr, #1	@ tmp345, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	add	r5, r5, #4	@ ivtmp.6999, tmp246,
	str	r2, [r4, r9]	@ tmp345, <variable>.DPB.used_size
	bhi	.L2750	@,
.L2747:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	r3, #:lower16:11196644	@ tmp213,
	movt	r3, #:upper16:11196644	@ tmp213,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ <variable>.long_term_reference_flag, <variable>.long_term_reference_flag
	cmp	r3, #0	@ <variable>.long_term_reference_flag,
	bne	.L2785	@,
	movw	r1, #:lower16:11168628	@ tmp225,
	movw	r2, #:lower16:11196172	@ tmp227,
	movt	r1, #:upper16:11168628	@ tmp225,
	movt	r2, #:upper16:11196172	@ tmp227,
	movw	lr, #:lower16:11196173	@ tmp230,
	movt	lr, #:upper16:11196173	@ tmp230,
	mov	r0, r3	@ D.38467, <variable>.long_term_reference_flag
	str	r3, [r4, r1]	@ <variable>.long_term_reference_flag, <variable>.DPB.max_long_term_pic_idx
	strb	r3, [r4, r2]	@ <variable>.long_term_reference_flag, <variable>.CurrPic.is_long_term
	mov	r3, #1	@ tmp231,
	strb	r3, [r4, lr]	@ tmp231, <variable>.CurrPic.is_short_term
.L2751:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2784:
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	r1, [r5, #-64]	@ temp.7010, <variable>.DPB.fs
	strb	r6, [r1, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [r1, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.7011, <variable>.DPB.fs
	strb	r6, [ip, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [ip, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r0, [r5, #-64]	@ tmp177, <variable>.DPB.fs
	strb	r6, [r0, #2]	@ tmp236, <variable>.is_reference
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	lr, [r5, #-64]	@ tmp182, <variable>.DPB.fs
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r2, [r5, #-64]	@ tmp184, <variable>.DPB.fs
	mov	ip, #1	@,
	movw	r3, #:lower16:2792158	@ tmp192,
	movt	r3, #:upper16:2792158	@ tmp192,
	strb	r6, [r2, #1]	@ tmp236, <variable>.is_used
	ldr	r1, [r5, #-64]	@ tmp187, <variable>.DPB.fs
	strb	r6, [r1, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r0, [r5, #-64]	@ tmp190, <variable>.DPB.fs
	str	ip, [r0, #612]	@, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.7017, <variable>.DPB.fs
	ldr	r2, [fp, #-48]	@, %sfp
	ldr	r1, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r0, [r4, r2]	@, <variable>.ChanID
	add	r3, r1, r3	@ tmp192, <variable>.apc_idc, tmp192
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	beq	.L2749	@,
	ldr	lr, [r5, #-64]	@ tmp201, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
.L2749:
	ldr	r0, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r2, r0, #1	@ tmp209, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r2, [r4, r9]	@ tmp209, <variable>.DPB.used_size
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	b	.L2748	@
.L2785:
	movw	r3, #:lower16:11168628	@ tmp215,
	movw	ip, #:lower16:11196652	@ tmp217,
	movt	r3, #:upper16:11168628	@ tmp215,
	movt	ip, #:upper16:11196652	@ tmp217,
	movw	r2, #:lower16:11196172	@ tmp219,
	movw	r1, #:lower16:11196173	@ tmp222,
	movt	r2, #:upper16:11196172	@ tmp219,
	movt	r1, #:upper16:11196173	@ tmp222,
	mov	r0, #0	@ tmp218,
	mov	lr, #1	@ tmp216,
	str	r0, [r4, ip]	@ tmp218, <variable>.CurrPic.long_term_frame_idx
	strb	r0, [r4, r1]	@ tmp218, <variable>.CurrPic.is_short_term
	strb	lr, [r4, r2]	@ tmp216, <variable>.CurrPic.is_long_term
	str	lr, [r4, r3]	@ tmp216, <variable>.DPB.max_long_term_pic_idx
	b	.L2751	@
.L2782:
	strb	r6, [r1, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, r6	@, tmp236
	strb	r6, [r1, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	r1, [r5, #-64]	@ temp.7010, <variable>.DPB.fs
	strb	r6, [r1, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [r1, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.7011, <variable>.DPB.fs
	strb	r6, [ip, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [ip, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r0, [r5, #-64]	@ tmp270, <variable>.DPB.fs
	strb	r6, [r0, #2]	@ tmp236, <variable>.is_reference
	ldr	r7, [fp, #-48]	@, %sfp
	ldr	lr, [r5, #-64]	@ tmp273, <variable>.DPB.fs
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	str	r3, [fp, #-52]	@,
	bl	FSP_SetRef	@
	ldr	r1, [r5, #-64]	@ tmp275, <variable>.DPB.fs
	mov	r0, #1	@,
	movw	r2, #:lower16:2792158	@ tmp281,
	movt	r2, #:upper16:2792158	@ tmp281,
	strb	r6, [r1, #1]	@ tmp236, <variable>.is_used
	ldr	r3, [r5, #-64]	@ tmp276, <variable>.DPB.fs
	strb	r6, [r3, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	ip, [r5, #-64]	@ tmp277, <variable>.DPB.fs
	str	r0, [ip, #612]	@, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.7017, <variable>.DPB.fs
	ldr	r7, [fp, #-48]	@, %sfp
	ldr	r1, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	add	r3, r1, r2	@ tmp281, <variable>.apc_idc, tmp281
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	ldr	r3, [fp, #-52]	@,
	cmp	r0, #3	@,
	beq	.L2757	@,
	ldr	r7, [r5, #-64]	@ tmp290, <variable>.DPB.fs
	mov	r2, r6	@, tmp236
	ldr	ip, [fp, #-48]	@, %sfp
	ldr	r1, [r7, #584]	@, <variable>.logic_fs_id
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	str	r3, [fp, #-52]	@,
	bl	FSP_SetDisplay	@
	ldr	r3, [fp, #-52]	@,
.L2757:
	ldr	lr, [r4, r9]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	str	r6, [r5, #-64]	@ tmp236, <variable>.DPB.fs
	sub	r2, lr, #1	@ tmp288, <variable>.DPB.used_size,
	str	r6, [r5, #0]	@ tmp236, <variable>.DPB.fs_ref
	str	r2, [r4, r9]	@ tmp288, <variable>.DPB.used_size
	str	r6, [r5, #64]	@ tmp236, <variable>.DPB.fs_ltref
	b	.L2756	@
.L2783:
	strb	r6, [r3, #465]	@ tmp236, <variable>.frame.is_long_term
	mov	r2, #0	@,
	strb	r6, [r3, #466]	@ tmp236, <variable>.frame.is_short_term
	ldr	r3, [r5, #-64]	@ temp.7010, <variable>.DPB.fs
	strb	r6, [r3, #505]	@ tmp236, <variable>.top_field.is_long_term
	strb	r6, [r3, #506]	@ tmp236, <variable>.top_field.is_short_term
	ldr	ip, [r5, #-64]	@ temp.7011, <variable>.DPB.fs
	strb	r6, [ip, #545]	@ tmp236, <variable>.bottom_field.is_long_term
	strb	r6, [ip, #546]	@ tmp236, <variable>.bottom_field.is_short_term
	ldr	r0, [r5, #-64]	@ tmp299, <variable>.DPB.fs
	strb	r6, [r0, #2]	@ tmp236, <variable>.is_reference
	ldr	r1, [fp, #-48]	@, %sfp
	ldr	lr, [r5, #-64]	@ tmp302, <variable>.DPB.fs
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetRef	@
	ldr	r3, [r5, #-64]	@ tmp304, <variable>.DPB.fs
	movw	r1, #:lower16:2792158	@ tmp310,
	movt	r1, #:upper16:2792158	@ tmp310,
	strb	r6, [r3, #1]	@ tmp236, <variable>.is_used
	ldr	r2, [r5, #-64]	@ tmp305, <variable>.DPB.fs
	strb	r6, [r2, #4]	@ tmp236, <variable>.is_in_dpb
	ldr	r0, [r5, #-64]	@ tmp306, <variable>.DPB.fs
	str	r7, [r0, #612]	@ tmp12, <variable>.is_displayed
	ldr	ip, [r5, #-64]	@ temp.7017, <variable>.DPB.fs
	ldr	r3, [fp, #-48]	@, %sfp
	ldr	r2, [ip, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r0, [r4, r3]	@, <variable>.ChanID
	add	r3, r2, r1	@ tmp310, <variable>.apc_idc, tmp310
	str	r6, [r4, r3, asl #2]	@ tmp236, <variable>.APC.is_used
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDisplay	@
	cmp	r0, #3	@,
	bne	.L2781	@,
	b	.L2764	@
.L2743:
	movw	ip, #:lower16:11196732	@ tmp210,
	movt	ip, #:upper16:11196732	@ tmp210,
	ldr	r1, [r0, ip]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.38467,
	beq	.L2747	@,
	b	.L2751	@
	.fnend
	.size	MVC_IDRMemMarking, .-MVC_IDRMemMarking
	.align	2
	.global	MVC_AdaptiveMemMark
	.type	MVC_AdaptiveMemMark, %function
MVC_AdaptiveMemMark:
	.fnstart
.LFB1559:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11196644	@ tmp153,
	movt	r3, #:upper16:11196644	@ tmp153,
	movw	r7, #:lower16:11196168	@ D.38388,
	movt	r7, #:upper16:11196168	@ D.38388,
	movw	r8, #:lower16:11161504	@ tmp224,
	ldr	r4, [r0, r3]	@ ivtmp.7057, <variable>.CurrPic.pMarkPara
	add	r7, r0, r7	@ D.38388, pMvcCtx, D.38388
	movt	r8, #:upper16:11161504	@ tmp224,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	add	r6, r4, #2000	@ D.52929, ivtmp.7057,
	mov	sl, #1	@ tmp225,
.L2796:
	ldr	r0, [r4, #4]	@ <variable>.memory_management_control_operation, <variable>.memory_management_control_operation
	cmp	r0, #6	@ <variable>.memory_management_control_operation,
	ldrls	pc, [pc, r0, asl #2]	@ <variable>.memory_management_control_operation
	b	.L2787	@
.L2795:
	.word	.L2788
	.word	.L2789
	.word	.L2790
	.word	.L2791
	.word	.L2792
	.word	.L2793
	.word	.L2794
.L2794:
	ldr	r2, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.38388
	bl	MVC_MarkCurrPicLT	@
.L2787:
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	cmp	r4, r6	@ ivtmp.7057, D.52929
	bne	.L2796	@,
.L2788:
	movw	r2, #:lower16:11161504	@ tmp163,
	movt	r2, #:upper16:11161504	@ tmp163,
	ldr	r1, [r5, r2]	@ <variable>.CurrPOC.last_has_mmco_5, <variable>.CurrPOC.last_has_mmco_5
	cmp	r1, #1	@ <variable>.CurrPOC.last_has_mmco_5,
	beq	.L2806	@,
.L2797:
	mov	r0, #0	@ D.38420,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2793:
	mov	r0, r5	@, pMvcCtx
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	bl	MVC_UnMarkAllSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r5	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_UpdateMaxLTFrmIdx	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7057, D.52929
	str	sl, [r5, r8]	@ tmp225, <variable>.CurrPOC.last_has_mmco_5
	bne	.L2796	@,
	b	.L2788	@
.L2792:
	ldr	r1, [r4, #20]	@, <variable>.max_long_term_frame_idx_plus1
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateMaxLTFrmIdx	@
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7057, D.52929
	bne	.L2796	@,
	b	.L2788	@
.L2791:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r1, r7	@, D.38388
	ldr	r3, [r4, #16]	@, <variable>.long_term_frame_idx
	mov	r0, r5	@, pMvcCtx
	bl	MVC_MarkSTToLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7057, D.52929
	bne	.L2796	@,
	b	.L2788	@
.L2790:
	ldr	r2, [r4, #12]	@, <variable>.long_term_pic_num
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.38388
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	bl	MVC_UnMarkLTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	cmp	r4, r6	@ ivtmp.7057, D.52929
	bne	.L2796	@,
	b	.L2788	@
.L2789:
	ldr	r2, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	mov	r0, r5	@, pMvcCtx
	mov	r1, r7	@, D.38388
	add	r4, r4, #20	@ ivtmp.7057, ivtmp.7057,
	bl	MVC_UnMarkSTRef	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	cmp	r4, r6	@ ivtmp.7057, D.52929
	bne	.L2796	@,
	b	.L2788	@
.L2806:
	movw	r0, #:lower16:11164284	@ tmp170,
	movt	r0, #:upper16:11164284	@ tmp170,
	movw	r2, #:lower16:11196171	@ tmp178,
	movt	r2, #:upper16:11196171	@ tmp178,
	ldr	ip, [r5, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	lr, #:lower16:2790658	@ tmp167,
	movt	lr, #:upper16:2790658	@ tmp167,
	ldrb	r0, [r5, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	add	r3, ip, lr	@ tmp167, <variable>.CurrSlice.voidx, tmp167
	movw	r1, #:lower16:11196648	@ tmp165,
	movw	lr, #:lower16:11197344	@ tmp176,
	movt	r1, #:upper16:11196648	@ tmp165,
	add	ip, r5, r3, asl #2	@, tmp173, pMvcCtx, tmp167,
	movt	lr, #:upper16:11197344	@ tmp176,
	cmp	r0, #1	@ <variable>.CurrPic.structure,
	mov	r3, #0	@ tmp166,
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.frame_num
	str	r3, [ip, #4]	@ tmp166, <variable>.CurrSlice.prev_frame_num
	str	r3, [r5, lr]	@ tmp166, <variable>.PrevPic.frame_num
	beq	.L2800	@,
	bcs	.L2807	@,
	movw	r0, #:lower16:11196668	@ tmp196,
	movw	lr, #:lower16:11196660	@ tmp197,
	movt	r0, #:upper16:11196668	@ tmp196,
	movt	lr, #:upper16:11196660	@ tmp197,
	movw	r1, #:lower16:11196672	@ tmp201,
	movt	r1, #:upper16:11196672	@ tmp201,
	ldr	r7, [r5, lr]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	movw	r2, #:lower16:11161512	@ tmp208,
	ldr	r8, [r5, r0]	@ <variable>.CurrPic.toppoc, <variable>.CurrPic.toppoc
	movt	r2, #:upper16:11161512	@ tmp208,
	ldr	sl, [r5, r1]	@ <variable>.CurrPic.bottompoc, <variable>.CurrPic.bottompoc
	movw	ip, #:lower16:11161524	@ tmp209,
	movt	ip, #:upper16:11161524	@ tmp209,
	rsb	r9, r7, r8	@, <variable>.CurrPic.thispoc, <variable>.CurrPic.toppoc
	rsb	sl, r7, sl	@, <variable>.CurrPic.thispoc, <variable>.CurrPic.bottompoc
	ldr	r8, [r5, r2]	@, <variable>.CurrPOC.toppoc
	str	r9, [r5, r0]	@, <variable>.CurrPic.toppoc
	movw	r3, #:lower16:11161516	@ tmp213,
	ldr	r9, [r5, ip]	@, <variable>.CurrPOC.ThisPOC
	movt	r3, #:upper16:11161516	@ tmp213,
	str	sl, [r5, r1]	@, <variable>.CurrPic.bottompoc
	movw	r6, #:lower16:11196664	@ tmp206,
	rsb	r7, r9, r8	@ D.38412,,
	mov	r8, sl	@ D.38409,
	ldr	sl, [r5, r0]	@, <variable>.CurrPic.toppoc
	movt	r6, #:upper16:11196664	@ tmp206,
	movw	r4, #:lower16:11161520	@ tmp218,
	movt	r4, #:upper16:11161520	@ tmp218,
	cmp	r8, sl	@ D.38409,
	movge	r8, sl	@ D.38409,
	ldr	sl, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	str	r8, [r5, lr]	@ D.38409, <variable>.CurrPic.thispoc
	rsb	r9, r9, sl	@,,
	str	r8, [r5, r6]	@ D.38409, <variable>.CurrPic.framepoc
	str	r9, [r5, r3]	@, <variable>.CurrPOC.bottompoc
	mov	r1, r9	@ D.38414,
	str	r7, [r5, r2]	@ D.38412, <variable>.CurrPOC.toppoc
	cmp	r1, r7	@ D.38414, D.38412
	movge	r1, r7	@ D.38414, D.38412
	str	r1, [r5, ip]	@ D.38414, <variable>.CurrPOC.ThisPOC
	str	r1, [r5, r4]	@ D.38414, <variable>.CurrPOC.framepoc
.L2798:
	movw	r2, #:lower16:11196732	@ tmp220,
	movt	r2, #:upper16:11196732	@ tmp220,
	mov	r0, r5	@, pMvcCtx
	ldr	r1, [r5, r2]	@, <variable>.CurrPic.view_id
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	mvnne	r0, #0	@ D.38420,
	beq	.L2797	@,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}	@
.L2807:
	cmp	r0, #2	@ <variable>.CurrPic.structure,
	bne	.L2798	@,
	movw	ip, #:lower16:11196672	@ tmp188,
	movw	r1, #:lower16:11196660	@ tmp190,
	movw	r2, #:lower16:11161516	@ tmp192,
	movt	ip, #:upper16:11196672	@ tmp188,
	movt	r1, #:upper16:11196660	@ tmp190,
	movt	r2, #:upper16:11161516	@ tmp192,
.L2805:
	movw	lr, #:lower16:11161524	@ tmp194,
	movt	lr, #:upper16:11161524	@ tmp194,
	str	r3, [r5, ip]	@ tmp166,
	str	r3, [r5, lr]	@ tmp166, <variable>.CurrPOC.ThisPOC
	str	r3, [r5, r1]	@ tmp166, <variable>.CurrPic.thispoc
	str	r3, [r5, r2]	@ tmp166,
	b	.L2798	@
.L2800:
	movw	ip, #:lower16:11196668	@ tmp180,
	movw	r1, #:lower16:11196660	@ tmp182,
	movw	r2, #:lower16:11161512	@ tmp184,
	movt	ip, #:upper16:11196668	@ tmp180,
	movt	r1, #:upper16:11196660	@ tmp182,
	movt	r2, #:upper16:11161512	@ tmp184,
	b	.L2805	@
	.fnend
	.size	MVC_AdaptiveMemMark, .-MVC_AdaptiveMemMark
	.align	2
	.global	MVC_Marking
	.type	MVC_Marking, %function
MVC_Marking:
	.fnstart
.LFB1561:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11196171	@ tmp143,
	movw	r3, #:lower16:11196174	@ tmp146,
	movt	ip, #:upper16:11196171	@ tmp143,
	movt	r3, #:upper16:11196174	@ tmp146,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r2, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r1, #:lower16:11161504	@ tmp140,
	ldrb	r0, [r0, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	movt	r1, #:upper16:11161504	@ tmp140,
	cmp	r2, #2	@ <variable>.CurrPic.structure,
	movne	r2, #0	@, tmp145
	moveq	r2, #1	@, tmp145
	movw	ip, #:lower16:11161508	@ tmp142,
	cmp	r0, #5	@ <variable>.CurrPic.nal_unit_type,
	movt	ip, #:upper16:11161508	@ tmp142,
	mov	r3, #0	@ tmp141,
	str	r3, [r4, r1]	@ tmp141, <variable>.CurrPOC.last_has_mmco_5
	str	r2, [r4, ip]	@ tmp145, <variable>.CurrPOC.last_pic_bottom_field
	beq	.L2809	@,
	movw	r0, #:lower16:11196692	@ tmp148,
	movt	r0, #:upper16:11196692	@ tmp148,
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r1, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2810	@,
	ldr	r3, [r4, #0]	@ D.38485, <variable>.pstExtraData
	ldr	r2, [r3, #540]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r2, #1	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L2821	@,
.L2810:
	movw	r5, #:lower16:11196644	@ tmp156,
	movt	r5, #:upper16:11196644	@ tmp156,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L2820	@,
	movw	r3, #:lower16:11196656	@ tmp159,
	movt	r3, #:upper16:11196656	@ tmp159,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2822	@,
.L2815:
	mov	r0, #0	@ D.38498,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2821:
	ldr	ip, [r3, #536]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	ip, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L2810	@,
	ldr	r1, [r3, #544]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	r1, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L2810	@,
	ldr	r0, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r0, #1024	@ tmp153, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp153,
	bls	.L2810	@,
.L2809:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IDRMemMarking	@
	cmp	r0, #0	@,
	bne	.L2811	@,
.L2812:
	movw	r0, #:lower16:11196174	@ tmp165,
	movt	r0, #:upper16:11196174	@ tmp165,
	ldrb	lr, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.nal_unit_type, <variable>.CurrPic.nal_unit_type
	cmp	lr, #5	@ <variable>.CurrPic.nal_unit_type,
	beq	.L2816	@,
.L2820:
	movw	r3, #:lower16:11196656	@ tmp167,
	movt	r3, #:upper16:11196656	@ tmp167,
	ldr	r1, [r4, r3]	@ prephitmp.7081, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ prephitmp.7081,
	beq	.L2815	@,
	movw	r5, #:lower16:11196644	@ tmp169,
	movt	r5, #:upper16:11196644	@ tmp169,
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r2, [ip, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r2, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L2817	@,
	movw	r0, #:lower16:11196169	@ tmp171,
	movt	r0, #:upper16:11196169	@ tmp171,
	ldrb	r6, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #0	@ <variable>.CurrPic.field_pair_flag,
	bne	.L2817	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SlidingWinMark	@
	ldr	r3, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	movw	r1, #:lower16:11196172	@ tmp177,
	movt	r1, #:upper16:11196172	@ tmp177,
	strb	r6, [r3, #0]	@ <variable>.CurrPic.field_pair_flag, <variable>.is_valid
	strb	r6, [r4, r1]	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.is_long_term
.L2816:
	movw	r2, #:lower16:11196656	@ tmp180,
	movt	r2, #:upper16:11196656	@ tmp180,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2815	@,
.L2817:
	movw	r0, #:lower16:11196172	@ tmp183,
	movt	r0, #:upper16:11196172	@ tmp183,
	movw	r1, #:lower16:11196173	@ tmp182,
	movt	r1, #:upper16:11196173	@ tmp182,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	mov	r0, #0	@ D.38498,
	cmp	r3, r0	@ <variable>.CurrPic.is_long_term,
	movne	ip, #0	@, tmp185
	moveq	ip, #1	@, tmp185
	strb	ip, [r4, r1]	@ tmp185, <variable>.CurrPic.is_short_term
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L2822:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AdaptiveMemMark	@
	ldr	ip, [r4, r5]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r2, #0	@ tmp163,
	strb	r2, [ip, #0]	@ tmp163, <variable>.is_valid
	cmp	r0, r2	@,
	beq	.L2812	@,
.L2811:
	mvn	r0, #0	@ D.38498,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_Marking, .-MVC_Marking
	.align	2
	.global	MVC_ClearDPB
	.type	MVC_ClearDPB, %function
MVC_ClearDPB:
	.fnstart
.LFB1522:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L2827	@,
.L2824:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	beq	.L2825	@,
	movw	r1, #:lower16:.LC59	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC59	@,
	ldr	r2, .L2828	@,
	movw	r3, #346	@,
	bl	dprint_vfmw	@
.L2825:
	movw	r2, #:lower16:11198012	@ tmp144,
	movw	r3, #:lower16:11199528	@ tmp146,
	movt	r2, #:upper16:11198012	@ tmp144,
	movt	r3, #:upper16:11199528	@ tmp146,
	mov	r0, #0	@ tmp145,
	str	r0, [r4, r2]	@ tmp145, <variable>.IDRFound
	str	r0, [r4, r3]	@ tmp145, <variable>.FirstFrameDisplayed
	ldmfd	sp, {r3, r4, fp, sp, pc}	@
.L2827:
	movw	r1, #:lower16:.LC74	@,
	ldr	r2, .L2828	@,
	movt	r1, #:upper16:.LC74	@,
	movw	r3, #341	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L2824	@
.L2829:
	.align	2
.L2828:
	.word	.LANCHOR0+268
	.fnend
	.size	MVC_ClearDPB, .-MVC_ClearDPB
	.align	2
	.global	MVC_ReceivePacket
	.type	MVC_ReceivePacket, %function
MVC_ReceivePacket:
	.fnstart
.LFB1659:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r4, r1	@ pPacket, pPacket
	ldr	ip, [r4, #12]	@ <variable>.stream_len, <variable>.stream_len
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	ldr	r3, [r1, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	mov	r0, #7	@,
	ldr	r2, [r1, #4]	@ <variable>.p_stream, <variable>.p_stream
	movw	r1, #:lower16:.LC75	@,
	movt	r1, #:upper16:.LC75	@,
	str	ip, [sp, #0]	@ <variable>.stream_len,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #368]	@ D.45449, <variable>.pCurrNal
	cmp	r3, #0	@ D.45449,
	beq	.L2831	@,
	ldrb	r2, [r4, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	cmp	r2, #1	@ <variable>.last_pack_in_nal,
	beq	.L2853	@,
.L2832:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC76	@,
	movt	r1, #:upper16:.LC76	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	ldr	r3, [r5, #368]	@ D.45449, <variable>.pCurrNal
	cmp	r3, #0	@ D.45449,
	ldrneb	r2, [r4, #0]	@ zero_extendqisi2	@ prephitmp.7137, <variable>.last_pack_in_nal
	beq	.L2831	@,
.L2833:
	strb	r2, [r3, #3]	@ prephitmp.7137, <variable>.nal_integ
	ldr	r0, [r4, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r0, #0	@ <variable>.stream_len,
	ble	.L2842	@,
	ldr	r2, [r4, #4]	@ temp.7178, <variable>.p_stream
	cmp	r2, #0	@ temp.7178,
	beq	.L2842	@,
	ldr	r3, [r4, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	r3, #0	@ <variable>.strm_phy_addr,
	bne	.L2845	@,
.L2842:
	ldr	r3, [r5, #368]	@ prephitmp.7139, <variable>.pCurrNal
.L2844:
	movw	r6, #:lower16:11199520	@ tmp272,
	movt	r6, #:upper16:11199520	@ tmp272,
	mov	r2, #1	@ tmp270,
	strb	r2, [r3, #3]	@ tmp270, <variable>.nal_integ
	ldr	r1, [r4, #16]	@, <variable>.StreamID
	ldr	r0, [r5, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r0, #:lower16:g_event_report	@ tmp275,
	movt	r0, #:upper16:g_event_report	@ tmp275,
	ldr	r3, [r0, #0]	@ g_event_report.7198, g_event_report
	cmp	r3, #0	@ g_event_report.7198,
	beq	.L2839	@,
	ldr	r0, [r5, r6]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.7198
.L2839:
	ldr	r1, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r1, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r3, #0	@ <variable>.nal_integ,
	movne	r0, #0	@, ret,
	mvneq	r0, #0	@, ret,
.L2841:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2853:
	ldr	r1, [r3, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r1, #1	@ <variable>.nal_segment,
	bhi	.L2832	@,
	ldrb	r0, [r3, #3]	@ zero_extendqisi2	@ <variable>.nal_integ, <variable>.nal_integ
	cmp	r0, #1	@ <variable>.nal_integ,
	bne	.L2833	@,
	b	.L2832	@
.L2845:
	ldr	r3, [r5, #368]	@ prephitmp.7139, <variable>.pCurrNal
	ldr	r1, [r3, #64]	@ temp.7180, <variable>.nal_segment
	cmp	r1, #1	@ temp.7180,
	bhi	.L2844	@,
	rsb	lr, r1, r1, asl #3	@, tmp231, temp.7180, temp.7180,
	mov	r0, r5	@, pMvcCtx
	add	ip, r3, lr, asl #2	@, tmp233, prephitmp.7139, tmp231,
	str	r2, [ip, #4]	@ temp.7178, <variable>.streamBuffer
	ldr	lr, [r5, #368]	@ temp.7182, <variable>.pCurrNal
	ldr	ip, [r4, #12]	@ <variable>.stream_len, <variable>.stream_len
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp237, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, lr, r2, asl #2	@, tmp239, temp.7182, tmp237,
	str	ip, [r3, #8]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	lr, [r5, #368]	@ temp.7186, <variable>.pCurrNal
	ldr	ip, [r4, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp245, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, lr, r2, asl #2	@, tmp247, temp.7186, tmp245,
	str	ip, [r3, #12]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	lr, [r5, #368]	@ temp.7189, <variable>.pCurrNal
	ldr	r1, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	r2, r1, r1, asl #3	@, tmp254, <variable>.nal_segment, <variable>.nal_segment,
	mov	r1, #0	@ tmp258,
	add	ip, lr, r2, asl #2	@, tmp256, temp.7189, tmp254,
	add	r3, ip, #16	@ tmp257, tmp256,
	str	r1, [r3, #4]	@ tmp258, <variable>.bitsoffset
	ldr	ip, [r5, #368]	@ temp.7191, <variable>.pCurrNal
	ldr	r1, [r4, #16]	@ <variable>.StreamID, <variable>.StreamID
	ldr	r2, [ip, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	rsb	lr, r2, r2, asl #3	@, tmp263, <variable>.nal_segment, <variable>.nal_segment,
	add	r3, ip, lr, asl #2	@, tmp265, temp.7191, tmp263,
	str	r1, [r3, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	lr, [r5, #368]	@ temp.7194, <variable>.pCurrNal
	ldr	r2, [lr, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	add	ip, r2, #1	@ tmp269, <variable>.nal_segment,
	str	ip, [lr, #64]	@ tmp269, <variable>.nal_segment
	bl	MVC_CombinePacket	@
	b	.L2839	@
.L2831:
	ldr	r3, [r4, #12]	@ <variable>.stream_len, <variable>.stream_len
	cmp	r3, #0	@ <variable>.stream_len,
	ble	.L2835	@,
	ldr	r2, [r4, #4]	@ <variable>.p_stream, <variable>.p_stream
	cmp	r2, #0	@ <variable>.p_stream,
	beq	.L2835	@,
	ldr	lr, [r4, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	cmp	lr, #0	@ <variable>.strm_phy_addr,
	beq	.L2835	@,
	ldrb	r2, [r5, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	mov	r3, #0	@ Pos,
	cmp	r2, r3	@ <variable>.is_valid,
	addne	r1, r5, #96	@ ivtmp.7158, pMvcCtx,
	movne	r3, #1	@ Pos,
	bne	.L2837	@,
	b	.L2836	@
.L2854:
	ldrb	r2, [r1, #473]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	add	r3, r3, #1	@ Pos, Pos,
	add	r1, r1, #192	@ ivtmp.7158, ivtmp.7158,
	cmp	r2, #0	@ <variable>.is_valid,
	beq	.L2836	@,
	add	r3, r3, #1	@ Pos, Pos,
	cmp	r3, #137	@ Pos,
	beq	.L2838	@,
.L2837:
	ldrb	r2, [r1, #377]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r2, #0	@ <variable>.is_valid,
	bne	.L2854	@,
.L2836:
	cmp	r3, #136	@ Pos,
	bhi	.L2838	@,
	add	r6, r3, r3, asl #1	@, tmp173, Pos, Pos,
	mov	lr, #1	@ tmp177,
	mov	ip, r6, asl #5	@ tmp174, tmp173,
	add	r0, ip, r5	@ tmp175, tmp174, pMvcCtx
	add	r3, ip, #376	@ tmp183, tmp174,
	add	r1, r5, r3	@ tmp184, pMvcCtx, tmp183
	add	r6, r0, #376	@ tmp176, tmp175,
	strb	lr, [r0, #377]	@ tmp177, <variable>.is_valid
	str	r1, [r5, #368]	@ tmp184, <variable>.pCurrNal
	ldr	r7, [r4, #4]	@ <variable>.p_stream, <variable>.p_stream
	str	r7, [r6, #4]	@ <variable>.p_stream, <variable>.streamBuffer
	ldr	ip, [r4, #12]	@ <variable>.stream_len, <variable>.stream_len
	str	ip, [r6, #8]	@ <variable>.stream_len, <variable>.bitstream_length
	ldr	r3, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r0, [r4, #8]	@ <variable>.strm_phy_addr, <variable>.strm_phy_addr
	str	r0, [r3, #12]	@ <variable>.strm_phy_addr, <variable>.stream_phy_addr
	ldr	r1, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [r1, #20]	@ <variable>.is_valid, <variable>.bitsoffset
	ldr	r7, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r6, [r4, #16]	@ <variable>.StreamID, <variable>.StreamID
	str	r6, [r7, #28]	@ <variable>.StreamID, <variable>.StreamID
	ldr	ip, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrd	r6, [r4, #24]	@ <variable>.pts, pPacket,
	strd	r6, [ip, #80]	@ <variable>.pts, <variable>.pCurrNal,
	ldr	r3, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	lr, [r3, #64]	@ tmp177, <variable>.nal_segment
	ldr	r0, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	r2, [r0, #0]	@ <variable>.is_valid, <variable>.nal_used_segment
	ldrb	ip, [r4, #0]	@ zero_extendqisi2	@ <variable>.last_pack_in_nal, <variable>.last_pack_in_nal
	ldr	r1, [r5, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	strb	ip, [r1, #3]	@ <variable>.last_pack_in_nal, <variable>.nal_integ
	b	.L2839	@
.L2838:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC77	@,
	movt	r1, #:upper16:.LC77	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_ClearAllNal	@
	mov	r0, r5	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r5	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r2, #:lower16:g_event_report	@ tmp218,
	movt	r2, #:upper16:g_event_report	@ tmp218,
	ldr	r3, [r2, #0]	@ g_event_report.894, g_event_report
	cmp	r3, #0	@ g_event_report.894,
	bne	.L2855	@,
.L2840:
	mvn	r0, #0	@ ret,
	b	.L2841	@
.L2855:
	movw	lr, #:lower16:11199520	@ tmp219,
	movt	lr, #:upper16:11199520	@ tmp219,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r5, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.894
	mvn	r0, #0	@ ret,
	b	.L2841	@
.L2835:
	movw	r6, #:lower16:11199520	@ tmp221,
	movt	r6, #:upper16:11199520	@ tmp221,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC78	@,
	movt	r1, #:upper16:.LC78	@,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #16]	@, <variable>.StreamID
	ldr	r0, [r5, r6]	@, <variable>.ChanID
	bl	SM_ReleaseStreamSeg	@
	movw	r1, #:lower16:g_event_report	@ tmp224,
	movt	r1, #:upper16:g_event_report	@ tmp224,
	ldr	r3, [r1, #0]	@ g_event_report.7175, g_event_report
	cmp	r3, #0	@ g_event_report.7175,
	beq	.L2840	@,
	ldr	r0, [r5, r6]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.7175
	mvn	r0, #0	@ ret,
	b	.L2841	@
	.fnend
	.size	MVC_ReceivePacket, .-MVC_ReceivePacket
	.align	2
	.global	MVC_DecVDM
	.type	MVC_DecVDM, %function
MVC_DecVDM:
	.fnstart
.LFB1617:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #8
	sub	sp, sp, #8	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11196171	@ tmp147,
	movt	r1, #:upper16:11196171	@ tmp147,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r3, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L2857	@,
	movw	r2, #:lower16:11196169	@ tmp149,
	movt	r2, #:upper16:11196169	@ tmp149,
	ldrb	r0, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r0, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2857	@,
.L2858:
	movw	ip, #:lower16:11199508	@ tmp162,
	movt	ip, #:upper16:11199508	@ tmp162,
	movw	r6, #:lower16:11199448	@ tmp165,
	movt	r6, #:upper16:11199448	@ tmp165,
	ldr	r5, [r4, ip]	@ <variable>.advanced_cfg, <variable>.advanced_cfg
	ldr	r3, [r4, r6]	@ D.41846, <variable>.OldDecMode
	ubfx	r5, r5, #16, #2	@ IPBDecMode, <variable>.advanced_cfg,,
	cmp	r5, #2	@ IPBDecMode,
	cmpne	r3, r5	@, D.41846, IPBDecMode
	beq	.L2859	@,
	sub	lr, r3, #2	@ tmp173, D.41846,
	cmp	lr, #1	@ tmp173,
	bls	.L2890	@,
.L2859:
	movw	r1, #:lower16:11199448	@ tmp176,
	cmp	r5, #2	@ IPBDecMode,
	movt	r1, #:upper16:11199448	@ tmp176,
	str	r5, [r4, r1]	@ IPBDecMode, <variable>.OldDecMode
	beq	.L2863	@,
	cmp	r5, #3	@ IPBDecMode,
	beq	.L2864	@,
	cmp	r5, #1	@ IPBDecMode,
	beq	.L2891	@,
.L2861:
	movw	r3, #:lower16:11199524	@ tmp197,
	movt	r3, #:upper16:11199524	@ tmp197,
	ldr	ip, [r4, r3]	@ <variable>.PrevPicIsIDR, <variable>.PrevPicIsIDR
	cmp	ip, #1	@ <variable>.PrevPicIsIDR,
	beq	.L2892	@,
.L2866:
	movw	r0, #:lower16:11196696	@ tmp205,
	movt	r0, #:upper16:11196696	@ tmp205,
	movw	r3, #:lower16:11199524	@ tmp204,
	movt	r3, #:upper16:11199524	@ tmp204,
	ldr	ip, [r4, r0]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	str	ip, [r4, r3]	@ <variable>.CurrPic.is_idr_pic, <variable>.PrevPicIsIDR
.L2867:
	movw	r1, #:lower16:11199444	@ tmp207,
	movt	r1, #:upper16:11199444	@ tmp207,
	ldr	lr, [r4, r1]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	lr, #0	@ <variable>.SliceParaNum,
	beq	.L2889	@,
	movw	r2, #:lower16:11199448	@ tmp209,
	movt	r2, #:upper16:11199448	@ tmp209,
	ldr	r5, [r4, r2]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r5, #4	@ <variable>.OldDecMode,
	beq	.L2869	@,
	movw	ip, #:lower16:11196692	@ tmp211,
	movt	ip, #:upper16:11196692	@ tmp211,
	ldr	r3, [r4, ip]	@ prephitmp.7226, <variable>.CurrPic.pic_type
.L2870:
	cmp	r3, #2	@ prephitmp.7226,
	beq	.L2893	@,
	cmp	r3, #1	@ prephitmp.7226,
	beq	.L2894	@,
.L2872:
	movw	r7, #:lower16:11199484	@ tmp230,
	movt	r7, #:upper16:11199484	@ tmp230,
	movw	r5, #:lower16:11196171	@ tmp233,
	movt	r5, #:upper16:11196171	@ tmp233,
	ldr	lr, [r4, r7]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	mov	r0, #2	@,
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@, <variable>.CurrPic.structure
	movw	r1, #:lower16:.LC80	@,
	sub	r2, lr, #1	@, <variable>.TotalPicNum,
	movt	r1, #:upper16:.LC80	@,
	bl	dprint_vfmw	@
	movw	r6, #:lower16:11196716	@ tmp236,
	movw	r2, #:lower16:11196720	@ tmp242,
	movt	r6, #:upper16:11196716	@ tmp236,
	movt	r2, #:upper16:11196720	@ tmp242,
	movw	r3, #:lower16:11199444	@ tmp245,
	movt	r3, #:upper16:11199444	@ tmp245,
	ldr	r0, [r4, r7]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.pic_mbs, <variable>.CurrPic.pic_mbs
	movw	ip, #:lower16:11198968	@ tmp235,
	ldr	r6, [r4, r2]	@ <variable>.CurrPic.stream_base_addr, <variable>.CurrPic.stream_base_addr
	movt	ip, #:upper16:11198968	@ tmp235,
	ldr	r5, [r4, r3]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	movw	r2, #:lower16:11198050	@ tmp238,
	movw	r1, #:lower16:11198964	@ tmp241,
	movt	r2, #:upper16:11198050	@ tmp238,
	movt	r1, #:upper16:11198964	@ tmp241,
	movw	r3, #:lower16:11199168	@ tmp244,
	cmp	r0, #0	@ <variable>.TotalPicNum,
	movt	r3, #:upper16:11199168	@ tmp244,
	str	r7, [r4, ip]	@ <variable>.CurrPic.pic_mbs, <variable>.DecPicPara.mbtodec
	mov	ip, #1	@ tmp239,
	str	r6, [r4, r1]	@ <variable>.CurrPic.stream_base_addr, <variable>.DecPicPara.stream_base_addr
	strb	ip, [r4, r2]	@ tmp239, <variable>.DecPicPara.NewPicFlag
	str	r5, [r4, r3]	@ <variable>.SliceParaNum, <variable>.DecPicPara.SliceParaNum
	beq	.L2860	@,
	movw	r1, #:lower16:11196692	@ tmp249,
	movt	r1, #:upper16:11196692	@ tmp249,
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2874	@,
	movw	r5, #:lower16:g_event_report	@ tmp251,
	movt	r5, #:upper16:g_event_report	@ tmp251,
	ldr	ip, [r5, #0]	@ g_event_report, g_event_report
	cmp	ip, #0	@ g_event_report,
	beq	.L2886	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetPicStreamSize	@
	sub	r2, fp, #28	@ tmp256,,
	movw	ip, #:lower16:11199520	@ tmp254,
	movt	ip, #:upper16:11199520	@ tmp254,
	ldr	r3, [r5, #0]	@ g_event_report, g_event_report
	mov	r1, #20	@,
	str	r0, [r2, #-4]!	@, para
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report
.L2886:
	ldr	r2, [r4, #0]	@ temp.7256, <variable>.pstExtraData
.L2875:
	movw	r1, #:lower16:11198048	@ D.41928,
	movt	r1, #:upper16:11198048	@ D.41928,
	add	r3, r4, r1	@ D.41928, pMvcCtx, D.41928
	str	r3, [r4, #360]	@ D.41928, <variable>.pMvcDecParam
	ldr	r1, [r2, #684]	@ D.41929, <variable>.stDisParams.s32Mode
	cmp	r1, #1	@ D.41929,
	beq	.L2895	@,
	cmp	r1, #2	@ D.41929,
	beq	.L2896	@,
.L2877:
	ldr	ip, [r2, #512]	@ <variable>.s32Compress_en, <variable>.s32Compress_en
	movw	lr, #:lower16:11199432	@ tmp278,
	movt	lr, #:upper16:11199432	@ tmp278,
	mov	r0, #0	@ D.41861,
	str	ip, [r4, lr]	@ <variable>.s32Compress_en, <variable>.DecPicPara.Compress_en
.L2860:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L2857:
	movw	r3, #:lower16:11199548	@ tmp151,
	movt	r3, #:upper16:11199548	@ tmp151,
	movw	r1, #:lower16:11199552	@ tmp154,
	movt	r1, #:upper16:11199552	@ tmp154,
	ldr	r6, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	r5, [r4, #0]	@ D.41838, <variable>.pstExtraData
	ldr	r2, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	add	r0, r6, #1	@ D.41840, <variable>.numTotalFrame,
	cmp	r0, r2	@ D.41840, <variable>.numOutputFrame
	movlt	r0, r2	@ D.41842, <variable>.numOutputFrame
	str	r0, [r4, r3]	@ D.41842, <variable>.numTotalFrame
	str	r0, [r5, #440]	@ D.41842, <variable>.stChanState.total_frame_num
	ldr	lr, [r4, r3]	@ <variable>.numTotalFrame, <variable>.numTotalFrame
	ldr	ip, [r4, r1]	@ <variable>.numOutputFrame, <variable>.numOutputFrame
	rsb	r6, ip, lr	@ tmp161, <variable>.numOutputFrame, <variable>.numTotalFrame
	str	r6, [r5, #444]	@ tmp161, <variable>.stChanState.error_frame_num
	b	.L2858	@
.L2894:
	movw	r6, #:lower16:11196732	@ tmp225,
	movt	r6, #:upper16:11196732	@ tmp225,
	ldr	r7, [r4, r6]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	cmp	r7, #0	@ <variable>.CurrPic.view_id,
	movweq	r5, #:lower16:11198016	@ tmp227,
	movteq	r5, #:upper16:11198016	@ tmp227,
	streq	r3, [r4, r5]	@ prephitmp.7226, <variable>.PPicFound
	b	.L2872	@
.L2891:
	movw	lr, #:lower16:11196692	@ tmp190,
	movt	lr, #:upper16:11196692	@ tmp190,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2861	@,
	movw	r3, #:lower16:11196656	@ tmp192,
	movt	r3, #:upper16:11196656	@ tmp192,
	ldr	r1, [r4, r3]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r1, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L2861	@,
	movw	r2, #:lower16:11196175	@ tmp194,
	movt	r2, #:upper16:11196175	@ tmp194,
	mov	r0, r4	@, pMvcCtx
	strb	r5, [r4, r2]	@ IPBDecMode, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
.L2890:
	cmp	r5, #1	@ IPBDecMode,
	bhi	.L2859	@,
	mov	r2, r5	@, IPBDecMode
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC79	@,
	movt	r1, #:upper16:.LC79	@,
	bl	dprint_vfmw	@
	str	r5, [r4, r6]	@ IPBDecMode, <variable>.OldDecMode
.L2864:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
.L2863:
	movw	r0, #:lower16:11196692	@ tmp177,
	movt	r0, #:upper16:11196692	@ tmp177,
	ldr	r3, [r4, r0]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ <variable>.CurrPic.pic_type,
	bne	.L2887	@,
	movw	ip, #:lower16:11199444	@ tmp182,
	movt	ip, #:upper16:11199444	@ tmp182,
	ldr	r2, [r4, ip]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r2, #0	@ <variable>.SliceParaNum,
	beq	.L2861	@,
	movw	r3, #:lower16:11199440	@ tmp185,
	movt	r3, #:upper16:11199440	@ tmp185,
	ldr	r1, [r4, r3]	@ <variable>.DecSlicePara, <variable>.DecSlicePara
	ldr	lr, [r1, #48]	@ <variable>.first_mb_in_slice, <variable>.first_mb_in_slice
	cmp	lr, #0	@ <variable>.first_mb_in_slice,
	beq	.L2861	@,
.L2887:
	movw	ip, #:lower16:11196175	@ tmp187,
	movt	ip, #:upper16:11196175	@ tmp187,
	mov	r2, #1	@ tmp188,
	mov	r0, r4	@, pMvcCtx
	strb	r2, [r4, ip]	@ tmp188, <variable>.CurrPic.mode_skip_flag
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
.L2874:
	movw	lr, #:lower16:11168616	@ tmp258,
	movt	lr, #:upper16:11168616	@ tmp258,
	ldr	r2, [r4, lr]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	cmp	r2, #0	@ <variable>.DPB.used_size,
	bne	.L2886	@,
	ldr	r2, [r4, #0]	@ temp.7256, <variable>.pstExtraData
	ldr	r0, [r2, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	beq	.L2875	@,
.L2889:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
.L2892:
	movw	lr, #:lower16:11196692	@ tmp199,
	movt	lr, #:upper16:11196692	@ tmp199,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r0, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2866	@,
	movw	r2, #:lower16:11196696	@ tmp202,
	movt	r2, #:upper16:11196696	@ tmp202,
	ldr	r1, [r4, r2]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	str	r1, [r4, r3]	@ <variable>.CurrPic.is_idr_pic, <variable>.PrevPicIsIDR
	b	.L2867	@
.L2893:
	movw	lr, #:lower16:11198016	@ tmp216,
	movt	lr, #:upper16:11198016	@ tmp216,
	ldr	r0, [r4, lr]	@ <variable>.PPicFound, <variable>.PPicFound
	cmp	r0, #0	@ <variable>.PPicFound,
	bne	.L2872	@,
	ldr	r1, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r5, [r1, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r5, #0	@ <variable>.s32DecOrderOutput,
	bne	.L2872	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	movw	r3, #:lower16:11196640	@ tmp223,
	movt	r3, #:upper16:11196640	@ tmp223,
	movw	r1, #:lower16:11199520	@ tmp220,
	movt	r1, #:upper16:11199520	@ tmp220,
	mov	r2, r5	@, <variable>.s32DecOrderOutput
	ldr	ip, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
.L2869:
	movw	r3, #:lower16:11196692	@ tmp212,
	movt	r3, #:upper16:11196692	@ tmp212,
	ldr	r3, [r4, r3]	@ prephitmp.7226, <variable>.CurrPic.pic_type
	cmp	r3, #0	@ prephitmp.7226,
	bne	.L2870	@,
	movw	r5, #:lower16:11198016	@ tmp227,
	movt	r5, #:upper16:11198016	@ tmp227,
	str	r3, [r4, r5]	@ prephitmp.7226, <variable>.PPicFound
	b	.L2872	@
.L2895:
	cmp	r3, #0	@ D.41928,
	beq	.L2877	@,
	movw	ip, #:lower16:11196692	@ tmp263,
	movt	ip, #:upper16:11196692	@ tmp263,
	ldr	r3, [r4, ip]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2877	@,
	movw	r2, #:lower16:11196640	@ tmp268,
	movt	r2, #:upper16:11196640	@ tmp268,
	movw	r1, #:lower16:11199520	@ tmp266,
	movt	r1, #:upper16:11199520	@ tmp266,
	ldr	lr, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, #0	@ tmp265,
	mov	r2, r0	@, tmp265
	str	r0, [r4, #360]	@ tmp265, <variable>.pMvcDecParam
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	b	.L2889	@
.L2896:
	ldr	ip, [r2, #688]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	cmp	ip, #0	@ <variable>.stDisParams.s32DisNums,
	ble	.L2877	@,
	cmp	r3, #0	@ D.41928,
	beq	.L2877	@,
	movw	lr, #:lower16:11196692	@ tmp270,
	movt	lr, #:upper16:11196692	@ tmp270,
	ldr	r3, [r4, lr]	@ <variable>.CurrPic.pic_type, <variable>.CurrPic.pic_type
	cmp	r3, #2	@ <variable>.CurrPic.pic_type,
	bne	.L2877	@,
	movw	r0, #:lower16:11196640	@ tmp275,
	movt	r0, #:upper16:11196640	@ tmp275,
	movw	r1, #:lower16:11199520	@ tmp273,
	movt	r1, #:upper16:11199520	@ tmp273,
	ldr	lr, [r4, r0]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #0	@ tmp272,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	mov	r2, r3	@, tmp272
	str	r3, [r4, #360]	@ tmp272, <variable>.pMvcDecParam
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
	ldr	ip, [r4, #0]	@ temp.7265, <variable>.pstExtraData
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [ip, #688]	@ <variable>.stDisParams.s32DisNums, <variable>.stDisParams.s32DisNums
	sub	r1, r2, #1	@ tmp277, <variable>.stDisParams.s32DisNums,
	str	r1, [ip, #688]	@ tmp277, <variable>.stDisParams.s32DisNums
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.41861,
	b	.L2860	@
	.fnend
	.size	MVC_DecVDM, .-MVC_DecVDM
	.align	2
	.global	MVC_FlushDecoder
	.type	MVC_FlushDecoder, %function
MVC_FlushDecoder:
	.fnstart
.LFB1653:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {fp, ip, lr, pc}	@,
	.pad #4
	.save {fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11162676	@ tmp140,
	movw	r3, #:lower16:11162629	@ tmp141,
	movt	r1, #:upper16:11162676	@ tmp140,
	movt	r3, #:upper16:11162629	@ tmp141,
	mov	ip, #1	@ tmp137,
	mov	lr, #0	@ tmp135,
	str	ip, [r0, #364]	@ tmp137, <variable>.StartMode
	str	lr, [r0, r1]	@ tmp135, <variable>.CurrSlice.first_mb_in_slice
	strb	ip, [r0, r3]	@ tmp137, <variable>.CurrSlice.new_pic_flag
	bl	MVC_DecVDM	@
	ldmfd	sp, {fp, sp, pc}	@
	.fnend
	.size	MVC_FlushDecoder, .-MVC_FlushDecoder
	.align	2
	.global	MVC_InsertFrmInDPB
	.type	MVC_InsertFrmInDPB, %function
MVC_InsertFrmInDPB:
	.fnstart
.LFB1553:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11168616	@ tmp201,
	movt	r6, #:upper16:11168616	@ tmp201,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r5, r1	@ pos, pos
	ldr	r3, [r0, r6]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r6, r2	@ pCurrPic, pCurrPic
	cmp	r3, #0	@ <variable>.DPB.used_size,
	movweq	r2, #:lower16:.LANCHOR1	@ tmp203,
	movteq	r2, #:upper16:.LANCHOR1	@ tmp203,
	streq	r3, [r2, #68]	@ <variable>.DPB.used_size, cnt
	ldrb	r2, [r6, #3]	@ zero_extendqisi2	@ D.37887, <variable>.structure
	cmp	r2, #1	@ D.37887,
	beq	.L2903	@,
	bcc	.L2902	@,
	cmp	r2, #2	@ D.37887,
	beq	.L2948	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC82	@,
	movt	r1, #:upper16:.LC82	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_ClearAll	@
	mov	r0, #0	@ D.37941,
.L2910:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L2902:
	movw	r0, #:lower16:2792104	@ tmp205,
	movt	r0, #:upper16:2792104	@ tmp205,
	add	r3, r1, r0	@ tmp205, pos, tmp205
	ldr	r7, [r6, #472]	@ D.37890, <variable>.frame_store
	mov	lr, #3	@ tmp220,
	add	r0, r4, r3, asl #2	@, tmp209, pMvcCtx, tmp205,
	str	r7, [r0, #4]	@ D.37890, <variable>.DPB.fs
	ldrb	r1, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r1, [r7, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r2, [r0, #4]	@ tmp215, <variable>.DPB.fs
	strb	lr, [r2, #1]	@ tmp220, <variable>.is_used
	ldr	ip, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	sl, [r0, #4]	@ tmp224, <variable>.DPB.fs
	ldrb	r9, [ip, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r9, [sl, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r8, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r0, #4]	@ tmp234, <variable>.DPB.fs
	ldr	r1, [r8, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r1, [r7, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	ldr	r3, [r0, #4]	@ temp.7338, <variable>.DPB.fs
	cmp	r2, #0	@ <variable>.is_long_term,
	beq	.L2949	@,
.L2905:
	mov	r2, #3	@ iftmp.504,
.L2906:
	movw	r8, #:lower16:2792104	@ tmp250,
	movt	r8, #:upper16:2792104	@ tmp250,
	add	r7, r5, r8	@ tmp250, pos, tmp250
	strb	r2, [r3, #2]	@ iftmp.504, <variable>.is_reference
	ldr	lr, [r6, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	add	r1, r6, #16	@, pCurrPic,
	add	r7, r4, r7, asl #2	@, tmp255, pMvcCtx, tmp250,
	mov	r2, #456	@,
	mov	r5, #0	@ tmp304,
	ldr	sl, [r7, #4]	@ tmp252, <variable>.DPB.fs
	str	lr, [sl, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	sl, #:lower16:.LANCHOR1	@ tmp445,
	ldr	r0, [r7, #4]	@ tmp260, <variable>.DPB.fs
	movt	sl, #:upper16:.LANCHOR1	@ tmp445,
	add	r0, r0, #8	@, tmp260,
	bl	memcpy	@
	ldr	r3, [r7, #4]	@ temp.7341, <variable>.DPB.fs
	ldr	r1, [r6, #532]	@ D.37906, <variable>.err_level
	mov	r2, r5	@, tmp304
	mov	r0, r4	@, pMvcCtx
	str	r1, [r3, #624]	@ D.37906, <variable>.err_level
	str	r1, [r3, #488]	@ D.37906, <variable>.frame.err_level
	ldr	r9, [r7, #4]	@ temp.7342, <variable>.DPB.fs
	ldr	ip, [r6, #472]	@ temp.7343, <variable>.frame_store
	str	ip, [r9, #468]	@ temp.7343, <variable>.frame.frame_store
	str	ip, [r9, #548]	@ temp.7343, <variable>.bottom_field.frame_store
	str	ip, [r9, #508]	@ temp.7343, <variable>.top_field.frame_store
	ldr	r1, [r7, #4]	@ tmp283, <variable>.DPB.fs
	ldr	r8, [r6, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	str	r8, [r1, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	ldr	r9, [r7, #4]	@ tmp291, <variable>.DPB.fs
	ldr	r3, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	r3, [r9, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	ip, [r7, #4]	@ tmp299, <variable>.DPB.fs
	strb	r5, [ip, #464]	@ tmp304, <variable>.frame.structure
	ldr	r1, [r7, #4]	@ tmp308, <variable>.DPB.fs
	ldrb	r8, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r8, [r1, #465]	@ <variable>.is_long_term, <variable>.frame.is_long_term
	ldr	r9, [r7, #4]	@ tmp317, <variable>.DPB.fs
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r3, [r9, #466]	@ <variable>.is_short_term, <variable>.frame.is_short_term
	ldr	r8, [r7, #4]	@ temp.7351, <variable>.DPB.fs
	ldr	ip, [r6, #524]	@ D.37912, <variable>.pic_type
	str	ip, [r8, #620]	@ D.37912, <variable>.pic_type
	str	ip, [r8, #492]	@ D.37912, <variable>.frame.pic_type
	ldr	r3, [r7, #4]	@ tmp332, <variable>.DPB.fs
	ldrb	r1, [r6, #9]	@ zero_extendqisi2	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	str	r1, [r3, #616]	@ <variable>.MbaffFrameFlag, <variable>.MbaffFrameFlag
	ldr	r8, [r7, #4]	@ tmp340, <variable>.DPB.fs
	ldr	r9, [r6, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	r9, [r8, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r7, #4]	@ tmp348, <variable>.DPB.fs
	ldr	ip, [r6, #496]	@ <variable>.framepoc, <variable>.framepoc
	str	ip, [r1, #480]	@ <variable>.framepoc, <variable>.frame.poc
	ldr	r9, [r7, #4]	@ tmp356, <variable>.DPB.fs
	ldr	r3, [r6, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	r3, [r9, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	r1, [r7, #4]	@ tmp364, <variable>.DPB.fs
	ldr	r8, [r6, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r8, [r1, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	r3, [r7, #4]	@ tmp372, <variable>.DPB.fs
	ldr	ip, [r6, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r3, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r8, [r7, #4]	@ tmp380, <variable>.DPB.fs
	ldr	r9, [r6, #512]	@ <variable>.decframepoc, <variable>.decframepoc
	str	r9, [r8, #484]	@ <variable>.decframepoc, <variable>.frame.MVC_DecPOC
	ldr	r3, [r7, #4]	@ tmp388, <variable>.DPB.fs
	ldr	r1, [r6, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	r1, [r3, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r9, [r7, #4]	@ tmp396, <variable>.DPB.fs
	ldr	ip, [r6, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r9, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldrb	r8, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	r1, [r7, #4]	@ temp.7361, <variable>.DPB.fs
	cmp	r8, #1	@ <variable>.mode_skip_flag,
	moveq	r8, #3	@ iftmp.506,
	movne	r8, r5	@ iftmp.506, tmp2
	strb	r8, [r1, #3]	@ iftmp.506, <variable>.mode_skip_flag
	ldr	r9, [r7, #4]	@ tmp412, <variable>.DPB.fs
	ldr	r3, [r6, #564]	@ <variable>.view_id, <variable>.view_id
	str	r3, [r9, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r8, [r7, #4]	@ tmp420, <variable>.DPB.fs
	ldr	ip, [r6, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r8, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r3, [r7, #4]	@ temp.7364, <variable>.DPB.fs
	ldr	r1, [r6, #576]	@ D.37931, <variable>.inter_view_flag
	str	r1, [r3, #660]	@ D.37931, <variable>.inter_view_flag
	str	r1, [r3, #664]	@ D.37931, <variable>.inter_view_flag
	ldr	r8, [r7, #4]	@ temp.7365, <variable>.DPB.fs
	ldr	r9, [r6, #572]	@ D.37933, <variable>.anchor_pic_flag
	str	r9, [r8, #656]	@ D.37933, <variable>.anchor_pic_flag
	str	r9, [r8, #652]	@ D.37933, <variable>.anchor_pic_flag
	mov	r8, #1	@ tmp460,
	ldr	ip, [sl, #68]	@ cnt, cnt
	ldr	r1, [r7, #4]	@ tmp440, <variable>.DPB.fs
	str	ip, [r1, #668]	@ cnt, <variable>.dpb_cnt
	ldr	r3, [sl, #68]	@ cnt, cnt
	add	r9, r3, #1	@ tmp450, cnt,
	str	r9, [sl, #68]	@ tmp450, cnt
	ldr	r3, [r7, #4]	@ temp.7368, <variable>.DPB.fs
	ldr	r1, [r3, #488]	@ <variable>.frame.err_level, <variable>.frame.err_level
	ldrb	lr, [r3, #465]	@ zero_extendqisi2	@ D.46367, <variable>.frame.is_long_term
	ldrb	ip, [r3, #466]	@ zero_extendqisi2	@ <variable>.frame.is_short_term, <variable>.frame.is_short_term
	ldr	sl, [r3, #492]	@ <variable>.frame.pic_type, <variable>.frame.pic_type
	ldr	r9, [r3, #468]	@ <variable>.frame.frame_store, <variable>.frame.frame_store
	strb	r8, [r3, #504]	@ tmp460, <variable>.top_field.structure
	mov	r8, #2	@ tmp468,
	strb	lr, [r3, #545]	@ D.46367, <variable>.bottom_field.is_long_term
	str	r9, [r3, #548]	@ <variable>.frame.frame_store, <variable>.bottom_field.frame_store
	strb	ip, [r3, #546]	@ <variable>.frame.is_short_term, <variable>.bottom_field.is_short_term
	strb	r8, [r3, #544]	@ tmp468, <variable>.bottom_field.structure
	str	r1, [r3, #568]	@ <variable>.frame.err_level, <variable>.bottom_field.err_level
	str	sl, [r3, #572]	@ <variable>.frame.pic_type, <variable>.bottom_field.pic_type
	strb	lr, [r3, #505]	@ D.46367, <variable>.top_field.is_long_term
	strb	ip, [r3, #506]	@ <variable>.frame.is_short_term, <variable>.top_field.is_short_term
	str	r1, [r3, #528]	@ <variable>.frame.err_level, <variable>.top_field.err_level
	str	sl, [r3, #532]	@ <variable>.frame.pic_type, <variable>.top_field.pic_type
	str	r9, [r3, #508]	@ <variable>.frame.frame_store, <variable>.top_field.frame_store
	ldr	r1, [r6, #472]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret
	movne	r3, r0	@, ret
	movwne	r2, #2158	@,
	movne	r0, r5	@, tmp304
	bne	.L2947	@,
.L2909:
	ldr	r2, [r7, #4]	@ prephitmp.7316, <variable>.DPB.fs
.L2916:
	ldrb	r0, [r2, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	cmp	r0, #0	@ <variable>.is_reference,
	beq	.L2910	@,
	movw	ip, #:lower16:11199520	@ tmp1445,
	movt	ip, #:upper16:11199520	@ tmp1445,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	bl	FSP_SetRef	@
	mov	r0, #0	@ D.37941,
	b	.L2910	@
.L2903:
	ldr	r3, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	mov	r1, #3	@ tmp476,
	strb	r1, [r3, #464]	@ tmp476, <variable>.frame.structure
	ldrb	ip, [r6, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	ip, #0	@ <variable>.field_pair_flag,
	beq	.L2911	@,
	movw	lr, #:lower16:2792104	@ tmp479,
	movt	lr, #:upper16:2792104	@ tmp479,
	add	r0, r5, lr	@ tmp479, pos, tmp479
	add	r3, r4, r0, asl #2	@, tmp483, pMvcCtx, tmp479,
	ldr	r1, [r3, #4]	@ temp.7371, <variable>.DPB.fs
	cmp	r1, #0	@ temp.7371,
	beq	.L2911	@,
	strb	r2, [r1, #504]	@ D.37887, <variable>.top_field.structure
	ldr	r9, [r3, #4]	@ tmp740, <variable>.DPB.fs
	ldr	ip, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	ip, [r9, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r8, [r3, #4]	@ tmp748, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r8, #505]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r1, [r3, #4]	@ tmp757, <variable>.DPB.fs
	ldrb	lr, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	lr, [r1, #506]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r2, [r3, #4]	@ tmp766, <variable>.DPB.fs
	ldr	r7, [r6, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	r7, [r2, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	movw	r7, #:lower16:2792104	@ tmp804,
	ldr	sl, [r3, #4]	@ tmp774, <variable>.DPB.fs
	movt	r7, #:upper16:2792104	@ tmp804,
	ldr	r9, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r9, [sl, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	ip, [r3, #4]	@ tmp782, <variable>.DPB.fs
	ldr	r8, [r6, #532]	@ <variable>.err_level, <variable>.err_level
	str	r8, [ip, #528]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	lr, [r3, #4]	@ temp.7384, <variable>.DPB.fs
	ldr	r0, [lr, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r1, [lr, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	r9, r0, r1	@ D.37958, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	r9, [lr, #624]	@ D.37958, <variable>.err_level
	str	r9, [lr, #488]	@ D.37958, <variable>.frame.err_level
	ldr	sl, [r3, #4]	@ temp.7385, <variable>.DPB.fs
	add	r3, r5, r7	@ tmp804, pos, tmp804
	add	r0, r4, r3, asl #2	@, tmp808, pMvcCtx, tmp804,
	ldrb	r2, [sl, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	ldrneb	r9, [r6, #2]	@ zero_extendqisi2	@ iftmp.511, <variable>.non_existing
	moveq	r9, r2	@ iftmp.511, <variable>.non_existing
	movw	r2, #:lower16:2792104	@ tmp831,
	movt	r2, #:upper16:2792104	@ tmp831,
	strb	r9, [sl, #0]	@ iftmp.511, <variable>.non_existing
	add	r9, r5, r2	@ tmp831, pos, tmp831
	ldr	r8, [r0, #4]	@ temp.7386, <variable>.DPB.fs
	mov	r2, #456	@,
	ldrb	ip, [r8, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	lr, ip, #1	@ tmp812, <variable>.is_used,
	strb	lr, [r8, #1]	@ tmp812, <variable>.is_used
	ldr	r7, [r0, #4]	@ D.37891, <variable>.DPB.fs
	add	lr, r4, r9, asl #2	@, tmp835, pMvcCtx, tmp831,
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	sl, [r7, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	add	r1, r6, #16	@, pCurrPic,
	orreq	sl, sl, #1	@ iftmp.512, <variable>.mode_skip_flag,
	strb	sl, [r7, #3]	@ iftmp.512, <variable>.mode_skip_flag
	ldr	ip, [lr, #4]	@ temp.7388, <variable>.DPB.fs
	add	r0, ip, #8	@, temp.7388,
	ldrd	r8, [ip, #24]	@, temp.7388,
	ldr	sl, [ip, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldr	r7, [ip, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strd	r8, [fp, #-60]	@,,
	ldrd	r8, [ip, #32]	@, temp.7388,
	str	lr, [fp, #-64]	@,
	strd	r8, [fp, #-52]	@,,
	bl	memcpy	@
	ldr	r1, [r6, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, sl, r7	@ tmp842, OtherFieldPts, OtherFieldPts
	ldr	r3, [r6, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	ip, [fp, #-64]	@,
	and	r0, r1, r3	@ tmp845, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r3, #:lower16:2792104	@ tmp859,
	cmn	r0, #1	@ tmp845,
	movne	r1, #0	@, tmp851
	moveq	r1, #1	@, tmp851
	cmn	r2, #1	@ tmp842,
	movt	r3, #:upper16:2792104	@ tmp859,
	ldrd	r8, [r6, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	moveq	r1, #0	@, tmp851,
	cmp	r1, #0	@ tmp851,
	add	r0, r5, r3	@ tmp859, pos, tmp859
	ldrne	r1, [ip, #4]	@ tmp854, <variable>.DPB.fs
	add	r2, r4, r0, asl #2	@, tmp864, pMvcCtx, tmp859,
	strne	r7, [r1, #20]	@ OtherFieldPts, <variable>.fs_image.PTS
	strne	sl, [r1, #16]	@ OtherFieldPts, <variable>.fs_image.PTS
	ldrd	r0, [fp, #-60]	@,,
	ldr	ip, [r2, #4]	@ tmp861, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	movw	r1, #:lower16:2792104	@ tmp867,
	movt	r1, #:upper16:2792104	@ tmp867,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	add	r3, r5, r1	@ tmp867, pos, tmp867
	strd	r8, [ip, #24]	@ <variable>.fs_image.Usertag, tmp861,
	ldrd	r0, [r6, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	add	r2, r4, r3, asl #2	@, tmp872, pMvcCtx, tmp867,
	ldrd	r8, [fp, #-52]	@,,
	ldr	ip, [r2, #4]	@ tmp869, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [ip, #32]	@ <variable>.fs_image.DispTime, tmp869,
	ldrb	r3, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2924	@,
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r3, #1	@ <variable>.is_short_term,
	beq	.L2924	@,
.L2925:
	movw	r2, #:lower16:2792104	@ tmp896,
	movt	r2, #:upper16:2792104	@ tmp896,
	add	lr, r5, r2	@ tmp896, pos, tmp896
	add	r5, r4, lr, asl #2	@, tmp900, pMvcCtx, tmp896,
	ldr	r3, [r5, #4]	@ temp.7398, <variable>.DPB.fs
	ldr	r0, [r3, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	r1, [r3, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, r1	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r3, #620]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	r1, [r3, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	ip, [r5, #4]	@ tmp907, <variable>.DPB.fs
	ldr	r2, [r6, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	r2, [ip, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	lr, [r5, #4]	@ temp.7401, <variable>.DPB.fs
	ldr	r0, [lr, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [lr, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	cmp	r0, r1	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	r0, [lr, #604]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r1, [lr, #604]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r3, [r5, #4]	@ tmp924, <variable>.DPB.fs
	ldr	ip, [r6, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r3, #660]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r2, [r5, #4]	@ tmp932, <variable>.DPB.fs
	ldr	lr, [r6, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	str	lr, [r2, #652]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r0, [r5, #4]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldr	r1, [r5, #4]	@ temp.7407, <variable>.DPB.fs
	movw	r3, #:lower16:2792190	@ tmp951,
	movt	r3, #:upper16:2792190	@ tmp951,
	ldr	r0, [r1, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	mov	r2, r1	@ prephitmp.7316, temp.7407
	ldr	r1, [r1, #520]	@ <variable>.top_field.poc, <variable>.top_field.poc
	add	ip, r0, r3	@ tmp951, <variable>.apc_idc, tmp951
	str	r1, [r4, ip, asl #2]	@ <variable>.top_field.poc, <variable>.APC.poc
	b	.L2916	@
.L2948:
	ldr	r0, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	mov	ip, #3	@ tmp962,
	strb	ip, [r0, #464]	@ tmp962, <variable>.frame.structure
	ldrb	r7, [r6, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r7, #0	@ <variable>.field_pair_flag,
	beq	.L2926	@,
	movw	r3, #:lower16:2792104	@ tmp965,
	movt	r3, #:upper16:2792104	@ tmp965,
	add	r1, r1, r3	@ tmp965, pos, tmp965
	add	r3, r4, r1, asl #2	@, tmp969, pMvcCtx, tmp965,
	ldr	r1, [r3, #4]	@ temp.7471, <variable>.DPB.fs
	cmp	r1, #0	@ temp.7471,
	beq	.L2926	@,
	strb	r2, [r1, #544]	@ D.37887, <variable>.bottom_field.structure
	ldr	sl, [r3, #4]	@ tmp1222, <variable>.DPB.fs
	ldr	ip, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	ip, [sl, #548]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r8, [r3, #4]	@ tmp1230, <variable>.DPB.fs
	ldrb	r0, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	r0, [r8, #545]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r1, [r3, #4]	@ tmp1239, <variable>.DPB.fs
	ldrb	lr, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	lr, [r1, #546]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	r2, [r3, #4]	@ tmp1248, <variable>.DPB.fs
	ldr	r7, [r6, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r7, [r2, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	movw	r7, #:lower16:2792104	@ tmp1286,
	ldr	r9, [r3, #4]	@ tmp1256, <variable>.DPB.fs
	movt	r7, #:upper16:2792104	@ tmp1286,
	ldr	sl, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	sl, [r9, #572]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	ip, [r3, #4]	@ tmp1264, <variable>.DPB.fs
	ldr	r8, [r6, #532]	@ <variable>.err_level, <variable>.err_level
	str	r8, [ip, #568]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	lr, [r3, #4]	@ temp.7484, <variable>.DPB.fs
	ldr	r0, [lr, #568]	@ <variable>.bottom_field.err_level, <variable>.bottom_field.err_level
	ldr	r1, [lr, #528]	@ <variable>.top_field.err_level, <variable>.top_field.err_level
	add	sl, r0, r1	@ temp.7487, <variable>.bottom_field.err_level, <variable>.top_field.err_level
	str	sl, [lr, #624]	@ temp.7487, <variable>.err_level
	str	sl, [lr, #488]	@ temp.7487, <variable>.frame.err_level
	ldr	r9, [r3, #4]	@ temp.7488, <variable>.DPB.fs
	add	r3, r5, r7	@ tmp1286, pos, tmp1286
	add	r0, r4, r3, asl #2	@, tmp1290, pMvcCtx, tmp1286,
	ldrb	r2, [r9, #0]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	cmp	r2, #0	@ <variable>.non_existing,
	ldrneb	sl, [r6, #2]	@ zero_extendqisi2	@ iftmp.515, <variable>.non_existing
	moveq	sl, r2	@ iftmp.515, <variable>.non_existing
	movw	r2, #:lower16:2792104	@ tmp1313,
	movt	r2, #:upper16:2792104	@ tmp1313,
	strb	sl, [r9, #0]	@ iftmp.515, <variable>.non_existing
	add	sl, r5, r2	@ tmp1313, pos, tmp1313
	ldr	r8, [r0, #4]	@ temp.7490, <variable>.DPB.fs
	mov	r2, #456	@,
	ldrb	ip, [r8, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	orr	lr, ip, #2	@ tmp1294, <variable>.is_used,
	strb	lr, [r8, #1]	@ tmp1294, <variable>.is_used
	ldr	r7, [r0, #4]	@ temp.7332, <variable>.DPB.fs
	add	lr, r4, sl, asl #2	@, tmp1317, pMvcCtx, tmp1313,
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldrb	r9, [r7, #3]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	add	r1, r6, #16	@, pCurrPic,
	orreq	r9, r9, #2	@ iftmp.516, <variable>.mode_skip_flag,
	strb	r9, [r7, #3]	@ iftmp.516, <variable>.mode_skip_flag
	ldr	ip, [lr, #4]	@ temp.7494, <variable>.DPB.fs
	add	r0, ip, #8	@, temp.7494,
	ldrd	r8, [ip, #24]	@, temp.7494,
	ldr	sl, [ip, #16]	@ OtherFieldPts.7495, <variable>.fs_image.PTS
	ldr	r7, [ip, #20]	@ OtherFieldPts.7495, <variable>.fs_image.PTS
	strd	r8, [fp, #-60]	@,,
	ldrd	r8, [ip, #32]	@, temp.7494,
	str	lr, [fp, #-64]	@,
	strd	r8, [fp, #-52]	@,,
	bl	memcpy	@
	ldr	r1, [r6, #24]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	and	r2, sl, r7	@ tmp1324, OtherFieldPts.7495, OtherFieldPts.7495
	ldr	r3, [r6, #28]	@ <variable>.fs_image.PTS, <variable>.fs_image.PTS
	ldr	ip, [fp, #-64]	@,
	and	r0, r1, r3	@ tmp1327, <variable>.fs_image.PTS, <variable>.fs_image.PTS
	movw	r3, #:lower16:2792104	@ tmp1341,
	cmn	r0, #1	@ tmp1327,
	movne	r1, #0	@, tmp1333
	moveq	r1, #1	@, tmp1333
	cmn	r2, #1	@ tmp1324,
	movt	r3, #:upper16:2792104	@ tmp1341,
	ldrd	r8, [r6, #32]	@ <variable>.fs_image.Usertag, pCurrPic,
	moveq	r1, #0	@, tmp1333,
	cmp	r1, #0	@ tmp1333,
	add	r0, r5, r3	@ tmp1341, pos, tmp1341
	ldrne	r1, [ip, #4]	@ tmp1336, <variable>.DPB.fs
	add	r2, r4, r0, asl #2	@, tmp1346, pMvcCtx, tmp1341,
	strne	r7, [r1, #20]	@ OtherFieldPts.7495, <variable>.fs_image.PTS
	strne	sl, [r1, #16]	@ OtherFieldPts.7495, <variable>.fs_image.PTS
	ldrd	r0, [fp, #-60]	@,,
	ldr	ip, [r2, #4]	@ tmp1343, <variable>.DPB.fs
	cmp	r9, r1	@ <variable>.fs_image.Usertag,
	cmpeq	r8, r0	@ <variable>.fs_image.Usertag,
	movhi	r9, r1	@ <variable>.fs_image.Usertag,
	movw	r1, #:lower16:2792104	@ tmp1349,
	movt	r1, #:upper16:2792104	@ tmp1349,
	movhi	r8, r0	@ <variable>.fs_image.Usertag,
	add	r3, r5, r1	@ tmp1349, pos, tmp1349
	strd	r8, [ip, #24]	@ <variable>.fs_image.Usertag, tmp1343,
	ldrd	r0, [r6, #40]	@ <variable>.fs_image.DispTime, pCurrPic,
	add	r2, r4, r3, asl #2	@, tmp1354, pMvcCtx, tmp1349,
	ldrd	r8, [fp, #-52]	@,,
	ldr	ip, [r2, #4]	@ tmp1351, <variable>.DPB.fs
	cmp	r1, r9	@ <variable>.fs_image.DispTime,
	cmpeq	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r0, r8	@ <variable>.fs_image.DispTime,
	movhi	r1, r9	@ <variable>.fs_image.DispTime,
	strd	r0, [ip, #32]	@ <variable>.fs_image.DispTime, tmp1351,
	ldrb	r3, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r3, #1	@ <variable>.is_long_term,
	beq	.L2940	@,
	ldrb	r3, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r3, #1	@ <variable>.is_short_term,
	beq	.L2940	@,
.L2941:
	movw	r2, #:lower16:2792104	@ tmp1378,
	movt	r2, #:upper16:2792104	@ tmp1378,
	add	r3, r5, r2	@ tmp1378, pos, tmp1378
	add	r5, r4, r3, asl #2	@, tmp1382, pMvcCtx, tmp1378,
	ldr	r1, [r5, #4]	@ temp.7516, <variable>.DPB.fs
	ldr	r0, [r1, #572]	@ <variable>.bottom_field.pic_type, <variable>.bottom_field.pic_type
	ldr	lr, [r1, #532]	@ <variable>.top_field.pic_type, <variable>.top_field.pic_type
	cmp	r0, lr	@ <variable>.bottom_field.pic_type, <variable>.top_field.pic_type
	strcs	r0, [r1, #620]	@, <variable>.bottom_field.pic_type, <variable>.pic_type
	strcc	lr, [r1, #620]	@, <variable>.top_field.pic_type, <variable>.pic_type
	ldr	ip, [r5, #4]	@ tmp1389, <variable>.DPB.fs
	ldr	r2, [r6, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	r2, [ip, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	r3, [r5, #4]	@ temp.7522, <variable>.DPB.fs
	ldr	r1, [r3, #524]	@ <variable>.top_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	ldr	lr, [r3, #564]	@ <variable>.bottom_field.MVC_DecPOC, <variable>.bottom_field.MVC_DecPOC
	cmp	lr, r1	@ <variable>.bottom_field.MVC_DecPOC, <variable>.top_field.MVC_DecPOC
	strle	lr, [r3, #604]	@, <variable>.bottom_field.MVC_DecPOC, <variable>.MVC_DecPOC
	strgt	r1, [r3, #604]	@, <variable>.top_field.MVC_DecPOC, <variable>.MVC_DecPOC
	ldr	r0, [r5, #4]	@, <variable>.DPB.fs
	bl	MVC_CombineFldsToFrm	@
	ldr	ip, [r6, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r0, [r5, #4]	@ tmp1413, <variable>.DPB.fs
	movw	r3, #:lower16:2792206	@ tmp1433,
	movt	r3, #:upper16:2792206	@ tmp1433,
	str	ip, [r0, #664]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r6, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r2, [r5, #4]	@ tmp1421, <variable>.DPB.fs
	str	r1, [r2, #656]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	r2, [r5, #4]	@ prephitmp.7316, <variable>.DPB.fs
	ldr	r0, [r2, #632]	@ <variable>.apc_idc, <variable>.apc_idc
	ldr	r1, [r2, #560]	@ <variable>.bottom_field.poc, <variable>.bottom_field.poc
	add	ip, r0, r3	@ tmp1433, <variable>.apc_idc, tmp1433
	str	r1, [r4, ip, asl #2]	@ <variable>.bottom_field.poc, <variable>.APC.poc
	b	.L2916	@
.L2926:
	movw	r7, #:lower16:2792104	@ tmp971,
	movt	r7, #:upper16:2792104	@ tmp971,
	add	r3, r5, r7	@ tmp971, pos, tmp971
	ldr	r2, [r6, #472]	@ temp.7532, <variable>.frame_store
	mov	r7, #2	@ tmp977,
	add	r3, r4, r3, asl #2	@, tmp975, pMvcCtx, tmp971,
	str	r2, [r3, #4]	@ temp.7532, <variable>.DPB.fs
	strb	r7, [r2, #544]	@ tmp977, <variable>.bottom_field.structure
	ldr	r0, [r3, #4]	@ tmp981, <variable>.DPB.fs
	ldr	ip, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	ip, [r0, #548]	@ <variable>.frame_store, <variable>.bottom_field.frame_store
	ldr	r1, [r3, #4]	@ tmp989, <variable>.DPB.fs
	ldrb	lr, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	lr, [r1, #545]	@ <variable>.is_long_term, <variable>.bottom_field.is_long_term
	ldr	r2, [r3, #4]	@ tmp998, <variable>.DPB.fs
	ldrb	r0, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r0, [r2, #546]	@ <variable>.is_short_term, <variable>.bottom_field.is_short_term
	ldr	ip, [r3, #4]	@ tmp1007, <variable>.DPB.fs
	ldr	r1, [r6, #504]	@ <variable>.bottompoc, <variable>.bottompoc
	str	r1, [ip, #560]	@ <variable>.bottompoc, <variable>.bottom_field.poc
	ldr	lr, [r3, #4]	@ tmp1015, <variable>.DPB.fs
	ldr	r0, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r0, [lr, #572]	@ <variable>.pic_type, <variable>.bottom_field.pic_type
	ldr	r2, [r3, #4]	@ tmp1023, <variable>.DPB.fs
	ldr	ip, [r6, #532]	@ <variable>.err_level, <variable>.err_level
	str	ip, [r2, #568]	@ <variable>.err_level, <variable>.bottom_field.err_level
	ldr	r1, [r3, #4]	@ temp.7545, <variable>.DPB.fs
	ldr	lr, [r1, #528]	@ temp.7546, <variable>.top_field.err_level
	str	lr, [r1, #624]	@ temp.7546, <variable>.err_level
	str	lr, [r1, #488]	@ temp.7546, <variable>.frame.err_level
	ldr	r0, [r3, #4]	@ tmp1037, <variable>.DPB.fs
	ldrb	ip, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	ip, [r0, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	r2, [r3, #4]	@ tmp1046, <variable>.DPB.fs
	strb	r7, [r2, #1]	@ tmp977, <variable>.is_used
	ldr	r1, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r3, #4]	@ tmp1055, <variable>.DPB.fs
	ldrb	r0, [r1, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r0, [lr, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	ip, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	r7, [r3, #4]	@ tmp1065, <variable>.DPB.fs
	ldr	r2, [ip, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r2, [r7, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	lr, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	lr, #1	@ <variable>.is_long_term,
	beq	.L2928	@,
	ldrb	lr, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2928	@,
.L2929:
	movw	r2, #:lower16:2792104	@ tmp1092,
	movt	r2, #:upper16:2792104	@ tmp1092,
	add	r7, r5, r2	@ tmp1092, pos, tmp1092
	mov	r5, #0	@ tmp1099,
	add	r1, r6, #16	@, pCurrPic,
	mov	r2, #456	@,
	add	r7, r4, r7, asl #2	@, tmp1097, pMvcCtx, tmp1092,
	ldr	r0, [r7, #4]	@ tmp1094, <variable>.DPB.fs
	str	r5, [r0, #616]	@ tmp1099, <variable>.MbaffFrameFlag
	ldr	lr, [r7, #4]	@ tmp1102, <variable>.DPB.fs
	add	r0, lr, #8	@, tmp1102,
	bl	memcpy	@
	ldr	r1, [r7, #4]	@ tmp1113, <variable>.DPB.fs
	ldr	ip, [r6, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp1196,
	movt	r3, #:upper16:.LANCHOR1	@ tmp1196,
	mov	r2, #2	@,
	mov	r0, r4	@, pMvcCtx
	str	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r7, #4]	@ tmp1121, <variable>.DPB.fs
	ldr	ip, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r7, #4]	@ tmp1129, <variable>.DPB.fs
	ldr	ip, [r6, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r7, #4]	@ tmp1137, <variable>.DPB.fs
	ldr	ip, [r6, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r7, #4]	@ temp.7572, <variable>.DPB.fs
	ldr	ip, [r6, #524]	@ temp.7573, <variable>.pic_type
	str	ip, [r1, #620]	@ temp.7573, <variable>.pic_type
	str	ip, [r1, #572]	@ temp.7573, <variable>.bottom_field.pic_type
	ldr	r1, [r7, #4]	@ tmp1151, <variable>.DPB.fs
	ldr	ip, [r6, #520]	@ <variable>.decbottompoc, <variable>.decbottompoc
	str	ip, [r1, #564]	@ <variable>.decbottompoc, <variable>.bottom_field.MVC_DecPOC
	ldr	r1, [r7, #4]	@ tmp1159, <variable>.DPB.fs
	ldr	ip, [r6, #564]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r7, #4]	@ tmp1167, <variable>.DPB.fs
	ldr	ip, [r6, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r7, #4]	@ tmp1175, <variable>.DPB.fs
	ldr	ip, [r6, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r1, #664]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r7, #4]	@ tmp1183, <variable>.DPB.fs
	ldr	ip, [r6, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	str	ip, [r1, #656]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r7, #4]	@ tmp1191, <variable>.DPB.fs
	str	ip, [r1, #668]	@ cnt, <variable>.dpb_cnt
	ldr	ip, [r3, #68]	@ cnt, cnt
	add	r1, ip, #1	@ tmp1201, cnt,
	str	r1, [r3, #68]	@ tmp1201, cnt
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	ldr	ip, [r7, #4]	@ temp.7588, <variable>.DPB.fs
	cmp	r1, #1	@ <variable>.mode_skip_flag,
	moveq	r1, r2	@ iftmp.513,
	movne	r1, r5	@ iftmp.513,
	strb	r1, [ip, #3]	@ iftmp.513, <variable>.mode_skip_flag
	ldr	r1, [r6, #472]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret.7591
	beq	.L2909	@,
	mov	r3, r0	@, ret.7591
	movw	r2, #2327	@,
	mov	r0, r5	@, tmp1099
.L2947:
	movw	r1, #:lower16:.LC81	@,
	movt	r1, #:upper16:.LC81	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	mvn	r0, #0	@ D.37941,
	b	.L2910	@
.L2911:
	movw	r7, #:lower16:2792104	@ tmp485,
	movt	r7, #:upper16:2792104	@ tmp485,
	add	r3, r5, r7	@ tmp485, pos, tmp485
	ldr	r0, [r6, #472]	@ temp.7408, <variable>.frame_store
	mov	r7, #1	@ tmp491,
	add	r3, r4, r3, asl #2	@, tmp489, pMvcCtx, tmp485,
	str	r0, [r3, #4]	@ temp.7408, <variable>.DPB.fs
	strb	r7, [r0, #504]	@ tmp491, <variable>.top_field.structure
	ldr	r2, [r3, #4]	@ tmp495, <variable>.DPB.fs
	ldr	r1, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	str	r1, [r2, #508]	@ <variable>.frame_store, <variable>.top_field.frame_store
	ldr	ip, [r3, #4]	@ tmp503, <variable>.DPB.fs
	ldrb	lr, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	strb	lr, [ip, #505]	@ <variable>.is_long_term, <variable>.top_field.is_long_term
	ldr	r0, [r3, #4]	@ tmp512, <variable>.DPB.fs
	ldrb	r1, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	strb	r1, [r0, #506]	@ <variable>.is_short_term, <variable>.top_field.is_short_term
	ldr	r2, [r3, #4]	@ tmp521, <variable>.DPB.fs
	ldr	ip, [r6, #500]	@ <variable>.toppoc, <variable>.toppoc
	str	ip, [r2, #520]	@ <variable>.toppoc, <variable>.top_field.poc
	ldr	lr, [r3, #4]	@ tmp529, <variable>.DPB.fs
	ldr	r0, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	r0, [lr, #532]	@ <variable>.pic_type, <variable>.top_field.pic_type
	ldr	r1, [r3, #4]	@ tmp537, <variable>.DPB.fs
	ldr	ip, [r6, #532]	@ <variable>.err_level, <variable>.err_level
	str	ip, [r1, #528]	@ <variable>.err_level, <variable>.top_field.err_level
	ldr	r2, [r3, #4]	@ temp.7421, <variable>.DPB.fs
	ldr	lr, [r2, #528]	@ temp.7422, <variable>.top_field.err_level
	str	lr, [r2, #624]	@ temp.7422, <variable>.err_level
	str	lr, [r2, #488]	@ temp.7422, <variable>.frame.err_level
	ldr	r0, [r3, #4]	@ tmp551, <variable>.DPB.fs
	ldrb	r1, [r6, #2]	@ zero_extendqisi2	@ <variable>.non_existing, <variable>.non_existing
	strb	r1, [r0, #0]	@ <variable>.non_existing, <variable>.non_existing
	ldr	ip, [r3, #4]	@ tmp560, <variable>.DPB.fs
	strb	r7, [ip, #1]	@ tmp491, <variable>.is_used
	ldr	r2, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	lr, [r3, #4]	@ tmp569, <variable>.DPB.fs
	ldrb	r0, [r2, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	strb	r0, [lr, #4]	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	ldr	r1, [r6, #472]	@ <variable>.frame_store, <variable>.frame_store
	ldr	ip, [r3, #4]	@ tmp579, <variable>.DPB.fs
	ldr	r7, [r1, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	str	r7, [ip, #612]	@ <variable>.is_displayed, <variable>.is_displayed
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	beq	.L2913	@,
	ldrb	lr, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	lr, #1	@ <variable>.is_short_term,
	beq	.L2913	@,
.L2914:
	movw	r2, #:lower16:2792104	@ tmp606,
	movt	r2, #:upper16:2792104	@ tmp606,
	add	r7, r5, r2	@ tmp606, pos, tmp606
	mov	r5, #0	@ tmp613,
	add	r1, r6, #16	@, pCurrPic,
	mov	r2, #456	@,
	add	r7, r4, r7, asl #2	@, tmp611, pMvcCtx, tmp606,
	ldr	r0, [r7, #4]	@ tmp608, <variable>.DPB.fs
	str	r5, [r0, #616]	@ tmp613, <variable>.MbaffFrameFlag
	ldr	lr, [r7, #4]	@ tmp616, <variable>.DPB.fs
	add	r0, lr, #8	@, tmp616,
	bl	memcpy	@
	ldr	r1, [r7, #4]	@ tmp627, <variable>.DPB.fs
	ldr	ip, [r6, #556]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	movw	r3, #:lower16:.LANCHOR1	@ tmp712,
	movt	r3, #:upper16:.LANCHOR1	@ tmp712,
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	str	ip, [r1, #628]	@ <variable>.pmv_address_idc, <variable>.pmv_address_idc
	ldr	r1, [r7, #4]	@ tmp635, <variable>.DPB.fs
	ldr	ip, [r6, #480]	@ <variable>.frame_num, <variable>.frame_num
	str	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	ldr	r1, [r7, #4]	@ tmp643, <variable>.DPB.fs
	ldr	ip, [r6, #492]	@ <variable>.thispoc, <variable>.thispoc
	str	ip, [r1, #600]	@ <variable>.thispoc, <variable>.poc
	ldr	r1, [r7, #4]	@ tmp651, <variable>.DPB.fs
	ldr	ip, [r6, #508]	@ <variable>.decthispoc, <variable>.decthispoc
	str	ip, [r1, #604]	@ <variable>.decthispoc, <variable>.MVC_DecPOC
	ldr	r1, [r7, #4]	@ tmp659, <variable>.DPB.fs
	ldr	ip, [r6, #524]	@ <variable>.pic_type, <variable>.pic_type
	str	ip, [r1, #620]	@ <variable>.pic_type, <variable>.pic_type
	ldr	r1, [r7, #4]	@ tmp667, <variable>.DPB.fs
	ldr	ip, [r6, #516]	@ <variable>.dectoppoc, <variable>.dectoppoc
	str	ip, [r1, #524]	@ <variable>.dectoppoc, <variable>.top_field.MVC_DecPOC
	ldr	r1, [r7, #4]	@ tmp675, <variable>.DPB.fs
	ldr	ip, [r6, #564]	@ <variable>.view_id, <variable>.view_id
	str	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	ldr	r1, [r7, #4]	@ tmp683, <variable>.DPB.fs
	ldr	ip, [r6, #568]	@ <variable>.voidx, <variable>.voidx
	str	ip, [r1, #648]	@ <variable>.voidx, <variable>.voidx
	ldr	r1, [r7, #4]	@ tmp691, <variable>.DPB.fs
	ldr	ip, [r6, #576]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	str	ip, [r1, #660]	@ <variable>.inter_view_flag, <variable>.inter_view_flag
	ldr	r1, [r7, #4]	@ tmp699, <variable>.DPB.fs
	ldr	ip, [r6, #572]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	str	ip, [r1, #652]	@ <variable>.anchor_pic_flag, <variable>.anchor_pic_flag
	ldr	ip, [r3, #68]	@ cnt, cnt
	ldr	r1, [r7, #4]	@ tmp707, <variable>.DPB.fs
	str	ip, [r1, #668]	@ cnt, <variable>.dpb_cnt
	ldr	r1, [r3, #68]	@ cnt, cnt
	add	ip, r1, r2	@ tmp717, cnt,
	str	ip, [r3, #68]	@ tmp717, cnt
	ldr	r3, [r7, #4]	@ tmp720, <variable>.DPB.fs
	ldrb	r1, [r6, #7]	@ zero_extendqisi2	@ <variable>.mode_skip_flag, <variable>.mode_skip_flag
	cmp	r1, r2	@ <variable>.mode_skip_flag,
	movne	ip, #0	@, tmp726
	moveq	ip, #1	@, tmp726
	strb	ip, [r3, #3]	@ tmp726, <variable>.mode_skip_flag
	ldr	r1, [r6, #472]	@, <variable>.frame_store
	bl	MVC_GetAPC	@
	cmp	r0, #0	@ ret.7467
	beq	.L2909	@,
	mov	r3, r0	@, ret.7467
	movw	r2, #2214	@,
	mov	r0, r5	@, tmp613
	b	.L2947	@
.L2949:
	ldrb	r2, [r6, #5]	@ zero_extendqisi2	@ <variable>.is_short_term, <variable>.is_short_term
	cmp	r2, #0	@ <variable>.is_short_term,
	beq	.L2906	@,
	b	.L2905	@
.L2928:
	movw	r7, #:lower16:2792104	@ tmp1074,
	movt	r7, #:upper16:2792104	@ tmp1074,
	add	r3, r5, r7	@ tmp1074, pos, tmp1074
	mov	r0, #2	@ tmp1081,
	add	ip, r4, r3, asl #2	@, tmp1079, pMvcCtx, tmp1074,
	ldr	r2, [ip, #4]	@ tmp1076, <variable>.DPB.fs
	strb	r0, [r2, #2]	@ tmp1081, <variable>.is_reference
	ldrb	r1, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r1, #1	@ <variable>.is_long_term,
	ldreq	ip, [ip, #4]	@ tmp1086, <variable>.DPB.fs
	ldreq	r1, [r6, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r1, [ip, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2929	@
.L2913:
	movw	r7, #:lower16:2792104	@ tmp588,
	movt	r7, #:upper16:2792104	@ tmp588,
	add	r3, r5, r7	@ tmp588, pos, tmp588
	mov	r1, #1	@ tmp595,
	add	r0, r4, r3, asl #2	@, tmp593, pMvcCtx, tmp588,
	ldr	r2, [r0, #4]	@ tmp590, <variable>.DPB.fs
	strb	r1, [r2, #2]	@ tmp595, <variable>.is_reference
	ldrb	ip, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	ip, r1	@ <variable>.is_long_term,
	ldreq	r0, [r0, #4]	@ tmp600, <variable>.DPB.fs
	ldreq	ip, [r6, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	ip, [r0, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2914	@
.L2940:
	movw	r2, #:lower16:2792104	@ tmp1359,
	movt	r2, #:upper16:2792104	@ tmp1359,
	add	r3, r5, r2	@ tmp1359, pos, tmp1359
	add	lr, r4, r3, asl #2	@, tmp1363, pMvcCtx, tmp1359,
	ldr	r0, [lr, #4]	@ temp.7511, <variable>.DPB.fs
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	r1, ip, #2	@ tmp1367, <variable>.is_reference,
	strb	r1, [r0, #2]	@ tmp1367, <variable>.is_reference
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	ldreq	lr, [lr, #4]	@ tmp1372, <variable>.DPB.fs
	ldreq	r2, [r6, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r2, [lr, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2941	@
.L2924:
	movw	r2, #:lower16:2792104	@ tmp877,
	movt	r2, #:upper16:2792104	@ tmp877,
	add	r3, r5, r2	@ tmp877, pos, tmp877
	add	lr, r4, r3, asl #2	@, tmp881, pMvcCtx, tmp877,
	ldr	r0, [lr, #4]	@ temp.7394, <variable>.DPB.fs
	ldrb	ip, [r0, #2]	@ zero_extendqisi2	@ <variable>.is_reference, <variable>.is_reference
	orr	r1, ip, #1	@ tmp885, <variable>.is_reference,
	strb	r1, [r0, #2]	@ tmp885, <variable>.is_reference
	ldrb	r2, [r6, #4]	@ zero_extendqisi2	@ <variable>.is_long_term, <variable>.is_long_term
	cmp	r2, #1	@ <variable>.is_long_term,
	ldreq	lr, [lr, #4]	@ tmp890, <variable>.DPB.fs
	ldreq	r2, [r6, #484]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	streq	r2, [lr, #596]	@ <variable>.long_term_frame_idx, <variable>.long_term_frame_idx
	b	.L2925	@
	.fnend
	.size	MVC_InsertFrmInDPB, .-MVC_InsertFrmInDPB
	.align	2
	.global	MVC_StorePicInDpb
	.type	MVC_StorePicInDpb, %function
MVC_StorePicInDpb:
	.fnstart
.LFB1564:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:11196171	@ tmp183,
	movw	r6, #:lower16:11196168	@ tmp186,
	movt	r1, #:upper16:11196171	@ tmp183,
	movt	r6, #:upper16:11196168	@ tmp186,
	movw	r3, #:lower16:11161504	@ tmp180,
	ldrb	r5, [r0, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movt	r3, #:upper16:11161504	@ tmp180,
	ldrb	r1, [r0, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	movw	r2, #:lower16:11161508	@ tmp182,
	cmp	r5, #2	@ <variable>.CurrPic.structure,
	movne	ip, #0	@, tmp185
	moveq	ip, #1	@, tmp185
	movt	r2, #:upper16:11161508	@ tmp182,
	cmp	r1, #0	@ <variable>.CurrPic.state,
	mov	r6, #0	@ tmp181,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	ip, [r0, r2]	@ tmp185, <variable>.CurrPOC.last_pic_bottom_field
	str	r6, [r0, r3]	@ tmp181, <variable>.CurrPOC.last_has_mmco_5
	beq	.L3044	@,
	movw	r5, #:lower16:11196696	@ tmp193,
	movt	r5, #:upper16:11196696	@ tmp193,
	movw	r2, #:lower16:11199536	@ tmp191,
	movt	r2, #:upper16:11199536	@ tmp191,
	ldr	ip, [r0, r5]	@ <variable>.CurrPic.is_idr_pic, <variable>.CurrPic.is_idr_pic
	movw	r3, #:lower16:11199532	@ tmp190,
	ldr	lr, [r0, r2]	@ <variable>.PicCounter, <variable>.PicCounter
	movt	r3, #:upper16:11199532	@ tmp190,
	cmp	ip, #0	@ <variable>.CurrPic.is_idr_pic,
	str	lr, [r0, r3]	@ <variable>.PicCounter, <variable>.PrevStorePicCounter
	bne	.L3045	@,
.L2953:
	movw	r3, #:lower16:11199448	@ tmp202,
	movt	r3, #:upper16:11199448	@ tmp202,
	ldr	r0, [r4, r3]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L3046	@,
	ldr	r5, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r5, #12]	@ prephitmp.7628, <variable>.s32DecOrderOutput
	cmp	r2, #0	@ prephitmp.7628,
	ble	.L3047	@,
.L2958:
	movw	r1, #:lower16:11196170	@ tmp222,
	movt	r1, #:upper16:11196170	@ tmp222,
	ldrb	r0, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r0, #0	@ <variable>.CurrPic.non_existing,
	beq	.L3048	@,
.L2960:
	cmp	r2, #2	@ prephitmp.7628,
	beq	.L3049	@,
.L2959:
	movw	lr, #:lower16:11196656	@ tmp315,
	movt	lr, #:upper16:11196656	@ tmp315,
	ldr	r6, [r4, lr]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2978	@,
	movw	r5, #:lower16:11199512	@ tmp317,
	movw	r0, #:lower16:11196700	@ tmp318,
	movt	r5, #:upper16:11199512	@ tmp317,
	movt	r0, #:upper16:11196700	@ tmp318,
	ldr	r3, [r4, r5]	@ D.38786, <variable>.ref_error_thr
	ldr	r2, [r4, r0]	@ D.38787, <variable>.CurrPic.err_level
	cmp	r3, r2	@ D.38786, D.38787
	bcs	.L2985	@,
	movw	ip, #:lower16:11196170	@ tmp319,
	movt	ip, #:upper16:11196170	@ tmp319,
	ldrb	r5, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.non_existing, <variable>.CurrPic.non_existing
	cmp	r5, #0	@ <variable>.CurrPic.non_existing,
	beq	.L3050	@,
.L2985:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_Marking	@
	cmp	r0, #0	@ ret.7696
	bne	.L3051	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	r3, #:lower16:11196732	@ tmp328,
	movt	r3, #:upper16:11196732	@ tmp328,
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r3]	@, <variable>.CurrPic.view_id
	bl	MVC_RemoveUnUsedFrameStore	@
.L2978:
	movw	r1, #:lower16:11196169	@ tmp330,
	movt	r1, #:upper16:11196169	@ tmp330,
	ldrb	r6, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.field_pair_flag, <variable>.CurrPic.field_pair_flag
	cmp	r6, #1	@ <variable>.CurrPic.field_pair_flag,
	beq	.L2988	@,
	movw	lr, #:lower16:11168612	@ tmp332,
	movt	lr, #:upper16:11168612	@ tmp332,
	ldr	ip, [r4, lr]	@ prephitmp.7630, <variable>.DPB.size
.L2989:
	movw	r5, #:lower16:11196656	@ tmp347,
	movt	r5, #:upper16:11196656	@ tmp347,
	ldr	r6, [r4, r5]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r6, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L3052	@,
.L2997:
	movw	r5, #:lower16:11168616	@ tmp455,
	movw	r6, #:lower16:11196656	@ tmp459,
	movw	r8, #:lower16:11196660	@ tmp460,
	movw	sl, #:lower16:11168612	@ tmp461,
	movt	r5, #:upper16:11168616	@ tmp455,
	movt	r6, #:upper16:11196656	@ tmp459,
	movt	r8, #:upper16:11196660	@ tmp460,
	movt	sl, #:upper16:11168612	@ tmp461,
	sub	r9, fp, #48	@ tmp456,,
	b	.L3040	@
.L3055:
	ldr	ip, [r4, sl]	@ prephitmp.7630, <variable>.DPB.size
.L3040:
	ldr	lr, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	mov	r2, r9	@, tmp456
	sub	r3, fp, #52	@,,
	mov	r0, r4	@, pMvcCtx
	cmp	lr, ip	@ <variable>.DPB.used_size, prephitmp.7630
	mvn	r1, #0	@,
	bcc	.L2999	@,
	bl	MVC_GetMinPOC	@
	cmp	r0, #0	@,
	mov	r0, r4	@, pMvcCtx
	blt	.L3053	@,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrPic.nal_ref_idc,
	bne	.L3000	@,
	ldr	lr, [r4, r8]	@ <variable>.CurrPic.thispoc, <variable>.CurrPic.thispoc
	ldr	r2, [fp, #-48]	@ min_poc, min_poc
	cmp	lr, r2	@ <variable>.CurrPic.thispoc, min_poc
	blt	.L3054	@,
.L3000:
	ldr	r1, [fp, #-52]	@, pos
	bl	MVC_OutputFrmFromDPB	@
	cmn	r0, #1	@ ret.7715,
	mov	r7, r0	@ ret.7715,
	bne	.L3055	@,
	mov	r3, r0	@, ret.7715
	movw	r2, #3703	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mov	r2, r7	@, ret.7715
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3704	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
.L2952:
	movw	r6, #:lower16:11196640	@ tmp424,
	movt	r6, #:upper16:11196640	@ tmp424,
	movw	r5, #:lower16:11199520	@ tmp421,
	movt	r5, #:upper16:11199520	@ tmp421,
	ldr	lr, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mvn	r5, #0	@ ret,
	ldr	r1, [lr, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r3, r5	@, ret
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC85	@,
	movw	r2, #3758	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r0, #0	@ tmp428,
	strb	r0, [r3, #4]	@ tmp428, <variable>.is_in_dpb
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r0, [r1, #1]	@ tmp428, <variable>.is_used
.L3015:
	movw	ip, #:lower16:11196168	@ tmp434,
	movt	ip, #:upper16:11196168	@ tmp434,
	mov	r2, #0	@ tmp435,
	mov	r0, r5	@, ret
	strb	r2, [r4, ip]	@ tmp435, <variable>.CurrPic.state
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3045:
	movw	lr, #:lower16:11196644	@ tmp196,
	movt	lr, #:upper16:11196644	@ tmp196,
	ldr	r1, [r0, lr]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	ldrb	r5, [r1, #1]	@ zero_extendqisi2	@ <variable>.no_output_of_prior_pics_flag, <variable>.no_output_of_prior_pics_flag
	cmp	r5, #0	@ <variable>.no_output_of_prior_pics_flag,
	beq	.L2954	@,
	bl	MVC_InitDPB	@
	cmp	r0, #0	@,
	beq	.L2953	@,
	mov	r0, r6	@, tmp181
	movw	r1, #:lower16:.LC86	@,
	movt	r1, #:upper16:.LC86	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3419	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3048:
	movw	r7, #:lower16:11196171	@ tmp225,
	movt	r7, #:upper16:11196171	@ tmp225,
	movw	r3, #:lower16:11196640	@ tmp224,
	movt	r3, #:upper16:11196640	@ tmp224,
	ldrb	r1, [r4, r7]	@ zero_extendqisi2	@ temp.7671, <variable>.CurrPic.structure
	ldr	r7, [r4, r3]	@ pFrameStore, <variable>.CurrPic.frame_store
	sub	r5, r1, #1	@ tmp226, temp.7671,
	uxtb	lr, r5	@ tmp227, tmp226
	cmp	lr, #1	@ tmp227,
	movhi	r0, #0	@, one_fld_flg
	movls	r0, #1	@, one_fld_flg
	cmp	r1, #0	@ temp.7671,
	bne	.L3056	@,
.L2961:
	cmp	r0, #0	@ one_fld_flg,
	beq	.L2962	@,
	movw	r3, #:lower16:11199528	@ tmp236,
	movt	r3, #:upper16:11199528	@ tmp236,
	ldr	ip, [r4, r3]	@ temp.7672, <variable>.FirstFrameDisplayed
	cmp	ip, #0	@ temp.7672,
	bne	.L2963	@,
	movw	r5, #:lower16:11196752	@,
	movw	r1, #:lower16:11196168	@,
	movt	r5, #:upper16:11196752	@,
	movt	r1, #:upper16:11196168	@,
	mov	r2, #1	@ tmp238,
	add	r0, r4, r5	@, pMvcCtx,
	str	r2, [r4, r3]	@ tmp238, <variable>.FirstFrameDisplayed
	add	r1, r4, r1	@, pMvcCtx,
	mov	r2, #584	@,
	bl	memcpy	@
	ldr	r0, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r2, [r0, #12]	@ prephitmp.7628, <variable>.s32DecOrderOutput
	b	.L2960	@
.L3052:
	movw	r1, #:lower16:11168620	@ tmp349,
	movw	r3, #:lower16:11168624	@ tmp350,
	movt	r1, #:upper16:11168620	@ tmp349,
	movt	r3, #:upper16:11168624	@ tmp350,
	ldr	r5, [r4, r1]	@ D.38821, <variable>.DPB.ref_frames_in_buffer
	ldr	lr, [r4, r3]	@ D.38822, <variable>.DPB.ltref_frames_in_buffer
	add	r2, lr, r5	@ tmp351, D.38822, D.38821
	cmp	r2, ip	@ tmp351, prephitmp.7630
	bcc	.L2997	@,
	mov	r3, ip	@, prephitmp.7630
	movw	r2, #3670	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC92	@,
	movt	r1, #:upper16:.LC92	@,
	stmia	sp, {r5, lr}	@ phole stm
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3673	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L2954:
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	beq	.L2953	@,
	mov	r0, r5	@, <variable>.no_output_of_prior_pics_flag
	movw	r1, #:lower16:.LC87	@,
	movt	r1, #:upper16:.LC87	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3428	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3049:
	movw	r2, #:lower16:11196656	@ tmp299,
	movt	r2, #:upper16:11196656	@ tmp299,
	ldr	r3, [r4, r2]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r3, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L2978	@,
	movw	r5, #:lower16:11168612	@ tmp301,
	movt	r5, #:upper16:11168612	@ tmp301,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SimpleSlideDPB	@
	ldr	ip, [r4, r5]	@ D.38776, <variable>.DPB.size
	cmp	ip, #0	@ D.38776,
	beq	.L2979	@,
	movw	lr, #:lower16:11168420	@ tmp302,
	movt	lr, #:upper16:11168420	@ tmp302,
	ldr	r1, [r4, lr]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	r1, #0	@ <variable>.DPB.fs,
	beq	.L2979	@,
	tst	ip, #1	@ D.38776,
	movw	r0, #:lower16:11168424	@ ivtmp.7647,
	movt	r0, #:upper16:11168424	@ ivtmp.7647,
	mov	r1, #0	@ i,
	add	r3, r4, r0	@ ivtmp.7647, pMvcCtx, ivtmp.7647
	bne	.L2980	@,
	ldr	r0, [r3], #4	@ D.38774, <variable>.DPB.fs
	mov	r1, #1	@ i,
	cmp	r0, #0	@ D.38774,
	bne	.L2980	@,
.L2981:
	movw	ip, #:lower16:11196168	@,
	movt	ip, #:upper16:11196168	@,
	add	r2, r4, ip	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	subs	r5, r0, #0	@ ret.7688,
	bne	.L3057	@,
	movw	r3, #:lower16:11168616	@ tmp310,
	movt	r3, #:upper16:11168616	@ tmp310,
	mov	r0, r4	@, pMvcCtx
	ldr	r1, [r4, r3]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r2, r1, #1	@ tmp313, <variable>.DPB.used_size,
	str	r2, [r4, r3]	@ tmp313, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r2, r5	@, ret.7688
	movw	r1, #:lower16:.LC84	@,
	movw	r3, #3585	@,
	movt	r1, #:upper16:.LC84	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	mov	r5, #0	@ ret,
	b	.L3015	@
.L3047:
	movw	ip, #:lower16:11199528	@ tmp220,
	movt	ip, #:upper16:11199528	@ tmp220,
	ldr	r3, [r4, ip]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	r3, #2	@ <variable>.FirstFrameDisplayed,
	bne	.L2958	@,
	b	.L2959	@
.L2988:
	movw	r2, #:lower16:11196640	@ tmp333,
	movw	ip, #:lower16:11197372	@ tmp334,
	movt	r2, #:upper16:11196640	@ tmp333,
	movt	ip, #:upper16:11197372	@ tmp334,
	ldr	r0, [r4, r2]	@ D.38803, <variable>.CurrPic.frame_store
	ldr	r5, [r4, ip]	@ <variable>.pDirectOutBuf, <variable>.pDirectOutBuf
	cmp	r0, r5	@ D.38803, <variable>.pDirectOutBuf
	beq	.L3058	@,
.L2990:
	movw	r3, #:lower16:11168612	@ tmp336,
	movt	r3, #:upper16:11168612	@ tmp336,
	ldr	ip, [r4, r3]	@ prephitmp.7630, <variable>.DPB.size
	cmp	ip, #0	@ prephitmp.7630,
	beq	.L2989	@,
	movw	lr, #:lower16:11168420	@ ivtmp.7662,
	movt	lr, #:upper16:11168420	@ ivtmp.7662,
	add	r3, r4, lr	@ ivtmp.7662, pMvcCtx, ivtmp.7662
	sub	r1, ip, #1	@ tmp472, prephitmp.7630,
	and	lr, r1, #1	@ tmp474, tmp472,
	mov	r1, #0	@ i.7705,
	ldr	r2, [r3, #0]	@ temp.7699, <variable>.DPB.fs
	cmp	r2, r1	@ temp.7699,
	beq	.L3028	@,
	cmp	r0, r2	@ D.38803, temp.7699
	beq	.L3043	@,
.L3028:
	mov	r1, #1	@ i.7705,
	cmp	r1, ip	@ i.7705, prephitmp.7630
	add	r3, r3, #4	@ ivtmp.7662, ivtmp.7662,
	bcs	.L2989	@,
	cmp	lr, #0	@ tmp474,
	beq	.L2996	@,
	ldr	r2, [r3, #0]	@ temp.7699, <variable>.DPB.fs
	cmp	r2, #0	@ temp.7699,
	beq	.L3030	@,
	cmp	r0, r2	@ D.38803, temp.7699
	beq	.L3043	@,
.L3030:
	add	r1, r1, #1	@ i.7705, i.7705,
	add	r3, r3, #4	@ ivtmp.7662, ivtmp.7662,
	cmp	r1, ip	@ i.7705, prephitmp.7630
	bcc	.L2996	@,
	b	.L2989	@
.L2994:
	ldr	r3, [r3, #4]	@ temp.7699, <variable>.DPB.fs
	add	r1, r1, #1	@ i.7705, i.7705,
	cmp	r3, #0	@ temp.7699,
	mov	r2, r1	@ tmp475, i.7705
	beq	.L3033	@,
	cmp	r0, r3	@ D.38803, temp.7699
	beq	.L3043	@,
.L3033:
	add	r1, r2, #1	@ i.7705, tmp475,
	add	r3, lr, #4	@ ivtmp.7662, tmp476,
	cmp	r1, ip	@ i.7705, prephitmp.7630
	bcs	.L2989	@,
.L2996:
	ldr	r2, [r3, #0]	@ temp.7699, <variable>.DPB.fs
	add	lr, r3, #4	@ tmp476, ivtmp.7662,
	cmp	r2, #0	@ temp.7699,
	beq	.L2994	@,
	cmp	r0, r2	@ D.38803, temp.7699
	bne	.L2994	@,
.L3043:
	movw	r0, #:lower16:11196168	@,
	movt	r0, #:upper16:11196168	@,
	add	r2, r4, r0	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmn	r0, #1	@ ret.7701,
	mov	r5, r0	@ ret.7701,
	beq	.L3059	@,
	mov	r0, r4	@, pMvcCtx
	mov	r5, #0	@ ret,
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	movw	r1, #:lower16:.LC84	@,
	mov	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3657	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L3015	@
.L3056:
	ldrb	lr, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	lr, #0	@ <variable>.is_used,
	moveq	ip, r0	@, tmp235, one_fld_flg
	orrne	ip, r0, #1	@,, tmp235, one_fld_flg
	cmp	ip, #0	@ tmp235,
	beq	.L2960	@,
	b	.L2961	@
.L2963:
	cmp	ip, #1	@ temp.7672,
	beq	.L2964	@,
.L2962:
	cmp	r1, #0	@ temp.7671,
	beq	.L2965	@,
	ldrb	r3, [r7, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r3, #0	@ <variable>.is_used,
	beq	.L2960	@,
.L2965:
	cmp	r0, #0	@ one_fld_flg,
	bne	.L3060	@,
.L2966:
	movw	r1, #:lower16:11196168	@ pOutPic,
	movt	r1, #:upper16:11196168	@ pOutPic,
	add	sl, r4, r1	@ pOutPic, pMvcCtx, pOutPic
	mov	r5, r7	@ pOutFrameStore, pFrameStore
.L2967:
	cmp	r2, #0	@ prephitmp.7628,
	ble	.L2968	@,
	ldrb	r8, [sl, #3]	@ zero_extendqisi2	@ <variable>.structure, <variable>.structure
	cmp	r8, #0	@ <variable>.structure,
	beq	.L2969	@,
	ldrb	r6, [sl, #1]	@ zero_extendqisi2	@ <variable>.field_pair_flag, <variable>.field_pair_flag
	cmp	r6, #1	@ <variable>.field_pair_flag,
	beq	.L3061	@,
.L2969:
	ldr	r0, [sl, #532]	@ <variable>.err_level, <variable>.err_level
	str	r0, [r5, #624]	@ <variable>.err_level, <variable>.err_level
.L2970:
	movw	r8, #:lower16:11199520	@ tmp260,
	movt	r8, #:upper16:11199520	@ tmp260,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, pOutFrameStore
	bl	MVC_GetImagePara	@
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetFsImagePtr	@
	subs	r6, r0, #0	@ pImg,
	beq	.L3062	@,
	ldrd	r2, [sl, #40]	@, pOutPic,
	ldrd	r0, [sl, #24]	@ <variable>.fs_image.PTS, pOutPic,
	strd	r2, [r6, #24]	@, pImg,
	ldrd	r2, [sl, #32]	@, pOutPic,
	strd	r0, [r6, #8]	@ <variable>.fs_image.PTS, pImg,
	strd	r2, [r6, #16]	@, pImg,
	ldr	r3, [r5, #624]	@ D.38743, <variable>.err_level
	cmp	r3, #0	@ D.38743,
	str	r3, [r6, #180]	@ D.38743, <variable>.error_level
	beq	.L2972	@,
	ldr	sl, [r6, #140]	@ <variable>.format, <variable>.format
	ands	sl, sl, #3	@ tmp268, <variable>.format,
	beq	.L3063	@,
.L2973:
	ldr	lr, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	ip, [lr, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	cmp	ip, r3	@ <variable>.s32OutErrThr, D.38743
	bcc	.L2975	@,
.L2972:
	movw	r8, #:lower16:11199520	@ tmp276,
	movt	r8, #:upper16:11199520	@ tmp276,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	ldr	r0, [r4, r8]	@ <variable>.ChanID, <variable>.ChanID
	mov	r1, #15	@,
	mov	r2, r4	@, pMvcCtx
	add	r3, r4, #8	@, pMvcCtx,
	str	r6, [sp, #0]	@ pImg,
	bl	InsertImgToVoQueue	@
	cmp	r0, #1	@,
	beq	.L2976	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r2, #0	@,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	bl	FSP_SetDisplay	@
.L2976:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, pImg
	bl	MVC_SetFrmRepeatCount	@
	movw	r3, #:lower16:11199544	@ tmp285,
	movt	r3, #:upper16:11199544	@ tmp285,
	ldr	r2, [r4, r3]	@ <variable>.PicOutCounter, <variable>.PicOutCounter
	add	r0, r2, #2	@ tmp288, <variable>.PicOutCounter,
	str	r0, [r4, r3]	@ tmp288, <variable>.PicOutCounter
.L2968:
	movw	r0, #:lower16:11199528	@ tmp292,
	movt	r0, #:upper16:11199528	@ tmp292,
	movw	ip, #:lower16:11199528	@ tmp296,
	movt	ip, #:upper16:11199528	@ tmp296,
	ldr	lr, [r4, r0]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	mov	r1, #2	@ tmp297,
	cmp	lr, #2	@ <variable>.FirstFrameDisplayed,
	movne	lr, #1	@ tmp294,
	strne	lr, [r7, #636]	@ tmp294, <variable>.as_first_out
	strne	lr, [r5, #608]	@ tmp294, <variable>.eFoState
	ldr	r5, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	str	r1, [r4, ip]	@ tmp297, <variable>.FirstFrameDisplayed
	ldr	r2, [r5, #12]	@ prephitmp.7628, <variable>.s32DecOrderOutput
	b	.L2960	@
.L2982:
	ldr	r5, [r2], #4	@ D.38774, <variable>.DPB.fs
	cmp	r5, #0	@ D.38774,
	beq	.L2981	@,
	ldr	lr, [r3, #4]	@ D.38774, <variable>.DPB.fs
	add	r1, r1, #1	@ i, i,
	add	r3, r2, #4	@ ivtmp.7647, tmp465,
	cmp	lr, #0	@ D.38774,
	beq	.L2981	@,
.L2980:
	add	r1, r1, #1	@ i, i,
	mov	r2, r3	@ tmp465, ivtmp.7647
	cmp	r1, ip	@ i, D.38776
	bcc	.L2982	@,
	b	.L2981	@
.L3053:
	movw	r2, #3681	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC93	@,
	movt	r1, #:upper16:.LC93	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
.L2999:
	movw	r5, #:lower16:11196656	@ tmp376,
	movt	r5, #:upper16:11196656	@ tmp376,
	ldr	r0, [r4, r5]	@ <variable>.CurrPic.nal_ref_idc, <variable>.CurrPic.nal_ref_idc
	cmp	r0, #0	@ <variable>.CurrPic.nal_ref_idc,
	beq	.L3005	@,
	movw	r3, #:lower16:11196172	@ tmp378,
	movt	r3, #:upper16:11196172	@ tmp378,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrPic.is_long_term, <variable>.CurrPic.is_long_term
	cmp	r2, #0	@ <variable>.CurrPic.is_long_term,
	beq	.L3064	@,
.L3005:
	movw	r2, #:lower16:11168612	@ tmp382,
	movt	r2, #:upper16:11168612	@ tmp382,
	ldr	ip, [r4, r2]	@ temp.7738, <variable>.DPB.size
	cmp	ip, #0	@ temp.7738,
	beq	.L3007	@,
	movw	r0, #:lower16:11168420	@ tmp383,
	movt	r0, #:upper16:11168420	@ tmp383,
	ldr	lr, [r4, r0]	@ <variable>.DPB.fs, <variable>.DPB.fs
	cmp	lr, #0	@ <variable>.DPB.fs,
	beq	.L3007	@,
	tst	ip, #1	@ temp.7738,
	movw	r5, #:lower16:11168424	@ ivtmp.7652,
	movt	r5, #:upper16:11168424	@ ivtmp.7652,
	mov	r1, #0	@ i.7706,
	add	r3, r4, r5	@ ivtmp.7652, pMvcCtx, ivtmp.7652
	bne	.L3008	@,
	ldr	r5, [r3], #4	@ temp.7726, <variable>.DPB.fs
	mov	r1, #1	@ i.7706,
	cmp	r5, #0	@ temp.7726,
	bne	.L3008	@,
	b	.L3012	@
.L3013:
	ldr	lr, [r2], #4	@ temp.7726, <variable>.DPB.fs
	cmp	lr, #0	@ temp.7726,
	beq	.L3012	@,
	ldr	r0, [r3, #4]	@ temp.7726, <variable>.DPB.fs
	add	r1, r1, #1	@ i.7706, i.7706,
	add	r3, r2, #4	@ ivtmp.7652, tmp470,
	cmp	r0, #0	@ temp.7726,
	beq	.L3012	@,
.L3008:
	add	r1, r1, #1	@ i.7706, i.7706,
	mov	r2, r3	@ tmp470, ivtmp.7652
	cmp	r1, ip	@ i.7706, temp.7738
	bcc	.L3013	@,
.L3012:
	movw	r3, #:lower16:11196168	@,
	movt	r3, #:upper16:11196168	@,
	add	r2, r4, r3	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InsertFrmInDPB	@
	cmp	r0, #0	@ ret.7728
	bne	.L3065	@,
	movw	r5, #:lower16:11168616	@ tmp417,
	movt	r5, #:upper16:11168616	@ tmp417,
	mov	r0, r4	@, pMvcCtx
	ldr	ip, [r4, r5]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	add	r2, ip, #1	@ tmp420, <variable>.DPB.used_size,
	str	r2, [r4, r5]	@ tmp420, <variable>.DPB.used_size
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r5, #0	@ ret,
	b	.L3015	@
.L3046:
	movw	r1, #:lower16:.LC88	@,
	movt	r1, #:upper16:.LC88	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	movw	r3, #:lower16:11196724	@ tmp205,
	movw	ip, #:lower16:11198000	@ tmp206,
	movt	r3, #:upper16:11196724	@ tmp205,
	movt	ip, #:upper16:11198000	@ tmp206,
	ldr	r1, [r4, ip]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	mov	r5, r0	@ ret,
	ldr	r0, [r4, r3]	@ D.38690, <variable>.CurrPic.pmv_address_idc
	cmp	r0, r1	@ D.38690, <variable>.TotalPmvNum
	beq	.L2956	@,
	movw	lr, #:lower16:2799480	@ tmp208,
	movt	lr, #:upper16:2799480	@ tmp208,
	add	r2, r0, lr	@ tmp208, D.38690, tmp208
	str	r1, [r4, r3]	@ <variable>.TotalPmvNum, <variable>.CurrPic.pmv_address_idc
	mov	r1, #0	@ tmp214,
	add	r0, r4, r2, asl #2	@, tmp212, pMvcCtx, tmp208,
	str	r1, [r0, #4]	@ tmp214, <variable>.PmvStoreUsedFlag
.L2956:
	movw	r1, #:lower16:.LC84	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3447	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
.L2957:
	cmn	r5, #1	@ ret,
	bne	.L3015	@,
	b	.L2952	@
.L3060:
	movw	ip, #:lower16:11199528	@ tmp247,
	movt	ip, #:upper16:11199528	@ tmp247,
	ldr	sl, [r4, ip]	@ <variable>.FirstFrameDisplayed, <variable>.FirstFrameDisplayed
	cmp	sl, #1	@ <variable>.FirstFrameDisplayed,
	bne	.L2966	@,
.L2964:
	movw	lr, #:lower16:11197224	@ tmp250,
	movt	lr, #:upper16:11197224	@ tmp250,
	movw	r0, #:lower16:11196752	@ pOutPic,
	movt	r0, #:upper16:11196752	@ pOutPic,
	add	sl, r4, r0	@ pOutPic, pMvcCtx, pOutPic
	ldr	r5, [r4, lr]	@ pOutFrameStore, <variable>.LastPic.frame_store
	b	.L2967	@
.L3054:
	movw	r5, #:lower16:11199448	@ tmp362,
	movt	r5, #:upper16:11199448	@ tmp362,
	ldr	r0, [r4, r5]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	r0, #2	@ <variable>.OldDecMode,
	beq	.L3066	@,
.L3001:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3067	@,
.L3002:
	movw	r1, #:lower16:.LC84	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3697	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2957	@
.L3064:
	movw	r5, #:lower16:11168620	@ tmp380,
	movt	r5, #:upper16:11168620	@ tmp380,
	ldr	r1, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	cmp	r1, #0	@ <variable>.DPB.ref_frames_in_buffer,
	beq	.L3005	@,
	movw	r7, #:lower16:11168484	@ ivtmp.7657,
	movt	r7, #:upper16:11168484	@ ivtmp.7657,
	add	r3, r4, r7	@ ivtmp.7657, pMvcCtx, ivtmp.7657
	movw	lr, #:lower16:11196648	@ tmp450,
	movw	r6, #:lower16:11196732	@ tmp451,
	movw	r7, #:lower16:11198000	@ tmp453,
	movt	lr, #:upper16:11196648	@ tmp450,
	movt	r6, #:upper16:11196732	@ tmp451,
	movt	r7, #:upper16:11198000	@ tmp453,
	mov	r8, r2	@ tmp452, i.7725
	b	.L3011	@
.L3009:
	ldr	r0, [r4, r5]	@ <variable>.DPB.ref_frames_in_buffer, <variable>.DPB.ref_frames_in_buffer
	add	r3, r3, #4	@ ivtmp.7657, ivtmp.7657,
	cmp	r0, r2	@ <variable>.DPB.ref_frames_in_buffer, i.7725
	bls	.L3005	@,
.L3011:
	ldr	r1, [r3, #0]	@ D.38853, <variable>.DPB.fs_ref
	add	r2, r2, #1	@ i.7725, i.7725,
	ldr	r0, [r4, lr]	@ <variable>.CurrPic.frame_num, <variable>.CurrPic.frame_num
	ldr	ip, [r1, #588]	@ <variable>.frame_num, <variable>.frame_num
	cmp	ip, r0	@ <variable>.frame_num, <variable>.CurrPic.frame_num
	bne	.L3009	@,
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.view_id, <variable>.CurrPic.view_id
	ldr	ip, [r1, #644]	@ <variable>.view_id, <variable>.view_id
	cmp	ip, r0	@ <variable>.view_id, <variable>.CurrPic.view_id
	bne	.L3009	@,
	strb	r8, [r1, #2]	@ tmp452, <variable>.is_reference
	movw	r1, #:lower16:2799480	@ tmp402,
	ldr	r0, [r3, #0]	@ tmp447, <variable>.DPB.fs_ref
	movt	r1, #:upper16:2799480	@ tmp402,
	ldrb	sl, [r0, #4]	@ zero_extendqisi2	@ <variable>.is_in_dpb, <variable>.is_in_dpb
	cmp	sl, #1	@ <variable>.is_in_dpb,
	streq	sl, [r0, #612]	@ <variable>.is_in_dpb, <variable>.is_displayed
	ldreq	r0, [r3, #0]	@ tmp397, <variable>.DPB.fs_ref
	streqb	r8, [r0, #4]	@ tmp452, <variable>.is_in_dpb
	ldreq	r0, [r3, #0]	@ tmp447, <variable>.DPB.fs_ref
	ldr	sl, [r4, r7]	@ <variable>.TotalPmvNum, <variable>.TotalPmvNum
	ldr	ip, [r0, #628]	@ D.38864, <variable>.pmv_address_idc
	add	r1, ip, r1	@ tmp402, D.38864, tmp402
	cmp	ip, sl	@ D.38864, <variable>.TotalPmvNum
	add	r1, r4, r1, asl #2	@, tmp406, pMvcCtx, tmp402,
	strne	r8, [r1, #4]	@ tmp452, <variable>.PmvStoreUsedFlag
	strne	sl, [r0, #628]	@ <variable>.TotalPmvNum, <variable>.pmv_address_idc
	b	.L3009	@
.L3058:
	cmp	r0, #0	@ D.38803,
	beq	.L2990	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DirectOutput	@
	cmn	r0, #1	@ ret,
	mov	r5, r0	@ ret,
	beq	.L3068	@,
.L2993:
	movw	r1, #:lower16:.LC84	@,
	mov	r2, r5	@, ret
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3634	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2957	@
.L3063:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC89	@,
	movw	r2, #3523	@,
	movt	r1, #:upper16:.LC89	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:g_event_report	@ tmp271,
	movt	r1, #:upper16:g_event_report	@ tmp271,
	ldr	r3, [r1, #0]	@ g_event_report.563, g_event_report
	cmp	r3, #0	@ g_event_report.563,
	beq	.L2974	@,
	ldr	r0, [r4, r8]	@, <variable>.ChanID
	mov	r2, sl	@, tmp268
	mov	r1, #111	@,
	blx	r3	@ g_event_report.563
.L2974:
	ldr	r3, [r6, #180]	@ D.38743, <variable>.error_level
	cmp	r3, #0	@ D.38743,
	bne	.L2973	@,
	b	.L2972	@
.L3061:
	ldr	r2, [r5, #624]	@ <variable>.err_level, <variable>.err_level
	mov	lr, #3	@ tmp254,
	strb	lr, [r5, #1]	@ tmp254, <variable>.is_used
	ldr	ip, [sl, #532]	@ <variable>.err_level, <variable>.err_level
	add	r3, r2, ip	@ tmp258, <variable>.err_level, <variable>.err_level
	str	r3, [r5, #624]	@ tmp258, <variable>.err_level
	b	.L2970	@
.L3066:
	movw	r1, #:lower16:11196171	@ tmp364,
	movt	r1, #:upper16:11196171	@ tmp364,
	ldrb	r3, [r4, r1]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	cmp	r3, #0	@ <variable>.CurrPic.structure,
	beq	.L3001	@,
	movw	r2, #:lower16:11196640	@ tmp367,
	movt	r2, #:upper16:11196640	@ tmp367,
	movw	lr, #:lower16:11197376	@ tmp366,
	movt	lr, #:upper16:11197376	@ tmp366,
	ldr	ip, [r4, r2]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	ip, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.pLastFieldBuf
	b	.L3001	@
.L3067:
	movw	r1, #:lower16:.LC85	@,
	movw	r2, #3695	@,
	movt	r1, #:upper16:.LC85	@,
	mov	r3, r5	@, ret
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	b	.L3002	@
.L3044:
	mov	r0, r1	@, <variable>.CurrPic.state
	movw	r1, #:lower16:.LC83	@,
	movt	r1, #:upper16:.LC83	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3406	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3051:
	mov	r2, r0	@, ret.7696
	movw	r1, #:lower16:.LC91	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC91	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3609	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3007:
	mov	r1, #0	@ i.7706,
	b	.L3012	@
.L3065:
	mov	r3, r0	@, ret.7728
	movw	r2, #3745	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3746	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L2979:
	mov	r1, #0	@ i,
	b	.L2981	@
.L3050:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC90	@,
	movt	r1, #:upper16:.LC90	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp322,
	movt	r2, #:upper16:g_event_report	@ tmp322,
	ldr	r3, [r2, #0]	@ g_event_report.7693, g_event_report
	cmp	r3, #0	@ g_event_report.7693,
	beq	.L2986	@,
	movw	r6, #:lower16:11199520	@ tmp323,
	movt	r6, #:upper16:11199520	@ tmp323,
	mov	r2, r5	@, <variable>.CurrPic.non_existing
	mov	r1, #104	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	blx	r3	@ g_event_report.7693
.L2986:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3601	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3068:
	mov	r0, r6	@, <variable>.CurrPic.field_pair_flag
	movw	r1, #:lower16:.LC85	@,
	movw	r2, #3631	@,
	movt	r1, #:upper16:.LC85	@,
	mov	r3, r5	@, ret
	bl	dprint_vfmw	@
	b	.L2993	@
.L3057:
	mov	r3, r5	@, ret.7688
	movw	r2, #3577	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3578	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3059:
	mov	r3, r0	@, ret.7701
	movw	r2, #3651	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC85	@,
	movt	r1, #:upper16:.LC85	@,
	bl	dprint_vfmw	@
	mov	r2, r5	@, ret.7701
	movw	r1, #:lower16:.LC84	@,
	movw	r3, #3652	@,
	movt	r1, #:upper16:.LC84	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L2975:
	movw	r6, #:lower16:11199520	@ tmp289,
	movt	r6, #:upper16:11199520	@ tmp289,
	ldr	r1, [r5, #584]	@, <variable>.logic_fs_id
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_SetDisplay	@
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3539	@,
	mov	r0, #14	@,
	bl	dprint_vfmw	@
	b	.L2952	@
.L3062:
	movw	r1, #:lower16:.LC84	@,
	mvn	r2, #0	@,
	movt	r1, #:upper16:.LC84	@,
	movw	r3, #3513	@,
	add	r0, r0, #14	@,,
	bl	dprint_vfmw	@
	b	.L2952	@
	.fnend
	.size	MVC_StorePicInDpb, .-MVC_StorePicInDpb
	.align	2
	.global	MVC_DEC_VDMPostProc
	.type	MVC_DEC_VDMPostProc, %function
MVC_DEC_VDMPostProc:
	.fnstart
.LFB1668:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r5, [r0, #364]	@ <variable>.StartMode, <variable>.StartMode
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	cmp	r5, #0	@ <variable>.StartMode,
	bne	.L3070	@,
	movw	r3, #:lower16:11196700	@ tmp142,
	movt	r3, #:upper16:11196700	@ tmp142,
	str	r1, [r0, r3]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	subs	r7, r0, #0	@ ret,
	bne	.L3076	@,
	movw	lr, #:lower16:11198004	@ tmp151,
	movt	lr, #:upper16:11198004	@ tmp151,
	mov	r2, #1	@ tmp152,
	mov	r0, r7	@ D.45981, ret
	str	r2, [r4, lr]	@ tmp152, <variable>.AllowStartDec
	b	.L3072	@
.L3070:
	movw	r5, #:lower16:11196700	@ tmp153,
	movt	r5, #:upper16:11196700	@ tmp153,
	str	r1, [r0, r5]	@ ErrRatio, <variable>.CurrPic.err_level
	bl	MVC_ClearAllSlice	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_StorePicInDpb	@
	subs	r2, r0, #0	@ ret.7766,
	bne	.L3077	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r2, r0, #0	@ ret.7767,
	bne	.L3078	@,
.L3074:
	movw	ip, #:lower16:11155236	@ tmp159,
	movt	ip, #:upper16:11155236	@ tmp159,
	movw	r8, #:lower16:11198004	@ tmp156,
	movw	r7, #:lower16:11164320	@ tmp161,
	ldr	r9, [r4, ip]	@, <variable>.MaxPpsNum
	movt	r7, #:upper16:11164320	@ tmp161,
	movt	r8, #:upper16:11198004	@ tmp156,
	movw	lr, #:lower16:11164304	@,
	movw	r6, #:lower16:11164305	@ tmp166,
	movt	lr, #:upper16:11164304	@,
	str	r9, [fp, #-60]	@, %sfp
	movt	r6, #:upper16:11164305	@ tmp166,
	ldr	r1, [fp, #-60]	@, %sfp
	movw	r9, #:lower16:11164312	@ tmp158,
	str	lr, [fp, #-48]	@, %sfp
	movt	r9, #:upper16:11164312	@ tmp158,
	movw	r5, #:lower16:11164316	@ tmp169,
	movw	ip, #:lower16:11164306	@ tmp171,
	movt	r5, #:upper16:11164316	@ tmp169,
	movt	ip, #:upper16:11164306	@ tmp171,
	movw	lr, #:lower16:11164328	@ tmp174,
	movw	sl, #:lower16:11164332	@,
	movt	lr, #:upper16:11164328	@ tmp174,
	movt	sl, #:upper16:11164332	@,
	str	sl, [fp, #-64]	@, %sfp
	movw	sl, #:lower16:11164336	@ tmp178,
	movt	sl, #:upper16:11164336	@ tmp178,
	mov	r3, #0	@ tmp157,
	movw	r2, #:lower16:11164340	@,
	movw	r0, #:lower16:11164344	@,
	movt	r2, #:upper16:11164340	@,
	movt	r0, #:upper16:11164344	@,
	str	r2, [fp, #-52]	@, %sfp
	mov	r2, #3	@ tmp175,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r3	@ D.45981, tmp157
	str	r3, [r4, sl]	@ tmp157, <variable>.PrevSlice.delta_pic_order_cnt
	movw	sl, #:lower16:88888	@ tmp162,
	str	r2, [r4, lr]	@ tmp175, <variable>.PrevSlice.pic_oder_cnt_lsb
	movt	sl, #:upper16:88888	@ tmp162,
	str	r1, [r4, r9]	@, <variable>.PrevSlice.pic_parameter_set_id
	mov	r2, #262144	@ tmp183,
	str	sl, [r4, r7]	@ tmp162, <variable>.PrevSlice.frame_num
	mov	r7, #2	@ tmp167,
	str	r3, [r4, r8]	@ tmp157, <variable>.AllowStartDec
	strb	r7, [r4, r6]	@ tmp167, <variable>.PrevSlice.bottom_field_flag
	mov	r6, #7	@ tmp170,
	str	r6, [r4, r5]	@ tmp170, <variable>.PrevSlice.nal_ref_idc
	mov	r5, #32	@ tmp172,
	strb	r5, [r4, ip]	@ tmp172, <variable>.PrevSlice.nal_unit_type
	mvn	ip, #0	@ tmp177,
	ldr	r1, [fp, #-64]	@, %sfp
	str	ip, [r4, r1]	@ tmp177, <variable>.PrevSlice.delta_pic_oder_cnt_bottom
	ldr	lr, [fp, #-56]	@, %sfp
	str	r2, [r4, lr]	@ tmp183, <variable>.PrevSlice.first_mb_in_slice
	ldr	r1, [fp, #-48]	@, %sfp
	strb	r3, [r4, r1]	@ tmp157, <variable>.PrevSlice.field_pic_flag
	ldr	ip, [fp, #-52]	@, %sfp
	str	r3, [r4, ip]	@ tmp157, <variable>.PrevSlice.delta_pic_order_cnt
.L3072:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3076:
	movw	r6, #:lower16:11196640	@ tmp146,
	movt	r6, #:upper16:11196640	@ tmp146,
	movw	r1, #:lower16:11199520	@ tmp143,
	movt	r1, #:upper16:11199520	@ tmp143,
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r2, #1	@,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [ip, #584]	@, <variable>.logic_fs_id
	bl	FSP_ClearLogicFs	@
	mov	r2, r7	@, ret
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC94	@,
	movt	r1, #:upper16:.LC94	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	str	r5, [r4, r6]	@ <variable>.StartMode, <variable>.CurrPic.frame_store
	mvn	r0, #0	@ D.45981,
	b	.L3072	@
.L3078:
	movw	r1, #:lower16:.LC96	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC96	@,
	bl	dprint_vfmw	@
	b	.L3074	@
.L3077:
	movw	r1, #:lower16:.LC95	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC95	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r2, r0, #0	@ ret.7767,
	beq	.L3074	@,
	b	.L3078	@
	.fnend
	.size	MVC_DEC_VDMPostProc, .-MVC_DEC_VDMPostProc
	.global	__aeabi_idivmod
	.align	2
	.global	MVC_DecGap
	.type	MVC_DecGap, %function
MVC_DecGap:
	.fnstart
.LFB1608:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11168368	@ tmp164,
	movt	ip, #:upper16:11168368	@ tmp164,
	movw	r7, #:lower16:11152036	@ tmp153,
	movt	r7, #:upper16:11152036	@ tmp153,
	movw	lr, #2004	@ tmp167,
	ldr	r6, [r0, ip]	@ D.40914, <variable>.CurrMarkIdx
	movw	r3, #:lower16:11164284	@ tmp157,
	ldr	ip, [r0, r7]	@ D.40905, <variable>.pCurrSPS
	movt	r3, #:upper16:11164284	@ tmp157,
	movw	r2, #:lower16:11168616	@ tmp177,
	movt	r2, #:upper16:11168616	@ tmp177,
	mul	lr, lr, r6	@ tmp166, tmp167, D.40914
	ldr	r1, [r0, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	ldrb	r7, [ip, #19]	@ zero_extendqisi2	@ <variable>.gaps_in_frame_num_value_allowed_flag, <variable>.gaps_in_frame_num_value_allowed_flag
	movw	r5, #:lower16:2790658	@ tmp154,
	movt	r5, #:upper16:2790658	@ tmp154,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	add	r6, r1, r5	@ tmp154, <variable>.CurrSlice.voidx, tmp154
	movw	r9, #:lower16:11164360	@ tmp169,
	ldr	r5, [r0, r2]	@ <variable>.DPB.used_size, <variable>.DPB.used_size
	movt	r9, #:upper16:11164360	@ tmp169,
	add	r0, lr, r0	@ tmp168, tmp166, pMvcCtx
	cmp	r7, #1	@ <variable>.gaps_in_frame_num_value_allowed_flag,
	add	r2, r0, r9	@ tmp169, tmp168, tmp169
	movw	r1, #:lower16:11162644	@ tmp152,
	moveq	r7, #2	@,
	movne	r7, #0	@,
	str	r7, [fp, #-76]	@, %sfp
	movt	r1, #:upper16:11162644	@ tmp152,
	ldrb	r2, [r2, #3]	@ zero_extendqisi2	@, <variable>.adaptive_ref_pic_marking_mode_flag
	add	r0, r4, r6, asl #2	@, tmp160, pMvcCtx, tmp154,
	movw	r3, #:lower16:11164360	@ tmp174,
	movw	r6, #:lower16:11161528	@ tmp162,
	movt	r3, #:upper16:11164360	@ tmp174,
	movt	r6, #:upper16:11161528	@ tmp162,
	str	r2, [fp, #-92]	@, %sfp
	add	r3, lr, r3	@ tmp174, tmp166, tmp174
	ldr	r1, [r4, r1]	@, <variable>.CurrSlice.frame_num
	add	lr, r4, r3	@ tmp176, pMvcCtx, tmp174
	movw	r7, #:lower16:11161532	@ tmp163,
	movw	r9, #:lower16:11196644	@ tmp171,
	movt	r7, #:upper16:11161532	@ tmp163,
	movt	r9, #:upper16:11196644	@ tmp171,
	str	r1, [fp, #-48]	@, %sfp
	cmp	r5, #0	@ <variable>.DPB.used_size,
	ldr	r3, [r4, r6]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r2, [ip, #2896]	@ D.40906, <variable>.log2_max_frame_num_minus4
	ldr	r0, [r0, #4]	@ D.40910, <variable>.CurrSlice.prev_frame_num
	str	lr, [r4, r9]	@ tmp176, <variable>.CurrPic.pMarkPara
	str	r3, [fp, #-88]	@, %sfp
	ldr	ip, [r4, r7]	@, <variable>.CurrPOC.delta_pic_order_cnt
	str	ip, [fp, #-84]	@, %sfp
	beq	.L3092	@,
	add	r3, r2, #4	@ tmp180, D.40906,
	mov	r1, #1	@ tmp181,
	mov	r5, r1, asl r3	@, tmp181,
	add	r0, r0, #1	@, D.40910,
	str	r5, [fp, #-72]	@, %sfp
	mov	r1, r5	@,
	bl	__aeabi_uidivmod	@
	mov	r2, #0	@ tmp189,
	mov	r0, #2	@,
	str	r2, [r4, r7]	@ tmp189, <variable>.CurrPOC.delta_pic_order_cnt
	str	r2, [r4, r6]	@ tmp189, <variable>.CurrPOC.delta_pic_order_cnt
	mov	r5, r1	@ UnusedShortTermFrameNum,
	movw	r1, #:lower16:.LC98	@,
	movt	r1, #:upper16:.LC98	@,
	bl	dprint_vfmw	@
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC99	@,
	ldr	r2, [fp, #-48]	@, %sfp
	movt	r1, #:upper16:.LC99	@,
	mov	r3, r5	@, UnusedShortTermFrameNum
	bl	dprint_vfmw	@
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r0, r5	@, UnusedShortTermFrameNum
	ble	.L3084	@,
	movw	r6, #:lower16:11196174	@,
	movw	r7, #:lower16:11196648	@,
	movt	r6, #:upper16:11196174	@,
	movt	r7, #:upper16:11196648	@,
	str	r6, [fp, #-52]	@, %sfp
	movw	lr, #:lower16:11196656	@,
	movw	r6, #:lower16:11196640	@ tmp286,
	movt	lr, #:upper16:11196656	@,
	movw	sl, #:lower16:11196170	@,
	movw	r8, #:lower16:11196732	@,
	movt	sl, #:upper16:11196170	@,
	movt	r8, #:upper16:11196732	@,
	str	sl, [fp, #-64]	@, %sfp
	movt	r6, #:upper16:11196640	@ tmp286,
	movw	sl, #:lower16:11164280	@ tmp291,
	str	r7, [fp, #-56]	@, %sfp
	str	lr, [fp, #-60]	@, %sfp
	movt	sl, #:upper16:11164280	@ tmp291,
	str	r8, [fp, #-68]	@, %sfp
	b	.L3090	@
.L3086:
	movw	lr, #:lower16:11196172	@ tmp250,
	movt	lr, #:upper16:11196172	@ tmp250,
	mov	r0, r4	@, pMvcCtx
	strb	r8, [r4, lr]	@ tmp251, <variable>.CurrPic.is_long_term
	bl	MVC_StorePicInDpb	@
	movw	r2, #:lower16:11164284	@ tmp262,
	movw	r3, #:lower16:2790658	@ tmp259,
	movt	r2, #:upper16:11164284	@ tmp262,
	movt	r3, #:upper16:2790658	@ tmp259,
	ldr	r1, [fp, #-72]	@, %sfp
	subs	ip, r0, #0	@ ret.7798,
	add	r0, r5, #1	@, UnusedShortTermFrameNum,
	bne	.L3093	@,
	ldr	r2, [r4, r2]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	add	r3, r2, r3	@ tmp259, <variable>.CurrSlice.voidx, tmp259
	add	lr, r4, r3, asl #2	@, tmp265, pMvcCtx, tmp259,
	str	r5, [lr, #4]	@ UnusedShortTermFrameNum, <variable>.CurrSlice.prev_frame_num
	bl	__aeabi_idivmod	@
	ldr	ip, [fp, #-48]	@, %sfp
	cmp	ip, r1	@, UnusedShortTermFrameNum
	mov	r5, r1	@ UnusedShortTermFrameNum,
	ble	.L3084	@,
.L3090:
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_AllocFrameStore	@
	mov	r8, #0	@ tmp251,
	movw	r1, #:lower16:.LC101	@,
	movt	r1, #:upper16:.LC101	@,
	subs	r7, r0, #0	@ ret,
	mov	r0, #2	@,
	bne	.L3094	@,
	bl	dprint_vfmw	@
	ldr	r2, [fp, #-52]	@, %sfp
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	mov	r3, #1	@ tmp202,
	strb	r3, [r4, r2]	@ tmp202, <variable>.CurrPic.nal_unit_type
	movw	r2, #:lower16:11152036	@ tmp235,
	str	r5, [r1, #588]	@ UnusedShortTermFrameNum, <variable>.frame_num
	movt	r2, #:upper16:11152036	@ tmp235,
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r5, [r4, r0]	@ UnusedShortTermFrameNum, <variable>.CurrPic.frame_num
	str	r5, [r1, #476]	@ UnusedShortTermFrameNum, <variable>.frame.pic_num
	ldr	r0, [fp, #-76]	@, %sfp
	ldr	ip, [fp, #-60]	@, %sfp
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r4, ip]	@, <variable>.CurrPic.nal_ref_idc
	str	r7, [r1, #472]	@ ret, <variable>.frame.long_term_pic_num
	ldr	ip, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r3, [ip, #612]	@ tmp202, <variable>.is_displayed
	ldr	r0, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r0, #4]	@ ret, <variable>.is_in_dpb
	ldr	r1, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r3, [r1, #0]	@ tmp202, <variable>.non_existing
	ldr	ip, [fp, #-64]	@, %sfp
	ldr	r0, [r4, sl]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	r1, [r4, r9]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	strb	r3, [r4, ip]	@ tmp202, <variable>.CurrPic.non_existing
	ldr	ip, [fp, #-68]	@, %sfp
	str	r0, [r4, ip]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	strb	r7, [r1, #3]	@ ret, <variable>.adaptive_ref_pic_marking_mode_flag
	ldr	r3, [r4, r2]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	ldr	r2, [r3, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ <variable>.pic_order_cnt_type,
	beq	.L3086	@,
	movw	r7, #:lower16:11161544	@ tmp237,
	movt	r7, #:upper16:11161544	@ tmp237,
	mov	r0, r4	@, pMvcCtx
	str	r5, [r4, r7]	@ UnusedShortTermFrameNum, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	movw	r1, #:lower16:11161524	@ tmp239,
	movw	ip, #:lower16:11161520	@ tmp242,
	movt	r1, #:upper16:11161524	@ tmp239,
	movt	ip, #:upper16:11161520	@ tmp242,
	movw	r2, #:lower16:11161512	@ tmp245,
	movw	r3, #:lower16:11161516	@ tmp248,
	movt	r2, #:upper16:11161512	@ tmp245,
	movt	r3, #:upper16:11161516	@ tmp248,
	ldr	lr, [r4, ip]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPOC.framepoc
	ldr	r7, [r4, r1]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPOC.ThisPOC
	movw	r0, #:lower16:11196660	@ tmp238,
	ldr	ip, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPOC.toppoc
	movt	r0, #:upper16:11196660	@ tmp238,
	ldr	r3, [r4, r3]	@, <variable>.CurrPOC.bottompoc
	movw	r1, #:lower16:11196664	@ tmp241,
	movw	r2, #:lower16:11196668	@ tmp244,
	movt	r1, #:upper16:11196664	@ tmp241,
	movt	r2, #:upper16:11196668	@ tmp244,
	str	r3, [fp, #-80]	@, %sfp
	movw	r3, #:lower16:11196672	@ tmp247,
	str	r7, [r4, r0]	@ <variable>.CurrPOC.ThisPOC, <variable>.CurrPic.thispoc
	movt	r3, #:upper16:11196672	@ tmp247,
	str	lr, [r4, r1]	@ <variable>.CurrPOC.framepoc, <variable>.CurrPic.framepoc
	str	ip, [r4, r2]	@ <variable>.CurrPOC.toppoc, <variable>.CurrPic.toppoc
	ldr	lr, [fp, #-80]	@, %sfp
	str	lr, [r4, r3]	@, <variable>.CurrPic.bottompoc
	b	.L3086	@
.L3092:
	mov	r0, r5	@, <variable>.DPB.used_size
	movw	r1, #:lower16:.LC97	@,
	movt	r1, #:upper16:.LC97	@,
	bl	dprint_vfmw	@
	mov	r0, r5	@ D.40928, <variable>.DPB.used_size
.L3083:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3084:
	ldr	ip, [fp, #-88]	@, %sfp
	movw	r2, #:lower16:11161528	@ tmp272,
	movt	r2, #:upper16:11161528	@ tmp272,
	movw	r3, #:lower16:11161532	@ tmp273,
	movt	r3, #:upper16:11161532	@ tmp273,
	movw	r0, #:lower16:11196644	@ tmp275,
	str	ip, [r4, r2]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r0, #:upper16:11196644	@ tmp275,
	ldr	lr, [fp, #-84]	@, %sfp
	ldr	r1, [r4, r0]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, #0	@ D.40928,
	str	lr, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-92]	@, %sfp
	strb	ip, [r1, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	b	.L3083	@
.L3094:
	ldr	r1, [fp, #-88]	@, %sfp
	movw	r0, #:lower16:11161528	@ tmp194,
	movt	r0, #:upper16:11161528	@ tmp194,
	movw	r3, #:lower16:11161532	@ tmp195,
	movt	r3, #:upper16:11161532	@ tmp195,
	movw	ip, #:lower16:11196644	@ tmp197,
	str	r1, [r4, r0]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	ip, #:upper16:11196644	@ tmp197,
	ldr	lr, [fp, #-84]	@, %sfp
	mov	r0, r8	@, tmp251
	ldr	r2, [r4, ip]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	movw	r1, #:lower16:.LC100	@,
	movt	r1, #:upper16:.LC100	@,
	str	lr, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	ip, [fp, #-92]	@, %sfp
	strb	ip, [r2, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40928,
	b	.L3083	@
.L3093:
	ldr	r0, [fp, #-88]	@, %sfp
	movw	r3, #:lower16:11161528	@ tmp253,
	movt	r3, #:upper16:11161528	@ tmp253,
	movw	r1, #:lower16:11161532	@ tmp254,
	movt	r1, #:upper16:11161532	@ tmp254,
	movw	r2, #:lower16:11196644	@ tmp256,
	str	r0, [r4, r3]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movt	r2, #:upper16:11196644	@ tmp256,
	ldr	lr, [fp, #-84]	@, %sfp
	mov	r3, ip	@, ret.7798
	ldr	r2, [r4, r2]	@ <variable>.CurrPic.pMarkPara, <variable>.CurrPic.pMarkPara
	mov	r0, r8	@, tmp251
	str	lr, [r4, r1]	@, <variable>.CurrPOC.delta_pic_order_cnt
	movw	r1, #:lower16:.LC102	@,
	ldr	ip, [fp, #-92]	@, %sfp
	movt	r1, #:upper16:.LC102	@,
	strb	ip, [r2, #3]	@, <variable>.adaptive_ref_pic_marking_mode_flag
	movw	r2, #6531	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.40928,
	b	.L3083	@
	.fnend
	.size	MVC_DecGap, .-MVC_DecGap
	.align	2
	.global	MVC_InitPic
	.type	MVC_InitPic, %function
MVC_InitPic:
	.fnstart
.LFB1611:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #84
	sub	sp, sp, #84	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11196168	@ tmp213,
	movt	ip, #:upper16:11196168	@ tmp213,
	movw	r1, #:lower16:11155244	@ tmp207,
	movw	r7, #:lower16:11162632	@ tmp208,
	movt	r1, #:upper16:11155244	@ tmp207,
	movt	r7, #:upper16:11162632	@ tmp208,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r0, [r0, ip]	@ zero_extendqisi2	@ <variable>.CurrPic.state, <variable>.CurrPic.state
	mov	r5, #2240	@ tmp211,
	ldr	r3, [r4, r1]	@ <variable>.PPS, <variable>.PPS
	mov	r1, #0	@ tmp206,
	ldr	r2, [r4, r7]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	cmp	r0, #0	@ <variable>.CurrPic.state,
	str	r1, [fp, #-48]	@ tmp206, dpb_changed
	mla	r5, r5, r2, r3	@ pPPS, tmp211, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L3096	@,
	movw	r6, #:lower16:11196640	@ tmp215,
	movt	r6, #:upper16:11196640	@ tmp215,
	ldr	r2, [r4, r6]	@ D.41104, <variable>.CurrPic.frame_store
	cmp	r2, r1	@ D.41104,
	beq	.L3097	@,
	ldrb	r7, [r2, #1]	@ zero_extendqisi2	@ <variable>.is_used, <variable>.is_used
	cmp	r7, r1	@ <variable>.is_used,
	beq	.L3191	@,
.L3097:
	movw	r7, #:lower16:11196168	@ tmp228,
	movt	r7, #:upper16:11196168	@ tmp228,
	mov	r0, #0	@ tmp229,
	strb	r0, [r4, r7]	@ tmp229, <variable>.CurrPic.state
.L3096:
	sub	r1, fp, #48	@,,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetReRangeFlag	@
	movw	r1, #:lower16:11164272	@ tmp232,
	movt	r1, #:upper16:11164272	@ tmp232,
	ldr	r3, [r4, r1]	@ prephitmp.7946, <variable>.CurrSlice.svc_extension_flag
	cmn	r3, #1	@ prephitmp.7946,
	mov	r7, r0	@ D.41112,
	beq	.L3192	@,
.L3098:
	cmp	r3, #0	@ prephitmp.7946,
	bne	.L3102	@,
	movw	r2, #:lower16:11152048	@ tmp265,
	movt	r2, #:upper16:11152048	@ tmp265,
	ldr	r0, [r4, r2]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r0, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L3193	@,
	movw	lr, #:lower16:10814504	@ tmp288,
	movt	lr, #:upper16:10814504	@ tmp288,
	ldr	r0, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, lr]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r3, r0	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	bne	.L3194	@,
	movw	r6, #:lower16:11152036	@ tmp292,
	movt	r6, #:upper16:11152036	@ tmp292,
	movw	r2, #:lower16:10814508	@ tmp294,
	movt	r2, #:upper16:10814508	@ tmp294,
	add	ip, r4, r2	@ tmp294, pMvcCtx, tmp294
	str	ip, [r4, r6]	@ tmp294, <variable>.pCurrSPS
.L3102:
	movw	r3, #:lower16:11159264	@ tmp295,
	movt	r3, #:upper16:11159264	@ tmp295,
	ldr	r1, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r0, [r4, r3]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r0, r1	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L3195	@,
.L3106:
	movw	ip, #:lower16:11152036	@ tmp301,
	movt	ip, #:upper16:11152036	@ tmp301,
	mov	r2, #0	@ tmp299,
	mov	r1, r5	@, pPPS
	strb	r2, [r5, #20]	@ tmp299, <variable>.is_refreshed
	movw	r6, #:lower16:11159240	@,
	ldr	r0, [r4, ip]	@, <variable>.pCurrSPS
	movt	r6, #:upper16:11159240	@,
	bl	mvc_assign_quant_params	@
	mov	r1, r5	@, pPPS
	add	r0, r4, r6	@, pMvcCtx,
	mov	r2, #2240	@,
	bl	memmove	@
.L3107:
	ldr	r1, [fp, #-48]	@ dpb_changed, dpb_changed
	cmp	r1, #0	@ dpb_changed,
	beq	.L3108	@,
	ldr	r3, [r4, #0]	@ D.41160, <variable>.pstExtraData
	ldr	r6, [r3, #608]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r6, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3109	@,
	ldr	r0, [r3, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L3196	@,
.L3109:
	movw	r0, #:lower16:11199480	@ tmp350,
	movt	r0, #:upper16:11199480	@ tmp350,
	cmp	r7, #0	@ D.41112,
	ldr	r3, [r4, r0]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r2, r3, #1	@ tmp353, <variable>.SeqCnt,
	str	r2, [r4, r0]	@ tmp353, <variable>.SeqCnt
	beq	.L3117	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC108	@,
	movt	r1, #:upper16:.LC108	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBackPicFromVOQueue	@
.L3118:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	subs	r6, r0, #0	@ ret.7916,
	bne	.L3197	@,
	cmp	r7, #0	@ D.41112,
	bne	.L3198	@,
.L3108:
	movw	r8, #:lower16:11159264	@ tmp382,
	movt	r8, #:upper16:11159264	@ tmp382,
	ldr	ip, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	ldr	r0, [r4, r8]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	cmp	r0, ip	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	beq	.L3199	@,
.L3121:
	movw	r6, #:lower16:11159240	@,
	movt	r6, #:upper16:11159240	@,
	mov	r1, r5	@, pPPS
	mov	lr, #0	@ tmp386,
	add	r0, r4, r6	@, pMvcCtx,
	strb	lr, [r5, #20]	@ tmp386, <variable>.is_refreshed
	mov	r2, #2240	@,
	bl	memmove	@
	movw	r1, #:lower16:11164272	@ tmp390,
	movt	r1, #:upper16:11164272	@ tmp390,
	ldr	r0, [r4, r1]	@ prephitmp.7840, <variable>.CurrSlice.svc_extension_flag
	cmn	r0, #1	@ prephitmp.7840,
	beq	.L3200	@,
.L3123:
	cmp	r0, #0	@ prephitmp.7840,
	bne	.L3124	@,
	movw	r8, #:lower16:10818504	@ tmp394,
	movt	r8, #:upper16:10818504	@ tmp394,
	movw	r5, #:lower16:11164280	@ tmp396,
	movt	r5, #:upper16:11164280	@ tmp396,
	ldr	r2, [r4, r8]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	ldr	ip, [r4, r5]	@ D.41243, <variable>.CurrSlice.view_id
	adds	r5, r2, #1	@ temp.7941, <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L3125	@,
	movw	lr, #:lower16:10818508	@ tmp397,
	movt	lr, #:upper16:10818508	@ tmp397,
	ldr	r3, [r4, lr]	@ <variable>.CurrSUBSPS.view_id, <variable>.CurrSUBSPS.view_id
	cmp	ip, r3	@ D.41243, <variable>.CurrSUBSPS.view_id
	beq	.L3125	@,
	tst	r2, #1	@ <variable>.CurrSUBSPS.num_views_minus1,
	movw	r6, #:lower16:10818512	@ ivtmp.7898,
	movt	r6, #:upper16:10818512	@ ivtmp.7898,
	add	r2, r4, r6	@ ivtmp.7898, pMvcCtx, ivtmp.7898
	beq	.L3126	@,
	ldr	r8, [r2], #4	@ temp.8049, <variable>.CurrSUBSPS.view_id
	mov	r0, #1	@ i,
	mov	r3, r0	@ i.630, i
	cmp	ip, r8	@ D.41243, temp.8049
	bne	.L3126	@,
	b	.L3127	@
.L3128:
	ldr	r8, [r1], #4	@ temp.8049, <variable>.CurrSUBSPS.view_id
	cmp	ip, r8	@ D.41243, temp.8049
	beq	.L3127	@,
	ldr	r6, [r2, #4]	@ temp.8049, <variable>.CurrSUBSPS.view_id
	mov	r3, r0	@ i.630, i
	add	r2, r1, #4	@ ivtmp.7898, tmp889,
	cmp	ip, r6	@ D.41243, temp.8049
	beq	.L3127	@,
.L3126:
	add	r3, r0, #1	@ i.630, i,
	mov	r1, r2	@ tmp889, ivtmp.7898
	cmp	r3, r5	@ i.630, temp.7941
	add	r0, r3, #1	@ i, i.630,
	bcc	.L3128	@,
.L3127:
	movw	r0, #:lower16:11164284	@ tmp400,
	movt	r0, #:upper16:11164284	@ tmp400,
	str	r3, [r4, r0]	@ i.630, <variable>.CurrSlice.voidx
.L3124:
	movw	r3, #:lower16:11162627	@ tmp403,
	movt	r3, #:upper16:11162627	@ tmp403,
	movw	ip, #:lower16:11152036	@ tmp402,
	movt	ip, #:upper16:11152036	@ tmp402,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r1, [r4, ip]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	cmp	r2, #5	@ <variable>.CurrSlice.nal_unit_type,
	ldr	r8, [r1, #2896]	@ D.41246, <variable>.log2_max_frame_num_minus4
	beq	.L3201	@,
.L3129:
	movw	r6, #:lower16:11199448	@ tmp415,
	movt	r6, #:upper16:11199448	@ tmp415,
	ldr	lr, [r4, r6]	@ <variable>.OldDecMode, <variable>.OldDecMode
	cmp	lr, #2	@ <variable>.OldDecMode,
	beq	.L3130	@,
	ldr	r5, [r4, #0]	@ temp.7943, <variable>.pstExtraData
	ldr	r0, [r5, #12]	@ <variable>.s32DecOrderOutput, <variable>.s32DecOrderOutput
	cmp	r0, #2	@ <variable>.s32DecOrderOutput,
	beq	.L3130	@,
	movw	r6, #:lower16:11164284	@ tmp423,
	movt	r6, #:upper16:11164284	@ tmp423,
	movw	r3, #:lower16:2790658	@ tmp420,
	movt	r3, #:upper16:2790658	@ tmp420,
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	lr, #:lower16:11162644	@ tmp419,
	movt	lr, #:upper16:11162644	@ tmp419,
	add	ip, r1, r3	@ tmp420, <variable>.CurrSlice.voidx, tmp420
	ldr	r6, [r4, lr]	@ prephitmp.7842, <variable>.CurrSlice.frame_num
	add	r2, r4, ip, asl #2	@, tmp426, pMvcCtx, tmp420,
	ldr	r0, [r2, #4]	@ prephitmp.7945, <variable>.CurrSlice.prev_frame_num
	cmp	r6, r0	@ prephitmp.7842, prephitmp.7945
	beq	.L3132	@,
	mov	r7, #1	@ tmp429,
	add	r8, r8, #4	@ tmp428, D.41246,
	mov	r8, r7, asl r8	@ MaxFrameNum, tmp429,
	add	r0, r0, r7	@, prephitmp.7945,
	mov	r1, r8	@, MaxFrameNum
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.7842,
	beq	.L3132	@,
	str	r7, [r5, #516]	@ tmp429, <variable>.s32MoreGapEnable
	ldr	r3, [r4, #0]	@ temp.7947, <variable>.pstExtraData
	ldr	r0, [r3, #516]	@ <variable>.s32MoreGapEnable, <variable>.s32MoreGapEnable
	cmp	r0, #0	@ <variable>.s32MoreGapEnable,
	bne	.L3133	@,
	ldr	r2, [r3, #540]	@ <variable>.stPvrInfo.u32BFrmRefFlag, <variable>.stPvrInfo.u32BFrmRefFlag
	cmp	r2, r7	@ <variable>.stPvrInfo.u32BFrmRefFlag,
	beq	.L3202	@,
.L3134:
	movw	r6, #:lower16:11164284	@ tmp445,
	movt	r6, #:upper16:11164284	@ tmp445,
	movw	r2, #:lower16:2790658	@ tmp446,
	movt	r2, #:upper16:2790658	@ tmp446,
	ldr	r1, [r4, r6]	@ temp.7949, <variable>.CurrSlice.voidx
	movw	r5, #:lower16:11162644	@ tmp444,
	movt	r5, #:upper16:11162644	@ tmp444,
	add	r0, r1, r2	@ tmp446, temp.7949, tmp446
	ldr	r2, [r4, r5]	@ temp.7948, <variable>.CurrSlice.frame_num
	add	r7, r4, r0, asl #2	@, tmp450, pMvcCtx, tmp446,
	ldr	r3, [r7, #4]	@ D.41261, <variable>.CurrSlice.prev_frame_num
	cmp	r2, r3	@ temp.7948, D.41261
	bls	.L3135	@,
	movw	r7, #:lower16:11159220	@ tmp452,
	movt	r7, #:upper16:11159220	@ tmp452,
	rsb	lr, r3, r2	@ tmp453, D.41261, temp.7948
	ldr	ip, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	cmp	ip, lr	@ <variable>.CurrSPS.dpb_size_plus1, tmp453
	bcs	.L3133	@,
	cmp	r3, #0	@ D.41261,
	beq	.L3133	@,
	movw	r0, #:lower16:11162624	@ tmp455,
	movt	r0, #:upper16:11162624	@ tmp455,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L3203	@,
	movw	r0, #:lower16:2790658	@ tmp473,
	movt	r0, #:upper16:2790658	@ tmp473,
	add	r3, r1, r0	@ tmp473, temp.7949, tmp473
	cmp	r2, #0	@ temp.7948,
	subeq	r2, r8, #1	@ iftmp.694, MaxFrameNum,
	subne	r2, r2, #1	@ iftmp.694, temp.7948,
	add	lr, r4, r3, asl #2	@, tmp477, pMvcCtx, tmp473,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	str	r2, [lr, #4]	@ iftmp.694, <variable>.CurrSlice.prev_frame_num
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.7956,
	beq	.L3133	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC103	@,
	movw	r2, #6964	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3202:
	ldr	ip, [r3, #536]	@ <variable>.stPvrInfo.u32IDRFlag, <variable>.stPvrInfo.u32IDRFlag
	cmp	ip, #0	@ <variable>.stPvrInfo.u32IDRFlag,
	bne	.L3134	@,
	ldr	lr, [r3, #544]	@ <variable>.stPvrInfo.u32ContinuousFlag, <variable>.stPvrInfo.u32ContinuousFlag
	cmp	lr, #0	@ <variable>.stPvrInfo.u32ContinuousFlag,
	bne	.L3134	@,
	ldr	r1, [r3, #520]	@ <variable>.s32FastForwardBackwardSpeed, <variable>.s32FastForwardBackwardSpeed
	add	r3, r1, #1024	@ tmp442, <variable>.s32FastForwardBackwardSpeed,
	cmp	r3, #2048	@ tmp442,
	bls	.L3134	@,
.L3133:
	movw	r2, #:lower16:11155267	@ tmp511,
	movt	r2, #:upper16:11155267	@ tmp511,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag, <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag
	cmp	r1, #0	@ <variable>.CurrSPS.gaps_in_frame_num_value_allowed_flag,
	beq	.L3204	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecGap	@
	cmp	r0, #0	@,
	bne	.L3145	@,
.L3130:
	movw	lr, #:lower16:11162644	@ tmp567,
	movt	lr, #:upper16:11162644	@ tmp567,
	ldr	r6, [r4, lr]	@ prephitmp.7842, <variable>.CurrSlice.frame_num
.L3132:
	movw	r0, #:lower16:11162656	@ tmp568,
	movt	r0, #:upper16:11162656	@ tmp568,
	ldr	ip, [r4, r0]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	ip, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L3205	@,
.L3146:
	movw	r2, #:lower16:11161544	@ tmp579,
	movt	r2, #:upper16:11161544	@ tmp579,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, r2]	@ prephitmp.7842, <variable>.CurrPOC.frame_num
	bl	MVC_DecPOC	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, #0	@,
	bl	MVC_AllocFrameStore	@
	cmp	r0, #0	@ ret.7982
	bne	.L3206	@,
	movw	sl, #:lower16:11161524	@ tmp598,
	movt	sl, #:upper16:11161524	@ tmp598,
	movw	r3, #:lower16:11162625	@ tmp632,
	movw	r5, #:lower16:11161520	@ tmp601,
	ldr	r7, [r4, sl]	@, <variable>.CurrPOC.ThisPOC
	movt	r3, #:upper16:11162625	@ tmp632,
	movt	r5, #:upper16:11161520	@ tmp601,
	movw	r6, #:lower16:11161512	@ tmp604,
	ldrb	r8, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	r6, #:upper16:11161512	@ tmp604,
	str	r7, [fp, #-84]	@, %sfp
	movw	r9, #:lower16:11161516	@ tmp607,
	ldr	sl, [r4, r5]	@, <variable>.CurrPOC.framepoc
	movt	r9, #:upper16:11161516	@ tmp607,
	movw	lr, #:lower16:11162627	@ tmp588,
	movt	lr, #:upper16:11162627	@ tmp588,
	movw	ip, #:lower16:11162644	@ tmp592,
	movt	ip, #:upper16:11162644	@ tmp592,
	str	sl, [fp, #-88]	@, %sfp
	movw	r1, #:lower16:11162656	@ tmp595,
	ldr	r7, [r4, r6]	@, <variable>.CurrPOC.toppoc
	movw	r6, #:lower16:11196168	@,
	movt	r6, #:upper16:11196168	@,
	movt	r1, #:upper16:11162656	@ tmp595,
	cmp	r8, #0	@ <variable>.CurrSlice.field_pic_flag,
	movw	r8, #:lower16:11196656	@,
	str	r7, [fp, #-92]	@, %sfp
	movt	r8, #:upper16:11196656	@,
	ldr	r5, [r4, r9]	@, <variable>.CurrPOC.bottompoc
	movw	r7, #:lower16:11196660	@,
	str	r6, [fp, #-56]	@, %sfp
	movt	r7, #:upper16:11196660	@,
	movw	r6, #:lower16:11196664	@,
	movt	r6, #:upper16:11196664	@,
	str	r5, [fp, #-96]	@, %sfp
	movw	r5, #:lower16:11196668	@,
	ldrb	r9, [r4, lr]	@ zero_extendqisi2	@, <variable>.CurrSlice.nal_unit_type
	movt	r5, #:upper16:11196668	@,
	movw	lr, #:lower16:11196672	@,
	movt	lr, #:upper16:11196672	@,
	movw	r2, #:lower16:11196175	@ tmp581,
	movt	r2, #:upper16:11196175	@ tmp581,
	str	r9, [fp, #-100]	@, %sfp
	movw	r9, #:lower16:11196174	@ tmp587,
	ldr	ip, [r4, ip]	@, <variable>.CurrSlice.frame_num
	movt	r9, #:upper16:11196174	@ tmp587,
	str	ip, [fp, #-104]	@, %sfp
	movw	ip, #:lower16:11196170	@,
	ldr	sl, [r4, r1]	@, <variable>.CurrSlice.nal_ref_idc
	movt	ip, #:upper16:11196170	@,
	str	r8, [fp, #-112]	@, %sfp
	movw	r1, #:lower16:11196173	@,
	ldr	r8, [fp, #-100]	@, %sfp
	movt	r1, #:upper16:11196173	@,
	str	sl, [fp, #-108]	@, %sfp
	movw	sl, #:lower16:11196648	@ tmp591,
	str	r7, [fp, #-60]	@, %sfp
	movt	sl, #:upper16:11196648	@ tmp591,
	str	r6, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:11196676	@ tmp609,
	str	r5, [fp, #-68]	@, %sfp
	movt	r7, #:upper16:11196676	@ tmp609,
	str	lr, [fp, #-72]	@, %sfp
	movw	r6, #:lower16:11196680	@ tmp612,
	str	ip, [fp, #-76]	@, %sfp
	movt	r6, #:upper16:11196680	@ tmp612,
	str	r1, [fp, #-80]	@, %sfp
	movw	r5, #:lower16:11196684	@ tmp615,
	strb	r8, [r4, r9]	@, <variable>.CurrPic.nal_unit_type
	movt	r5, #:upper16:11196684	@ tmp615,
	ldr	r8, [fp, #-104]	@, %sfp
	movw	lr, #:lower16:11196688	@ tmp618,
	movw	ip, #:lower16:11196172	@ tmp627,
	movt	lr, #:upper16:11196688	@ tmp618,
	movt	ip, #:upper16:11196172	@ tmp627,
	movw	r1, #:lower16:11196720	@ tmp630,
	str	r8, [r4, sl]	@, <variable>.CurrPic.frame_num
	movt	r1, #:upper16:11196720	@ tmp630,
	ldr	r9, [fp, #-108]	@, %sfp
	mov	sl, #1	@ tmp585,
	ldr	r8, [fp, #-112]	@, %sfp
	str	r9, [r4, r8]	@, <variable>.CurrPic.nal_ref_idc
	mvn	r9, #0	@ tmp631,
	ldr	r8, [fp, #-84]	@, %sfp
	str	r8, [r4, r7]	@, <variable>.CurrPic.decthispoc
	ldr	r7, [fp, #-88]	@, %sfp
	str	r7, [r4, r6]	@, <variable>.CurrPic.decframepoc
	ldr	r6, [fp, #-92]	@, %sfp
	str	r6, [r4, r5]	@, <variable>.CurrPic.dectoppoc
	ldr	r7, [fp, #-96]	@, %sfp
	strb	r0, [r4, ip]	@ ret.7982, <variable>.CurrPic.is_long_term
	strb	r0, [r4, r2]	@ ret.7982, <variable>.CurrPic.mode_skip_flag
	str	r7, [r4, lr]	@, <variable>.CurrPic.decbottompoc
	str	r9, [r4, r1]	@ tmp631, <variable>.CurrPic.stream_base_addr
	ldr	r5, [fp, #-56]	@, %sfp
	strb	sl, [r4, r5]	@ tmp585, <variable>.CurrPic.state
	ldr	ip, [fp, #-84]	@, %sfp
	ldr	r1, [fp, #-60]	@, %sfp
	str	ip, [r4, r1]	@, <variable>.CurrPic.thispoc
	movw	ip, #:lower16:11152036	@ tmp637,
	ldr	r1, [fp, #-64]	@, %sfp
	movt	ip, #:upper16:11152036	@ tmp637,
	ldr	lr, [fp, #-88]	@, %sfp
	str	lr, [r4, r1]	@, <variable>.CurrPic.framepoc
	moveq	r1, sl	@ prephitmp.7847, tmp585
	ldr	r8, [fp, #-68]	@, %sfp
	movne	r1, #2	@ prephitmp.7847,
	str	r6, [r4, r8]	@, <variable>.CurrPic.toppoc
	ldr	r2, [fp, #-72]	@, %sfp
	str	r7, [r4, r2]	@, <variable>.CurrPic.bottompoc
	ldr	r9, [fp, #-76]	@, %sfp
	strb	r0, [r4, r9]	@ ret.7982, <variable>.CurrPic.non_existing
	ldr	r5, [fp, #-80]	@, %sfp
	strneb	sl, [r4, r3]	@ tmp585, <variable>.CurrSlice.field_pic_flag
	movw	sl, #:lower16:11159240	@ tmp661,
	movt	sl, #:upper16:11159240	@ tmp661,
	strb	r0, [r4, r5]	@ ret.7982, <variable>.CurrPic.is_short_term
	ldr	r5, [r4, ip]	@ temp.7990, <variable>.pCurrSPS
	ldrb	r6, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	lr, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r0, r6, #2	@ tmp639, <variable>.frame_mbs_only_flag,
	mla	r0, lr, r0, r0	@, <variable>.pic_height_in_map_units_minus1, tmp639, tmp639
	bl	__aeabi_uidiv	@
	movw	r3, #:lower16:11196708	@ tmp646,
	movt	r3, #:upper16:11196708	@ tmp646,
	movw	ip, #:lower16:11196712	@ tmp648,
	movt	ip, #:upper16:11196712	@ tmp648,
	movw	r2, #:lower16:11162625	@ tmp664,
	movt	r2, #:upper16:11162625	@ tmp664,
	ldrb	lr, [r4, sl]	@ zero_extendqisi2	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPPS.entropy_coding_mode_flag
	movw	sl, #:lower16:11196716	@ tmp658,
	movt	sl, #:upper16:11196716	@ tmp658,
	ldrb	r9, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r9, #0	@ <variable>.CurrSlice.field_pic_flag,
	str	r0, [r4, r3]	@ tmp645, <variable>.CurrPic.pic_height_in_mb
	movw	r3, #:lower16:11196176	@ tmp660,
	ldrb	r8, [r5, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movt	r3, #:upper16:11196176	@ tmp660,
	ldr	r7, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	rsb	r1, r8, #2	@ tmp650, <variable>.frame_mbs_only_flag,
	movw	r8, #:lower16:11196704	@ tmp657,
	movt	r8, #:upper16:11196704	@ tmp657,
	mla	r6, r7, r1, r1	@ tmp653, <variable>.pic_height_in_map_units_minus1, tmp650, tmp650
	str	r6, [r4, ip]	@ tmp653, <variable>.CurrPic.frame_height_in_mb
	ldr	r7, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	strb	lr, [r4, r3]	@ <variable>.CurrPPS.entropy_coding_mode_flag, <variable>.CurrPic.entropy_coding_mode_flag
	add	r1, r7, #1	@ D.41365, <variable>.pic_width_in_mbs_minus1,
	str	r1, [r4, r8]	@ D.41365, <variable>.CurrPic.pic_width_in_mb
	mul	r9, r1, r0	@ tmp659, D.41365, tmp645
	movne	r1, #0	@ prephitmp.7848,
	str	r9, [r4, sl]	@ tmp659, <variable>.CurrPic.pic_mbs
	beq	.L3207	@,
	movw	ip, #:lower16:11162656	@ tmp672,
	movt	ip, #:upper16:11162656	@ tmp672,
	movw	r3, #:lower16:11196177	@ tmp670,
	movt	r3, #:upper16:11196177	@ tmp670,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	strb	r1, [r4, r3]	@ prephitmp.7848, <variable>.CurrPic.MbaffFrameFlag
	cmp	r2, #0	@ <variable>.CurrSlice.nal_ref_idc,
	beq	.L3152	@,
.L3210:
	movw	r7, #:lower16:11164284	@ tmp677,
	movt	r7, #:upper16:11164284	@ tmp677,
	movw	r8, #:lower16:2790658	@ tmp674,
	movw	r6, #:lower16:11162644	@ tmp682,
	ldr	r5, [r4, r7]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r8, #:upper16:2790658	@ tmp674,
	movt	r6, #:upper16:11162644	@ tmp682,
	add	r9, r5, r8	@ tmp674, <variable>.CurrSlice.voidx, tmp674
	ldr	r1, [r4, r6]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	lr, r4, r9, asl #2	@, tmp680, pMvcCtx, tmp674,
	str	r1, [lr, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
.L3152:
	movw	r9, #:lower16:11164272	@ tmp684,
	movw	lr, #:lower16:11196640	@ tmp687,
	movt	r9, #:upper16:11164272	@ tmp684,
	movt	lr, #:upper16:11196640	@ tmp687,
	movw	r3, #:lower16:11196728	@ tmp685,
	movw	r2, #:lower16:11164276	@ tmp690,
	ldr	r1, [r4, r9]	@ D.41113, <variable>.CurrSlice.svc_extension_flag
	movt	r3, #:upper16:11196728	@ tmp685,
	ldr	ip, [r4, lr]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r2, #:upper16:11164276	@ tmp690,
	mvn	r0, #0	@ tmp689,
	str	r1, [r4, r3]	@ D.41113, <variable>.CurrPic.svc_extension_flag
	movw	r3, #:lower16:11196732	@ tmp688,
	str	r1, [ip, #640]	@ D.41113, <variable>.svc_extension_flag
	movt	r3, #:upper16:11196732	@ tmp688,
	ldr	sl, [r4, r2]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	str	r0, [r4, r3]	@ tmp689, <variable>.CurrPic.view_id
	cmp	sl, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	bne	.L3208	@,
.L3153:
	movw	r2, #:lower16:11168368	@ tmp705,
	movt	r2, #:upper16:11168368	@ tmp705,
	movw	r1, #2004	@ tmp708,
	movw	lr, #:lower16:11164284	@ tmp702,
	ldr	r0, [r4, r2]	@ <variable>.CurrMarkIdx, <variable>.CurrMarkIdx
	movt	lr, #:upper16:11164284	@ tmp702,
	ldr	r2, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	r3, #:lower16:11196736	@ tmp701,
	ldr	r7, [r4, lr]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	r3, #:upper16:11196736	@ tmp701,
	mul	ip, r1, r0	@ tmp706, tmp708, <variable>.CurrMarkIdx
	movw	r5, #:lower16:11196644	@ tmp704,
	movw	r6, #:lower16:11164360	@ tmp709,
	movt	r5, #:upper16:11196644	@ tmp704,
	movt	r6, #:upper16:11164360	@ tmp709,
	str	r7, [r4, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrPic.voidx
	add	r8, ip, r6	@ tmp709, tmp706, tmp709
	movw	r3, #:lower16:11196192	@ tmp712,
	add	r9, r4, r8	@ tmp711, pMvcCtx, tmp709
	str	r9, [r4, r5]	@ tmp711, <variable>.CurrPic.pMarkPara
	ldrd	r0, [r2, #56]	@ <variable>.pts, <variable>.pstExtraData,
	movt	r3, #:upper16:11196192	@ tmp712,
	movw	r7, #:lower16:11196200	@ tmp715,
	movt	r7, #:upper16:11196200	@ tmp715,
	movw	sl, #:lower16:11196312	@,
	movt	sl, #:upper16:11196312	@,
	strd	r0, [r4, r3]	@ <variable>.pts, pMvcCtx, tmp712
	movw	lr, #:lower16:11196208	@ tmp718,
	ldrd	r8, [r2, #72]	@ <variable>.Usertag, <variable>.pstExtraData,
	movt	lr, #:upper16:11196208	@ tmp718,
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC114	@,
	movw	r5, #:lower16:11152036	@ tmp731,
	movt	r1, #:upper16:.LC114	@,
	strd	r8, [r4, r7]	@ <variable>.Usertag, pMvcCtx, tmp715
	movt	r5, #:upper16:11152036	@ tmp731,
	str	sl, [fp, #-60]	@, %sfp
	movw	r6, #:lower16:11196324	@ tmp745,
	ldrd	r8, [r2, #88]	@, <variable>.pstExtraData,
	movt	r6, #:upper16:11196324	@ tmp745,
	movw	sl, #:lower16:11199520	@ tmp810,
	movt	sl, #:upper16:11199520	@ tmp810,
	strd	r8, [r4, lr]	@, pMvcCtx, tmp718
	mvn	r8, #0	@,
	mvn	r9, #0	@,
	strd	r8, [r2, #56]	@, <variable>.pstExtraData,
	ldrd	r2, [r3, r4]	@, tmp712, pMvcCtx
	movw	r9, #:lower16:11196348	@ tmp776,
	bl	dprint_vfmw	@
	ldrd	r2, [r4, r7]	@, pMvcCtx, tmp715
	mov	r0, #29	@,
	movw	r1, #:lower16:.LC115	@,
	movt	r1, #:upper16:.LC115	@,
	movw	r7, #:lower16:11196328	@ tmp729,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	r7, #:upper16:11196328	@ tmp729,
	movw	r2, #:lower16:11196332	@ tmp736,
	movt	r2, #:upper16:11196332	@ tmp736,
	movw	r1, #:lower16:11155300	@ tmp743,
	ldr	r0, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	movt	r1, #:upper16:11155300	@ tmp743,
	movt	r9, #:upper16:11196348	@ tmp776,
	add	ip, r0, #1	@ tmp732, <variable>.pic_width_in_mbs_minus1,
	ldr	r1, [r4, r1]	@ <variable>.CurrSPS.vui_seq_parameters.aspect_ratio, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio
	movw	r0, #:lower16:11196184	@,
	movt	r0, #:upper16:11196184	@,
	mov	lr, ip, asl #4	@ tmp734, tmp732,
	str	lr, [r4, r7]	@ tmp734, <variable>.CurrPic.fs_image.image_width
	ldrb	ip, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movw	lr, #8864	@ tmp746,
	ldr	r7, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r0, r4, r0	@, pMvcCtx,
	rsb	ip, ip, #2	@ tmp738, <variable>.frame_mbs_only_flag,
	str	lr, [r4, r6]	@ tmp746, <variable>.CurrPic.fs_image.format
	and	r1, r1, #7	@, <variable>.CurrSPS.vui_seq_parameters.aspect_ratio,
	mla	lr, r7, ip, ip	@ tmp741, <variable>.pic_height_in_map_units_minus1, tmp738, tmp738
	mov	ip, lr, asl #4	@ tmp742, tmp741,
	str	ip, [r4, r2]	@ tmp742, <variable>.CurrPic.fs_image.image_height
	ldr	lr, [r3, #56]	@ <variable>.vui_seq_parameters.video_format, <variable>.vui_seq_parameters.video_format
	ldrb	ip, [r3, #52]	@ zero_extendqisi2	@ tmp752, <variable>.vui_seq_parameters.aspect_ratio
	ldr	r2, [r3, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	mov	r7, lr, asl #5	@ tmp749, <variable>.vui_seq_parameters.video_format,
	subs	r2, r2, #1	@ tmp759, <variable>.chroma_format_idc,
	movne	r2, #1	@ tmp759
	and	r3, r7, #255	@ tmp751, tmp749,
	orr	r7, r3, ip, asl #14	@, tmp755, tmp751, tmp752,
	orr	lr, r7, r2, asl #2	@, tmp761, tmp755, tmp759,
	str	lr, [r4, r6]	@ tmp761, <variable>.CurrPic.fs_image.format
	bl	SetAspectRatio	@
	movw	r3, #:lower16:11199480	@ tmp765,
	movt	r3, #:upper16:11199480	@ tmp765,
	ldr	r7, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movw	r0, #:lower16:11196368	@ tmp764,
	movt	r0, #:upper16:11196368	@ tmp764,
	ldr	r2, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	movw	r3, #:lower16:11196640	@ tmp770,
	movt	r3, #:upper16:11196640	@ tmp770,
	ldr	ip, [r4, r6]	@, <variable>.CurrPic.fs_image.format
	movw	r1, #:lower16:11196344	@ tmp771,
	movt	r1, #:upper16:11196344	@ tmp771,
	str	r2, [r4, r0]	@ <variable>.SeqCnt, <variable>.CurrPic.fs_image.seq_cnt
	movw	lr, #:lower16:11196340	@ tmp786,
	ldr	r0, [r7, #3984]	@ D.41414, <variable>.disp_center_x
	movw	r7, #:lower16:11196336	@ tmp781,
	ldr	r2, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	movt	r7, #:upper16:11196336	@ tmp781,
	str	ip, [fp, #-64]	@, %sfp
	movt	lr, #:upper16:11196340	@ tmp786,
	movw	r6, #:lower16:11196171	@ tmp788,
	movt	r6, #:upper16:11196171	@ tmp788,
	str	r0, [r2, #168]	@ D.41414, <variable>.fs_image.disp_center_x
	movw	ip, #:lower16:11162644	@ tmp799,
	ldr	r8, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	movt	ip, #:upper16:11162644	@ tmp799,
	str	r0, [r4, r1]	@ D.41414, <variable>.CurrPic.fs_image.disp_center_x
	movw	r1, #:lower16:11196396	@,
	movt	r1, #:upper16:11196396	@,
	movw	r2, #:lower16:11164280	@ tmp802,
	ldr	r8, [r8, #3988]	@, <variable>.disp_center_y
	movt	r2, #:upper16:11164280	@ tmp802,
	str	r1, [fp, #-68]	@, %sfp
	movw	r1, #:lower16:11196404	@ tmp801,
	ldr	r0, [r4, r3]	@, <variable>.CurrPic.frame_store
	movt	r1, #:upper16:11196404	@ tmp801,
	str	r8, [r0, #172]	@, <variable>.fs_image.disp_center_y
	ldr	r0, [r4, r5]	@, <variable>.pCurrSPS
	str	r8, [r4, r9]	@, <variable>.CurrPic.fs_image.disp_center_y
	ldr	r8, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r9, [r0, #3976]	@ D.41418, <variable>.disp_width
	str	r9, [r8, #160]	@ D.41418, <variable>.fs_image.disp_width
	ldr	r5, [r4, r5]	@ <variable>.pCurrSPS, <variable>.pCurrSPS
	str	r9, [r4, r7]	@ D.41418, <variable>.CurrPic.fs_image.disp_width
	ldr	r7, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r5, #3980]	@ D.41420, <variable>.disp_height
	str	r0, [r7, #164]	@ D.41420, <variable>.fs_image.disp_height
	str	r0, [r4, lr]	@ D.41420, <variable>.CurrPic.fs_image.disp_height
	ldr	r7, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r5, [fp, #-64]	@, %sfp
	ldrb	r6, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	str	r5, [r7, #148]	@, <variable>.fs_image.format
	subs	lr, r6, #0	@ tmp790, <variable>.CurrPic.structure,
	movne	lr, #1	@ tmp790
	ldr	r0, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r6, [fp, #-60]	@, %sfp
	str	lr, [r4, r6]	@ tmp790, <variable>.CurrPic.fs_image.is_fld_save
	str	lr, [r0, #136]	@ tmp790, <variable>.fs_image.is_fld_save
	ldr	r7, [fp, #-68]	@, %sfp
	ldr	r0, [r4, ip]	@ temp.8036, <variable>.CurrSlice.frame_num
	ldr	r5, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r0, [r4, r7]	@ temp.8036, <variable>.CurrPic.fs_image.frame_num
	str	r5, [r4, r1]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.fs_image.view_id
	str	r0, [lr, #220]	@ temp.8036, <variable>.fs_image.frame_num
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	ldr	lr, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	str	r1, [lr, #228]	@ <variable>.CurrSlice.view_id, <variable>.fs_image.view_id
	ldr	r3, [r4, r3]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	ldr	r1, [r3, #584]	@, <variable>.logic_fs_id
	bl	FSP_GetDispPhyFs	@
	subs	r2, r0, #0	@ pstDecFs,
	beq	.L3154	@,
	ldr	r5, [r4, r6]	@ <variable>.CurrPic.fs_image.is_fld_save, <variable>.CurrPic.fs_image.is_fld_save
	mov	r1, #0	@,
	ldr	r0, [r4, sl]	@, <variable>.ChanID
	subs	r3, r5, r1	@, <variable>.CurrPic.fs_image.is_fld_save,
	movne	r3, #1	@
	ldr	r2, [r2, #4]	@, <variable>.PhyFsID
	bl	FSP_SetStoreType	@
.L3154:
	movw	ip, #:lower16:11198024	@ tmp822,
	movt	ip, #:upper16:11198024	@ tmp822,
	movw	r3, #:lower16:11196376	@ ivtmp.7893,
	movw	r1, #:lower16:11196392	@ D.53793,
	movt	r3, #:upper16:11196376	@ ivtmp.7893,
	movt	r1, #:upper16:11196392	@ D.53793,
	ldr	r6, [r4, ip]	@ prephitmp.8047, <variable>.TotalUsrDatNum
	movw	r7, #:lower16:11198032	@ ivtmp.7884,
	movw	lr, #:lower16:11198028	@ tmp873,
	movt	r7, #:upper16:11198032	@ ivtmp.7884,
	add	r3, r4, r3	@ ivtmp.7893, pMvcCtx, ivtmp.7893
	add	r2, r4, r1	@ D.53793, pMvcCtx, D.53793
	movt	lr, #:upper16:11198028	@ tmp873,
	add	r0, r4, r7	@ ivtmp.7884, pMvcCtx, ivtmp.7884
	mov	r7, #0	@ tmp875,
.L3159:
	ldr	r5, [r3, #0]	@ tmp825, <variable>.CurrPic.fs_image.p_usrdat
	cmp	r5, #0	@ tmp825,
	ldrne	r6, [r4, ip]	@ prephitmp.8047, <variable>.TotalUsrDatNum
	beq	.L3209	@,
.L3156:
	add	r3, r3, #4	@ ivtmp.7893, ivtmp.7893,
	cmp	r3, r2	@ ivtmp.7893, D.53793
	bne	.L3159	@,
	cmp	r6, #0	@ prephitmp.8047,
	beq	.L3160	@,
	ble	.L3160	@,
	movw	r9, #:lower16:2799506	@ tmp843,
	movt	r9, #:upper16:2799506	@ tmp843,
	add	sl, r6, r9	@ tmp843, prephitmp.8047, tmp843
	movw	r7, #:lower16:11199520	@ tmp871,
	movt	r7, #:upper16:11199520	@ tmp871,
	sub	r6, r6, #1	@ tmp877, prephitmp.8047,
	add	r5, r4, sl, asl #2	@, tmp846, pMvcCtx, tmp843,
	mov	r8, #0	@ tmp872,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	and	r9, r6, #1	@ tmp878, tmp877,
	mov	sl, r5	@ ivtmp.7881, tmp846
	ldr	r1, [sl], #4	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, r8	@ uidxpic,
	str	r8, [sl, #-4]	@ tmp872, <variable>.pUsrDatArray
	ble	.L3160	@,
	cmp	r9, #0	@ tmp878,
	beq	.L3161	@,
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	r6, r6, #1	@ uidxpic, uidxpic,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r8, [r5, #-4]!	@ tmp872, <variable>.pUsrDatArray
	ble	.L3160	@,
.L3161:
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	sub	ip, r6, #1	@ tmp880, uidxpic,
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	sub	r6, ip, #1	@ uidxpic, tmp880,
	bl	FreeUsdByDec	@
	str	r8, [r5, #-4]!	@ tmp872, <variable>.pUsrDatArray
	ldr	r0, [r4, r7]	@, <variable>.ChanID
	ldr	r1, [r5, #-4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	cmp	r6, #0	@ uidxpic,
	str	r8, [r5, #-4]!	@ tmp872, <variable>.pUsrDatArray
	bgt	.L3161	@,
.L3160:
	movw	lr, #:lower16:11198024	@ tmp851,
	movw	r0, #:lower16:11196692	@ tmp853,
	movt	lr, #:upper16:11198024	@ tmp851,
	movt	r0, #:upper16:11196692	@ tmp853,
	mov	r5, #0	@ tmp852,
	str	r5, [r4, lr]	@ tmp852, <variable>.TotalUsrDatNum
	str	r5, [r4, r0]	@ tmp852, <variable>.CurrPic.pic_type
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_UpdateLTReflist	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcPicNum	@
	mov	r0, r5	@ D.41148, tmp852
.L3105:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3209:
	cmp	r6, #0	@ prephitmp.8047,
	beq	.L3156	@,
	ldr	r6, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r1, [r4, lr]	@ <variable>.pUsrDatArray, <variable>.pUsrDatArray
	subs	r6, r6, #1	@ D.41441, <variable>.TotalUsrDatNum,
	str	r1, [r3, #0]	@ <variable>.pUsrDatArray, <variable>.CurrPic.fs_image.p_usrdat
	beq	.L3157	@,
	ldr	r8, [r0, #0]	@ tmp832, <variable>.pUsrDatArray
	mov	r5, #1	@ uidxsei,
	cmp	r6, r5	@ D.41441, uidxsei
	sub	r1, r6, #1	@ tmp881, D.41441,
	and	sl, r1, r5	@ tmp883, tmp881,
	add	r1, r0, #4	@ ivtmp.7884, ivtmp.7884,
	str	r8, [r0, #-4]	@ tmp832, <variable>.pUsrDatArray
	bls	.L3157	@,
	cmp	sl, #0	@ tmp883,
	beq	.L3158	@,
	ldr	r8, [r0, #4]	@ tmp915, <variable>.pUsrDatArray
	mov	r5, #2	@ uidxsei,
	cmp	r6, r5	@ D.41441, uidxsei
	str	r8, [r1, #-4]	@ tmp915, <variable>.pUsrDatArray
	add	r1, r1, #4	@ ivtmp.7884, ivtmp.7884,
	bls	.L3157	@,
.L3158:
	ldr	sl, [r1, #0]	@ tmp896, <variable>.pUsrDatArray
	mov	r8, r1	@ tmp885, ivtmp.7884
	add	r5, r5, #2	@ uidxsei, uidxsei,
	cmp	r6, r5	@ D.41441, uidxsei
	str	sl, [r1, #-4]	@ tmp896, <variable>.pUsrDatArray
	ldr	r1, [r1, #4]	@ tmp898, <variable>.pUsrDatArray
	str	r1, [r8], #4	@ tmp898, <variable>.pUsrDatArray
	add	r1, r8, #4	@ ivtmp.7884, tmp885,
	bhi	.L3158	@,
.L3157:
	movw	r5, #:lower16:2799506	@ tmp833,
	movt	r5, #:upper16:2799506	@ tmp833,
	add	r1, r6, r5	@ tmp833, D.41441, tmp833
	ldr	r6, [r4, ip]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r5, r4, r1, asl #2	@, tmp837, pMvcCtx, tmp833,
	sub	r6, r6, #1	@ prephitmp.8047, <variable>.TotalUsrDatNum,
	str	r6, [r4, ip]	@ prephitmp.8047, <variable>.TotalUsrDatNum
	str	r7, [r5, #4]	@ tmp875, <variable>.pUsrDatArray
	b	.L3156	@
.L3205:
	movw	r0, #:lower16:11164284	@ tmp573,
	movt	r0, #:upper16:11164284	@ tmp573,
	movw	ip, #:lower16:2790658	@ tmp570,
	movt	ip, #:upper16:2790658	@ tmp570,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r2, #:lower16:11162644	@ tmp578,
	movt	r2, #:upper16:11162644	@ tmp578,
	add	lr, r1, ip	@ tmp570, <variable>.CurrSlice.voidx, tmp570
	add	r3, r4, lr, asl #2	@, tmp576, pMvcCtx, tmp570,
	str	r6, [r3, #4]	@ prephitmp.7842, <variable>.CurrSlice.prev_frame_num
	ldr	r6, [r4, r2]	@ prephitmp.7842, <variable>.CurrSlice.frame_num
	b	.L3146	@
.L3207:
	movw	ip, #:lower16:11162656	@ tmp672,
	movt	ip, #:upper16:11162656	@ tmp672,
	ldrb	r0, [r5, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	movw	r3, #:lower16:11196177	@ tmp670,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	movt	r3, #:upper16:11196177	@ tmp670,
	subs	r1, r0, #0	@ prephitmp.7848, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.7848
	cmp	r2, #0	@ <variable>.CurrSlice.nal_ref_idc,
	strb	r1, [r4, r3]	@ prephitmp.7848, <variable>.CurrPic.MbaffFrameFlag
	beq	.L3152	@,
	b	.L3210	@
.L3208:
	movw	ip, #:lower16:11164280	@ tmp693,
	movw	r0, #:lower16:11164288	@ tmp696,
	movt	ip, #:upper16:11164280	@ tmp693,
	movt	r0, #:upper16:11164288	@ tmp696,
	movw	r2, #:lower16:11164292	@ tmp699,
	movt	r2, #:upper16:11164292	@ tmp699,
	ldr	sl, [r4, ip]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	movw	r5, #:lower16:11196740	@ tmp695,
	ldr	r7, [r4, r0]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	movt	r5, #:upper16:11196740	@ tmp695,
	ldr	r6, [r4, r2]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	movw	r8, #:lower16:11196744	@ tmp698,
	movt	r8, #:upper16:11196744	@ tmp698,
	str	sl, [r4, r3]	@ <variable>.CurrSlice.view_id, <variable>.CurrPic.view_id
	str	r7, [r4, r5]	@ <variable>.CurrSlice.anchor_pic_flag, <variable>.CurrPic.anchor_pic_flag
	str	r6, [r4, r8]	@ <variable>.CurrSlice.inter_view_flag, <variable>.CurrPic.inter_view_flag
	b	.L3153	@
.L3199:
	ldrb	r3, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r3, #0	@ <variable>.is_refreshed,
	bne	.L3121	@,
	movw	r1, #:lower16:11164272	@ tmp390,
	movt	r1, #:upper16:11164272	@ tmp390,
	ldr	r0, [r4, r1]	@ prephitmp.7840, <variable>.CurrSlice.svc_extension_flag
	cmn	r0, #1	@ prephitmp.7840,
	bne	.L3123	@,
.L3200:
	movw	ip, #:lower16:11164284	@ tmp391,
	movt	ip, #:upper16:11164284	@ tmp391,
	mov	r2, #0	@ tmp392,
	str	r2, [r4, ip]	@ tmp392, <variable>.CurrSlice.voidx
	b	.L3124	@
.L3195:
	ldrb	lr, [r5, #20]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	lr, #0	@ <variable>.is_refreshed,
	beq	.L3107	@,
	b	.L3106	@
.L3192:
	movw	r0, #:lower16:11152048	@ tmp233,
	movt	r0, #:upper16:11152048	@ tmp233,
	mov	lr, #1	@ tmp234,
	movw	r1, #:lower16:10814500	@ tmp235,
	str	lr, [r4, r0]	@ tmp234, <variable>.Init_Subsps_Flag
	movt	r1, #:upper16:10814500	@ tmp235,
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #:lower16:11155240	@ tmp237,
	movt	ip, #:upper16:11155240	@ tmp237,
	movw	r0, #3992	@ tmp240,
	movw	r2, #:lower16:11155992	@ tmp242,
	movt	r2, #:upper16:11155992	@ tmp242,
	str	r3, [r4, r1]	@ <variable>.seq_parameter_set_id, <variable>.CurrSPSID
	ldr	lr, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	ldr	r3, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, r2]	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.CurrSPS.seq_parameter_set_id
	mla	r3, r0, r3, lr	@ pSPS, tmp240, <variable>.seq_parameter_set_id, <variable>.SPS
	ldr	r2, [r3, #744]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	cmp	ip, r2	@ <variable>.CurrSPS.seq_parameter_set_id, <variable>.seq_parameter_set_id
	beq	.L3211	@,
.L3099:
	movw	lr, #:lower16:11199480	@ tmp246,
	movt	lr, #:upper16:11199480	@ tmp246,
	movw	r1, #:lower16:11155248	@,
	movt	r1, #:upper16:11155248	@,
	ldr	ip, [r4, lr]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r0, r4, r1	@, pMvcCtx,
	mov	r1, r3	@, pSPS
	add	r2, ip, #1	@ tmp249, <variable>.SeqCnt,
	mov	ip, #0	@ tmp250,
	str	r2, [r4, lr]	@ tmp249, <variable>.SeqCnt
	movw	r2, #3992	@,
	strb	ip, [r3, #26]	@ tmp250, <variable>.is_refreshed
	bl	memmove	@
.L3100:
	movw	ip, #:lower16:11164276	@ tmp257,
	movt	ip, #:upper16:11164276	@ tmp257,
	movw	r0, #:lower16:11152036	@ tmp254,
	movt	r0, #:upper16:11152036	@ tmp254,
	ldr	r2, [r4, ip]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movw	lr, #:lower16:11155248	@ tmp256,
	movt	lr, #:upper16:11155248	@ tmp256,
	cmp	r2, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	add	r3, r4, lr	@ tmp256, pMvcCtx, tmp256
	str	r3, [r4, r0]	@ tmp256, <variable>.pCurrSPS
	bne	.L3101	@,
	movw	r3, #:lower16:11155200	@ tmp259,
	movw	r0, #:lower16:11164272	@ tmp261,
	movt	r3, #:upper16:11155200	@ tmp259,
	movt	r0, #:upper16:11164272	@ tmp261,
	mov	r1, #1	@ tmp260,
	str	r1, [r4, r3]	@ tmp260, <variable>.OutFRMBuffer.num_views
	ldr	r3, [r4, r0]	@ prephitmp.7946, <variable>.CurrSlice.svc_extension_flag
	b	.L3098	@
.L3201:
	movw	r3, #:lower16:11164284	@ tmp408,
	movt	r3, #:upper16:11164284	@ tmp408,
	movw	ip, #:lower16:2790658	@ tmp405,
	movw	r2, #:lower16:11162644	@ tmp413,
	ldr	r1, [r4, r3]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movt	ip, #:upper16:2790658	@ tmp405,
	movt	r2, #:upper16:11162644	@ tmp413,
	add	r0, r1, ip	@ tmp405, <variable>.CurrSlice.voidx, tmp405
	ldr	lr, [r4, r2]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	add	r6, r4, r0, asl #2	@, tmp411, pMvcCtx, tmp405,
	str	lr, [r6, #4]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.prev_frame_num
	b	.L3129	@
.L3117:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.7914,
	beq	.L3118	@,
	mov	r0, r7	@, D.41112
	movw	r1, #:lower16:.LC103	@,
	movw	r2, #6859	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3101:
	movw	ip, #:lower16:11164272	@ tmp264,
	movw	r2, #:lower16:11155200	@ tmp262,
	movt	ip, #:upper16:11164272	@ tmp264,
	movt	r2, #:upper16:11155200	@ tmp262,
	mov	lr, #2	@ tmp263,
	ldr	r3, [r4, ip]	@ prephitmp.7946, <variable>.CurrSlice.svc_extension_flag
	str	lr, [r4, r2]	@ tmp263, <variable>.OutFRMBuffer.num_views
	b	.L3098	@
.L3211:
	ldrb	r2, [r3, #26]	@ zero_extendqisi2	@ <variable>.is_refreshed, <variable>.is_refreshed
	cmp	r2, #0	@ <variable>.is_refreshed,
	beq	.L3100	@,
	b	.L3099	@
.L3198:
	movw	r8, #:lower16:11159200	@ tmp364,
	movt	r8, #:upper16:11159200	@ tmp364,
	movw	r0, #:lower16:11155268	@ tmp368,
	movt	r0, #:upper16:11155268	@ tmp368,
	ldr	r7, [r4, r8]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movw	r2, #:lower16:11159196	@ tmp361,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	movt	r2, #:upper16:11159196	@ tmp361,
	add	r1, r7, #1	@ tmp365, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	movw	r0, #:lower16:11159220	@ tmp358,
	rsb	r8, ip, #2	@ tmp370, <variable>.CurrSPS.frame_mbs_only_flag,
	ldr	lr, [r4, r2]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	mov	r3, r1, asl #4	@ tmp367, tmp365,
	movt	r0, #:upper16:11159220	@ tmp358,
	add	r7, lr, #1	@ tmp362, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	movw	r2, #:lower16:11198000	@ tmp360,
	mul	r8, r8, r3	@ ImageHeight.7929, tmp370, tmp367
	ldr	ip, [r4, r0]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movt	r2, #:upper16:11198000	@ tmp360,
	mov	r7, r7, asl #4	@ ImageWidth.7921, tmp362,
	movw	r1, #:lower16:11197996	@,
	movt	r1, #:upper16:11197996	@,
	mov	lr, ip, asl #1	@ D.41190, <variable>.CurrSPS.dpb_size_plus1,
	add	r3, r4, r1	@, pMvcCtx,
	str	lr, [r4, r2]	@ D.41190, <variable>.TotalPmvNum
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, ImageWidth.7921
	mov	r2, r8	@, ImageHeight.7929
	str	lr, [sp, #0]	@ D.41190,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	bne	.L3212	@,
	mov	r1, r8, lsr #4	@ tmp381, ImageHeight.7929,
	movw	r8, #:lower16:11159264	@ tmp382,
	movt	r8, #:upper16:11159264	@ tmp382,
	movw	r2, #13560	@ tmp378,
	movw	r6, #13564	@ tmp380,
	mov	r7, r7, lsr #4	@ tmp379, ImageWidth.7921,
	str	r1, [r4, r6]	@ tmp381, <variable>.CurHeightInMb
	str	r7, [r4, r2]	@ tmp379, <variable>.CurWidthInMb
	ldr	r0, [r4, r8]	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.CurrPPS.pic_parameter_set_id
	ldr	ip, [r5, #24]	@ <variable>.pic_parameter_set_id, <variable>.pic_parameter_set_id
	cmp	r0, ip	@ <variable>.CurrPPS.pic_parameter_set_id, <variable>.pic_parameter_set_id
	bne	.L3121	@,
	b	.L3199	@
.L3204:
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC110	@,
	movt	r1, #:upper16:.LC110	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	ldr	r6, [r3, #520]	@ D.41320, <variable>.s32FastForwardBackwardSpeed
	cmp	r6, #0	@ D.41320,
	cmpne	r6, #1024	@, D.41320,
	bne	.L3130	@,
	movw	lr, #:lower16:11164280	@ tmp523,
	movt	lr, #:upper16:11164280	@ tmp523,
	ldr	r5, [r4, lr]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r5, #0	@ <variable>.CurrSlice.view_id,
	bne	.L3130	@,
	movw	sl, #:lower16:11164284	@ tmp530,
	movt	sl, #:upper16:11164284	@ tmp530,
	movw	r6, #:lower16:2790658	@ tmp527,
	movt	r6, #:upper16:2790658	@ tmp527,
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	mov	r1, r8	@, MaxFrameNum
	movw	r7, #:lower16:11162644	@ tmp526,
	movt	r7, #:upper16:11162644	@ tmp526,
	add	r3, r2, r6	@ tmp527, <variable>.CurrSlice.voidx, tmp527
	ldr	r6, [r4, r7]	@ prephitmp.7842, <variable>.CurrSlice.frame_num
	add	r0, r4, r3, asl #2	@, tmp533, pMvcCtx, tmp527,
	ldr	ip, [r0, #4]	@ tmp536, <variable>.CurrSlice.prev_frame_num
	add	r0, ip, #1	@, tmp536,
	bl	__aeabi_uidivmod	@
	cmp	r6, r1	@ prephitmp.7842,
	bcs	.L3132	@,
	movw	lr, #:lower16:11162624	@ tmp543,
	movt	lr, #:upper16:11162624	@ tmp543,
	ldrb	r1, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r1, #2	@ <variable>.CurrSlice.slice_type,
	beq	.L3132	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r1, #0	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, sl]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	r1, #:lower16:2790658	@ tmp548,
	movt	r1, #:upper16:2790658	@ tmp548,
	add	r3, r2, r1	@ tmp548, <variable>.CurrSlice.voidx, tmp548
	mov	r1, r8	@, MaxFrameNum
	add	r0, r4, r3, asl #2	@, tmp554, pMvcCtx, tmp548,
	ldr	ip, [r0, #4]	@ tmp557, <variable>.CurrSlice.prev_frame_num
	add	r0, ip, #1	@, tmp557,
	bl	__aeabi_uidivmod	@
	ldr	r3, [r4, r7]	@, <variable>.CurrSlice.frame_num
	mov	r0, r5	@, <variable>.CurrSlice.view_id
	movw	r2, #7014	@,
	str	r1, [sp, #0]	@,
	movw	r1, #:lower16:.LC111	@,
	movt	r1, #:upper16:.LC111	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3191:
	movw	lr, #:lower16:11199520	@ tmp217,
	movt	lr, #:upper16:11199520	@ tmp217,
	ldr	r1, [r2, #584]	@, <variable>.logic_fs_id
	mov	r2, #1	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	bl	FSP_ClearLogicFs	@
	ldr	r3, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r3, #1]	@ <variable>.is_used, <variable>.is_used
	ldr	r2, [r4, r6]	@ <variable>.CurrPic.frame_store, <variable>.CurrPic.frame_store
	strb	r7, [r2, #4]	@ <variable>.is_used, <variable>.is_in_dpb
	b	.L3097	@
.L3196:
	movw	r3, #:lower16:11199480	@ tmp308,
	movt	r3, #:upper16:11199480	@ tmp308,
	cmp	r7, #0	@ D.41112,
	ldr	ip, [r4, r3]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	lr, ip, #1	@ tmp311, <variable>.SeqCnt,
	str	lr, [r4, r3]	@ tmp311, <variable>.SeqCnt
	beq	.L3110	@,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret,
	beq	.L3110	@,
	mov	r0, r6	@, <variable>.stChanOption.s32ReRangeEn
	movw	r1, #:lower16:.LC103	@,
	movw	r2, #6788	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3193:
	str	r3, [r4, r2]	@ prephitmp.7946, <variable>.Init_Subsps_Flag
	movw	r1, #:lower16:10814508	@ tmp269,
	ldr	lr, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movt	r1, #:upper16:10814508	@ tmp269,
	add	r2, r4, #13568	@ tmp271, pMvcCtx,
	add	r6, r4, r1	@ tmp269, pMvcCtx, tmp269
	add	ip, r2, #32	@ tmp271, tmp271,
	movw	r2, #:lower16:337528	@ tmp274,
	movt	r2, #:upper16:337528	@ tmp274,
	mov	r0, r6	@, tmp269
	mla	r1, lr, r2, ip	@, <variable>.seq_parameter_set_id, tmp274, tmp271
	bl	memmove	@
	movw	r0, #:lower16:10815252	@ tmp282,
	movt	r0, #:upper16:10815252	@ tmp282,
	movw	r3, #:lower16:10818504	@ tmp285,
	movt	r3, #:upper16:10818504	@ tmp285,
	movw	r1, #:lower16:11152036	@ tmp278,
	ldr	ip, [r4, r0]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPS.sps.seq_parameter_set_id
	movt	r1, #:upper16:11152036	@ tmp278,
	ldr	r0, [r4, r3]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	movw	r2, #:lower16:10814504	@ tmp281,
	movw	r3, #:lower16:11155200	@ tmp284,
	movt	r2, #:upper16:10814504	@ tmp281,
	movt	r3, #:upper16:11155200	@ tmp284,
	str	r6, [r4, r1]	@ tmp269, <variable>.pCurrSPS
	str	ip, [r4, r2]	@ <variable>.CurrSUBSPS.sps.seq_parameter_set_id, <variable>.CurrSUBSPSID
	add	r6, r0, #1	@ tmp287, <variable>.CurrSUBSPS.num_views_minus1,
	str	r6, [r4, r3]	@ tmp287, <variable>.OutFRMBuffer.num_views
	b	.L3102	@
.L3110:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_InitDPB	@
	subs	r3, r0, #0	@ ret.7910,
	bne	.L3213	@,
	movw	lr, #:lower16:11159200	@ tmp319,
	movt	lr, #:upper16:11159200	@ tmp319,
	movw	r6, #:lower16:11159196	@ tmp316,
	movw	r3, #:lower16:11155268	@ tmp323,
	ldr	r1, [r4, lr]	@ <variable>.CurrSPS.pic_height_in_map_units_minus1, <variable>.CurrSPS.pic_height_in_map_units_minus1
	movt	r6, #:upper16:11159196	@ tmp316,
	movt	r3, #:upper16:11155268	@ tmp323,
	cmp	r7, #0	@ D.41112,
	ldr	ip, [r4, r6]	@ <variable>.CurrSPS.pic_width_in_mbs_minus1, <variable>.CurrSPS.pic_width_in_mbs_minus1
	add	r2, r1, #1	@ tmp320, <variable>.CurrSPS.pic_height_in_map_units_minus1,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSPS.frame_mbs_only_flag, <variable>.CurrSPS.frame_mbs_only_flag
	add	r6, ip, #1	@ tmp317, <variable>.CurrSPS.pic_width_in_mbs_minus1,
	mov	r1, r2, asl #4	@ tmp322, tmp320,
	rsb	r7, lr, #2	@ tmp325, <variable>.CurrSPS.frame_mbs_only_flag,
	mov	r6, r6, asl #4	@ ImageWidth, tmp317,
	mul	r7, r7, r1	@ ImageHeight, tmp325, tmp322
	beq	.L3112	@,
	movw	ip, #13560	@ tmp326,
	ldr	r2, [r4, ip]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	cmp	r2, #0	@ <variable>.CurWidthInMb,
	bne	.L3112	@,
	movw	r2, #:lower16:11159220	@ tmp328,
	movt	r2, #:upper16:11159220	@ tmp328,
	ldr	r3, [r4, #0]	@ temp.7911, <variable>.pstExtraData
	movw	lr, #:lower16:11198000	@ tmp330,
	ldr	r1, [r4, r2]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	movt	lr, #:upper16:11198000	@ tmp330,
	mov	ip, r1, asl #1	@ prephitmp.7861, <variable>.CurrSPS.dpb_size_plus1,
	str	ip, [r4, lr]	@ prephitmp.7861, <variable>.TotalPmvNum
	ldr	r1, [r3, #568]	@ prephitmp.7857, <variable>.stChanOption.s32MaxWidth
	cmp	r6, r1	@ ImageWidth, prephitmp.7857
	bhi	.L3113	@,
	ldr	r2, [r3, #572]	@ prephitmp.8050, <variable>.stChanOption.s32MaxHeight
	cmp	r7, r2	@ ImageHeight, prephitmp.8050
	bhi	.L3113	@,
	movw	r8, #:lower16:11168612	@ tmp332,
	movt	r8, #:upper16:11168612	@ tmp332,
	ldr	sl, [r3, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r8, [r4, r8]	@ <variable>.DPB.size, <variable>.DPB.size
	cmp	sl, r8	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.DPB.size
	bcc	.L3214	@,
	ldr	r0, [r3, #596]	@ <variable>.stChanOption.s32SupportBFrame, <variable>.stChanOption.s32SupportBFrame
	cmp	r0, #0	@ <variable>.stChanOption.s32SupportBFrame,
	movw	r0, #:lower16:11197996	@,
	movt	r0, #:upper16:11197996	@,
	moveq	ip, #1	@ tmp338,
	streq	ip, [r4, lr]	@ tmp338, <variable>.TotalPmvNum
	ldreq	r2, [r3, #572]	@ prephitmp.8050, <variable>.stChanOption.s32MaxHeight
	ldreq	r1, [r3, #568]	@ prephitmp.7857, <variable>.stChanOption.s32MaxWidth
	add	r3, r4, r0	@, pMvcCtx,
	mov	r0, r4	@, pMvcCtx
	str	ip, [sp, #0]	@ prephitmp.7861,
	bl	MVC_ArrangeVahbMem	@
	cmp	r0, #1	@,
	beq	.L3112	@,
	movw	lr, #13560	@ tmp341,
	add	r3, lr, #4	@ tmp343, tmp343,
	mov	r5, #0	@ tmp342,
	movw	r1, #:lower16:.LC107	@,
	str	r5, [r4, lr]	@ tmp342, <variable>.CurWidthInMb
	movt	r1, #:upper16:.LC107	@,
	str	r5, [r4, r3]	@ tmp342, <variable>.CurHeightInMb
	mov	r0, r5	@, tmp342
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r5	@, tmp342
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3112:
	mov	r1, r6, lsr #4	@ tmp347, ImageWidth,
	movw	ip, #13560	@ tmp346,
	movw	r6, #13564	@ tmp348,
	mov	r7, r7, lsr #4	@ tmp349, ImageHeight,
	str	r1, [r4, ip]	@ tmp347, <variable>.CurWidthInMb
	str	r7, [r4, r6]	@ tmp349, <variable>.CurHeightInMb
	b	.L3108	@
.L3135:
	movw	r7, #:lower16:11159220	@ tmp481,
	movt	r7, #:upper16:11159220	@ tmp481,
	rsb	r0, r3, r2	@ tmp482, D.41261, temp.7948
	ldr	ip, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	add	lr, r0, r8	@ tmp483, tmp482, MaxFrameNum
	cmp	ip, lr	@ <variable>.CurrSPS.dpb_size_plus1, tmp483
	bcs	.L3133	@,
	cmp	r3, #0	@ D.41261,
	beq	.L3133	@,
	movw	lr, #:lower16:11162624	@ tmp485,
	movt	lr, #:upper16:11162624	@ tmp485,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #2	@ <variable>.CurrSlice.slice_type,
	bne	.L3215	@,
	movw	r0, #:lower16:2790658	@ tmp503,
	movt	r0, #:upper16:2790658	@ tmp503,
	add	ip, r1, r0	@ tmp503, temp.7949, tmp503
	cmp	r2, #0	@ temp.7948,
	subeq	r2, r8, #1	@ iftmp.696, MaxFrameNum,
	subne	r2, r2, #1	@ iftmp.696, temp.7948,
	add	lr, r4, ip, asl #2	@, tmp507, pMvcCtx, tmp503,
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	str	r2, [lr, #4]	@ iftmp.696, <variable>.CurrSlice.prev_frame_num
	bl	MVC_FlushDPB	@
	subs	r3, r0, #0	@ ret.7966,
	beq	.L3133	@,
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC103	@,
	movw	r2, #6990	@,
	movt	r1, #:upper16:.LC103	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3145:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC112	@,
	movw	r2, #7038	@,
	movt	r1, #:upper16:.LC112	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3125:
	mov	r3, #0	@ i.630,
	b	.L3127	@
.L3194:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3206:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC113	@,
	movw	r2, #7057	@,
	movt	r1, #:upper16:.LC113	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3197:
	mov	r3, r6	@, ret.7916
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC104	@,
	movw	r2, #6867	@,
	movt	r1, #:upper16:.LC104	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3212:
	movw	lr, #13560	@ tmp373,
	movw	r3, #13564	@ tmp375,
	str	r6, [r4, lr]	@ ret.7916, <variable>.CurWidthInMb
	mov	r0, r6	@, ret.7916
	str	r6, [r4, r3]	@ ret.7916, <variable>.CurHeightInMb
	movw	r1, #:lower16:.LC107	@,
	movt	r1, #:upper16:.LC107	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, ret.7916
	bl	MVC_ClearAll	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3213:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC104	@,
	movw	r2, #6796	@,
	movt	r1, #:upper16:.LC104	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3113:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC105	@,
	movt	r1, #:upper16:.LC105	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3203:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	ip, #:lower16:2790658	@ tmp460,
	movt	ip, #:upper16:2790658	@ tmp460,
	add	r1, r2, ip	@ tmp460, <variable>.CurrSlice.voidx, tmp460
	ldr	lr, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	ldr	ip, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	mov	r0, #0	@,
	add	r4, r4, r1, asl #2	@, tmp466, pMvcCtx, tmp460,
	movw	r1, #:lower16:.LC109	@,
	movt	r1, #:upper16:.LC109	@,
	movw	r2, #6954	@,
.L3189:
	ldr	r3, [r4, #4]	@ tmp500, <variable>.CurrSlice.prev_frame_num
	str	lr, [sp, #0]	@ <variable>.CurrSPS.dpb_size_plus1,
	rsb	r3, r3, ip	@, tmp500, <variable>.CurrSlice.frame_num
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
.L3215:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_ClearDPB	@
	ldr	r2, [r4, r6]	@ <variable>.CurrSlice.voidx, <variable>.CurrSlice.voidx
	movw	ip, #:lower16:2790658	@ tmp490,
	movt	ip, #:upper16:2790658	@ tmp490,
	add	r1, r2, ip	@ tmp490, <variable>.CurrSlice.voidx, tmp490
	ldr	lr, [r4, r7]	@ <variable>.CurrSPS.dpb_size_plus1, <variable>.CurrSPS.dpb_size_plus1
	ldr	ip, [r4, r5]	@ <variable>.CurrSlice.frame_num, <variable>.CurrSlice.frame_num
	mov	r0, #0	@,
	add	r4, r4, r1, asl #2	@, tmp496, pMvcCtx, tmp490,
	movw	r2, #6980	@,
	movw	r1, #:lower16:.LC109	@,
	movt	r1, #:upper16:.LC109	@,
	b	.L3189	@
.L3214:
	movw	r1, #:lower16:.LC106	@,
	movt	r1, #:upper16:.LC106	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41148,
	b	.L3105	@
	.fnend
	.size	MVC_InitPic, .-MVC_InitPic
	.align	2
	.global	mvc_se_v
	.type	mvc_se_v, %function
mvc_se_v:
	.fnstart
.LFB1514:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r6, r0, #13504	@ D.36525, pMvcCtx,
	add	r6, r6, #24	@ D.36525, D.36525,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r1, #32	@,
	mov	r0, r6	@, D.36525
	bl	BsShow	@
	mov	r4, r0	@ D.36526,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bhi	.L3217	@,
	mov	r5, r0, asl #1	@ tmp148, zeros,
	mov	r0, r6	@, D.36525
	add	r5, r5, #1	@ NumBits, tmp148,
	rsb	r3, r5, #32	@ tmp149, NumBits,
	mov	r4, r4, lsr r3	@ D.36533, D.36526,
	mov	r1, r5	@, NumBits
	tst	r4, #1	@ D.36533,
	mov	r4, r4, lsr #1	@ tmp, D.36533,
	rsbne	r4, r4, #0	@ INFO, tmp
	bl	BsSkip	@
.L3220:
	ldr	ip, [r7, #368]	@ D.36557, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp156, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #60]	@ tmp156, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3217:
	cmp	r0, #31	@ zeros,
	bls	.L3224	@,
	movw	r1, #:lower16:11199460	@ tmp153,
	movt	r1, #:upper16:11199460	@ tmp153,
	mov	r2, #1	@ tmp154,
	mvn	r4, #-2147483648	@ INFO,
	mov	r5, #32	@ NumBits,
	str	r2, [r7, r1]	@ tmp154, <variable>.SeErrFlg
	b	.L3220	@
.L3224:
	mov	r1, r5	@, zeros
	mov	r0, r6	@, D.36525
	bl	BsSkip	@
	mov	r1, r5	@, zeros
	mov	r0, r6	@, D.36525
	bl	BsGet	@
	mov	r1, #1	@,
	mov	r4, r0	@ INFO,
	mov	r0, r6	@, D.36525
	bl	BsGet	@
	tst	r0, #1	@,
	mov	r0, r5, asl #1	@ tmp152, zeros,
	rsbne	r4, r4, #0	@ INFO, INFO
	add	r5, r0, #1	@ NumBits, tmp152,
	b	.L3220	@
	.fnend
	.size	mvc_se_v, .-mvc_se_v
	.align	2
	.global	MVC_Scaling_List
	.type	MVC_Scaling_List, %function
MVC_Scaling_List:
	.fnstart
.LFB1633:
	@ args = 4, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r4, r3, #0	@ sizeOfScalingList, sizeOfScalingList
	str	r0, [fp, #-52]	@ pMvcCtx, %sfp
	mov	r9, r1	@ scalingList_Org, scalingList_Org
	mov	r6, r2	@ scalingList, scalingList
	ble	.L3232	@,
	cmp	r4, #16	@ sizeOfScalingList,
	sub	r0, r4, #1	@ tmp178, sizeOfScalingList,
	movw	r1, #:lower16:.LANCHOR0	@,
	and	r3, r0, #1	@, tmp178,
	movt	r1, #:upper16:.LANCHOR0	@,
	str	r3, [fp, #-56]	@, %sfp
	str	r1, [fp, #-48]	@, %sfp
	mov	sl, #255	@ tmp177,
	beq	.L3259	@,
	ldr	r8, .L3262	@,
	ldrb	r5, [r8, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
.L3247:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	and	r8, r5, #252	@ tmp202, scanj,
	bl	mvc_se_v	@
	add	r0, r0, #264	@ tmp193,,
	mov	r7, r0, asr #31	@ tmp194, tmp193,
	mov	r2, r7, lsr #24	@ tmp195, tmp194,
	and	r7, r5, #3	@ tmp204, scanj,
	add	ip, r0, r2	@ tmp196, tmp193, tmp195
	and	r3, ip, #255	@ tmp197, tmp196,
	mov	ip, r7, asl #3	@ D.43043, tmp204,
	cmp	r3, r2	@ tmp197, tmp195
	cmpeq	r5, #0	@, scanj,
	movne	r1, #0	@, tmp200
	moveq	r1, #1	@, tmp200
	subs	r3, r3, r2	@ nextScale, tmp197, tmp195
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	str	r1, [r2, #0]	@ tmp200,
	add	r1, r6, r8	@ D.43041, scalingList, tmp202
	moveq	r2, #8	@ tmpscale,
	movne	r2, r3	@ tmpscale, nextScale
	str	r2, [r9, r5, asl #2]	@ tmpscale,* scalingList_Org
	and	r7, r2, #255	@ tmp206, tmpscale,
	ldr	r0, [r1, #0]	@ tmp211,* D.43041
	mov	r5, #1	@ j,
	cmp	r4, r5	@ sizeOfScalingList, j
	mov	r8, r2	@ lastScale, tmpscale
	bic	r0, r0, sl, asl ip	@ tmp212, tmp211, tmp177,
	orr	r0, r0, r7, asl ip	@, tmp213, tmp212, tmp206,
	str	r0, [r1, #0]	@ tmp213,* D.43041
	ble	.L3232	@,
	ldr	r1, [fp, #-56]	@, %sfp
	cmp	r1, #0	@,
	beq	.L3231	@,
	cmp	r4, #16	@ sizeOfScalingList,
	ldrne	r1, .L3262	@,
	ldreq	r1, [fp, #-48]	@, %sfp
	cmp	r3, #0	@ nextScale,
	ldrb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj,* j
	bne	.L3252	@,
.L3238:
	mov	r8, r2	@ tmpscale, tmpscale
	mov	r3, #0	@ nextScale,
.L3253:
	and	r2, r7, #252	@ tmp228, scanj,
	and	r1, r7, #3	@ tmp230, scanj,
	add	r2, r6, r2	@ D.43041, scalingList, tmp228
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	mov	lr, r1, asl #3	@ D.43043, tmp230,
	add	r5, r5, #1	@ j, j,
	ldr	r0, [r2, #0]	@ tmp237,* D.43041
	and	ip, r8, #255	@ tmp232, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp238, tmp237, tmp177,
	orr	r1, r0, ip, asl lr	@, tmp239, tmp238, tmp232,
	str	r1, [r2, #0]	@ tmp239,* D.43041
	ble	.L3232	@,
.L3231:
	cmp	r4, #16	@ sizeOfScalingList,
	ldreq	r2, [fp, #-48]	@, %sfp
	ldrne	r1, .L3262	@,
	ldreqb	r7, [r2, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	ldrneb	r7, [r1, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
	cmp	r3, #0	@ nextScale,
	bne	.L3260	@,
.L3229:
	mov	r3, #0	@ nextScale,
.L3230:
	and	ip, r7, #3	@ tmp164, scanj,
	mov	lr, r7, lsr #2	@ tmp162, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	and	r0, r8, #255	@ tmp165, tmpscale,
	mov	r1, ip, asl #3	@ D.43043, tmp164,
	ldr	r2, [r6, lr, asl #2]	@ tmp171,* scalingList
	cmp	r4, #16	@ sizeOfScalingList,
	add	r5, r5, #1	@ tmp181, j,
	bic	ip, r2, sl, asl r1	@ tmp170, tmp171, tmp177,
	orr	r7, ip, r0, asl r1	@, tmp172, tmp170, tmp165,
	str	r7, [r6, lr, asl #2]	@ tmp172,* scalingList
	beq	.L3261	@,
	ldr	lr, .L3262	@,
	ldrb	r7, [lr, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN8
.L3254:
	cmp	r3, #0	@ nextScale,
	bne	.L3255	@,
.L3242:
	mov	r3, #0	@ nextScale,
.L3256:
	and	r1, r7, #3	@ tmp256, scanj,
	mov	r2, r7, lsr #2	@ tmp253, scanj,
	str	r8, [r9, r7, asl #2]	@ tmpscale,* scalingList_Org
	add	r5, r5, #1	@ j, tmp181,
	mov	lr, r1, asl #3	@ D.43043, tmp256,
	ldr	r0, [r6, r2, asl #2]	@ tmp263,* scalingList
	and	ip, r8, #255	@ tmp258, tmpscale,
	cmp	r4, r5	@ sizeOfScalingList, j
	bic	r0, r0, sl, asl lr	@ tmp264, tmp263, tmp177,
	orr	r1, r0, ip, asl lr	@, tmp265, tmp264, tmp258,
	str	r1, [r6, r2, asl #2]	@ tmp265,* scalingList
	bgt	.L3231	@,
.L3232:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3255:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	mvc_se_v	@
	add	r3, r8, #256	@ tmp244, tmpscale,
	add	r1, r3, r0	@ tmp245, tmp244,
	mov	r0, r1, asr #31	@ tmp246, tmp245,
	mov	r2, r0, lsr #24	@ tmp247, tmp246,
	add	ip, r1, r2	@ tmp248, tmp245, tmp247
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	and	r3, ip, #255	@ tmp249, tmp248,
	cmp	r3, r2	@ tmp249, tmp247
	cmpeq	r7, #0	@, scanj,
	movne	r0, #0	@, tmp252
	moveq	r0, #1	@, tmp252
	subs	r3, r3, r2	@ nextScale, tmp249, tmp247
	str	r0, [r1, #0]	@ tmp252,
	beq	.L3242	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L3256	@
.L3260:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	bl	mvc_se_v	@
	add	r3, r8, #256	@ tmp150, lastScale,
	add	ip, r3, r0	@ tmp151, tmp150,
	mov	r2, ip, asr #31	@ tmp152, tmp151,
	mov	r0, r2, lsr #24	@ tmp153, tmp152,
	ldr	r2, [fp, #4]	@, UseDefaultScalingMatrix
	add	r1, ip, r0	@ tmp154, tmp151, tmp153
	and	r3, r1, #255	@ tmp155, tmp154,
	cmp	r3, r0	@ tmp155, tmp153
	cmpeq	r7, #0	@, scanj,
	movne	ip, #0	@, tmp161
	moveq	ip, #1	@, tmp161
	subs	r3, r3, r0	@ nextScale, tmp155, tmp153
	str	ip, [r2, #0]	@ tmp161,
	movne	r8, r3	@ tmpscale, nextScale
	bne	.L3230	@,
	b	.L3229	@
.L3261:
	ldr	ip, [fp, #-48]	@, %sfp
	ldrb	r7, [ip, r5]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3254	@
.L3259:
	ldr	r3, [fp, #-48]	@, %sfp
	ldrb	r5, [r3, #0]	@ zero_extendqisi2	@ scanj, MVC_g_ZZ_SCAN
	b	.L3247	@
.L3252:
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC116	@,
	movt	r1, #:upper16:.LC116	@,
	str	r2, [fp, #-60]	@,
	bl	mvc_se_v	@
	ldr	r2, [fp, #-60]	@,
	add	r3, r2, #256	@ tmp218, tmpscale,
	add	r0, r3, r0	@ tmp219, tmp218,
	mov	r1, r0, asr #31	@ tmp220, tmp219,
	mov	ip, r1, lsr #24	@ tmp221, tmp220,
	ldr	r1, [fp, #4]	@, UseDefaultScalingMatrix
	add	r8, r0, ip	@ tmp222, tmp219, tmp221
	and	r3, r8, #255	@ tmp223, tmp222,
	cmp	r3, ip	@ tmp223, tmp221
	cmpeq	r7, #0	@, scanj,
	movne	r8, #0	@, tmp226
	moveq	r8, #1	@, tmp226
	subs	r3, r3, ip	@ nextScale, tmp223, tmp221
	str	r8, [r1, #0]	@ tmp226,
	beq	.L3238	@,
	mov	r8, r3	@ tmpscale, nextScale
	b	.L3253	@
.L3263:
	.align	2
.L3262:
	.word	.LANCHOR0+16
	.fnend
	.size	MVC_Scaling_List, .-MVC_Scaling_List
	.align	2
	.global	mvc_ue_v
	.type	mvc_ue_v, %function
mvc_ue_v:
	.fnstart
.LFB1513:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	add	r6, r0, #13504	@ D.36491, pMvcCtx,
	add	r6, r6, #24	@ D.36491, D.36491,
	mov	r7, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ SE_TRACEstring, SE_TRACEstring
	mov	r1, #32	@,
	mov	r0, r6	@, D.36491
	bl	BsShow	@
	mov	r4, r0	@ D.36492,
	bl	ZerosMS_32	@
	cmp	r0, #15	@ zeros,
	mov	r5, r0	@ zeros,
	bls	.L3269	@,
	cmp	r0, #31	@ zeros,
	bls	.L3270	@,
	movw	r1, #:lower16:11199460	@ tmp150,
	movt	r1, #:upper16:11199460	@ tmp150,
	mvn	r4, #0	@ INFO,
	mov	r5, #32	@ NumBits,
	mov	r2, #1	@ tmp151,
	str	r2, [r7, r1]	@ tmp151, <variable>.SeErrFlg
.L3266:
	ldr	ip, [r7, #368]	@ D.36510, <variable>.pCurrNal
	mov	r2, r8	@, SE_TRACEstring
	mov	r3, r4	@, INFO
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC37	@,
	movt	r1, #:upper16:.LC37	@,
	ldr	lr, [ip, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r5, lr, r5	@ tmp153, <variable>.nal_bitoffset, NumBits
	str	r5, [ip, #60]	@ tmp153, <variable>.nal_bitoffset
	bl	dprint_vfmw	@
	mov	r0, r4	@, INFO
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3269:
	mov	r5, r0, asl #1	@ tmp146, zeros,
	mov	r0, r6	@, D.36491
	add	r5, r5, #1	@ NumBits, tmp146,
	rsb	r3, r5, #32	@ tmp147, NumBits,
	mov	r4, r4, lsr r3	@ tmp148, D.36492,
	mov	r1, r5	@, NumBits
	sub	r4, r4, #1	@ INFO, tmp148,
	bl	BsSkip	@
	b	.L3266	@
.L3270:
	add	r4, r0, #1	@ D.36506, zeros,
	mov	r1, r0	@, zeros
	mov	r0, r6	@, D.36491
	bl	BsSkip	@
	mov	r1, r4	@, D.36506
	mov	r0, r6	@, D.36491
	bl	BsShow	@
	mov	r1, r4	@, D.36506
	sub	r4, r0, #1	@ INFO,,
	mov	r0, r6	@, D.36491
	bl	BsSkip	@
	mov	r0, r5, asl #1	@ tmp149, zeros,
	add	r5, r0, #1	@ NumBits, tmp149,
	b	.L3266	@
	.fnend
	.size	mvc_ue_v, .-mvc_ue_v
	.align	2
	.global	MVC_DecFramePackingSEI
	.type	MVC_DecFramePackingSEI, %function
MVC_DecFramePackingSEI:
	.fnstart
.LFB1649:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC117	@,
	movt	r1, #:upper16:.LC117	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11168396	@ tmp156,
	movt	ip, #:upper16:11168396	@ tmp156,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC118	@,
	movt	r2, #:upper16:.LC118	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168373	@ tmp158,
	movt	r3, #:upper16:11168373	@ tmp158,
	uxtb	r0, r0	@ D.44614,
	strb	r0, [r4, r3]	@ D.44614, <variable>.FramePackSEI.frame_packing_arrangement_cancel_flag
	cmp	r0, #0	@ D.44614,
	beq	.L3275	@,
.L3272:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC134	@,
	movt	r2, #:upper16:.LC134	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168374	@ tmp206,
	movw	r2, #:lower16:11168372	@ tmp208,
	movt	r3, #:upper16:11168374	@ tmp206,
	movt	r2, #:upper16:11168372	@ tmp208,
	mov	r1, #1	@ tmp209,
	strb	r1, [r4, r2]	@ tmp209, <variable>.FramePackSEI.frame_packing_dec_ok
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame_packing_arrangement_extension_flag
	mov	r0, #0	@,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L3275:
	mov	r1, #7	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC119	@,
	movt	r2, #:upper16:.LC119	@,
	bl	mvc_u_v	@
	movw	r6, #:lower16:11168388	@ tmp161,
	movt	r6, #:upper16:11168388	@ tmp161,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC120	@,
	movt	r2, #:upper16:.LC120	@,
	movw	r5, #:lower16:11168375	@ tmp163,
	movt	r5, #:upper16:11168375	@ tmp163,
	str	r0, [r4, r6]	@, <variable>.FramePackSEI.frame_packing_arrangement_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #6	@,
	movw	r2, #:lower16:.LC121	@,
	movt	r2, #:upper16:.LC121	@,
	strb	r0, [r4, r5]	@, <variable>.FramePackSEI.quincunx_sampling_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168392	@ tmp166,
	movt	ip, #:upper16:11168392	@ tmp166,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC122	@,
	movt	r2, #:upper16:.LC122	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.content_interpretation_type
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168376	@ tmp168,
	movt	r3, #:upper16:11168376	@ tmp168,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC123	@,
	movt	r2, #:upper16:.LC123	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.spatial_flipping_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168377	@ tmp171,
	movt	ip, #:upper16:11168377	@ tmp171,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC124	@,
	movt	r2, #:upper16:.LC124	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_flipped_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168378	@ tmp174,
	movt	r3, #:upper16:11168378	@ tmp174,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC125	@,
	movt	r2, #:upper16:.LC125	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.field_views_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168379	@ tmp177,
	movt	ip, #:upper16:11168379	@ tmp177,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC126	@,
	movt	r2, #:upper16:.LC126	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.current_frame_is_frame0_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168380	@ tmp180,
	movt	r3, #:upper16:11168380	@ tmp180,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC127	@,
	movt	r2, #:upper16:.LC127	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_self_contained_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldrsb	r2, [r4, r5]	@ <variable>.FramePackSEI.quincunx_sampling_flag, <variable>.FramePackSEI.quincunx_sampling_flag
	movw	r1, #:lower16:11168381	@ tmp183,
	movt	r1, #:upper16:11168381	@ tmp183,
	cmp	r2, #0	@ <variable>.FramePackSEI.quincunx_sampling_flag,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_self_contained_flag
	bne	.L3273	@,
	ldr	lr, [r4, r6]	@ <variable>.FramePackSEI.frame_packing_arrangement_type, <variable>.FramePackSEI.frame_packing_arrangement_type
	cmp	lr, #5	@ <variable>.FramePackSEI.frame_packing_arrangement_type,
	beq	.L3273	@,
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC128	@,
	movt	r2, #:upper16:.LC128	@,
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168382	@ tmp190,
	movt	r3, #:upper16:11168382	@ tmp190,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC129	@,
	movt	r2, #:upper16:.LC129	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame0_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168383	@ tmp193,
	movt	ip, #:upper16:11168383	@ tmp193,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC130	@,
	movt	r2, #:upper16:.LC130	@,
	strb	r0, [r4, ip]	@, <variable>.FramePackSEI.frame0_grid_position_y
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:11168384	@ tmp196,
	movt	r3, #:upper16:11168384	@ tmp196,
	mov	r1, #1	@,
	movw	r2, #:lower16:.LC131	@,
	movt	r2, #:upper16:.LC131	@,
	strb	r0, [r4, r3]	@, <variable>.FramePackSEI.frame1_grid_position_x
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:11168385	@ tmp199,
	movt	r1, #:upper16:11168385	@ tmp199,
	strb	r0, [r4, r1]	@, <variable>.FramePackSEI.frame1_grid_position_y
.L3273:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC132	@,
	movt	r2, #:upper16:.LC132	@,
	bl	mvc_u_v	@
	movw	ip, #:lower16:11168400	@ tmp202,
	movt	ip, #:upper16:11168400	@ tmp202,
	movw	r1, #:lower16:.LC133	@,
	movt	r1, #:upper16:.LC133	@,
	str	r0, [r4, ip]	@, <variable>.FramePackSEI.frame_packing_arrangement_reserved_byte
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r2, #:lower16:11168404	@ tmp204,
	movt	r2, #:upper16:11168404	@ tmp204,
	str	r0, [r4, r2]	@, <variable>.FramePackSEI.frame_packing_arrangement_repetition_period
	b	.L3272	@
	.fnend
	.size	MVC_DecFramePackingSEI, .-MVC_DecFramePackingSEI
	.align	2
	.global	MVC_DecSEI
	.type	MVC_DecSEI, %function
MVC_DecSEI:
	.fnstart
.LFB1651:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	add	r8, r0, #13504	@ D.44854, pMvcCtx,
	sub	sl, fp, #44	@ tmp802,,
	add	r8, r8, #24	@ D.44854, D.44854,
	movw	r5, #13552	@ tmp892,
	movw	r6, #13544	@ tmp893,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r3, #32	@ tmp224,
	mov	r0, #0	@ tmp221,
	str	r0, [fp, #-60]	@ tmp221, %sfp
	strb	r0, [sl, #-1]!	@ tmp221, byte_tmp
	str	r3, [r2, #20]	@ tmp224, <variable>.bitsoffset
.L3280:
	mov	r1, sl	@, tmp802
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r7, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r7, #8	@ tmp228, <variable>.BS.TotalPos,
	ldrb	r7, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.835, byte_tmp
	cmp	ip, r1, asl #3	@ tmp228, <variable>.BS.BsLen,
	mov	r9, r0	@ ret,
	ble	.L3647	@,
.L3279:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC135	@,
	movt	r1, #:upper16:.LC135	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44859,
.L3282:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3647:
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r3, [fp, #-60]	@, %sfp
	cmp	r9, #0	@ ret,
	add	r2, r3, r7	@,, byte_tmp.835
	str	r2, [fp, #-60]	@, %sfp
	ble	.L3279	@,
	ldrb	r9, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	r9, #255	@ byte_tmp,
	beq	.L3280	@,
	mov	r5, #0	@,
	movw	r6, #13544	@ tmp885,
	str	r5, [fp, #-68]	@, %sfp
	movw	r5, #13552	@ tmp884,
.L3394:
	mov	r7, #0	@ payloadSize,
.L3286:
	mov	r1, sl	@, tmp802
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r2, #8	@ tmp237, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp237, <variable>.BS.BsLen,
	mov	r9, r0	@ ret.8296,
	ldrb	r0, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.8297, byte_tmp
	add	r7, r7, r0	@ payloadSize, payloadSize, byte_tmp.8297
	ble	.L3648	@,
.L3285:
	mov	r3, #1	@ prephitmp.8206,
	cmp	r7, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp247, prephitmp.8206
	cmp	r3, #0	@ tmp247,
	bne	.L3649	@,
.L3288:
	ldr	r0, [r4, #368]	@ temp.8303, <variable>.pCurrNal
	ldr	r3, [fp, #-60]	@, %sfp
	ldr	r1, [r0, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	ldr	r2, [r0, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	cmp	r1, #2	@ <variable>.nal_segment,
	ldreq	r0, [r0, #48]	@ <variable>.bitsoffset, <variable>.bitsoffset
	addeq	r2, r0, r2	@ tmp250, <variable>.bitsoffset, <variable>.bitsoffset
	moveq	r2, r2, lsr #3	@ TotalBitOffset, tmp250,
	cmp	r3, #45	@,
	ldrls	pc, [pc, r3, asl #2]	@
	b	.L3291	@
.L3315:
	.word	.L3292
	.word	.L3293
	.word	.L3294
	.word	.L3295
	.word	.L3296
	.word	.L3297
	.word	.L3298
	.word	.L3299
	.word	.L3300
	.word	.L3301
	.word	.L3302
	.word	.L3303
	.word	.L3304
	.word	.L3305
	.word	.L3306
	.word	.L3307
	.word	.L3308
	.word	.L3309
	.word	.L3310
	.word	.L3311
	.word	.L3312
	.word	.L3313
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3291
	.word	.L3314
.L3648:
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	cmp	r9, #0	@ ret.8296,
	ble	.L3285	@,
	ldrb	lr, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp, byte_tmp
	cmp	lr, #255	@ byte_tmp,
	beq	.L3286	@,
	mov	r3, #0	@ prephitmp.8206,
	cmp	r7, #409600	@ payloadSize,
	orrgt	r3, r3, #1	@,, tmp247, prephitmp.8206
	cmp	r3, #0	@ tmp247,
	beq	.L3288	@,
.L3649:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC136	@,
	movt	r1, #:upper16:.LC136	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44859,
	b	.L3282	@
.L3314:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	ldr	r9, [r4, r5]	@ bitpos.8480, <variable>.BS.TotalPos
	bl	MVC_DecFramePackingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8208, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ temp.8482, payloadSize,
	rsb	r9, r9, r3	@ bitpos.8481, bitpos.8480, prephitmp.8208
	cmp	r9, r2	@ bitpos.8481, temp.8482
	blt	.L3650	@,
.L3381:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
.L3316:
	movw	r2, #:lower16:11198024	@ tmp788,
	movt	r2, #:upper16:11198024	@ tmp788,
	ldr	r0, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r0, #3	@ <variable>.TotalUsrDatNum,
	bhi	.L3651	@,
.L3388:
	mov	r7, #0	@,
	str	r7, [fp, #-60]	@, %sfp
.L3392:
	mov	r1, sl	@, tmp802
	mov	r2, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_GetBytes	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp793, <variable>.BS.TotalPos,
	ldrb	r7, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.8499, byte_tmp
	cmp	r3, r1, asl #3	@ tmp793, <variable>.BS.BsLen,
	mov	r9, r0	@ ret.8498,
	ble	.L3652	@,
.L3391:
	mov	r0, #0	@ D.44859,
	b	.L3282	@
.L3313:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC162	@,
	movt	r1, #:upper16:.LC162	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp742, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp742, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8479,
	bne	.L3640	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8479,
	cmp	r7, r9	@ payloadSize, i.8479
	ble	.L3316	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp1310, <variable>.BS.TotalPos,
	cmp	r3, r0, asl #3	@ tmp1310, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3640:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3379	@
.L3380:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp748, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp748, <variable>.BS.BsLen,
	bgt	.L3653	@,
	bl	BsSkip	@
	ldr	sl, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, sl, #8	@ tmp1316, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp1316, <variable>.BS.BsLen,
	bgt	.L3654	@,
.L3379:
	add	sl, r9, #1	@ tmp991, i.8479,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8479, tmp991,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp991
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3380	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3309:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC158	@,
	movt	r1, #:upper16:.LC158	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp690, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp690, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8453,
	bne	.L3636	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8453,
	cmp	r7, r9	@ payloadSize, i.8453
	ble	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp1262, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp1262, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3636:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3371	@
.L3372:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp696, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp696, <variable>.BS.BsLen,
	bgt	.L3655	@,
	bl	BsSkip	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp1268, <variable>.BS.TotalPos,
	cmp	r0, sl, asl #3	@ tmp1268, <variable>.BS.BsLen,
	bgt	.L3656	@,
.L3371:
	add	sl, r9, #1	@ tmp975, i.8453,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8453, tmp975,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp975
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3372	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3311:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC160	@,
	movt	r1, #:upper16:.LC160	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp716, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp716, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8466,
	bne	.L3638	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8466,
	cmp	r7, r9	@ payloadSize, i.8466
	ble	.L3316	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r1, #8	@ tmp1286, <variable>.BS.TotalPos,
	cmp	lr, r2, asl #3	@ tmp1286, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3638:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3375	@
.L3376:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp722, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp722, <variable>.BS.BsLen,
	bgt	.L3657	@,
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	sl, r3, #8	@ tmp1292, <variable>.BS.TotalPos,
	cmp	sl, ip, asl #3	@ tmp1292, <variable>.BS.BsLen,
	bgt	.L3658	@,
.L3375:
	add	sl, r9, #1	@ tmp983, i.8466,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8466, tmp983,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp983
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3376	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3310:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC159	@,
	movt	r1, #:upper16:.LC159	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp703, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp703, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8459,
	bne	.L3637	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8459,
	cmp	r7, r9	@ payloadSize, i.8459
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp1274, <variable>.BS.TotalPos,
	cmp	r1, lr, asl #3	@ tmp1274, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3637:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3373	@
.L3374:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp709, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp709, <variable>.BS.BsLen,
	bgt	.L3659	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1280, <variable>.BS.TotalPos,
	cmp	r3, sl, asl #3	@ tmp1280, <variable>.BS.BsLen,
	bgt	.L3660	@,
.L3373:
	add	sl, r9, #1	@ tmp979, i.8459,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8459, tmp979,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp979
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3374	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3312:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC161	@,
	movt	r1, #:upper16:.LC161	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp729, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp729, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8472,
	bne	.L3639	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8472,
	cmp	r7, r9	@ payloadSize, i.8472
	ble	.L3316	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, lr, #8	@ tmp1298, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp1298, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3639:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3377	@
.L3378:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp735, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp735, <variable>.BS.BsLen,
	bgt	.L3661	@,
	bl	BsSkip	@
	ldr	sl, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, sl, #8	@ tmp1304, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp1304, <variable>.BS.BsLen,
	bgt	.L3662	@,
.L3377:
	add	sl, r9, #1	@ tmp987, i.8472,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8472, tmp987,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp987
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3378	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3307:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC156	@,
	movt	r1, #:upper16:.LC156	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp664, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp664, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8441,
	bne	.L3634	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8441,
	cmp	r7, r9	@ payloadSize, i.8441
	ble	.L3316	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1238, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1238, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3634:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3367	@
.L3368:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp670, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp670, <variable>.BS.BsLen,
	bgt	.L3663	@,
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1244, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp1244, <variable>.BS.BsLen,
	bgt	.L3664	@,
.L3367:
	add	sl, r9, #1	@ tmp967, i.8441,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8441, tmp967,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp967
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3368	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3306:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC155	@,
	movt	r1, #:upper16:.LC155	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp651, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp651, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8435,
	bne	.L3633	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8435,
	cmp	r7, r9	@ payloadSize, i.8435
	ble	.L3316	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r0, #8	@ tmp1226, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp1226, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3633:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3365	@
.L3366:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp657, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp657, <variable>.BS.BsLen,
	bgt	.L3665	@,
	bl	BsSkip	@
	ldr	sl, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, sl, #8	@ tmp1232, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1232, <variable>.BS.BsLen,
	bgt	.L3666	@,
.L3365:
	add	sl, r9, #1	@ tmp963, i.8435,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8435, tmp963,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp963
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3366	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3308:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC157	@,
	movt	r1, #:upper16:.LC157	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp677, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp677, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8447,
	bne	.L3635	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8447,
	cmp	r7, r9	@ payloadSize, i.8447
	ble	.L3316	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, lr, #8	@ tmp1250, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1250, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3635:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3369	@
.L3370:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp683, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp683, <variable>.BS.BsLen,
	bgt	.L3667	@,
	bl	BsSkip	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp1256, <variable>.BS.TotalPos,
	cmp	r0, sl, asl #3	@ tmp1256, <variable>.BS.BsLen,
	bgt	.L3668	@,
.L3369:
	add	sl, r9, #1	@ tmp971, i.8447,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8447, tmp971,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp971
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3370	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3305:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC154	@,
	movt	r1, #:upper16:.LC154	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp638, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp638, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8429,
	bne	.L3632	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8429,
	cmp	r7, r9	@ payloadSize, i.8429
	ble	.L3316	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp1214, <variable>.BS.TotalPos,
	cmp	r0, lr, asl #3	@ tmp1214, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3632:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3363	@
.L3364:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp644, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp644, <variable>.BS.BsLen,
	bgt	.L3669	@,
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	sl, r3, #8	@ tmp1220, <variable>.BS.TotalPos,
	cmp	sl, r1, asl #3	@ tmp1220, <variable>.BS.BsLen,
	bgt	.L3670	@,
.L3363:
	add	sl, r9, #1	@ tmp959, i.8429,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8429, tmp959,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp959
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3364	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3304:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC153	@,
	movt	r1, #:upper16:.LC153	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp625, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp625, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8423,
	bne	.L3631	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8423,
	cmp	r7, r9	@ payloadSize, i.8423
	ble	.L3316	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1202, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp1202, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3631:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3361	@
.L3362:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp631, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp631, <variable>.BS.BsLen,
	bgt	.L3671	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1208, <variable>.BS.TotalPos,
	cmp	r3, sl, asl #3	@ tmp1208, <variable>.BS.BsLen,
	bgt	.L3672	@,
.L3361:
	add	sl, r9, #1	@ tmp955, i.8423,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8423, tmp955,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp955
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3362	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3303:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC152	@,
	movt	r1, #:upper16:.LC152	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp612, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp612, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8417,
	bne	.L3630	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8417,
	cmp	r7, r9	@ payloadSize, i.8417
	ble	.L3316	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, lr, #8	@ tmp1190, <variable>.BS.TotalPos,
	cmp	r1, r2, asl #3	@ tmp1190, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3630:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3359	@
.L3360:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp618, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp618, <variable>.BS.BsLen,
	bgt	.L3673	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1196, <variable>.BS.TotalPos,
	cmp	r3, sl, asl #3	@ tmp1196, <variable>.BS.BsLen,
	bgt	.L3674	@,
.L3359:
	add	sl, r9, #1	@ tmp951, i.8417,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8417, tmp951,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp951
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3360	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3302:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC151	@,
	movt	r1, #:upper16:.LC151	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp599, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp599, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8411,
	bne	.L3629	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8411,
	cmp	r7, r9	@ payloadSize, i.8411
	ble	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp1178, <variable>.BS.TotalPos,
	cmp	lr, r1, asl #3	@ tmp1178, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3629:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3357	@
.L3358:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp605, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp605, <variable>.BS.BsLen,
	bgt	.L3675	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r0, #8	@ tmp1184, <variable>.BS.TotalPos,
	cmp	ip, sl, asl #3	@ tmp1184, <variable>.BS.BsLen,
	bgt	.L3676	@,
.L3357:
	add	sl, r9, #1	@ tmp947, i.8411,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8411, tmp947,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp947
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3358	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3301:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC150	@,
	movt	r1, #:upper16:.LC150	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp586, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp586, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8405,
	bne	.L3628	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8405,
	cmp	r7, r9	@ payloadSize, i.8405
	ble	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp1166, <variable>.BS.TotalPos,
	cmp	lr, r1, asl #3	@ tmp1166, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3628:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3355	@
.L3356:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp592, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp592, <variable>.BS.BsLen,
	bgt	.L3677	@,
	bl	BsSkip	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp1172, <variable>.BS.TotalPos,
	cmp	r0, ip, asl #3	@ tmp1172, <variable>.BS.BsLen,
	bgt	.L3678	@,
.L3355:
	add	sl, r9, #1	@ tmp943, i.8405,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8405, tmp943,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp943
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3356	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3300:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC149	@,
	movt	r1, #:upper16:.LC149	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, ip, #8	@ tmp573, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp573, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8399,
	bne	.L3627	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8399,
	cmp	r7, r9	@ payloadSize, i.8399
	ble	.L3316	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1154, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp1154, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3627:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3353	@
.L3354:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r2, #8	@ tmp579, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp579, <variable>.BS.BsLen,
	bgt	.L3679	@,
	bl	BsSkip	@
	ldr	sl, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, sl, #8	@ tmp1160, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp1160, <variable>.BS.BsLen,
	bgt	.L3680	@,
.L3353:
	add	sl, r9, #1	@ tmp939, i.8399,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8399, tmp939,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp939
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3354	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3299:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC148	@,
	movt	r1, #:upper16:.LC148	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp560, <variable>.BS.TotalPos,
	cmp	ip, r1, asl #3	@ tmp560, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8393,
	bne	.L3626	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8393,
	cmp	r7, r9	@ payloadSize, i.8393
	ble	.L3316	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r0, #8	@ tmp1142, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp1142, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3626:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3351	@
.L3352:
	ldr	sl, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, sl, #8	@ tmp566, <variable>.BS.TotalPos,
	cmp	r2, lr, asl #3	@ tmp566, <variable>.BS.BsLen,
	bgt	.L3681	@,
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	sl, r1, #8	@ tmp1148, <variable>.BS.TotalPos,
	cmp	sl, r2, asl #3	@ tmp1148, <variable>.BS.BsLen,
	bgt	.L3682	@,
.L3351:
	add	sl, r9, #1	@ tmp935, i.8393,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8393, tmp935,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp935
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3352	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3298:
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC147	@,
	mov	r3, r7	@, payloadSize
	movt	r1, #:upper16:.LC147	@,
	bl	dprint_vfmw	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3348	@,
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, r0, #8	@ tmp550, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp550, <variable>.BS.BsLen,
	bgt	.L3348	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8386,
	bne	.L3625	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8386,
	cmp	r7, r9	@ payloadSize, i.8386
	ble	.L3348	@,
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r0, r2, #8	@ tmp1130, <variable>.BS.TotalPos,
	cmp	r0, ip, asl #3	@ tmp1130, <variable>.BS.BsLen,
	bgt	.L3348	@,
.L3625:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3349	@
.L3350:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp553, <variable>.BS.TotalPos,
	cmp	lr, sl, asl #3	@ tmp553, <variable>.BS.BsLen,
	bgt	.L3645	@,
	bl	BsSkip	@
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r3, #8	@ tmp1136, <variable>.BS.TotalPos,
	cmp	r1, sl, asl #3	@ tmp1136, <variable>.BS.BsLen,
	bgt	.L3645	@,
.L3349:
	add	sl, r9, #1	@ tmp931, i.8386,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8386, tmp931,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp931
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3350	@,
.L3645:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
.L3348:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	movw	r2, #:lower16:11198024	@ tmp788,
	movt	r2, #:upper16:11198024	@ tmp788,
	ldr	r0, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	r0, #3	@ <variable>.TotalUsrDatNum,
	bls	.L3388	@,
.L3651:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC163	@,
	movt	r1, #:upper16:.LC163	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44859,
	b	.L3282	@
.L3297:
	ldr	r9, [fp, #-68]	@, %sfp
	cmp	r9, #0	@,
	bne	.L3296	@,
	movw	r1, #:lower16:.LC142	@,
	mov	r0, #20	@,
	movt	r1, #:upper16:.LC142	@,
	mov	r3, r7	@, payloadSize
	bl	dprint_vfmw	@
.L3329:
	movw	r9, #:lower16:11199520	@ tmp320,
	movt	r9, #:upper16:11199520	@ tmp320,
	movw	lr, #:lower16:11198024	@ tmp319,
	movt	lr, #:upper16:11198024	@ tmp319,
	ldr	r0, [r4, r9]	@, <variable>.ChanID
	ldr	r9, [r4, lr]	@ D.44907, <variable>.TotalUsrDatNum
	str	lr, [fp, #-84]	@,
	bl	GetUsd	@
	ldr	r2, [fp, #-84]	@,
	movw	ip, #:lower16:2799506	@ tmp322,
	movt	ip, #:upper16:2799506	@ tmp322,
	ldr	r1, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, r9, ip	@ tmp322, D.44907, tmp322
	add	ip, r1, ip	@ tmp328, <variable>.TotalUsrDatNum, tmp328
	add	r1, r4, r2, asl #2	@, tmp326, pMvcCtx, tmp322,
	add	r3, r4, ip, asl #2	@, tmp334, pMvcCtx, tmp328,
	str	r0, [r1, #4]	@, <variable>.pUsrDatArray
	ldr	r1, [r3, #4]	@ prephitmp.8216, <variable>.pUsrDatArray
	cmp	r1, #0	@ prephitmp.8216,
	beq	.L3330	@,
	ldr	r3, [r4, #368]	@ temp.8331, <variable>.pCurrNal
	cmp	r7, #1024	@ payloadSize,
	movlt	ip, r7	@ D.44913, payloadSize
	movge	ip, #1024	@ D.44913,
	ldrb	lr, [r3, #0]	@ zero_extendqisi2	@ segment_idx, <variable>.nal_used_segment
	ldr	r2, [r3, #64]	@ temp.8521, <variable>.nal_segment
	cmp	lr, r2	@ segment_idx, temp.8521
	movcs	r0, #0	@ prephitmp.8210,
	strcs	r0, [fp, #-72]	@ prephitmp.8210, %sfp
	bcs	.L3332	@,
	rsb	r9, lr, lr, asl #3	@, tmp338, segment_idx, segment_idx,
	add	r0, lr, #1	@ segment_idx, segment_idx,
	mvn	lr, lr	@ tmp924, segment_idx
	add	lr, lr, r2	@ tmp923, tmp924, temp.8521
	add	r9, r3, r9, asl #2	@, tmp340, temp.8331, tmp338,
	and	r3, lr, #1	@, tmp923,
	add	lr, r9, #36	@, tmp340,
	str	r3, [fp, #-64]	@, %sfp
	str	lr, [fp, #-76]	@, %sfp
	cmp	r0, r2	@ segment_idx, temp.8521
	ldr	r3, [r9, #20]	@ <variable>.bitsoffset, <variable>.bitsoffset
	add	lr, r3, #7	@, <variable>.bitsoffset,
	ldr	r3, [r9, #8]	@, <variable>.bitstream_length
	sub	r3, r3, lr, lsr #3	@,,,
	str	r3, [fp, #-72]	@, %sfp
	beq	.L3547	@,
	ldr	lr, [fp, #-64]	@, %sfp
	cmp	lr, #0	@,
	beq	.L3624	@,
	ldr	r3, [fp, #-76]	@, %sfp
	add	r0, r0, #1	@ segment_idx, segment_idx,
	cmp	r0, r2	@ segment_idx, temp.8521
	ldr	lr, [r3, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	ldr	r3, [r9, #36]	@, <variable>.bitstream_length
	add	r9, r9, #64	@, tmp340,
	add	lr, lr, #7	@, <variable>.bitsoffset,
	str	r9, [fp, #-76]	@, %sfp
	sub	r9, r3, lr, lsr #3	@,,,
	ldr	lr, [fp, #-72]	@, %sfp
	add	r3, lr, r9	@,,
	str	r3, [fp, #-72]	@, %sfp
	beq	.L3547	@,
.L3624:
	ldr	r3, [fp, #-72]	@ lenth_not_parse, %sfp
	ldr	lr, [fp, #-76]	@ ivtmp.8253, %sfp
	str	r1, [fp, #-88]	@ prephitmp.8216, %sfp
	str	ip, [fp, #-92]	@ D.44913, %sfp
.L3333:
	ldr	ip, [lr, #12]	@ <variable>.bitsoffset, <variable>.bitsoffset
	mov	r9, lr	@ tmp926, ivtmp.8253
	ldr	r1, [r9], #28	@, <variable>.bitstream_length
	add	r0, r0, #2	@ segment_idx, segment_idx,
	add	ip, ip, #7	@, <variable>.bitsoffset,
	str	ip, [fp, #-60]	@, %sfp
	ldr	ip, [lr, #28]	@, <variable>.bitstream_length
	cmp	r0, r2	@ segment_idx, temp.8521
	add	lr, lr, #56	@ ivtmp.8253, ivtmp.8253,
	str	ip, [fp, #-76]	@, %sfp
	ldr	r9, [r9, #12]	@, <variable>.bitsoffset
	ldr	ip, [fp, #-60]	@, %sfp
	str	r9, [fp, #-72]	@, %sfp
	sub	r9, r1, ip, lsr #3	@ tmp1007,,,
	ldr	ip, [fp, #-72]	@, %sfp
	ldr	r1, [fp, #-76]	@, %sfp
	add	r3, r3, r9	@ lenth_not_parse, lenth_not_parse, tmp1007
	add	r9, ip, #7	@ tmp1012,,
	sub	r9, r1, r9, lsr #3	@ tmp1015,, tmp1012,
	add	r3, r3, r9	@ lenth_not_parse, lenth_not_parse, tmp1015
	bne	.L3333	@,
	ldr	r1, [fp, #-88]	@ prephitmp.8216, %sfp
	ldr	ip, [fp, #-92]	@ D.44913, %sfp
	str	r3, [fp, #-72]	@ lenth_not_parse, %sfp
.L3547:
	ldr	r0, [fp, #-72]	@ prephitmp.8210, %sfp
.L3332:
	ldr	r3, [fp, #-68]	@, %sfp
	cmp	ip, r0	@ D.44913, prephitmp.8210
	ldr	lr, [fp, #-72]	@, %sfp
	movle	lr, ip	@, D.44913
	sxtb	r2, r3	@ registered_flag,
	cmp	r2, #1	@ registered_flag,
	str	lr, [fp, #-64]	@, %sfp
	movne	r9, #0	@ prephitmp.8217,
	strne	r9, [fp, #-60]	@ prephitmp.8217, %sfp
	beq	.L3683	@,
.L3340:
	ldr	r3, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	str	ip, [fp, #-80]	@,
	rsb	r2, r9, r3	@, prephitmp.8217,
	bl	MVC_GetBytes	@
	ldr	ip, [fp, #-80]	@,
	subs	r9, r0, #0	@ ret.8348,
	ble	.L3684	@,
	ldr	lr, [fp, #-60]	@, %sfp
	rsb	r1, lr, ip	@ tmp458,, D.44913
	cmp	r9, r1	@ ret.8348, tmp458
	blt	.L3685	@,
	movw	r9, #:lower16:11198024	@ tmp477,
	movt	r9, #:upper16:11198024	@ tmp477,
	movw	r1, #:lower16:2799506	@ tmp474,
	movt	r1, #:upper16:2799506	@ tmp474,
	ldr	lr, [r4, r9]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	cmp	ip, r7	@ D.44913, payloadSize
	ldr	r0, [fp, #-60]	@, %sfp
	add	r3, lr, r1	@ tmp474, <variable>.TotalUsrDatNum, tmp474
	rsb	r9, r0, r7	@,, payloadSize
	str	r9, [fp, #-60]	@, %sfp
	add	r2, r4, r3, asl #2	@, tmp481, pMvcCtx, tmp474,
	ldr	lr, [r2, #4]	@ tmp478, <variable>.pUsrDatArray
	str	r9, [lr, #1048]	@, <variable>.data_size
	bcc	.L3686	@,
.L3345:
	ldr	r1, [fp, #-60]	@, %sfp
	cmp	r1, #0	@,
	ble	.L3343	@,
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r7, r2, #8	@ tmp488, <variable>.BS.TotalPos,
	cmp	r7, ip, asl #3	@ tmp488, <variable>.BS.BsLen,
	bgt	.L3343	@,
	tst	r1, #1	@,
	mov	r9, #0	@ i,
	bne	.L3346	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r9, #1	@ i,
	cmp	r3, r9	@, i
	bgt	.L3644	@,
	b	.L3343	@
.L3346:
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	bl	BsSkip	@
	ldr	r2, [fp, #-60]	@, %sfp
	add	r7, r9, #1	@ tmp922, i,
	mov	r0, r8	@, D.44854
	cmp	r2, r7	@, tmp922
	add	r9, r7, #1	@ i, tmp922,
	mov	r1, #8	@,
	ble	.L3343	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp491, <variable>.BS.TotalPos,
	cmp	r3, lr, asl #3	@ tmp491, <variable>.BS.BsLen,
	bgt	.L3343	@,
	bl	BsSkip	@
.L3644:
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1119, <variable>.BS.TotalPos,
	cmp	r2, r0, asl #3	@ tmp1119, <variable>.BS.BsLen,
	ble	.L3346	@,
.L3343:
	movw	r2, #:lower16:11198024	@ tmp499,
	movt	r2, #:upper16:11198024	@ tmp499,
	ldr	r7, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	ip, #:lower16:2799506	@ tmp496,
	ldr	r3, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movt	ip, #:upper16:2799506	@ tmp496,
	movw	r9, #:lower16:2799506	@ tmp508,
	movt	r9, #:upper16:2799506	@ tmp508,
	add	r0, r3, ip	@ tmp496, <variable>.TotalUsrDatNum, tmp496
	movw	ip, #:lower16:11199480	@ tmp527,
	mov	r3, r9	@ tmp518, tmp508
	movt	ip, #:upper16:11199480	@ tmp527,
	add	lr, r4, r0, asl #2	@, tmp503, pMvcCtx, tmp496,
	ldrd	r0, [r7, #56]	@, <variable>.pstExtraData,
	strd	r0, [fp, #-60]	@,,
	movw	r1, #:lower16:g_event_report	@,
	ldr	r7, [lr, #4]	@ tmp500, <variable>.pUsrDatArray
	movt	r1, #:upper16:g_event_report	@,
	str	r1, [fp, #-64]	@, %sfp
	mov	lr, #1056	@ tmp505,
	ldrd	r0, [fp, #-60]	@,,
	strd	r0, [r7, lr]	@, tmp500, tmp505
	ldr	lr, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r9, lr, r9	@ tmp508, <variable>.TotalUsrDatNum, tmp508
	mov	lr, #8	@ tmp517,
	add	r1, r4, r9, asl #2	@, tmp515, pMvcCtx, tmp508,
	ldr	r1, [r1, #4]	@ tmp512, <variable>.pUsrDatArray
	str	lr, [r1, #1036]	@ tmp517, <variable>.from
	ldr	lr, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r1, [r4, ip]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	ip, lr, r3	@ tmp518, <variable>.TotalUsrDatNum, tmp518
	add	r3, r4, ip, asl #2	@, tmp525, pMvcCtx, tmp518,
	ldr	lr, [r3, #4]	@ tmp522, <variable>.pUsrDatArray
	str	r1, [lr, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r1, [fp, #-64]	@, %sfp
	ldr	r3, [r1, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3316	@,
	ldr	r2, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r1, #:lower16:2799506	@ tmp531,
	movt	r1, #:upper16:2799506	@ tmp531,
	movw	r0, #:lower16:11199520	@ tmp541,
	add	lr, r2, r1	@ tmp531, <variable>.TotalUsrDatNum, tmp531
	movt	r0, #:upper16:11199520	@ tmp541,
	sub	r2, fp, #44	@ tmp543,,
	mov	r1, #6	@,
	add	ip, r4, lr, asl #2	@, tmp537, pMvcCtx, tmp531,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	ldr	lr, [ip, #4]	@ tmp539, <variable>.pUsrDatArray
	str	lr, [r2, #-8]!	@ tmp539, para
	blx	r3	@ g_event_report
	b	.L3316	@
.L3293:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC138	@,
	movt	r1, #:upper16:.LC138	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	ldr	r9, [r4, r5]	@ bitpos, <variable>.BS.TotalPos
	bl	MVC_DecPicTimingSEI	@
	ldr	r3, [r4, r5]	@ prephitmp.8221, <variable>.BS.TotalPos
	mov	r2, r7, asl #3	@ D.44887, payloadSize,
	rsb	r9, r9, r3	@ bitpos.8310, bitpos, prephitmp.8221
	cmp	r9, r2	@ bitpos.8310, D.44887
	bge	.L3319	@,
	rsb	r1, r9, r2	@, bitpos.8310, D.44887
	str	r1, [fp, #-64]	@, %sfp
	ldr	r9, [fp, #-64]	@, %sfp
	add	r0, r1, #7	@ tmp270,,
	cmp	r9, #0	@,
	movge	r0, r9	@ D.44891,
	mov	r2, r0, asr #3	@, D.44891,
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
	ble	.L3321	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r3, #8	@ tmp276, prephitmp.8221,
	mov	r2, r2, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
	cmp	r2, lr	@ prephitmp.8223, tmp276
	blt	.L3321	@,
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r9, #0	@ i.8314,
	tst	r3, #1	@,
	beq	.L3687	@,
.L3617:
	str	r7, [fp, #-72]	@ payloadSize, %sfp
	b	.L3322	@
.L3323:
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8221, <variable>.BS.TotalPos
	mov	r2, ip, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp280, prephitmp.8221,
	cmp	r7, r2	@ tmp280, prephitmp.8223
	bgt	.L3642	@,
	bl	BsSkip	@
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8221, <variable>.BS.TotalPos
	mov	r2, r1, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp1080, prephitmp.8221,
	cmp	r7, r2	@ tmp1080, prephitmp.8223
	bgt	.L3642	@,
.L3322:
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	bl	BsSkip	@
	ldr	lr, [fp, #-60]	@, %sfp
	add	r7, r9, #1	@ tmp906, i.8314,
	mov	r0, r8	@, D.44854
	cmp	r7, lr	@ tmp906,
	add	r9, r7, #1	@ i.8314, tmp906,
	mov	r1, #8	@,
	blt	.L3323	@,
	ldr	r7, [fp, #-72]	@ payloadSize, %sfp
.L3589:
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8221, <variable>.BS.TotalPos
	mov	r2, r0, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
.L3321:
	ldr	r0, [fp, #-64]	@, %sfp
	mov	r1, r0, asr #31	@ tmp284,,
	mov	r1, r1, lsr #29	@ tmp285, tmp284,
	add	lr, r0, r1	@ tmp286,, tmp285
	and	ip, lr, #7	@ tmp287, tmp286,
	rsb	r1, r1, ip	@ tmp288, tmp285, tmp287
	add	r3, r3, r1	@ tmp289, prephitmp.8221, tmp288
	cmp	r3, r2	@ tmp289, prephitmp.8223
	ble	.L3688	@,
.L3319:
	mov	r1, r7	@, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	b	.L3316	@
.L3292:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC137	@,
	movt	r1, #:upper16:.LC137	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	lr, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, lr, #8	@ tmp255, <variable>.BS.TotalPos,
	cmp	r2, ip, asl #3	@ tmp255, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8309,
	bne	.L3616	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8309,
	cmp	r9, r7	@ i.8309, payloadSize
	bge	.L3316	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r1, #8	@ tmp1063, <variable>.BS.TotalPos,
	cmp	lr, r2, asl #3	@ tmp1063, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3616:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3317	@
.L3318:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp261, <variable>.BS.TotalPos,
	cmp	r3, sl, asl #3	@ tmp261, <variable>.BS.BsLen,
	bgt	.L3689	@,
	bl	BsSkip	@
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, ip, #8	@ tmp1069, <variable>.BS.TotalPos,
	cmp	r3, sl, asl #3	@ tmp1069, <variable>.BS.BsLen,
	bgt	.L3690	@,
.L3317:
	add	sl, r9, #1	@ tmp902, i.8309,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8309, tmp902,
	bl	BsSkip	@
	cmp	sl, r7	@ tmp902, payloadSize
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	blt	.L3318	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3295:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC140	@,
	movt	r1, #:upper16:.LC140	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r1, r3, #8	@ tmp308, <variable>.BS.TotalPos,
	cmp	r1, r0, asl #3	@ tmp308, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8329,
	bne	.L3619	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8329,
	cmp	r9, r7	@ i.8329, payloadSize
	bge	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp1095, <variable>.BS.TotalPos,
	cmp	ip, lr, asl #3	@ tmp1095, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3619:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3326	@
.L3327:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp311, <variable>.BS.TotalPos,
	cmp	lr, ip, asl #3	@ tmp311, <variable>.BS.BsLen,
	bgt	.L3691	@,
	bl	BsSkip	@
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r0, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	sl, r2, #8	@ tmp1101, <variable>.BS.TotalPos,
	cmp	sl, r0, asl #3	@ tmp1101, <variable>.BS.BsLen,
	bgt	.L3692	@,
.L3326:
	add	sl, r9, #1	@ tmp914, i.8329,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8329, tmp914,
	bl	BsSkip	@
	cmp	sl, r7	@ tmp914, payloadSize
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	blt	.L3327	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3294:
	mov	r3, r7	@, payloadSize
	mov	r0, #20	@,
	movw	r1, #:lower16:.LC139	@,
	movt	r1, #:upper16:.LC139	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	add	r3, ip, #8	@ tmp295, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp295, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8323,
	bne	.L3618	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8323,
	cmp	r9, r7	@ i.8323, payloadSize
	bge	.L3316	@,
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	ip, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r0, #8	@ tmp1083, <variable>.BS.TotalPos,
	cmp	r3, ip, asl #3	@ tmp1083, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3618:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3324	@
.L3325:
	ldr	r2, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, r2, #8	@ tmp298, <variable>.BS.TotalPos,
	cmp	lr, sl, asl #3	@ tmp298, <variable>.BS.BsLen,
	bgt	.L3693	@,
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r2, r1, #8	@ tmp1089, <variable>.BS.TotalPos,
	cmp	r2, sl, asl #3	@ tmp1089, <variable>.BS.BsLen,
	bgt	.L3694	@,
.L3324:
	add	sl, r9, #1	@ tmp910, i.8323,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8323, tmp910,
	bl	BsSkip	@
	cmp	sl, r7	@ tmp910, payloadSize
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	blt	.L3325	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3291:
	mov	r0, r4	@, pMvcCtx
	mov	r1, r7	@, payloadSize
	bl	MVC_PassBytes	@
	cmp	r7, #0	@ payloadSize,
	ble	.L3316	@,
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r3, r1, #8	@ tmp777, <variable>.BS.TotalPos,
	cmp	r3, r2, asl #3	@ tmp777, <variable>.BS.BsLen,
	bgt	.L3316	@,
	tst	r7, #1	@ payloadSize,
	mov	r9, #0	@ i.8496,
	bne	.L3615	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r9, #1	@ i.8496,
	cmp	r7, r9	@ payloadSize, i.8496
	ble	.L3316	@,
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r1, r3, #8	@ tmp1051, <variable>.BS.TotalPos,
	cmp	r1, lr, asl #3	@ tmp1051, <variable>.BS.BsLen,
	bgt	.L3316	@,
.L3615:
	str	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3386	@
.L3387:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, ip, #8	@ tmp783, <variable>.BS.TotalPos,
	cmp	lr, sl, asl #3	@ tmp783, <variable>.BS.BsLen,
	bgt	.L3695	@,
	bl	BsSkip	@
	ldr	r0, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	sl, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r0, #8	@ tmp1057, <variable>.BS.TotalPos,
	cmp	ip, sl, asl #3	@ tmp1057, <variable>.BS.BsLen,
	bgt	.L3696	@,
.L3386:
	add	sl, r9, #1	@ tmp898, i.8496,
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	add	r9, sl, #1	@ i.8496, tmp898,
	bl	BsSkip	@
	cmp	r7, sl	@ payloadSize, tmp898
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bgt	.L3387	@,
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3652:
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r2, [fp, #-60]	@, %sfp
	cmp	r9, #0	@ ret.8498,
	add	r0, r2, r7	@,, byte_tmp.8499
	str	r0, [fp, #-60]	@, %sfp
	ble	.L3391	@,
	ldrb	r3, [fp, #-45]	@ zero_extendqisi2	@ byte_tmp.8505, byte_tmp
	cmp	r3, #255	@ byte_tmp.8505,
	beq	.L3392	@,
	cmp	r3, #128	@ byte_tmp.8505,
	bne	.L3394	@,
	mov	r0, #0	@ D.44859,
	b	.L3282	@
.L3296:
	movw	r1, #:lower16:.LC141	@,
	mov	r3, r7	@, payloadSize
	movt	r1, #:upper16:.LC141	@,
	mov	r0, #20	@,
	mov	ip, #1	@,
	str	ip, [fp, #-68]	@, %sfp
	bl	dprint_vfmw	@
	b	.L3329	@
.L3685:
	movw	r0, #:lower16:11198024	@ tmp462,
	movt	r0, #:upper16:11198024	@ tmp462,
	movw	lr, #:lower16:2799506	@ tmp459,
	movt	lr, #:upper16:2799506	@ tmp459,
	ldr	r7, [r4, r0]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	sub	r3, r9, #1	@ tmp915, ret.8348,
	and	ip, r3, #1	@, tmp915,
	str	ip, [fp, #-60]	@, %sfp
	add	r1, r7, lr	@ tmp459, <variable>.TotalUsrDatNum, tmp459
	add	r2, r4, r1, asl #2	@, tmp466, pMvcCtx, tmp459,
	ldr	r0, [r2, #4]	@ tmp463, <variable>.pUsrDatArray
	str	r9, [r0, #1048]	@ ret.8348, <variable>.data_size
	ldr	r3, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r7, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp469, <variable>.BS.TotalPos,
	cmp	ip, r7, asl #3	@ tmp469, <variable>.BS.BsLen,
	bgt	.L3343	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r7, #1	@ i.8359,
	cmp	r9, r7	@ ret.8348, i.8359
	ble	.L3343	@,
	ldr	r1, [fp, #-60]	@, %sfp
	cmp	r1, #0	@,
	beq	.L3344	@,
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r7, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	lr, ip, #8	@ tmp1107, <variable>.BS.TotalPos,
	cmp	lr, r7, asl #3	@ tmp1107, <variable>.BS.BsLen,
	bgt	.L3343	@,
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	mov	r7, #2	@ i.8359,
	cmp	r9, r7	@ ret.8348, i.8359
	bgt	.L3344	@,
	b	.L3343	@
.L3697:
	bl	BsSkip	@
	ldr	r1, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	mov	r0, r8	@, D.44854
	add	r3, r1, #8	@ tmp1026, <variable>.BS.TotalPos,
	mov	r1, #8	@,
	cmp	r3, r2, asl #3	@ tmp1026, <variable>.BS.BsLen,
	bgt	.L3343	@,
	bl	BsSkip	@
	cmp	r9, r7	@ ret.8348, i.8359
	ble	.L3343	@,
.L3344:
	ldr	ip, [r4, r5]	@ <variable>.BS.TotalPos, <variable>.BS.TotalPos
	mov	r1, #8	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	r7, r7, #1	@ tmp918, i.8359,
	add	lr, ip, r1	@ tmp1018, <variable>.BS.TotalPos,
	mov	r0, r8	@, D.44854
	add	r7, r7, #1	@ i.8359, tmp918,
	cmp	lr, r2, asl #3	@ tmp1018, <variable>.BS.BsLen,
	ble	.L3697	@,
	b	.L3343	@
.L3650:
	rsb	r1, r9, r2	@, bitpos.8481, temp.8482
	str	r1, [fp, #-64]	@, %sfp
	cmp	r1, #0	@,
	add	r0, r1, #7	@ tmp756,,
	movge	r0, r1	@ temp.8584,
	mov	r2, r0, asr #3	@, temp.8584,
	str	r2, [fp, #-60]	@, %sfp
	cmp	r2, #0	@,
	ldrle	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	movle	r2, r2, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
	ble	.L3383	@,
	ldr	lr, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	add	ip, r3, #8	@ tmp762, prephitmp.8208,
	mov	r2, lr, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
	cmp	ip, r2	@ tmp762, prephitmp.8490
	bgt	.L3383	@,
	ldr	r3, [fp, #-60]	@, %sfp
	mov	r9, #0	@ i.8485,
	tst	r3, #1	@,
	beq	.L3698	@,
.L3641:
	str	r7, [fp, #-72]	@ payloadSize, %sfp
	b	.L3384	@
.L3385:
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8208, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp766, prephitmp.8208,
	cmp	r7, r2	@ tmp766, prephitmp.8490
	bgt	.L3646	@,
	bl	BsSkip	@
	ldr	r1, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8208, <variable>.BS.TotalPos
	mov	r2, r1, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
	add	r7, r3, #8	@ tmp1327, prephitmp.8208,
	cmp	r7, r2	@ tmp1327, prephitmp.8490
	bgt	.L3646	@,
.L3384:
	mov	r1, #8	@,
	mov	r0, r8	@, D.44854
	bl	BsSkip	@
	ldr	ip, [fp, #-60]	@, %sfp
	add	r7, r9, #1	@ tmp995, i.8485,
	mov	r0, r8	@, D.44854
	cmp	r7, ip	@ tmp995,
	add	r9, r7, #1	@ i.8485, tmp995,
	mov	r1, #8	@,
	blt	.L3385	@,
	ldr	r7, [fp, #-72]	@ payloadSize, %sfp
.L3590:
	ldr	r9, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8208, <variable>.BS.TotalPos
	mov	r2, r9, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
.L3383:
	ldr	r9, [fp, #-64]	@, %sfp
	mov	r0, r9, asr #31	@ tmp770,,
	mov	r1, r0, lsr #29	@ tmp771, tmp770,
	add	ip, r9, r1	@ tmp772,, tmp771
	and	lr, ip, #7	@ tmp773, tmp772,
	rsb	r1, r1, lr	@ tmp774, tmp771, tmp773
	add	r0, r3, r1	@ tmp775, prephitmp.8208, tmp774
	cmp	r0, r2	@ tmp775, prephitmp.8490
	bgt	.L3381	@,
	mov	r0, r8	@, D.44854
	bl	BsSkip	@
	b	.L3381	@
.L3698:
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r0, [fp, #-60]	@, %sfp
	mov	r9, #1	@ i.8485,
	cmp	r9, r0	@ i.8485,
	bge	.L3590	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8208, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8490, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1323, prephitmp.8208,
	cmp	lr, r2	@ tmp1323, prephitmp.8490
	ble	.L3641	@,
	b	.L3383	@
.L3687:
	mov	r0, r8	@, D.44854
	mov	r1, #8	@,
	bl	BsSkip	@
	ldr	r0, [fp, #-60]	@, %sfp
	mov	r9, #1	@ i.8314,
	cmp	r9, r0	@ i.8314,
	bge	.L3589	@,
	ldr	r2, [r4, r6]	@ <variable>.BS.BsLen, <variable>.BS.BsLen
	ldr	r3, [r4, r5]	@ prephitmp.8221, <variable>.BS.TotalPos
	mov	r2, r2, asl #3	@ prephitmp.8223, <variable>.BS.BsLen,
	add	lr, r3, #8	@ tmp1076, prephitmp.8221,
	cmp	lr, r2	@ tmp1076, prephitmp.8223
	ble	.L3617	@,
	b	.L3321	@
.L3683:
	movw	r9, #:lower16:11198024	@ tmp352,
	movt	r9, #:upper16:11198024	@ tmp352,
	strb	r2, [r1, #1064]	@ registered_flag, <variable>.IsRegistered
	movw	r3, #:lower16:2799506	@ tmp349,
	ldr	r2, [r4, r9]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movt	r3, #:upper16:2799506	@ tmp349,
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	add	lr, r2, r3	@ tmp349, <variable>.TotalUsrDatNum, tmp349
	movw	r2, #:lower16:.LC143	@,
	movt	r2, #:upper16:.LC143	@,
	add	r3, r4, lr, asl #2	@, tmp355, pMvcCtx, tmp349,
	ldr	lr, [r3, #4]	@ D.44910, <variable>.pUsrDatArray
	str	ip, [fp, #-80]	@,
	str	lr, [fp, #-84]	@,
	bl	mvc_u_v	@
	ldr	r2, [fp, #-84]	@,
	movw	ip, #:lower16:2799506	@ tmp359,
	movt	ip, #:upper16:2799506	@ tmp359,
	strb	r0, [r2, #1065]	@, <variable>.itu_t_t35_country_code
	ldr	r3, [r4, r9]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r1, r3, ip	@ tmp359, <variable>.TotalUsrDatNum, tmp359
	ldr	ip, [fp, #-80]	@,
	add	r2, r4, r1, asl #2	@, tmp365, pMvcCtx, tmp359,
	ldr	r3, [r2, #4]	@ temp.8335, <variable>.pUsrDatArray
	ldrb	r0, [r3, #1065]	@ zero_extendqisi2	@ <variable>.itu_t_t35_country_code, <variable>.itu_t_t35_country_code
	cmp	r0, #255	@ <variable>.itu_t_t35_country_code,
	beq	.L3337	@,
	mov	r9, #3	@ prephitmp.8217,
	mov	r0, #0	@,
	strb	r0, [r3, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	str	r9, [fp, #-60]	@ prephitmp.8217, %sfp
.L3338:
	movw	r0, #:lower16:11198024	@,
	movt	r0, #:upper16:11198024	@,
	str	r0, [fp, #-72]	@, %sfp
	movw	lr, #:lower16:2799506	@ tmp372,
	ldr	r3, [r4, r0]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movt	lr, #:upper16:2799506	@ tmp372,
	mov	r1, #16	@,
	mov	r0, r4	@, pMvcCtx
	add	lr, r3, lr	@ tmp372, <variable>.TotalUsrDatNum, tmp372
	movw	r2, #:lower16:.LC145	@,
	movt	r2, #:upper16:.LC145	@,
	add	r3, r4, lr, asl #2	@, tmp378, pMvcCtx, tmp372,
	ldr	lr, [r3, #4]	@, <variable>.pUsrDatArray
	str	ip, [fp, #-80]	@,
	str	lr, [fp, #-76]	@, %sfp
	bl	mvc_u_v	@
	ldr	r2, [fp, #-76]	@, %sfp
	movw	r3, #1068	@ tmp381,
	mov	r1, r9	@, prephitmp.8217
	strh	r0, [r2, r3]	@ movhi	@, <variable>.itu_t_t35_provider_code
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	ldr	ip, [fp, #-64]	@, %sfp
	cmp	ip, r9	@, prephitmp.8217
	ldr	ip, [fp, #-80]	@,
	beq	.L3339	@,
	ldr	r0, [fp, #-72]	@, %sfp
	movw	lr, #:lower16:2799506	@ tmp382,
	movt	lr, #:upper16:2799506	@ tmp382,
	ldr	r3, [r4, r0]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r1, r3, lr	@ tmp382, <variable>.TotalUsrDatNum, tmp382
	add	r2, r4, r1, asl #2	@, tmp388, pMvcCtx, tmp382,
	ldr	r1, [r2, #4]	@ prephitmp.8216, <variable>.pUsrDatArray
	b	.L3340	@
.L3686:
	rsb	r1, ip, r7	@, D.44913, payloadSize
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PassBytes	@
	b	.L3345	@
.L3688:
	mov	r0, r8	@, D.44854
	bl	BsSkip	@
	b	.L3319	@
.L3663:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3693:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3677:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3657:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3653:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3659:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3661:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3655:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3669:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3667:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3665:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3689:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3691:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3695:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3671:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3673:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3675:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3681:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3679:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3680:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3672:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3674:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3676:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3682:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3666:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3690:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3692:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3696:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3662:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3656:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3670:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3668:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3678:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3658:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3654:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3660:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3646:
	ldr	r7, [fp, #-72]	@ payloadSize, %sfp
	b	.L3383	@
.L3642:
	ldr	r7, [fp, #-72]	@ payloadSize, %sfp
	b	.L3321	@
.L3664:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3694:
	ldr	sl, [fp, #-60]	@ tmp802, %sfp
	b	.L3316	@
.L3339:
	ldr	r2, [fp, #-72]	@, %sfp
	movw	r0, #:lower16:2799506	@ tmp390,
	movt	r0, #:upper16:2799506	@ tmp390,
	ldr	r9, [r4, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	mov	ip, #1056	@ tmp399,
	ldr	r3, [r4, r2]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r2, #:lower16:2799506	@ tmp402,
	movt	r2, #:upper16:2799506	@ tmp402,
	add	r1, r3, r0	@ tmp390, <variable>.TotalUsrDatNum, tmp390
	mov	r3, r2	@ tmp412, tmp402
	add	r7, r4, r1, asl #2	@, tmp397, pMvcCtx, tmp390,
	ldrd	r0, [r9, #56]	@, <variable>.pstExtraData,
	movw	r9, #:lower16:g_event_report	@ tmp423,
	movt	r9, #:upper16:g_event_report	@ tmp423,
	ldr	lr, [r7, #4]	@ tmp394, <variable>.pUsrDatArray
	movw	r7, #:lower16:11199480	@ tmp421,
	movt	r7, #:upper16:11199480	@ tmp421,
	strd	r0, [lr, ip]	@, tmp394, tmp399
	ldr	r1, [fp, #-72]	@, %sfp
	ldr	lr, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	add	r2, lr, r2	@ tmp402, <variable>.TotalUsrDatNum, tmp402
	mov	lr, #8	@ tmp411,
	add	ip, r4, r2, asl #2	@, tmp409, pMvcCtx, tmp402,
	ldr	r2, [ip, #4]	@ tmp406, <variable>.pUsrDatArray
	str	lr, [r2, #1036]	@ tmp411, <variable>.from
	ldr	ip, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	ldr	r2, [r4, r7]	@ <variable>.SeqCnt, <variable>.SeqCnt
	add	r3, ip, r3	@ tmp412, <variable>.TotalUsrDatNum, tmp412
	add	lr, r4, r3, asl #2	@, tmp419, pMvcCtx, tmp412,
	ldr	ip, [lr, #4]	@ tmp416, <variable>.pUsrDatArray
	str	r2, [ip, #1040]	@ <variable>.SeqCnt, <variable>.seq_cnt
	ldr	r3, [r9, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3316	@,
	ldr	r2, [r4, r1]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r1, #:lower16:2799506	@ tmp425,
	movt	r1, #:upper16:2799506	@ tmp425,
	movw	r0, #:lower16:11199520	@ tmp435,
	add	ip, r2, r1	@ tmp425, <variable>.TotalUsrDatNum, tmp425
	movt	r0, #:upper16:11199520	@ tmp435,
	sub	r2, fp, #44	@ tmp436,,
	mov	r1, #6	@,
	add	lr, r4, ip, asl #2	@, tmp431, pMvcCtx, tmp425,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	ldr	ip, [lr, #4]	@ tmp433, <variable>.pUsrDatArray
	str	ip, [r2, #-8]!	@ tmp433, para
	blx	r3	@ g_event_report
	b	.L3316	@
.L3337:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC144	@,
	movt	r2, #:upper16:.LC144	@,
	str	ip, [fp, #-80]	@,
	mov	r9, #4	@ prephitmp.8217,
	str	r3, [fp, #-84]	@,
	bl	mvc_u_v	@
	ldr	r1, [fp, #-84]	@,
	str	r9, [fp, #-60]	@ prephitmp.8217, %sfp
	strb	r0, [r1, #1066]	@, <variable>.itu_t_t35_country_code_extension_byte
	ldr	ip, [fp, #-80]	@,
	b	.L3338	@
.L3684:
	movw	r5, #:lower16:11198024	@ tmp444,
	movt	r5, #:upper16:11198024	@ tmp444,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC146	@,
	movt	r1, #:upper16:.LC146	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r0, #:lower16:2799506	@ tmp441,
	movt	r0, #:upper16:2799506	@ tmp441,
	add	r3, r2, r0	@ tmp441, <variable>.TotalUsrDatNum, tmp441
	movw	r1, #:lower16:11199520	@ tmp440,
	movt	r1, #:upper16:11199520	@ tmp440,
	add	ip, r4, r3, asl #2	@, tmp447, pMvcCtx, tmp441,
	ldr	r0, [r4, r1]	@, <variable>.ChanID
	ldr	r1, [ip, #4]	@, <variable>.pUsrDatArray
	bl	FreeUsdByDec	@
	ldr	r2, [r4, r5]	@ <variable>.TotalUsrDatNum, <variable>.TotalUsrDatNum
	movw	r0, #:lower16:2799506	@ tmp449,
	movt	r0, #:upper16:2799506	@ tmp449,
	add	r3, r2, r0	@ tmp449, <variable>.TotalUsrDatNum, tmp449
	mov	ip, #0	@ tmp457,
	mvn	r0, #0	@ D.44859,
	add	r1, r4, r3, asl #2	@, tmp455, pMvcCtx, tmp449,
	str	ip, [r1, #4]	@ tmp457, <variable>.pUsrDatArray
	b	.L3282	@
.L3330:
	mvn	r0, #0	@ D.44859,
	b	.L3282	@
	.fnend
	.size	MVC_DecSEI, .-MVC_DecSEI
	.align	2
	.global	MVC_ProcessSUBSPSMvcVuiExt
	.type	MVC_ProcessSUBSPSMvcVuiExt, %function
MVC_ProcessSUBSPSMvcVuiExt:
	.fnstart
.LFB1645:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	str	r1, [fp, #-64]	@ pSubsps, %sfp
	movw	r1, #:lower16:.LC164	@,
	movt	r1, #:upper16:.LC164	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	ldr	r2, [fp, #-64]	@, %sfp
	movw	r3, #:lower16:278640	@ tmp194,
	movt	r3, #:upper16:278640	@ tmp194,
	adds	r1, r0, #1	@, D.44353,
	str	r1, [fp, #-80]	@, %sfp
	str	r0, [r2, r3]	@ D.44353, <variable>.mvcvui_subseq_parameters.vui_mvc_num_ops_minus1
	beq	.L3700	@,
	movw	r3, #:lower16:316788	@,
	movw	ip, #:lower16:296564	@,
	movt	r3, #:upper16:316788	@,
	movt	ip, #:upper16:296564	@,
	movw	r6, #:lower16:317080	@ ivtmp.8649,
	movw	r5, #:lower16:296856	@ ivtmp.8656,
	movt	r6, #:upper16:317080	@ ivtmp.8649,
	movt	r5, #:upper16:296856	@ ivtmp.8656,
	add	lr, r2, r3	@,,
	add	r9, r2, ip	@,,
	add	r6, r2, r6	@ ivtmp.8649,, ivtmp.8649
	add	r5, r2, r5	@ ivtmp.8656,, ivtmp.8656
	movw	r0, #:lower16:11199460	@,
	mov	r2, #0	@,
	movt	r0, #:upper16:11199460	@,
	str	lr, [fp, #-60]	@, %sfp
	str	r9, [fp, #-56]	@, %sfp
	str	r2, [fp, #-72]	@, %sfp
	str	r0, [fp, #-84]	@, %sfp
	str	r2, [fp, #-68]	@, %sfp
	str	r2, [fp, #-52]	@, %sfp
.L3715:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC165	@,
	movt	r2, #:upper16:.LC165	@,
	bl	mvc_u_v	@
	ldr	r1, [fp, #-64]	@, %sfp
	ldr	r2, [fp, #-68]	@, %sfp
	add	r3, r1, r2	@,,
	movw	r1, #:lower16:.LC166	@,
	add	ip, r3, #278528	@ tmp200,,
	str	r3, [fp, #-48]	@, %sfp
	add	r9, ip, #116	@ tmp200, tmp200,
	movt	r1, #:upper16:.LC166	@,
	str	r0, [r9, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	mov	r3, r0	@ D.44359,
	ldr	r0, [fp, #-48]	@, %sfp
	adds	r9, r3, #1	@ num_target_output_views, D.44359,
	add	r2, r0, #278528	@ tmp203,,
	add	r1, r2, #372	@ tmp203, tmp203,
	str	r3, [r1, #0]	@ D.44359, <variable>.mvcvui_subseq_parameters.vui_mvc_num_target_output_views_minus1
	beq	.L3701	@,
	ldr	r0, [fp, #-52]	@, %sfp
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	and	r8, r3, #1	@, D.44359,
	ldr	sl, [fp, #-64]	@, %sfp
	mov	ip, r0, asl #8	@ tmp206,,
	mov	r0, r4	@, pMvcCtx
	add	lr, ip, #278528	@ tmp207, tmp206,
	str	r8, [fp, #-76]	@, %sfp
	add	r7, lr, #624	@ tmp207, tmp207,
	bl	mvc_ue_v	@
	add	r7, sl, r7	@ tmp209,, tmp207
	cmp	r9, #1	@ num_target_output_views,
	add	r3, r7, #4	@ ivtmp.8630, tmp209,
	mov	sl, #1	@ j,
	add	r8, r3, #4	@ ivtmp.8630, ivtmp.8630,
	str	r0, [r7, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3701	@,
	ldr	r0, [fp, #-76]	@, %sfp
	cmp	r0, #0	@,
	beq	.L3702	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	str	r3, [fp, #-88]	@,
	bl	mvc_ue_v	@
	ldr	r2, [fp, #-88]	@,
	mov	sl, #2	@ j,
	cmp	r9, sl	@ num_target_output_views, j
	add	r8, r8, #4	@ ivtmp.8630, ivtmp.8630,
	str	r0, [r2, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	bls	.L3701	@,
.L3702:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	mov	r7, r8	@ tmp345, ivtmp.8630
	bl	mvc_ue_v	@
	add	r3, sl, #1	@ tmp344, j,
	movw	r1, #:lower16:.LC167	@,
	movt	r1, #:upper16:.LC167	@,
	add	sl, r3, #1	@ j, tmp344,
	str	r0, [r7], #4	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	r9, sl	@ num_target_output_views, j
	str	r0, [r8, #4]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_view_id
	add	r8, r7, #4	@ ivtmp.8630, tmp345,
	bhi	.L3702	@,
.L3701:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC168	@,
	movt	r1, #:upper16:.LC168	@,
	bl	mvc_u_1	@
	ldr	ip, [fp, #-48]	@, %sfp
	add	r2, ip, #294912	@ tmp212,,
	add	r1, r2, #628	@ tmp212, tmp212,
	cmp	r0, #0	@ D.44363,
	str	r0, [r1, #0]	@ D.44363, <variable>.mvcvui_subseq_parameters.vui_mvc_timing_info_present_flag
	bne	.L3728	@,
.L3703:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC172	@,
	movt	r1, #:upper16:.LC172	@,
	bl	mvc_u_1	@
	ldr	r2, [fp, #-56]	@, %sfp
	cmp	r0, #0	@ D.44372,
	str	r0, [r2, #0]	@ D.44372, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	beq	.L3704	@,
	ldr	r3, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	lr, [fp, #-72]	@, %sfp
	movw	r1, #:lower16:.LC173	@,
	movt	r1, #:upper16:.LC173	@,
	add	r9, r3, lr	@ D.54611,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC174	@,
	movt	r2, #:upper16:.LC174	@,
	str	r0, [r5, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:296852	@ tmp226,
	movt	r2, #:upper16:296852	@ tmp226,
	mov	r1, #4	@,
	add	ip, r9, r2	@ tmp226, D.54611, tmp226
	movw	r2, #:lower16:.LC175	@,
	movt	r2, #:upper16:.LC175	@,
	strb	r0, [ip, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r3, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r1, #:lower16:296853	@ tmp230,
	movt	r1, #:upper16:296853	@ tmp230,
	add	ip, r9, r1	@ tmp230, D.54611, tmp230
	cmp	r3, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [ip, #0]	@, <variable>.cpb_size_scale
	bhi	.L3710	@,
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r8, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3710	@,
	ldr	r1, [fp, #-52]	@, %sfp
	mov	ip, #312	@ tmp238,
	ldr	r2, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:296820	@ ivtmp.8624,
	movt	r7, #:upper16:296820	@ ivtmp.8624,
	mla	sl, ip, r1, r2	@ tmp241, tmp238,,
	add	r7, sl, r7	@ ivtmp.8624, tmp241, ivtmp.8624
	mov	sl, r7	@ ivtmp.8626, ivtmp.8624
.L3708:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC178	@,
	movt	r1, #:upper16:.LC178	@,
	str	r0, [r7, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC179	@,
	movt	r1, #:upper16:.LC179	@,
	str	r0, [r7, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r3, [r5, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r7, r7, #4	@ ivtmp.8624, ivtmp.8624,
	cmp	r3, r8	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [sl], #1	@, <variable>.cbr_flag
	bcs	.L3708	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC180	@,
	movt	r2, #:upper16:.LC180	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:297116	@ tmp253,
	movt	r2, #:upper16:297116	@ tmp253,
	mov	r1, #5	@,
	add	r3, r9, r2	@ tmp253, D.54611, tmp253
	movw	r2, #:lower16:.LC181	@,
	movt	r2, #:upper16:.LC181	@,
	str	r0, [r3, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, r9, #294912	@ tmp256, D.54611,
	add	ip, r1, #2208	@ tmp256, tmp256,
	movw	r2, #:lower16:.LC182	@,
	mov	r1, #5	@,
	movt	r2, #:upper16:.LC182	@,
	str	r0, [ip, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:297124	@ tmp259,
	movt	r2, #:upper16:297124	@ tmp259,
	mov	r1, #5	@,
	add	r3, r9, r2	@ tmp259, D.54611, tmp259
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	str	r0, [r3, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:297128	@ tmp262,
	movt	r1, #:upper16:297128	@ tmp262,
	add	ip, r9, r1	@ tmp262, D.54611, tmp262
	str	r0, [ip, #0]	@, <variable>.time_offset_length
.L3704:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC184	@,
	movt	r1, #:upper16:.LC184	@,
	bl	mvc_u_1	@
	ldr	ip, [fp, #-60]	@, %sfp
	cmp	r0, #0	@ D.44403,
	str	r0, [ip, #0]	@ D.44403, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	bne	.L3729	@,
.L3709:
	ldr	r0, [fp, #-56]	@, %sfp
	ldr	lr, [r0, #0]	@ tmp305, <variable>.mvcvui_subseq_parameters.vui_mvc_nal_hrd_parameters_present_flag
	cmp	lr, #0	@ tmp305,
	bne	.L3713	@,
	ldr	r1, [fp, #-60]	@, %sfp
	ldr	ip, [r1, #0]	@ tmp306, <variable>.mvcvui_subseq_parameters.vui_mvc_vcl_hrd_parameters_present_flag
	cmp	ip, #0	@ tmp306,
	beq	.L3714	@,
.L3713:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC185	@,
	movt	r1, #:upper16:.LC185	@,
	bl	mvc_u_1	@
	ldr	r2, [fp, #-48]	@, %sfp
	movw	ip, #:lower16:337012	@ tmp308,
	movt	ip, #:upper16:337012	@ tmp308,
	add	r3, r2, ip	@ tmp308,, tmp308
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_low_delay_hrd_flag
.L3714:
	ldr	r3, [fp, #-52]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC186	@,
	movt	r1, #:upper16:.LC186	@,
	add	lr, r3, #1	@,,
	str	lr, [fp, #-52]	@, %sfp
	bl	mvc_u_1	@
	ldr	r1, [fp, #-80]	@, %sfp
	ldr	ip, [fp, #-52]	@, %sfp
	movw	r3, #:lower16:337268	@ tmp311,
	ldr	r2, [fp, #-48]	@, %sfp
	movt	r3, #:upper16:337268	@ tmp311,
	cmp	r1, ip	@,
	ldr	ip, [fp, #-68]	@, %sfp
	add	r3, r2, r3	@ tmp311,, tmp311
	ldr	r2, [fp, #-60]	@, %sfp
	add	r1, ip, #4	@,,
	str	r1, [fp, #-68]	@, %sfp
	add	ip, r2, #4	@,,
	ldr	r1, [fp, #-56]	@, %sfp
	str	ip, [fp, #-60]	@, %sfp
	add	r6, r6, #312	@ ivtmp.8649, ivtmp.8649,
	ldr	ip, [fp, #-72]	@, %sfp
	add	r2, r1, #4	@,,
	add	r5, r5, #312	@ ivtmp.8656, ivtmp.8656,
	str	r2, [fp, #-56]	@, %sfp
	add	r1, ip, #312	@,,
	str	r1, [fp, #-72]	@, %sfp
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_pic_struct_present_flag
	bhi	.L3715	@,
.L3700:
	mov	r0, #0	@ D.44389,
	b	.L3707	@
.L3728:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC169	@,
	movt	r2, #:upper16:.LC169	@,
	bl	mvc_u_v	@
	ldr	r3, [fp, #-48]	@, %sfp
	movw	r2, #:lower16:.LC170	@,
	movt	r2, #:upper16:.LC170	@,
	add	r1, r3, #294912	@ tmp215,,
	add	ip, r1, #884	@ tmp215, tmp215,
	mov	r1, #32	@,
	str	r0, [ip, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r2, [fp, #-48]	@, %sfp
	movw	r3, #:lower16:296052	@ tmp218,
	movt	r3, #:upper16:296052	@ tmp218,
	add	ip, r2, r3	@ tmp218,, tmp218
	movw	r1, #:lower16:.LC171	@,
	movt	r1, #:upper16:.LC171	@,
	str	r0, [ip, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r1, [fp, #-48]	@, %sfp
	movw	r2, #:lower16:296308	@ tmp221,
	movt	r2, #:upper16:296308	@ tmp221,
	add	r3, r1, r2	@ tmp221,, tmp221
	str	r0, [r3, #0]	@, <variable>.mvcvui_subseq_parameters.vui_mvc_fixed_frame_rate_flag
	b	.L3703	@
.L3729:
	ldr	lr, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [fp, #-72]	@, %sfp
	movw	r1, #:lower16:.LC173	@,
	movt	r1, #:upper16:.LC173	@,
	add	r9, lr, r2	@ D.54599,,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC174	@,
	movt	r2, #:upper16:.LC174	@,
	str	r0, [r6, #0]	@, <variable>.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r3, #:lower16:317076	@ tmp267,
	movt	r3, #:upper16:317076	@ tmp267,
	mov	r1, #4	@,
	add	ip, r9, r3	@ tmp267, D.54599, tmp267
	movw	r2, #:lower16:.LC175	@,
	movt	r2, #:upper16:.LC175	@,
	strb	r0, [ip, #0]	@, <variable>.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r2, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	movw	r3, #:lower16:317077	@ tmp271,
	movt	r3, #:upper16:317077	@ tmp271,
	add	r1, r9, r3	@ tmp271, D.54599, tmp271
	cmp	r2, #31	@ <variable>.cpb_cnt_minus1,
	strb	r0, [r1, #0]	@, <variable>.cpb_size_scale
	bhi	.L3710	@,
	ldr	r0, [fp, #-84]	@, %sfp
	ldr	r8, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3710	@,
	ldr	r3, [fp, #-52]	@, %sfp
	mov	ip, #312	@ tmp279,
	ldr	r1, [fp, #-64]	@, %sfp
	movw	r7, #:lower16:317044	@ ivtmp.8616,
	movt	r7, #:upper16:317044	@ ivtmp.8616,
	mla	sl, ip, r3, r1	@ tmp282, tmp279,,
	add	r7, sl, r7	@ ivtmp.8616, tmp282, ivtmp.8616
	mov	sl, r7	@ ivtmp.8618, ivtmp.8616
.L3712:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC177	@,
	movt	r1, #:upper16:.LC177	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC178	@,
	movt	r1, #:upper16:.LC178	@,
	str	r0, [r7, #40]	@, <variable>.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC179	@,
	movt	r1, #:upper16:.LC179	@,
	str	r0, [r7, #168]	@, <variable>.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r2, [r6, #0]	@ <variable>.cpb_cnt_minus1, <variable>.cpb_cnt_minus1
	add	r7, r7, #4	@ ivtmp.8616, ivtmp.8616,
	cmp	r2, r8	@ <variable>.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [sl], #1	@, <variable>.cbr_flag
	bcs	.L3712	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC180	@,
	movt	r2, #:upper16:.LC180	@,
	bl	mvc_u_v	@
	movw	r2, #:lower16:317340	@ tmp294,
	movt	r2, #:upper16:317340	@ tmp294,
	mov	r1, #5	@,
	add	r3, r9, r2	@ tmp294, D.54599, tmp294
	movw	r2, #:lower16:.LC181	@,
	movt	r2, #:upper16:.LC181	@,
	str	r0, [r3, #0]	@, <variable>.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	add	r1, r9, #315392	@ tmp297, D.54599,
	add	ip, r1, #1952	@ tmp297, tmp297,
	movw	r2, #:lower16:.LC182	@,
	mov	r1, #5	@,
	movt	r2, #:upper16:.LC182	@,
	str	r0, [ip, #0]	@, <variable>.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r2, #:lower16:317348	@ tmp300,
	movt	r2, #:upper16:317348	@ tmp300,
	mov	r1, #5	@,
	add	r3, r9, r2	@ tmp300, D.54599, tmp300
	movw	r2, #:lower16:.LC183	@,
	movt	r2, #:upper16:.LC183	@,
	str	r0, [r3, #0]	@, <variable>.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:317352	@ tmp303,
	movt	r1, #:upper16:317352	@ tmp303,
	add	ip, r9, r1	@ tmp303, D.54599, tmp303
	str	r0, [ip, #0]	@, <variable>.time_offset_length
	b	.L3709	@
.L3710:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44389,
.L3707:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
	.fnend
	.size	MVC_ProcessSUBSPSMvcVuiExt, .-MVC_ProcessSUBSPSMvcVuiExt
	.align	2
	.global	MVC_ProcessSUBSPSMvcExt
	.type	MVC_ProcessSUBSPSMvcExt, %function
MVC_ProcessSUBSPSMvcExt:
	.fnstart
.LFB1644:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pSubsps, pSubsps
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3788	@,
	movw	r1, #:lower16:.LC187	@,
	movt	r1, #:upper16:.LC187	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.44258,
	str	r0, [r5, #3996]	@ D.44258, <variable>.num_views_minus1
	bhi	.L3733	@,
	movw	r3, #:lower16:11199460	@ tmp183,
	movt	r3, #:upper16:11199460	@ tmp183,
	ldr	r7, [r4, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	addeq	r6, r5, #4000	@ tmp297, pSubsps,
	moveq	r8, r6	@ ivtmp.8748, tmp297
	bne	.L3733	@,
.L3735:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC189	@,
	movt	r1, #:upper16:.LC189	@,
	add	r7, r7, #1	@ i, i,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, r7	@ <variable>.num_views_minus1, i
	str	r0, [r8], #4	@, <variable>.view_id
	bcs	.L3735	@,
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	r2, #0	@ tmp189,
	str	r2, [r5, #4016]	@ tmp189, <variable>.num_anchor_refs
	str	r2, [r5, #4008]	@ tmp189, <variable>.num_anchor_refs
	beq	.L3736	@,
	movw	sl, #:lower16:11199460	@ tmp333,
	add	r6, r6, #12	@ ivtmp.8742, tmp297,
	movt	sl, #:upper16:11199460	@ tmp333,
	mov	r7, #1	@ i.8756,
	b	.L3745	@
.L3789:
	ldr	r8, [r4, sl]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3737	@,
	cmp	r0, #0	@ D.44268,
	addne	r9, r7, #1004	@ tmp199, i.8756,
	addne	r9, r9, #2	@ tmp199, tmp199,
	addne	r9, r5, r9, asl #2	@, ivtmp.8736, pSubsps, tmp199,
	beq	.L3739	@,
.L3740:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC192	@,
	movt	r1, #:upper16:.LC192	@,
	add	r8, r8, #1	@ j, j,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #0]	@ tmp203, <variable>.num_anchor_refs
	cmp	ip, r8	@ tmp203, j
	str	r0, [r9], #4	@, <variable>.anchor_ref
	bhi	.L3740	@,
.L3739:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC193	@,
	movt	r1, #:upper16:.LC193	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r3, #15	@ <variable>.num_views_minus1,
	movcc	r2, r3	@ tmp205, <variable>.num_views_minus1
	movcs	r2, #15	@ tmp205,
	cmp	r0, r2	@ D.44277, tmp205
	str	r0, [r6, #8]	@ D.44277, <variable>.num_anchor_refs
	bhi	.L3741	@,
	ldr	r9, [r4, sl]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r9, #0	@ <variable>.SeErrFlg,
	bne	.L3741	@,
	cmp	r0, #0	@ D.44277,
	addne	r8, r7, #1004	@ tmp209, i.8756,
	addne	r8, r8, #2	@ tmp209, tmp209,
	addne	r8, r5, r8, asl #2	@, ivtmp.8733, pSubsps, tmp209,
	beq	.L3743	@,
.L3744:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC195	@,
	movt	r1, #:upper16:.LC195	@,
	add	r9, r9, #1	@ j.8755, j.8755,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #8]	@ tmp213, <variable>.num_anchor_refs
	cmp	r3, r9	@ tmp213, j.8755
	str	r0, [r8, #8]	@, <variable>.anchor_ref
	add	r8, r8, #4	@ ivtmp.8733, ivtmp.8733,
	bhi	.L3744	@,
	ldr	r3, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
.L3743:
	add	r7, r7, #1	@ i.8756, i.8756,
	add	r6, r6, #4	@ ivtmp.8742, ivtmp.8742,
	cmp	r7, r3	@ i.8756, <variable>.num_views_minus1
	bhi	.L3736	@,
.L3745:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC190	@,
	movt	r1, #:upper16:.LC190	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp194,
	cmp	r0, r1	@ D.44268, tmp194
	str	r0, [r6, #0]	@ D.44268, <variable>.num_anchor_refs
	bls	.L3789	@,
.L3737:
	mov	r2, r0	@, D.44268
	movw	r1, #:lower16:.LC191	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC191	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
.L3732:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3741:
	mov	r2, r0	@, D.44277
	movw	r1, #:lower16:.LC194	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC194	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3736:
	cmp	r3, #0	@ <variable>.num_views_minus1,
	mov	lr, #0	@ tmp214,
	str	lr, [r5, #4048]	@ tmp214, <variable>.num_non_anchor_refs
	str	lr, [r5, #4040]	@ tmp214, <variable>.num_non_anchor_refs
	beq	.L3746	@,
	add	r6, r5, #4032	@ ivtmp.8725, pSubsps,
	movw	sl, #:lower16:11199460	@ tmp325,
	add	r6, r6, #12	@ ivtmp.8725, ivtmp.8725,
	movt	sl, #:upper16:11199460	@ tmp325,
	mov	r7, #1	@ i.8765,
	b	.L3755	@
.L3790:
	ldr	r8, [r4, sl]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	bne	.L3747	@,
	cmp	r0, #0	@ D.44284,
	addne	r9, r7, #1012	@ tmp224, i.8765,
	addne	r9, r9, #2	@ tmp224, tmp224,
	addne	r9, r5, r9, asl #2	@, ivtmp.8719, pSubsps, tmp224,
	beq	.L3749	@,
.L3750:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC198	@,
	movt	r1, #:upper16:.LC198	@,
	add	r8, r8, #1	@ j.8760, j.8760,
	bl	mvc_ue_v	@
	ldr	ip, [r6, #0]	@ tmp228, <variable>.num_non_anchor_refs
	cmp	ip, r8	@ tmp228, j.8760
	str	r0, [r9], #4	@, <variable>.non_anchor_ref
	bhi	.L3750	@,
.L3749:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC199	@,
	movt	r1, #:upper16:.LC199	@,
	bl	mvc_ue_v	@
	ldr	r3, [r5, #3996]	@ prephitmp.8681, <variable>.num_views_minus1
	cmp	r3, #15	@ prephitmp.8681,
	movcc	r2, r3	@ tmp230, prephitmp.8681
	movcs	r2, #15	@ tmp230,
	cmp	r0, r2	@ D.44291, tmp230
	str	r0, [r6, #8]	@ D.44291, <variable>.num_non_anchor_refs
	bhi	.L3751	@,
	ldr	r9, [r4, sl]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r9, #0	@ <variable>.SeErrFlg,
	bne	.L3751	@,
	cmp	r0, #0	@ D.44291,
	addne	r8, r7, #1012	@ tmp234, i.8765,
	addne	r8, r8, #2	@ tmp234, tmp234,
	addne	r8, r5, r8, asl #2	@, ivtmp.8716, pSubsps, tmp234,
	beq	.L3753	@,
.L3754:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC201	@,
	movt	r1, #:upper16:.LC201	@,
	add	r9, r9, #1	@ j.8764, j.8764,
	bl	mvc_ue_v	@
	ldr	r3, [r6, #8]	@ tmp238, <variable>.num_non_anchor_refs
	cmp	r3, r9	@ tmp238, j.8764
	str	r0, [r8, #8]	@, <variable>.non_anchor_ref
	add	r8, r8, #4	@ ivtmp.8716, ivtmp.8716,
	bhi	.L3754	@,
	ldr	r3, [r5, #3996]	@ prephitmp.8681, <variable>.num_views_minus1
.L3753:
	add	r7, r7, #1	@ i.8765, i.8765,
	add	r6, r6, #4	@ ivtmp.8725, ivtmp.8725,
	cmp	r7, r3	@ i.8765, prephitmp.8681
	bhi	.L3746	@,
.L3755:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC196	@,
	movt	r1, #:upper16:.LC196	@,
	bl	mvc_ue_v	@
	ldr	r1, [r5, #3996]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	cmp	r1, #15	@ <variable>.num_views_minus1,
	movcs	r1, #15	@ tmp219,
	cmp	r0, r1	@ D.44284, tmp219
	str	r0, [r6, #0]	@ D.44284, <variable>.num_non_anchor_refs
	bls	.L3790	@,
.L3747:
	mov	r2, r0	@, D.44284
	movw	r1, #:lower16:.LC197	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC197	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3733:
	mov	r2, r0	@, D.44258
	movw	r1, #:lower16:.LC188	@,
	movw	r0, #65534	@ tmp185,
	movt	r1, #:upper16:.LC188	@,
	str	r0, [r5, #4072]	@ tmp185, <variable>.num_level_values_signalled_minus1
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3751:
	mov	r2, r0	@, D.44291
	movw	r1, #:lower16:.LC200	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC200	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3746:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC202	@,
	movt	r1, #:upper16:.LC202	@,
	bl	mvc_ue_v	@
	add	r1, r0, #1	@, D.44298,
	str	r1, [fp, #-72]	@, %sfp
	cmp	r1, #16	@,
	str	r0, [r5, #4072]	@ D.44298, <variable>.num_level_values_signalled_minus1
	bhi	.L3756	@,
	movw	r0, #:lower16:11199460	@ tmp240,
	movt	r0, #:upper16:11199460	@ tmp240,
	ldr	r2, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3756	@,
	cmp	r1, #0	@,
	beq	.L3758	@,
	add	ip, r5, #4064	@, pSubsps,
	str	r2, [fp, #-64]	@ <variable>.SeErrFlg, %sfp
	add	r1, ip, #12	@,,
	str	r5, [fp, #-52]	@ pSubsps, %sfp
	str	r1, [fp, #-68]	@, %sfp
.L3769:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC204	@,
	movt	r2, #:upper16:.LC204	@,
	bl	mvc_u_v	@
	ldr	r3, [fp, #-68]	@, %sfp
	movw	r1, #:lower16:.LC205	@,
	movt	r1, #:upper16:.LC205	@,
	str	r0, [r3, #0]	@, <variable>.level_idc
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	r2, [fp, #-68]	@, %sfp
	add	r3, r0, #1	@, D.44306,
	str	r3, [fp, #-56]	@, %sfp
	cmp	r3, #64	@,
	str	r0, [r2, #64]	@ D.44306, <variable>.num_applicable_ops_minus1
	bhi	.L3759	@,
	movw	r0, #:lower16:11199460	@,
	movt	r0, #:upper16:11199460	@,
	ldr	r6, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r6, #0	@ <variable>.SeErrFlg,
	bne	.L3759	@,
	cmp	r3, #0	@,
	beq	.L3761	@,
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	ip, [fp, #-52]	@, %sfp
	add	r9, ip, lr, asl #8	@, tmp260,,,
	mov	r2, lr, asl #6	@,,
	add	r5, r9, #4160	@ ivtmp.8699, tmp260,
	str	r2, [fp, #-60]	@, %sfp
	add	r5, r5, #44	@ ivtmp.8699, ivtmp.8699,
.L3768:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC207	@,
	movt	r2, #:upper16:.LC207	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC208	@,
	movt	r1, #:upper16:.LC208	@,
	str	r0, [r5, #0]	@, <variable>.applicable_op_temporal_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	add	r3, r5, #4096	@ tmp263, ivtmp.8699,
	add	r9, r0, #1	@ applicable_op_num_target_views, D.44314,
	str	r0, [r3, #0]	@ D.44314, <variable>.applicable_op_num_target_views_minus1
	cmp	r9, #64	@ applicable_op_num_target_views,
	bhi	.L3762	@,
	movw	r1, #:lower16:11199460	@,
	movt	r1, #:upper16:11199460	@,
	ldr	r0, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3762	@,
	cmp	r9, #0	@ applicable_op_num_target_views,
	beq	.L3764	@,
	ldr	r0, [fp, #-60]	@, %sfp
	sub	r3, r9, #1	@ tmp339, applicable_op_num_target_views,
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	add	sl, r0, r6	@ tmp277,, j.8761
	mov	r0, r4	@, pMvcCtx
	and	ip, r3, #1	@, tmp339,
	ldr	r8, [fp, #-52]	@, %sfp
	mov	lr, sl, asl #8	@ tmp278, tmp277,
	str	ip, [fp, #-48]	@, %sfp
	add	r7, lr, #12352	@ tmp279, tmp278,
	bl	mvc_ue_v	@
	add	sl, r7, #40	@ tmp279, tmp279,
	mov	r7, #1	@ k,
	add	sl, r8, sl	@ tmp281,, tmp279
	cmp	r9, r7	@ applicable_op_num_target_views, k
	add	r3, sl, #4	@ ivtmp.8694, tmp281,
	add	r8, r3, #4	@ ivtmp.8694, ivtmp.8694,
	str	r0, [sl, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3764	@,
	ldr	r0, [fp, #-48]	@, %sfp
	cmp	r0, #0	@,
	beq	.L3765	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	str	r3, [fp, #-76]	@,
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-76]	@,
	mov	r7, #2	@ k,
	cmp	r9, r7	@ applicable_op_num_target_views, k
	add	r8, r8, #4	@ ivtmp.8694, ivtmp.8694,
	str	r0, [r1, #4]	@, <variable>.applicable_op_target_view_id
	bls	.L3764	@,
.L3765:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	mov	sl, r8	@ tmp343, ivtmp.8694
	bl	mvc_ue_v	@
	add	r2, r7, #1	@ tmp342, k,
	movw	r1, #:lower16:.LC210	@,
	movt	r1, #:upper16:.LC210	@,
	add	r7, r2, #1	@ k, tmp342,
	str	r0, [sl], #4	@, <variable>.applicable_op_target_view_id
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	cmp	r9, r7	@ applicable_op_num_target_views, k
	str	r0, [r8, #4]	@, <variable>.applicable_op_target_view_id
	add	r8, sl, #4	@ ivtmp.8694, tmp343,
	bhi	.L3765	@,
.L3764:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC211	@,
	movt	r1, #:upper16:.LC211	@,
	bl	mvc_ue_v	@
	movw	ip, #1023	@,
	add	r1, r5, #270336	@ tmp284, ivtmp.8699,
	cmp	r0, ip	@ D.44322,
	str	r0, [r1, #0]	@ D.44322, <variable>.applicable_op_num_views_minus1
	bhi	.L3766	@,
	movw	lr, #:lower16:11199460	@,
	movt	lr, #:upper16:11199460	@,
	ldr	r3, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3766	@,
	ldr	r0, [fp, #-56]	@, %sfp
	add	r6, r6, #1	@ j.8761, j.8761,
	add	r5, r5, #4	@ ivtmp.8699, ivtmp.8699,
	cmp	r0, r6	@, j.8761
	bhi	.L3768	@,
.L3761:
	ldr	lr, [fp, #-64]	@, %sfp
	ldr	r2, [fp, #-72]	@, %sfp
	add	r1, lr, #1	@,,
	ldr	r3, [fp, #-68]	@, %sfp
	cmp	r2, r1	@,
	str	r1, [fp, #-64]	@, %sfp
	add	ip, r3, #4	@,,
	str	ip, [fp, #-68]	@, %sfp
	bhi	.L3769	@,
.L3758:
	mov	r0, #0	@ D.44257,
	b	.L3732	@
.L3766:
	mov	r2, r0	@, D.44322
	movw	r1, #:lower16:.LC212	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC212	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3762:
	ldr	r1, [fp, #-64]	@, %sfp
	movw	ip, #65534	@ tmp274,
	ldr	r5, [fp, #-52]	@ pSubsps, %sfp
	mov	r2, r9	@, applicable_op_num_target_views
	add	lr, r6, r1, asl #6	@, tmp267, j.8761,,
	movw	r1, #:lower16:.LC209	@,
	add	r0, lr, #2064	@ tmp268, tmp267,
	movt	r1, #:upper16:.LC209	@,
	add	r3, r0, #10	@ tmp268, tmp268,
	mov	r0, #1	@,
	add	lr, r5, r3, asl #2	@, tmp272, pSubsps, tmp268,
	str	ip, [lr, #4]	@ tmp274,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3788:
	mov	r0, r5	@, pSubsps
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #10643	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3759:
	ldr	r1, [fp, #-64]	@, %sfp
	movw	ip, #65534	@ tmp255,
	ldr	r5, [fp, #-52]	@ pSubsps, %sfp
	add	r0, r1, #1024	@ tmp249,,
	ldr	r2, [fp, #-56]	@, %sfp
	add	r3, r0, #10	@ tmp249, tmp249,
	movw	r1, #:lower16:.LC206	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC206	@,
	add	lr, r5, r3, asl #2	@, tmp253, pSubsps, tmp249,
	str	ip, [lr, #4]	@ tmp255,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
.L3756:
	ldr	r2, [fp, #-72]	@, %sfp
	movw	lr, #65534	@ tmp242,
	mov	r0, #1	@,
	str	lr, [r5, #4072]	@ tmp242, <variable>.num_level_values_signalled_minus1
	movw	r1, #:lower16:.LC203	@,
	movt	r1, #:upper16:.LC203	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44257,
	b	.L3732	@
	.fnend
	.size	MVC_ProcessSUBSPSMvcExt, .-MVC_ProcessSUBSPSMvcExt
	.align	2
	.global	mvc_vui_parameters
	.type	mvc_vui_parameters, %function
mvc_vui_parameters:
	.fnstart
.LFB1637:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pVUI, pVUI
	movw	r1, #:lower16:.LC213	@,
	movt	r1, #:upper16:.LC213	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.43389,
	strb	r0, [r5, #0]	@ D.43389, <variable>.aspect_ratio_info_present_flag
	cmp	r0, #0	@ D.43389,
	streqb	r0, [r5, #15]	@ D.43389, <variable>.aspect_ratio_idc
	bne	.L3817	@,
.L3793:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC217	@,
	movt	r1, #:upper16:.LC217	@,
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.43404,
	strb	r2, [r5, #1]	@ D.43404, <variable>.overscan_info_present_flag
	cmp	r2, #0	@ D.43404,
	bne	.L3818	@,
.L3794:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC219	@,
	movt	r1, #:upper16:.LC219	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.43411,
	strb	r3, [r5, #3]	@ D.43411, <variable>.video_signal_type_present_flag
	cmp	r3, #0	@ D.43411,
	moveq	r3, #5	@ tmp229,
	streq	r3, [r5, #28]	@ tmp229, <variable>.video_format
	bne	.L3819	@,
.L3796:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC226	@,
	movt	r1, #:upper16:.LC226	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.43432,
	strb	r0, [r5, #6]	@ D.43432, <variable>.chroma_location_info_present_flag
	cmp	r0, #0	@ D.43432,
	bne	.L3820	@,
.L3797:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC229	@,
	movt	r1, #:upper16:.LC229	@,
	bl	mvc_u_1	@
	uxtb	r1, r0	@ D.43439,
	strb	r1, [r5, #8]	@ D.43439, <variable>.timing_info_present_flag
	cmp	r1, #0	@ D.43439,
	bne	.L3821	@,
.L3798:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC233	@,
	movt	r1, #:upper16:.LC233	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.43459,
	strb	r0, [r5, #7]	@ D.43459, <variable>.nal_hrd_parameters_present_flag
	cmp	r0, #0	@ D.43459,
	beq	.L3799	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC234	@,
	movt	r1, #:upper16:.LC234	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC235	@,
	movt	r2, #:upper16:.LC235	@,
	str	r0, [r5, #96]	@, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC236	@,
	movt	r2, #:upper16:.LC236	@,
	strb	r0, [r5, #92]	@, <variable>.nal_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r1, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	cmp	r1, #31	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #93]	@, <variable>.nal_hrd_parameters.cpb_size_scale
	bhi	.L3805	@,
	movw	lr, #:lower16:11199460	@ tmp254,
	movt	lr, #:upper16:11199460	@ tmp254,
	ldr	r8, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.8821, pVUI
	moveq	r7, r5	@ ivtmp.8810, pVUI
	bne	.L3805	@,
.L3803:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC237	@,
	movt	r1, #:upper16:.LC237	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC238	@,
	movt	r1, #:upper16:.LC238	@,
	str	r0, [r6, #100]	@, <variable>.nal_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC239	@,
	movt	r1, #:upper16:.LC239	@,
	str	r0, [r6, #228]	@, <variable>.nal_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r2, [r5, #96]	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, <variable>.nal_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.8821, ivtmp.8821,
	cmp	r2, r8	@ <variable>.nal_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #60]	@, <variable>.nal_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.8810, ivtmp.8810,
	bcs	.L3803	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC240	@,
	movt	r2, #:upper16:.LC240	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC241	@,
	movt	r2, #:upper16:.LC241	@,
	str	r0, [r5, #356]	@, <variable>.nal_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC242	@,
	movt	r2, #:upper16:.LC242	@,
	str	r0, [r5, #360]	@, <variable>.nal_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC243	@,
	movt	r2, #:upper16:.LC243	@,
	str	r0, [r5, #364]	@, <variable>.nal_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #368]	@, <variable>.nal_hrd_parameters.time_offset_length
.L3799:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC244	@,
	movt	r1, #:upper16:.LC244	@,
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.43489,
	strb	ip, [r5, #10]	@ D.43489, <variable>.vcl_hrd_parameters_present_flag
	cmp	ip, #0	@ D.43489,
	bne	.L3822	@,
.L3804:
	ldrb	lr, [r5, #7]	@ zero_extendqisi2	@ <variable>.nal_hrd_parameters_present_flag, <variable>.nal_hrd_parameters_present_flag
	cmp	lr, #0	@ <variable>.nal_hrd_parameters_present_flag,
	bne	.L3808	@,
	ldrb	r2, [r5, #10]	@ zero_extendqisi2	@ <variable>.vcl_hrd_parameters_present_flag, <variable>.vcl_hrd_parameters_present_flag
	cmp	r2, #0	@ <variable>.vcl_hrd_parameters_present_flag,
	bne	.L3808	@,
.L3809:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC246	@,
	movt	r1, #:upper16:.LC246	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC247	@,
	movt	r1, #:upper16:.LC247	@,
	strb	r0, [r5, #11]	@, <variable>.pic_struct_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.43523,
	strb	ip, [r5, #12]	@ D.43523, <variable>.bitstream_restriction_flag
	cmp	ip, #0	@ D.43523,
	bne	.L3823	@,
	movw	lr, #:lower16:11199460	@ tmp304,
	movt	lr, #:upper16:11199460	@ tmp304,
	ldr	r0, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3811	@,
.L3812:
	mov	r0, #0	@ D.43474,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3808:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC245	@,
	movt	r1, #:upper16:.LC245	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #14]	@, <variable>.low_delay_hrd_flag
	b	.L3809	@
.L3823:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC248	@,
	movt	r1, #:upper16:.LC248	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC249	@,
	movt	r1, #:upper16:.LC249	@,
	strb	r0, [r5, #13]	@, <variable>.motion_vectors_over_pic_boundaries_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC250	@,
	movt	r1, #:upper16:.LC250	@,
	str	r0, [r5, #684]	@, <variable>.max_bytes_per_pic_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC251	@,
	movt	r1, #:upper16:.LC251	@,
	str	r0, [r5, #688]	@, <variable>.max_bits_per_mb_denom
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC252	@,
	movt	r1, #:upper16:.LC252	@,
	str	r0, [r5, #696]	@, <variable>.log2_max_mv_length_horizontal
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC253	@,
	movt	r1, #:upper16:.LC253	@,
	str	r0, [r5, #692]	@, <variable>.log2_max_mv_length_vertical
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC254	@,
	movt	r1, #:upper16:.LC254	@,
	str	r0, [r5, #700]	@, <variable>.num_reorder_frames
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11199460	@ tmp302,
	movt	r1, #:upper16:11199460	@ tmp302,
	str	r0, [r5, #704]	@, <variable>.max_dec_frame_buffering
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3812	@,
.L3811:
	mvn	r0, #0	@ D.43474,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L3817:
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC214	@,
	movt	r2, #:upper16:.LC214	@,
	bl	mvc_u_v	@
	uxtb	r1, r0	@ D.43394,
	strb	r1, [r5, #15]	@ D.43394, <variable>.aspect_ratio_idc
	cmp	r1, #255	@ D.43394,
	bne	.L3793	@,
	mov	r1, #16	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC215	@,
	movt	r2, #:upper16:.LC215	@,
	bl	mvc_u_v	@
	mov	r1, #16	@,
	movw	r2, #:lower16:.LC216	@,
	movt	r2, #:upper16:.LC216	@,
	str	r0, [r5, #16]	@, <variable>.sar_width
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #20]	@, <variable>.sar_height
	b	.L3793	@
.L3821:
	mov	r1, #32	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC230	@,
	movt	r2, #:upper16:.LC230	@,
	bl	mvc_u_v	@
	mov	r1, #32	@,
	movw	r2, #:lower16:.LC231	@,
	movt	r2, #:upper16:.LC231	@,
	str	r0, [r5, #52]	@, <variable>.num_units_in_tick
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC232	@,
	movt	r1, #:upper16:.LC232	@,
	str	r0, [r5, #56]	@, <variable>.time_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r2, r0	@ D.43448,
	strb	r2, [r5, #9]	@ D.43448, <variable>.fixed_frame_rate_flag
	cmp	r2, #1	@ D.43448,
	bne	.L3798	@,
	ldr	r1, [r5, #52]	@ D.43452, <variable>.num_units_in_tick
	cmp	r1, #0	@ D.43452,
	beq	.L3798	@,
	ldr	r0, [r5, #56]	@, <variable>.time_scale
	bl	__aeabi_uidiv	@
	movw	r3, #:lower16:11198020	@ tmp240,
	movt	r3, #:upper16:11198020	@ tmp240,
	mov	ip, r0, lsr #1	@ tmp245,,
	str	ip, [r4, r3]	@ tmp245, <variable>.frame_rate
	b	.L3798	@
.L3820:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC227	@,
	movt	r1, #:upper16:.LC227	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC228	@,
	movt	r1, #:upper16:.LC228	@,
	str	r0, [r5, #44]	@, <variable>.chroma_sample_loc_type_top_field
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	str	r0, [r5, #48]	@, <variable>.chroma_sample_loc_type_bottom_field
	b	.L3797	@
.L3819:
	mov	r1, #3	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC220	@,
	movt	r2, #:upper16:.LC220	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC221	@,
	movt	r1, #:upper16:.LC221	@,
	str	r0, [r5, #28]	@, <variable>.video_format
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC222	@,
	movt	r1, #:upper16:.LC222	@,
	strb	r0, [r5, #4]	@, <variable>.video_full_range_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	ip, r0	@ D.43420,
	strb	ip, [r5, #5]	@ D.43420, <variable>.colour_description_present_flag
	cmp	ip, #0	@ D.43420,
	beq	.L3796	@,
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC223	@,
	movt	r2, #:upper16:.LC223	@,
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC224	@,
	movt	r2, #:upper16:.LC224	@,
	str	r0, [r5, #32]	@, <variable>.colour_primaries
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC225	@,
	movt	r2, #:upper16:.LC225	@,
	str	r0, [r5, #36]	@, <variable>.transfer_characteristics
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #40]	@, <variable>.matrix_coefficients
	b	.L3796	@
.L3818:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC218	@,
	movt	r1, #:upper16:.LC218	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.overscan_appropriate_flag
	b	.L3794	@
.L3822:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC234	@,
	movt	r1, #:upper16:.LC234	@,
	bl	mvc_ue_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC235	@,
	movt	r2, #:upper16:.LC235	@,
	str	r0, [r5, #408]	@, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #4	@,
	movw	r2, #:lower16:.LC236	@,
	movt	r2, #:upper16:.LC236	@,
	strb	r0, [r5, #404]	@, <variable>.vcl_hrd_parameters.bit_rate_scale
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	ldr	r3, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	cmp	r3, #31	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1,
	strb	r0, [r5, #405]	@, <variable>.vcl_hrd_parameters.cpb_size_scale
	bhi	.L3805	@,
	movw	r0, #:lower16:11199460	@ tmp274,
	movt	r0, #:upper16:11199460	@ tmp274,
	ldr	r8, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r8, #0	@ <variable>.SeErrFlg,
	moveq	r6, r5	@ ivtmp.8802, pVUI
	moveq	r7, r5	@ ivtmp.8815, pVUI
	bne	.L3805	@,
.L3807:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC237	@,
	movt	r1, #:upper16:.LC237	@,
	add	r8, r8, #1	@ SchedSelIdx, SchedSelIdx,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC238	@,
	movt	r1, #:upper16:.LC238	@,
	str	r0, [r6, #412]	@, <variable>.vcl_hrd_parameters.bit_rate_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC239	@,
	movt	r1, #:upper16:.LC239	@,
	str	r0, [r6, #540]	@, <variable>.vcl_hrd_parameters.cpb_size_value_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldr	r1, [r5, #408]	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, <variable>.vcl_hrd_parameters.cpb_cnt_minus1
	add	r6, r6, #4	@ ivtmp.8802, ivtmp.8802,
	cmp	r1, r8	@ <variable>.vcl_hrd_parameters.cpb_cnt_minus1, SchedSelIdx
	strb	r0, [r7, #372]	@, <variable>.vcl_hrd_parameters.cbr_flag
	add	r7, r7, #1	@ ivtmp.8815, ivtmp.8815,
	bcs	.L3807	@,
	mov	r1, #5	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC240	@,
	movt	r2, #:upper16:.LC240	@,
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC241	@,
	movt	r2, #:upper16:.LC241	@,
	str	r0, [r5, #668]	@, <variable>.vcl_hrd_parameters.initial_cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC242	@,
	movt	r2, #:upper16:.LC242	@,
	str	r0, [r5, #672]	@, <variable>.vcl_hrd_parameters.cpb_removal_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #5	@,
	movw	r2, #:lower16:.LC243	@,
	movt	r2, #:upper16:.LC243	@,
	str	r0, [r5, #676]	@, <variable>.vcl_hrd_parameters.dpb_output_delay_length_minus1
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	str	r0, [r5, #680]	@, <variable>.vcl_hrd_parameters.time_offset_length
	b	.L3804	@
.L3805:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC176	@,
	movt	r1, #:upper16:.LC176	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43474,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	mvc_vui_parameters, .-mvc_vui_parameters
	.align	2
	.global	MVC_ProcessSPS
	.type	MVC_ProcessSPS, %function
MVC_ProcessSPS:
	.fnstart
.LFB1640:
	@ args = 0, pretend = 0, frame = 40
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #52
	sub	sp, sp, #52	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r5, r1, #0	@ pSPS, pSPS
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	beq	.L3904	@,
	ldr	r3, [r5, #736]	@ D.43807, <variable>.profile_idc
	cmp	r3, #100	@ D.43807,
	cmpne	r3, #110	@, D.43807,
	movne	r2, #0	@, tmp219
	moveq	r2, #1	@, tmp219
	beq	.L3827	@,
	cmp	r3, #122	@ D.43807,
	beq	.L3827	@,
	cmp	r3, #144	@ D.43807,
	beq	.L3827	@,
	cmp	r3, #118	@ D.43807,
	beq	.L3827	@,
	cmp	r3, #128	@ D.43807,
	strneb	r2, [r5, #27]	@ tmp219, <variable>.seq_scaling_matrix_present_flag
	movne	r3, #1	@ tmp387,
	strne	r3, [r5, #748]	@ tmp387, <variable>.chroma_format_idc
	bne	.L3837	@,
.L3827:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC255	@,
	movt	r1, #:upper16:.LC255	@,
	bl	mvc_ue_v	@
	cmp	r0, #1	@ D.43816,
	str	r0, [r5, #748]	@ D.43816, <variable>.chroma_format_idc
	bhi	.L3829	@,
	movw	r6, #:lower16:11199460	@ tmp221,
	movt	r6, #:upper16:11199460	@ tmp221,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3829	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC257	@,
	movt	r1, #:upper16:.LC257	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3831	@,
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3832	@,
.L3831:
	movw	r1, #:lower16:.LC258	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC258	@,
	bl	dprint_vfmw	@
.L3832:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC259	@,
	movt	r1, #:upper16:.LC259	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L3833	@,
	movw	r2, #:lower16:11199460	@ tmp229,
	movt	r2, #:upper16:11199460	@ tmp229,
	ldr	r1, [r4, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	beq	.L3834	@,
.L3833:
	movw	r1, #:lower16:.LC260	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC260	@,
	bl	dprint_vfmw	@
.L3834:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC261	@,
	movt	r1, #:upper16:.LC261	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	bne	.L3835	@,
	movw	lr, #:lower16:11199460	@ tmp233,
	movt	lr, #:upper16:11199460	@ tmp233,
	ldr	ip, [r4, lr]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3835	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC263	@,
	movt	r1, #:upper16:.LC263	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.43839,
	strb	r3, [r5, #27]	@ D.43839, <variable>.seq_scaling_matrix_present_flag
	cmp	r3, #1	@ D.43839,
	beq	.L3905	@,
.L3837:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC265	@,
	movt	r1, #:upper16:.LC265	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.43908,
	str	r0, [r5, #2896]	@ D.43908, <variable>.log2_max_frame_num_minus4
	bhi	.L3853	@,
	movw	r6, #:lower16:11199460	@ tmp391,
	movt	r6, #:upper16:11199460	@ tmp391,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3853	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC267	@,
	movt	r1, #:upper16:.LC267	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.43914,
	str	r0, [r5, #2900]	@ D.43914, <variable>.pic_order_cnt_type
	bhi	.L3855	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3855	@,
	cmp	r0, #0	@ D.43914,
	beq	.L3906	@,
	cmp	r0, #1	@ D.43914,
	beq	.L3907	@,
.L3859:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC277	@,
	movt	r1, #:upper16:.LC277	@,
	movw	r6, #:lower16:11199460	@ tmp423,
	bl	mvc_ue_v	@
	movt	r6, #:upper16:11199460	@ tmp423,
	str	r0, [r5, #3944]	@, <variable>.num_ref_frames
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	beq	.L3908	@,
.L3860:
	mvn	r0, #0	@ D.43803,
.L3826:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3906:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC269	@,
	movt	r1, #:upper16:.LC269	@,
	bl	mvc_ue_v	@
	cmp	r0, #12	@ D.43922,
	str	r0, [r5, #2904]	@ D.43922, <variable>.log2_max_pic_order_cnt_lsb_minus4
	bhi	.L3858	@,
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	beq	.L3859	@,
.L3858:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC270	@,
	movt	r1, #:upper16:.LC270	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3905:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	add	sl, r5, #752	@ D.43850, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2672	@ D.43853, pSPS,
	cmp	r0, #1	@ temp.8914,
	str	r0, [fp, #-84]	@ temp.8914, q4x4defaultflag
	strb	r0, [r5, #6]	@ temp.8914, <variable>.seq_scaling_list_present_flag
	beq	.L3838	@,
.L3900:
	movw	ip, #:lower16:.LANCHOR2	@ tmp246,
	movt	ip, #:upper16:.LANCHOR2	@ tmp246,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp246,,,,
	stmia	r6, {r0, r1, r2, r3}	@ D.43853,,,,
.L3839:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8918,
	str	r0, [fp, #-80]	@ temp.8918, q4x4defaultflag
	strb	r0, [r5, #7]	@ temp.8918, <variable>.seq_scaling_list_present_flag
	beq	.L3840	@,
	add	r7, r6, #16	@ tmp540, D.43853,
	mov	r1, r6	@, D.43853
	mov	r2, #16	@,
	mov	r0, r7	@, tmp540
	bl	memcpy	@
.L3841:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8926,
	str	r0, [fp, #-76]	@ temp.8926, q4x4defaultflag
	strb	r0, [r5, #8]	@ temp.8926, <variable>.seq_scaling_list_present_flag
	beq	.L3842	@,
	mov	r1, r7	@, tmp540
	add	r0, r6, #32	@, D.43853,
	mov	r2, #16	@,
	bl	memcpy	@
.L3843:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8935,
	str	r0, [fp, #-72]	@ temp.8935, q4x4defaultflag
	strb	r0, [r5, #9]	@ temp.8935, <variable>.seq_scaling_list_present_flag
	beq	.L3844	@,
	add	r7, r6, #48	@ tmp542, D.43853,
	ldr	r1, .L3916	@,
	mov	r2, #16	@,
	mov	r0, r7	@, tmp542
	bl	memcpy	@
.L3845:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ temp.8943,
	str	r0, [fp, #-68]	@ temp.8943, q4x4defaultflag
	strb	r0, [r5, #10]	@ temp.8943, <variable>.seq_scaling_list_present_flag
	beq	.L3846	@,
	add	r8, r6, #64	@ tmp544, D.43853,
	mov	r1, r7	@, tmp542
	mov	r2, #16	@,
	mov	r0, r8	@, tmp544
	bl	memcpy	@
.L3847:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.43844,
	str	r0, [fp, #-64]	@ D.43844, q4x4defaultflag
	strb	r0, [r5, #11]	@ D.43844, <variable>.seq_scaling_list_present_flag
	beq	.L3909	@,
	add	r0, r6, #80	@, D.43853,
	mov	r1, r8	@, tmp544
	mov	r2, #16	@,
	bl	memcpy	@
.L3849:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	add	r8, r5, #1136	@ D.43887, pSPS,
	bl	mvc_u_1	@
	add	r6, r5, #2768	@ D.43890, pSPS,
	cmp	r0, #1	@ temp.8952,
	str	r0, [fp, #-52]	@ temp.8952, q8x8defaultflag
	strb	r0, [r5, #12]	@ temp.8952, <variable>.seq_scaling_list_present_flag
	beq	.L3850	@,
	ldr	ip, .L3916+4	@ tmp356,
	mov	lr, r6	@ D.43890, D.43890
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp358,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.43890,,,,
	mov	r7, lr	@ D.43890, D.43890
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp549,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.43890,,,,
	mov	lr, r7	@ D.43890, D.43890
	ldmia	ip!, {r0, r1, r2, r3}	@ tmp551,,,,
	stmia	lr!, {r0, r1, r2, r3}	@ D.43890,,,,
	ldmia	ip, {r0, r1, r2, r3}	@ tmp551,,,,
	stmia	lr, {r0, r1, r2, r3}	@ D.43890,,,,
.L3851:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	cmp	r0, #1	@ D.43880,
	str	r0, [fp, #-48]	@ D.43880, q8x8defaultflag
	strb	r0, [r5, #13]	@ D.43880, <variable>.seq_scaling_list_present_flag
	beq	.L3910	@,
	add	r0, r6, #64	@, D.43890,
	ldr	r1, .L3916+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3837	@
.L3829:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC256	@,
	movt	r1, #:upper16:.LC256	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3853:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC266	@,
	movt	r1, #:upper16:.LC266	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3835:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC262	@,
	movt	r1, #:upper16:.LC262	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3907:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC271	@,
	movt	r1, #:upper16:.LC271	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #18]	@, <variable>.delta_pic_order_always_zero_flag
	ldr	ip, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	ip, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC272	@,
	movt	r1, #:upper16:.LC272	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2908]	@, <variable>.offset_for_non_ref_pic
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC273	@,
	movt	r1, #:upper16:.LC273	@,
	bl	mvc_se_v	@
	str	r0, [r5, #2912]	@, <variable>.offset_for_top_to_bottom_field
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC274	@,
	movt	r1, #:upper16:.LC274	@,
	bl	mvc_ue_v	@
	cmp	r0, #255	@ prephitmp.8848,
	mov	r3, r0	@ prephitmp.8848,
	str	r0, [r5, #2916]	@ prephitmp.8848, <variable>.num_ref_frames_in_pic_order_cnt_cycle
	bhi	.L3861	@,
	movw	r8, #:lower16:11199460	@ tmp413,
	movt	r8, #:upper16:11199460	@ tmp413,
	ldr	r7, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r7, #0	@ <variable>.SeErrFlg,
	addeq	r6, r5, #2912	@ ivtmp.8865, pSPS,
	addeq	r6, r6, #8	@ ivtmp.8865, ivtmp.8865,
	beq	.L3862	@,
	b	.L3861	@
.L3863:
	bl	mvc_se_v	@
	str	r0, [r6], #4	@, <variable>.offset_for_ref_frame
	ldr	r1, [r4, r8]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	ldr	r3, [r5, #2916]	@ prephitmp.8848, <variable>.num_ref_frames_in_pic_order_cnt_cycle
.L3862:
	cmp	r7, r3	@ i, prephitmp.8848
	movw	r1, #:lower16:.LC276	@,
	mov	r0, r4	@, pMvcCtx
	movt	r1, #:upper16:.LC276	@,
	add	r7, r7, #1	@ i, i,
	bcc	.L3863	@,
	movw	r0, #:lower16:11199460	@ tmp420,
	movt	r0, #:upper16:11199460	@ tmp420,
	ldr	lr, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	b	.L3859	@
.L3908:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC278	@,
	movt	r1, #:upper16:.LC278	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #19]	@, <variable>.gaps_in_frame_num_value_allowed_flag
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC279	@,
	movt	r1, #:upper16:.LC279	@,
	movw	r7, #509	@ tmp431,
	bl	mvc_ue_v	@
	sub	r3, r0, #1	@ tmp430, D.43959,
	mov	r2, r0	@ D.43959,
	cmp	r3, r7	@ tmp430, tmp431
	str	r0, [r5, #3948]	@ D.43959, <variable>.pic_width_in_mbs_minus1
	bhi	.L3864	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	beq	.L3865	@,
.L3864:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC280	@,
	movt	r1, #:upper16:.LC280	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3855:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC268	@,
	movt	r1, #:upper16:.LC268	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3910:
	add	r6, r6, #64	@ tmp543, D.43890,
	add	r1, r8, #256	@, D.43887,
	mov	r0, r4	@, pMvcCtx
	mov	r3, #64	@,
	mov	r2, r6	@, tmp543
	sub	lr, fp, #48	@ tmp371,,
	str	lr, [sp, #0]	@ tmp371,
	bl	MVC_Scaling_List	@
	ldr	r2, [fp, #-48]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r2, #1	@ q8x8defaultflag,
	bne	.L3837	@,
	mov	r0, r6	@, tmp543
	ldr	r1, .L3916+8	@,
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3837	@
.L3850:
	mov	r1, r8	@, D.43887
	mov	r0, r4	@, pMvcCtx
	mov	r2, r6	@, D.43890
	mov	r3, #64	@,
	sub	ip, fp, #52	@ tmp359,,
	str	ip, [sp, #0]	@ tmp359,
	bl	MVC_Scaling_List	@
	ldr	r1, [fp, #-52]	@ q8x8defaultflag, q8x8defaultflag
	cmp	r1, #1	@ q8x8defaultflag,
	bne	.L3851	@,
	ldr	lr, .L3916+4	@ tmp362,
	mov	ip, r6	@ D.43890, D.43890
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp364,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.43890,,,,
	mov	r7, ip	@ D.43890, D.43890
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp553,,,,
	stmia	r7!, {r0, r1, r2, r3}	@ D.43890,,,,
	mov	ip, r7	@ D.43890, D.43890
	ldmia	lr!, {r0, r1, r2, r3}	@ tmp555,,,,
	stmia	ip!, {r0, r1, r2, r3}	@ D.43890,,,,
	ldmia	lr, {r0, r1, r2, r3}	@ tmp555,,,,
	stmia	ip, {r0, r1, r2, r3}	@ D.43890,,,,
	b	.L3851	@
.L3909:
	add	r6, r6, #80	@ tmp545, D.43853,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #320	@, D.43850,
	mov	r3, #16	@,
	mov	r2, r6	@, tmp545
	sub	r8, fp, #64	@ tmp337,,
	str	r8, [sp, #0]	@ tmp337,
	bl	MVC_Scaling_List	@
	ldr	r0, [fp, #-64]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3849	@,
	mov	r0, r6	@, tmp545
	ldr	r1, .L3916	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3849	@
.L3846:
	add	r8, r6, #64	@ tmp544, D.43853,
	mov	r3, #16	@,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #256	@, D.43850,
	mov	r2, r8	@, tmp544
	sub	lr, fp, #68	@ tmp322,,
	str	lr, [sp, #0]	@ tmp322,
	bl	MVC_Scaling_List	@
	ldr	r3, [fp, #-68]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r3, #1	@ q4x4defaultflag,
	bne	.L3847	@,
	mov	r0, r8	@, tmp544
	ldr	r1, .L3916	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3847	@
.L3844:
	add	r7, r6, #48	@ tmp542, D.43853,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #192	@, D.43850,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp542
	sub	ip, fp, #72	@ tmp301,,
	str	ip, [sp, #0]	@ tmp301,
	bl	MVC_Scaling_List	@
	ldr	r2, [fp, #-72]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r2, #1	@ q4x4defaultflag,
	bne	.L3845	@,
	mov	r0, r7	@, tmp542
	ldr	r1, .L3916	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3845	@
.L3842:
	add	r7, r6, #32	@ tmp541, D.43853,
	add	r1, sl, #128	@, D.43850,
	mov	r0, r4	@, pMvcCtx
	mov	r3, #16	@,
	mov	r2, r7	@, tmp541
	sub	r8, fp, #76	@ tmp280,,
	str	r8, [sp, #0]	@ tmp280,
	bl	MVC_Scaling_List	@
	ldr	r1, [fp, #-76]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r1, #1	@ q4x4defaultflag,
	bne	.L3843	@,
	mov	r0, r7	@, tmp541
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r2, #16	@,
	movt	r1, #:upper16:.LANCHOR2	@,
	bl	memcpy	@
	b	.L3843	@
.L3840:
	add	r7, r6, #16	@ tmp540, D.43853,
	mov	r0, r4	@, pMvcCtx
	add	r1, sl, #64	@, D.43850,
	mov	r3, #16	@,
	mov	r2, r7	@, tmp540
	sub	lr, fp, #80	@ tmp260,,
	str	lr, [sp, #0]	@ tmp260,
	bl	MVC_Scaling_List	@
	ldr	r0, [fp, #-80]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r0, #1	@ q4x4defaultflag,
	bne	.L3841	@,
	movw	r1, #:lower16:.LANCHOR2	@,
	mov	r0, r7	@, tmp540
	movt	r1, #:upper16:.LANCHOR2	@,
	mov	r2, #16	@,
	bl	memcpy	@
	b	.L3841	@
.L3838:
	mov	r0, r4	@, pMvcCtx
	mov	r1, sl	@, D.43850
	mov	r2, r6	@, D.43853
	mov	r3, #16	@,
	sub	r8, fp, #84	@ tmp244,,
	str	r8, [sp, #0]	@ tmp244,
	bl	MVC_Scaling_List	@
	ldr	r7, [fp, #-84]	@ q4x4defaultflag, q4x4defaultflag
	cmp	r7, #1	@ q4x4defaultflag,
	bne	.L3839	@,
	b	.L3900	@
.L3904:
	mov	r0, r5	@, pSPS
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #10012	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3865:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC281	@,
	movt	r1, #:upper16:.LC281	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #3952]	@, <variable>.pic_height_in_map_units_minus1
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC282	@,
	movt	r1, #:upper16:.LC282	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.43970,
	strb	r0, [r5, #20]	@ D.43970, <variable>.frame_mbs_only_flag
	ldr	r2, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	cmp	r0, #0	@ D.43970,
	bne	.L3866	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC283	@,
	movt	r1, #:upper16:.LC283	@,
	bl	mvc_u_1	@
	ldr	ip, [r5, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	add	r3, ip, #1	@ prephitmp.8842, <variable>.pic_height_in_map_units_minus1,
	cmp	r3, #255	@ prephitmp.8842,
	strb	r0, [r5, #21]	@, <variable>.mb_adaptive_frame_field_flag
	bhi	.L3897	@,
	ldr	r8, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	r8, r8, #1	@ prephitmp.8896, <variable>.pic_width_in_mbs_minus1,
	cmp	r8, #3	@ prephitmp.8896,
	bls	.L3897	@,
	cmp	r3, #1	@ prephitmp.8842,
	movhi	sl, #2	@ temp,
	bls	.L3897	@,
.L3898:
	mul	r1, sl, r3	@ tmp448, temp, prephitmp.8842
	mov	r8, r8, asl #4	@ PicWidthInSmp, prephitmp.8896,
	mov	lr, #3	@ tmp451,
	mov	r7, r1, asl #4	@ PicHeightInSmp, tmp448,
	mul	r3, r8, r7	@ tmp449, PicWidthInSmp, PicHeightInSmp
	mov	r2, r3, lsr #1	@ tmp450, tmp449,
	mul	r1, lr, r2	@ pic_size, tmp451, tmp450
	cmp	r1, #100663296	@ pic_size,
	bhi	.L3911	@,
	ldr	r2, [r5, #740]	@ D.44004, <variable>.level_idc
	sub	r0, r2, #10	@ tmp453, D.44004,
	cmp	r0, #31	@ tmp453,
	ldrls	pc, [pc, r0, asl #2]	@ tmp453
	b	.L3870	@
.L3879:
	.word	.L3871
	.word	.L3872
	.word	.L3873
	.word	.L3873
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3873
	.word	.L3874
	.word	.L3875
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3875
	.word	.L3876
	.word	.L3877
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3870
	.word	.L3878
	.word	.L3878
.L3861:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC275	@,
	movt	r1, #:upper16:.LC275	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3877:
	mov	r0, #7864320	@ size,
.L3880:
	bl	__aeabi_uidiv	@
	movw	r1, #:lower16:.LC287	@,
	movt	r1, #:upper16:.LC287	@,
	cmp	r0, #16	@,
	movcc	r6, r0	@ size.8871,
	movcs	r6, #16	@ size.8871,
	mov	r0, #21	@,
	mov	r2, r6	@, size.8871
	bl	dprint_vfmw	@
	ldr	r2, [r5, #3944]	@ D.44011, <variable>.num_ref_frames
	cmp	r2, r6	@ D.44011, size.8871
	bhi	.L3881	@,
	movw	ip, #:lower16:11199460	@ tmp459,
	movt	ip, #:upper16:11199460	@ tmp459,
	ldr	r9, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r9, #0	@ <variable>.SeErrFlg,
	beq	.L3882	@,
.L3881:
	mov	r3, r6	@, size.8871
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC288	@,
	movt	r1, #:upper16:.LC288	@,
	bl	dprint_vfmw	@
	ldr	r3, [r5, #3944]	@ temp.8902, <variable>.num_ref_frames
	cmp	r3, #16	@ temp.8902,
	bhi	.L3901	@,
	cmp	r6, r3	@ size.8871, temp.8902
	movcc	r6, r3	@ size.8871, temp.8902
.L3901:
	str	r6, [r5, #3944]	@ size.8871, <variable>.num_ref_frames
.L3882:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC289	@,
	movt	r1, #:upper16:.LC289	@,
	movw	r9, #:lower16:11199460	@ tmp464,
	bl	mvc_u_1	@
	movt	r9, #:upper16:11199460	@ tmp464,
	strb	r0, [r5, #22]	@, <variable>.direct_8x8_inference_flag
	ldr	r2, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC290	@,
	movt	r1, #:upper16:.LC290	@,
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.44022,
	strb	r0, [r5, #23]	@ D.44022, <variable>.frame_cropping_flag
	ldr	r3, [r4, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	cmp	r0, #0	@ D.44022,
	bne	.L3912	@,
.L3884:
	mov	r3, r8, lsr #1	@ tmp496, PicWidthInSmp,
	mov	r0, r7, lsr #1	@ tmp497, PicHeightInSmp,
	str	r8, [r5, #3976]	@ PicWidthInSmp, <variable>.disp_width
	str	r3, [r5, #3984]	@ tmp496, <variable>.disp_center_x
	str	r0, [r5, #3988]	@ tmp497, <variable>.disp_center_y
	str	r7, [r5, #3980]	@ PicHeightInSmp, <variable>.disp_height
.L3886:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC295	@,
	movt	r1, #:upper16:.LC295	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:11199460	@ tmp500,
	movt	r1, #:upper16:11199460	@ tmp500,
	uxtb	r2, r0	@ D.44060,
	strb	r2, [r5, #24]	@ D.44060, <variable>.vui_parameters_present_flag
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3860	@,
	cmp	r2, #0	@ D.44060,
	add	ip, r3, #2	@ tmp502, tmp502,
	str	ip, [r5, #68]	@ tmp502, <variable>.vui_seq_parameters.matrix_coefficients
	bne	.L3913	@,
	mov	r0, r2	@ prephitmp.8846, D.44060
	mov	lr, #5	@ tmp509,
	strb	r2, [r5, #43]	@ D.44060, <variable>.vui_seq_parameters.aspect_ratio_idc
	str	lr, [r5, #56]	@ tmp509, <variable>.vui_seq_parameters.video_format
.L3889:
	str	r7, [sp, #0]	@ PicHeightInSmp,
	mov	r3, r8	@, PicWidthInSmp
	ldr	r1, [r5, #44]	@, <variable>.vui_seq_parameters.sar_width
	ldr	r2, [r5, #48]	@, <variable>.vui_seq_parameters.sar_height
	bl	MVC_GetDar	@
	ldr	r3, [r5, #3944]	@ temp.8909, <variable>.num_ref_frames
	cmp	r3, #0	@ temp.8909,
	str	r0, [r5, #52]	@, <variable>.vui_seq_parameters.aspect_ratio
	beq	.L3893	@,
	cmp	r6, r3	@ size.8871, temp.8909
	movcs	r6, r3	@ size.8871, temp.8909
.L3893:
	ldr	r2, [r4, #0]	@ D.44092, <variable>.pstExtraData
	cmp	r6, #16	@ size.8871,
	movcs	r6, #16	@ size.8872,
	ldr	r0, [r2, #32]	@ <variable>.eCapLevel, <variable>.eCapLevel
	cmp	r0, #25	@ <variable>.eCapLevel,
	beq	.L3914	@,
.L3894:
	cmp	r7, #1920	@ PicHeightInSmp,
	bcc	.L3896	@,
	cmp	r6, #4	@ size.8872,
	movcs	r6, #4	@ size.8872,
.L3896:
	add	r6, r6, #1	@ tmp532, size.8872,
	mov	r0, #0	@ D.43803,
	str	r6, [r5, #3972]	@ tmp532, <variable>.dpb_size_plus1
	b	.L3826	@
.L3914:
	ldr	r3, [r2, #608]	@ <variable>.stChanOption.s32ReRangeEn, <variable>.stChanOption.s32ReRangeEn
	cmp	r3, #0	@ <variable>.stChanOption.s32ReRangeEn,
	bne	.L3894	@,
	ldr	r1, [r2, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	ip, [r2, #568]	@ MaxWidth, <variable>.stChanOption.s32MaxWidth
	cmp	r6, r1	@ size.8872, <variable>.stChanOption.s32MaxRefFrameNum
	ldr	r0, [r2, #572]	@ MaxHeight, <variable>.stChanOption.s32MaxHeight
	bhi	.L3915	@,
	cmp	ip, r8	@ MaxWidth, PicWidthInSmp
	cmpcs	r0, r7	@, MaxHeight, PicHeightInSmp
	bcs	.L3894	@,
	movw	r2, #:lower16:g_event_report	@ tmp528,
	movt	r2, #:upper16:g_event_report	@ tmp528,
	ldr	r3, [r2, #0]	@ g_event_report.8912, g_event_report
	cmp	r3, #0	@ g_event_report.8912,
	beq	.L3860	@,
	movw	lr, #:lower16:11199520	@ tmp529,
	movt	lr, #:upper16:11199520	@ tmp529,
	strh	r8, [fp, #-60]	@ movhi	@ PicWidthInSmp, para
	mov	r1, #107	@,
	strh	r7, [fp, #-58]	@ movhi	@ PicHeightInSmp, para
	sub	r2, fp, #60	@,,
	strh	ip, [fp, #-56]	@ movhi	@ MaxWidth, para
	strh	r0, [fp, #-54]	@ movhi	@ MaxHeight, para
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.8912
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3913:
	mov	r0, r4	@, pMvcCtx
	add	r1, r5, #28	@, pSPS,
	bl	mvc_vui_parameters	@
	cmp	r0, #0	@,
	bne	.L3903	@,
	ldrb	r2, [r5, #40]	@ zero_extendqisi2	@ <variable>.vui_seq_parameters.bitstream_restriction_flag, <variable>.vui_seq_parameters.bitstream_restriction_flag
	cmp	r2, #0	@ <variable>.vui_seq_parameters.bitstream_restriction_flag,
	beq	.L3903	@,
	ldr	r2, [r5, #732]	@ D.44076, <variable>.vui_seq_parameters.max_dec_frame_buffering
	cmp	r6, r2	@ size.8871, D.44076
	bcc	.L3891	@,
	cmp	r2, #0	@ D.44076,
	bne	.L3892	@,
.L3891:
	movw	r1, #:lower16:.LC296	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC296	@,
	mov	r3, r6	@, size.8871
	bl	dprint_vfmw	@
.L3903:
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.8846, <variable>.vui_seq_parameters.aspect_ratio_idc
	b	.L3889	@
.L3892:
	ldr	r6, [r5, #3944]	@ <variable>.num_ref_frames, <variable>.num_ref_frames
	ldrb	r0, [r5, #43]	@ zero_extendqisi2	@ prephitmp.8846, <variable>.vui_seq_parameters.aspect_ratio_idc
	cmp	r2, r6	@ D.44076, <variable>.num_ref_frames
	movcs	r6, r2	@ size.8871, D.44076
	b	.L3889	@
.L3912:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC291	@,
	movt	r1, #:upper16:.LC291	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC292	@,
	movt	r1, #:upper16:.LC292	@,
	str	r0, [r5, #3956]	@, <variable>.frame_crop_left_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC293	@,
	movt	r1, #:upper16:.LC293	@,
	str	r0, [r5, #3960]	@, <variable>.frame_crop_right_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC294	@,
	movt	r1, #:upper16:.LC294	@,
	str	r0, [r5, #3964]	@, <variable>.frame_crop_top_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	ldr	ip, [r5, #3964]	@ <variable>.frame_crop_top_offset, <variable>.frame_crop_top_offset
	ldr	r1, [r5, #3956]	@ <variable>.frame_crop_left_offset, <variable>.frame_crop_left_offset
	mov	r3, sl, asl #1	@ tmp481, temp,
	ldr	r2, [r5, #3960]	@ <variable>.frame_crop_right_offset, <variable>.frame_crop_right_offset
	mov	ip, ip, asl #1	@ tmp478, <variable>.frame_crop_top_offset,
	mov	r1, r1, asl #1	@ D.44032, <variable>.frame_crop_left_offset,
	mul	sl, sl, ip	@ D.44037, temp, tmp478
	rsb	ip, r1, r8	@ tmp475, D.44032, PicWidthInSmp
	sub	r2, ip, r2, asl #1	@ D.44035, tmp475, <variable>.frame_crop_right_offset,
	rsb	ip, sl, r7	@ tmp480, D.44037, PicHeightInSmp
	mls	r3, r0, r3, ip	@ D.44041, D.44031, tmp481, tmp480
	str	r0, [r5, #3968]	@ D.44031, <variable>.frame_crop_bottom_offset
	cmp	r2, #0	@ D.44035,
	cmpgt	r3, #0	@, D.44041,
	ble	.L3884	@,
	add	lr, r1, r2, lsr #1	@, tmp493, D.44032, D.44035,
	add	sl, sl, r3, lsr #1	@, tmp495, D.44037, D.44041,
	str	lr, [r5, #3984]	@ tmp493, <variable>.disp_center_x
	str	sl, [r5, #3988]	@ tmp495, <variable>.disp_center_y
	str	r2, [r5, #3976]	@ D.44035, <variable>.disp_width
	str	r3, [r5, #3980]	@ D.44041, <variable>.disp_height
	b	.L3886	@
.L3915:
	movw	ip, #:lower16:g_event_report	@ tmp513,
	movt	ip, #:upper16:g_event_report	@ tmp513,
	ldr	r3, [ip, #0]	@ g_event_report, g_event_report
	cmp	r3, #0	@ g_event_report,
	beq	.L3860	@,
	str	r6, [fp, #-60]	@ size.8872, para
	movw	r0, #:lower16:11199520	@ tmp518,
	ldr	lr, [r2, #588]	@ <variable>.stChanOption.s32MaxRefFrameNum, <variable>.stChanOption.s32MaxRefFrameNum
	movt	r0, #:upper16:11199520	@ tmp518,
	mov	r1, #106	@,
	sub	r2, fp, #60	@,,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	str	lr, [fp, #-56]	@ <variable>.stChanOption.s32MaxRefFrameNum, para
	blx	r3	@ g_event_report
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3874:
	movw	r0, #:lower16:1824768	@ size,
	movt	r0, #:upper16:1824768	@ size,
	b	.L3880	@
.L3875:
	movw	r0, #:lower16:3110400	@ size,
	movt	r0, #:upper16:3110400	@ size,
	b	.L3880	@
.L3878:
	mov	r0, #12582912	@ size,
	b	.L3880	@
.L3876:
	movw	r0, #:lower16:6912000	@ size,
	movt	r0, #:upper16:6912000	@ size,
	b	.L3880	@
.L3873:
	movw	r0, #:lower16:912384	@ size,
	movt	r0, #:upper16:912384	@ size,
	b	.L3880	@
.L3872:
	movw	r0, #:lower16:345600	@ size,
	movt	r0, #:upper16:345600	@ size,
	b	.L3880	@
.L3871:
	movw	r0, #:lower16:152064	@ size,
	movt	r0, #:upper16:152064	@ size,
	b	.L3880	@
.L3870:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC286	@,
	movt	r1, #:upper16:.LC286	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3911:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC285	@,
	movt	r1, #:upper16:.LC285	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3897:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC284	@,
	movt	r1, #:upper16:.LC284	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43803,
	b	.L3826	@
.L3866:
	ldr	r3, [r5, #3952]	@ temp.8897, <variable>.pic_height_in_map_units_minus1
	strb	r2, [r5, #21]	@ <variable>.SeErrFlg, <variable>.mb_adaptive_frame_field_flag
	sub	r1, r3, #1	@ tmp536, temp.8897,
	cmp	r1, r7	@ tmp536, tmp431
	bhi	.L3897	@,
	ldr	r7, [r5, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	mov	sl, #1	@ temp,
	add	r3, r3, #1	@ prephitmp.8842, temp.8897,
	add	r8, r7, sl	@ prephitmp.8896, <variable>.pic_width_in_mbs_minus1,
	b	.L3898	@
.L3917:
	.align	2
.L3916:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+32
	.word	.LANCHOR2+96
	.fnend
	.size	MVC_ProcessSPS, .-MVC_ProcessSPS
	.align	2
	.global	MVC_DecSubSPS
	.type	MVC_DecSubSPS, %function
MVC_DecSubSPS:
	.fnstart
.LFB1646:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #20
	sub	sp, sp, #20	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC297	@,
	movt	r2, #:upper16:.LC297	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC298	@,
	movt	r1, #:upper16:.LC298	@,
	mov	r5, r0	@ D.44461,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC299	@,
	movt	r1, #:upper16:.LC299	@,
	mov	r8, r0	@ constrained_set0_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC300	@,
	movt	r1, #:upper16:.LC300	@,
	mov	r9, r0	@ constrained_set1_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC301	@,
	movt	r1, #:upper16:.LC301	@,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC302	@,
	movt	r1, #:upper16:.LC302	@,
	str	r0, [fp, #-52]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC303	@,
	movt	r1, #:upper16:.LC303	@,
	str	r0, [fp, #-48]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC304	@,
	movt	r2, #:upper16:.LC304	@,
	mov	r7, r0	@ constrained_set5_flag,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC305	@,
	movt	r2, #:upper16:.LC305	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC306	@,
	movt	r1, #:upper16:.LC306	@,
	mov	sl, r0	@ D.44468,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	mov	r6, r0	@ seq_parameter_set_id,
	movw	r0, #:lower16:11199460	@ tmp163,
	movt	r0, #:upper16:11199460	@ tmp163,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3933	@,
	cmp	r6, #31	@ seq_parameter_set_id,
	bhi	.L3934	@,
	sub	r1, r5, #66	@ tmp166, D.44461,
	cmp	r1, #78	@ tmp166,
	ldrls	pc, [pc, r1, asl #2]	@ tmp166
	b	.L3922	@
.L3927:
	.word	.L3923
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3924
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3925
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3924
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3926
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3924
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3926
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3924
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3922
	.word	.L3926
.L3925:
	movw	r1, #:lower16:.LC309	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC309	@,
	bl	dprint_vfmw	@
.L3924:
	cmp	sl, #41	@ level_idc,
	mov	r2, sl	@ level_idc, D.44468
	bhi	.L3935	@,
.L3928:
	movw	r0, #:lower16:337528	@ tmp174,
	movt	r0, #:upper16:337528	@ tmp174,
	mul	sl, r0, r6	@ tmp173, tmp174, seq_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	add	lr, sl, #13568	@ tmp225, tmp173,
	add	sl, sl, r4	@ tmp175, tmp173, pMvcCtx
	add	r3, sl, #13568	@ tmp181, tmp175,
	add	r1, lr, #32	@ tmp225, tmp225,
	add	lr, r3, #32	@ tmp181, tmp181,
	add	ip, r4, r1	@, pMvcCtx, tmp225
	movw	r1, #13600	@ tmp177,
	str	ip, [fp, #-60]	@, %sfp
	add	ip, sl, #14336	@ tmp176, tmp175,
	strb	r8, [sl, r1]	@ constrained_set0_flag, <variable>.sps.constrained_set0_flag
	strb	r7, [lr, #5]	@ constrained_set5_flag, <variable>.sps.constrained_set5_flag
	ldr	r1, [fp, #-60]	@, %sfp
	str	r2, [ip, #4]	@ level_idc, <variable>.sps.level_idc
	strb	r9, [lr, #1]	@ constrained_set1_flag, <variable>.sps.constrained_set1_flag
	ldr	r7, [fp, #-56]	@, %sfp
	strb	r7, [lr, #2]	@, <variable>.sps.constrained_set2_flag
	ldr	r2, [fp, #-52]	@, %sfp
	strb	r2, [lr, #3]	@, <variable>.sps.constrained_set3_flag
	movw	r2, #14344	@ tmp218,
	ldr	r7, [fp, #-48]	@, %sfp
	str	r6, [sl, r2]	@ seq_parameter_set_id, <variable>.sps.seq_parameter_set_id
	str	r5, [ip, #0]	@ D.44461, <variable>.sps.profile_idc
	strb	r7, [lr, #4]	@, <variable>.sps.constrained_set4_flag
	bl	MVC_ProcessSPS	@
	subs	r7, r0, #0	@ D.44502,
	bne	.L3936	@,
	add	r0, sl, #13568	@ tmp246, tmp175,
	cmp	r5, #118	@ D.44461,
	cmpne	r5, #128	@, D.44461,
	add	lr, r0, #56	@ tmp246, tmp246,
	mov	r5, #1	@ tmp247,
	strb	r5, [lr, #1]	@ tmp247, <variable>.sps.is_valid
	beq	.L3937	@,
.L3930:
	movw	r2, #:lower16:337528	@ tmp288,
	movt	r2, #:upper16:337528	@ tmp288,
	mov	r0, #0	@ D.44473,
	mov	r3, #1	@ tmp291,
	mla	lr, r2, r6, r4	@ tmp289, tmp288, seq_parameter_set_id, pMvcCtx
	add	r4, lr, #348160	@ tmp290, tmp289,
	add	r4, r4, #2960	@ tmp290, tmp290,
	str	r3, [r4, #4]	@ tmp291, <variable>.is_valid
.L3920:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3934:
	movw	r1, #:lower16:.LC307	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC307	@,
	bl	dprint_vfmw	@
.L3933:
	mvn	r0, #0	@ D.44473,
	b	.L3920	@
.L3923:
	movw	r1, #:lower16:.LC308	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC308	@,
	bl	dprint_vfmw	@
	cmp	sl, #41	@ level_idc,
	mov	r2, sl	@ level_idc, D.44468
	bls	.L3928	@,
.L3935:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC312	@,
	movt	r1, #:upper16:.LC312	@,
	bl	dprint_vfmw	@
	mov	r2, #41	@ level_idc,
	b	.L3928	@
.L3926:
	movw	r1, #:lower16:.LC310	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC310	@,
	bl	dprint_vfmw	@
	b	.L3924	@
.L3922:
	mov	r2, r5	@, D.44461
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC311	@,
	movt	r1, #:upper16:.LC311	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44473,
	b	.L3920	@
.L3937:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC314	@,
	movt	r1, #:upper16:.LC314	@,
	movw	r8, #17592	@ tmp257,
	bl	mvc_u_1	@
	ldr	r1, [fp, #-60]	@, %sfp
	str	r0, [sl, r8]	@, <variable>.bit_equal_to_one
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcExt	@
	subs	r8, r0, #0	@ D.44515,
	bne	.L3938	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC316	@,
	movt	r1, #:upper16:.LC316	@,
	bl	mvc_u_1	@
	movw	ip, #:lower16:292232	@ tmp278,
	movt	ip, #:upper16:292232	@ tmp278,
	add	r2, sl, ip	@ tmp278, tmp175, tmp278
	cmp	r0, #0	@ D.44519,
	str	r0, [r2, #4]	@ D.44519, <variable>.mvc_vui_parameters_present_flag
	beq	.L3930	@,
	ldr	r1, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSUBSPSMvcVuiExt	@
	cmp	r0, #0	@,
	beq	.L3930	@,
	mov	r0, r5	@, tmp247
	movw	r1, #:lower16:.LC317	@,
	movt	r1, #:upper16:.LC317	@,
	bl	dprint_vfmw	@
	add	r1, sl, #348160	@ tmp284, tmp175,
	add	sl, r1, #2960	@ tmp284, tmp284,
	mvn	r0, #0	@ D.44473,
	str	r8, [sl, #4]	@ D.44515, <variable>.is_valid
	b	.L3920	@
.L3936:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC313	@,
	movt	r1, #:upper16:.LC313	@,
	bl	dprint_vfmw	@
	add	r3, sl, #13568	@ tmp239, tmp175,
	add	r1, sl, #348160	@ tmp233, tmp175,
	add	ip, r3, #56	@ tmp239, tmp239,
	add	sl, r1, #2960	@ tmp233, tmp233,
	mov	r2, #0	@ tmp234,
	mvn	r0, #0	@ D.44473,
	strb	r2, [ip, #1]	@ tmp234, <variable>.sps.is_valid
	str	r2, [sl, #4]	@ tmp234, <variable>.is_valid
	b	.L3920	@
.L3938:
	add	sl, sl, #348160	@ tmp271, tmp175,
	mov	r0, r5	@, tmp247
	add	sl, sl, #2960	@ tmp271, tmp271,
	movw	r1, #:lower16:.LC315	@,
	movt	r1, #:upper16:.LC315	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44473,
	str	r7, [sl, #4]	@ D.44502, <variable>.is_valid
	b	.L3920	@
	.fnend
	.size	MVC_DecSubSPS, .-MVC_DecSubSPS
	.align	2
	.global	MVC_DecSPS
	.type	MVC_DecSPS, %function
MVC_DecSPS:
	.fnstart
.LFB1641:
	@ args = 0, pretend = 0, frame = 32
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #36
	sub	sp, sp, #36	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r1, #8	@,
	movw	r2, #:lower16:.LC318	@,
	movt	r2, #:upper16:.LC318	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC319	@,
	movt	r1, #:upper16:.LC319	@,
	mov	r5, r0	@ D.44147,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC320	@,
	movt	r1, #:upper16:.LC320	@,
	str	r0, [fp, #-76]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC321	@,
	movt	r1, #:upper16:.LC321	@,
	str	r0, [fp, #-72]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC322	@,
	movt	r1, #:upper16:.LC322	@,
	str	r0, [fp, #-68]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC323	@,
	movt	r1, #:upper16:.LC323	@,
	str	r0, [fp, #-64]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC324	@,
	movt	r1, #:upper16:.LC324	@,
	str	r0, [fp, #-60]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC325	@,
	movt	r2, #:upper16:.LC325	@,
	str	r0, [fp, #-56]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_v	@
	mov	r1, #8	@,
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC326	@,
	movt	r2, #:upper16:.LC326	@,
	bl	mvc_u_v	@
	movw	r1, #:lower16:.LC327	@,
	movt	r1, #:upper16:.LC327	@,
	mov	r6, r0	@ D.44154,
	mov	r0, r4	@, pMvcCtx
	bl	mvc_ue_v	@
	mov	r7, r0	@ seq_parameter_set_id,
	movw	r0, #:lower16:11199460	@ tmp163,
	movt	r0, #:upper16:11199460	@ tmp163,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L3940	@,
	movw	r8, #:lower16:11155232	@ tmp165,
	movt	r8, #:upper16:11155232	@ tmp165,
	ldr	r2, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r1, r2, #1	@ tmp166, <variable>.MaxSpsNum,
	cmp	r7, r1	@ seq_parameter_set_id, tmp166
	bhi	.L3957	@,
	cmp	r5, #100	@ profile_idc,
	mov	r8, r5	@ profile_idc, D.44147
	beq	.L3945	@,
	bhi	.L3948	@,
	cmp	r5, #77	@ profile_idc,
	beq	.L3945	@,
	cmp	r5, #88	@ profile_idc,
	beq	.L3946	@,
	cmp	r5, #66	@ profile_idc,
	bne	.L3943	@,
	movw	r1, #:lower16:.LC308	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC308	@,
	bl	dprint_vfmw	@
.L3945:
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.44154
	bls	.L3956	@,
.L3949:
	cmp	r6, #41	@ level_idc,
	bhi	.L3956	@,
.L3950:
	movw	r9, #3992	@ tmp183,
	movw	r5, #:lower16:11155240	@ tmp184,
	mul	r6, r9, r7	@ D.44183, tmp183, seq_parameter_set_id
	movt	r5, #:upper16:11155240	@ tmp184,
	ldr	sl, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r3, r6, sl	@ D.44184, D.44183, <variable>.SPS
	ldrb	sl, [r3, #25]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	sl, #0	@ <variable>.is_valid,
	beq	.L3951	@,
	movw	sl, #:lower16:.LANCHOR1	@ tmp187,
	movt	sl, #:upper16:.LANCHOR1	@ tmp187,
	ldr	r3, [fp, #-76]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	str	r8, [sl, #808]	@ profile_idc, sps_tmp.profile_idc
	add	r1, sl, #72	@, tmp187,
	ldr	r8, [fp, #-72]	@, %sfp
	strb	r3, [sl, #72]	@, sps_tmp.constrained_set0_flag
	ldr	lr, [fp, #-68]	@, %sfp
	strb	r8, [sl, #73]	@, sps_tmp.constrained_set1_flag
	ldr	ip, [fp, #-64]	@, %sfp
	ldr	r8, [fp, #-56]	@, %sfp
	ldr	r3, [fp, #-60]	@, %sfp
	strb	lr, [sl, #74]	@, sps_tmp.constrained_set2_flag
	strb	r8, [sl, #77]	@, sps_tmp.constrained_set5_flag
	strb	ip, [sl, #75]	@, sps_tmp.constrained_set3_flag
	strb	r3, [sl, #76]	@, sps_tmp.constrained_set4_flag
	str	r2, [sl, #812]	@ level_idc, sps_tmp.level_idc
	str	r7, [sl, #816]	@ seq_parameter_set_id, sps_tmp.seq_parameter_set_id
	bl	MVC_ProcessSPS	@
	subs	r8, r0, #0	@ D.44194,
	bne	.L3958	@,
	ldr	r1, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r0, sl, #72	@, tmp187,
	add	r1, r6, r1	@, D.44183, <variable>.SPS
	bl	MVC_SPSEqual	@
	cmp	r0, #0	@ D.44198
	bne	.L3959	@,
.L3942:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3956:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC329	@,
	mov	r3, #41	@,
	movt	r1, #:upper16:.LC329	@,
	bl	dprint_vfmw	@
	mov	r2, #41	@ level_idc,
	b	.L3950	@
.L3940:
	mvn	r0, #0	@ D.44159,
	b	.L3942	@
.L3951:
	str	r8, [r3, #736]	@ profile_idc, <variable>.profile_idc
	mov	r0, r4	@, pMvcCtx
	ldr	lr, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	mov	r8, #1	@ tmp226,
	ldr	ip, [fp, #-76]	@, %sfp
	strb	ip, [lr, r6]	@, <variable>.constrained_set0_flag
	ldr	r3, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [fp, #-72]	@, %sfp
	add	r1, r3, r6	@ tmp227, <variable>.SPS, D.44183
	strb	lr, [r1, #1]	@, <variable>.constrained_set1_flag
	ldr	ip, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [fp, #-68]	@, %sfp
	add	r3, ip, r6	@ tmp233, <variable>.SPS, D.44183
	strb	r1, [r3, #2]	@, <variable>.constrained_set2_flag
	ldr	lr, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	ldr	r1, [fp, #-64]	@, %sfp
	add	ip, lr, r6	@ tmp239, <variable>.SPS, D.44183
	strb	r1, [ip, #3]	@, <variable>.constrained_set3_flag
	ldr	r3, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	ldr	ip, [fp, #-60]	@, %sfp
	add	lr, r3, r6	@ tmp245, <variable>.SPS, D.44183
	strb	ip, [lr, #4]	@, <variable>.constrained_set4_flag
	ldr	r1, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	ldr	lr, [fp, #-56]	@, %sfp
	add	r3, r1, r6	@ tmp251, <variable>.SPS, D.44183
	strb	lr, [r3, #5]	@, <variable>.constrained_set5_flag
	ldr	ip, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r1, ip, r6	@ tmp257, <variable>.SPS, D.44183
	str	r2, [r1, #740]	@ level_idc, <variable>.level_idc
	ldr	r3, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	lr, r3, r6	@ tmp262, <variable>.SPS, D.44183
	str	r7, [lr, #744]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	ip, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r1, r6, ip	@, D.44183, <variable>.SPS
	bl	MVC_ProcessSPS	@
	cmp	r0, #0	@ D.44203
	bne	.L3960	@,
	ldr	r2, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	lr, r2, r6	@ tmp285, <variable>.SPS, D.44183
	strb	r8, [lr, #26]	@ tmp226, <variable>.is_refreshed
	ldr	ip, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r6, ip, r6	@ tmp292, <variable>.SPS, D.44183
	strb	r8, [r6, #25]	@ tmp226, <variable>.is_valid
	b	.L3942	@
.L3948:
	cmp	r5, #122	@ D.44147,
	beq	.L3947	@,
	cmp	r5, #144	@ D.44147,
	beq	.L3947	@,
	cmp	r5, #110	@ D.44147,
	beq	.L3947	@,
.L3943:
	mov	r2, r5	@, D.44147
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC328	@,
	movt	r1, #:upper16:.LC328	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r8, #100	@ profile_idc,
	mov	r2, r6	@ level_idc, D.44154
	bhi	.L3949	@,
	b	.L3956	@
.L3947:
	movw	r1, #:lower16:.LC310	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC310	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.44154
	bhi	.L3949	@,
	b	.L3956	@
.L3946:
	movw	r1, #:lower16:.LC309	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC309	@,
	bl	dprint_vfmw	@
	cmp	r6, #9	@ level_idc,
	mov	r2, r6	@ level_idc, D.44154
	bhi	.L3949	@,
	b	.L3956	@
.L3959:
	mov	r2, #1	@ tmp211,
	strb	r2, [sl, #97]	@ tmp211, sps_tmp.is_valid
	strb	r2, [sl, #98]	@ tmp211, sps_tmp.is_refreshed
	add	r1, sl, #72	@, tmp187,
	ldr	r0, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	mov	r2, r9	@, tmp183
	add	r0, r6, r0	@, D.44183, <variable>.SPS
	bl	memmove	@
	mov	r0, r8	@ D.44159, D.44194
	b	.L3942	@
.L3958:
	mov	r3, r7	@, seq_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC330	@,
	movw	r2, #10502	@,
	movt	r1, #:upper16:.LC330	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.44159,
	b	.L3942	@
.L3957:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC307	@,
	movt	r1, #:upper16:.LC307	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r8]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	ip, r2, #1	@ tmp170, <variable>.MaxSpsNum,
	cmp	r7, ip	@ seq_parameter_set_id, tmp170
	bls	.L3940	@,
	movw	lr, #:lower16:g_event_report	@ tmp172,
	movt	lr, #:upper16:g_event_report	@ tmp172,
	ldr	r3, [lr, #0]	@ g_event_report.812, g_event_report
	cmp	r3, #0	@ g_event_report.812,
	beq	.L3940	@,
	movw	r0, #:lower16:11199520	@ tmp175,
	movt	r0, #:upper16:11199520	@ tmp175,
	str	r2, [fp, #-48]	@ <variable>.MaxSpsNum, para
	mov	r1, #109	@,
	str	r7, [fp, #-52]	@ seq_parameter_set_id, para
	sub	r2, fp, #52	@,,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.812
	mvn	r0, #0	@ D.44159,
	b	.L3942	@
.L3960:
	mov	r3, r7	@, seq_parameter_set_id
	movw	r2, #10527	@,
	mov	r0, r8	@, tmp226
	movw	r1, #:lower16:.LC330	@,
	movt	r1, #:upper16:.LC330	@,
	bl	dprint_vfmw	@
	ldr	r3, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	mvn	r0, #0	@ D.44159,
	add	r1, r3, r6	@ tmp271, <variable>.SPS, D.44183
	strb	r8, [r1, #26]	@ tmp226, <variable>.is_refreshed
	ldr	r2, [r4, r5]	@ <variable>.SPS, <variable>.SPS
	add	r6, r2, r6	@ tmp278, <variable>.SPS, D.44183
	strb	sl, [r6, #25]	@ <variable>.is_valid, <variable>.is_valid
	b	.L3942	@
	.fnend
	.size	MVC_DecSPS, .-MVC_DecSPS
	.align	2
	.global	MVC_ProcessPPS
	.type	MVC_ProcessPPS, %function
MVC_ProcessPPS:
	.fnstart
.LFB1635:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #60
	sub	sp, sp, #60	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	mov	r5, r1	@ pPPS, pPPS
	movw	r1, #:lower16:.LC331	@,
	movt	r1, #:upper16:.LC331	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_u_1	@
	movw	r6, #:lower16:11199460	@ tmp187,
	movt	r6, #:upper16:11199460	@ tmp187,
	strb	r0, [r5, #0]	@, <variable>.entropy_coding_mode_flag
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3997	@,
.L3962:
	mvn	r0, #0	@ D.43118,
.L3965:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L3997:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC332	@,
	movt	r1, #:upper16:.LC332	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #1]	@, <variable>.pic_order_present_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3962	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC333	@,
	movt	r1, #:upper16:.LC333	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@ D.43123,
	str	r0, [r5, #32]	@ D.43123, <variable>.num_slice_groups_minus1
	bne	.L3963	@,
	ldr	r1, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r1, #0	@ <variable>.SeErrFlg,
	bne	.L3963	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC335	@,
	movt	r1, #:upper16:.LC335	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.43133,
	str	r0, [r5, #36]	@ D.43133, <variable>.num_ref_idx_l0_active_minus1
	bhi	.L3966	@,
	ldr	lr, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L3966	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC337	@,
	movt	r1, #:upper16:.LC337	@,
	bl	mvc_ue_v	@
	cmp	r0, #31	@ D.43139,
	str	r0, [r5, #40]	@ D.43139, <variable>.num_ref_idx_l1_active_minus1
	bhi	.L3968	@,
	ldr	r3, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3969	@,
.L3968:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC338	@,
	movt	r1, #:upper16:.LC338	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43118,
	b	.L3965	@
.L3969:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC339	@,
	movt	r1, #:upper16:.LC339	@,
	bl	mvc_u_1	@
	strb	r0, [r5, #2]	@, <variable>.weighted_pred_flag
	ldr	r0, [r4, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L3962	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, #2	@,
	movw	r2, #:lower16:.LC340	@,
	movt	r2, #:upper16:.LC340	@,
	bl	mvc_u_v	@
	cmp	r0, #2	@ D.43149,
	str	r0, [r5, #44]	@ D.43149, <variable>.weighted_bipred_idc
	bhi	.L3998	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC342	@,
	movt	r1, #:upper16:.LC342	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC343	@,
	movt	r1, #:upper16:.LC343	@,
	str	r0, [r5, #48]	@, <variable>.pic_init_qp_minus26
	mov	r0, r4	@, pMvcCtx
	bl	mvc_se_v	@
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC344	@,
	movt	r1, #:upper16:.LC344	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC345	@,
	movt	r1, #:upper16:.LC345	@,
	str	r0, [r5, #52]	@, <variable>.chroma_qp_index_offset
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC346	@,
	movt	r1, #:upper16:.LC346	@,
	strb	r0, [r5, #3]	@, <variable>.deblocking_filter_control_present_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC347	@,
	movt	r1, #:upper16:.LC347	@,
	strb	r0, [r5, #4]	@, <variable>.constrained_intra_pred_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r8, r0	@ D.43162,
	strb	r8, [r5, #17]	@ D.43162, <variable>.redundant_pic_cnt_present_flag
	cmp	r8, #0	@ D.43162,
	beq	.L3971	@,
	movw	r1, #:lower16:.LC348	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC348	@,
	bl	dprint_vfmw	@
.L3971:
	ldr	lr, [r5, #52]	@ <variable>.chroma_qp_index_offset, <variable>.chroma_qp_index_offset
	add	r3, r4, #13504	@, pMvcCtx,
	mov	r8, #0	@ tmp224,
	add	r0, r3, #24	@,,
	str	r8, [r5, #60]	@ tmp224, <variable>.transform_8x8_mode_flag
	str	lr, [r5, #56]	@ <variable>.chroma_qp_index_offset, <variable>.second_chroma_qp_index_offset
	strb	r8, [r5, #18]	@ tmp224, <variable>.pic_scaling_matrix_present_flag
	bl	BsResidBits	@
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldr	r2, [ip, #68]	@ <variable>.nal_trail_zero_bit_num, <variable>.nal_trail_zero_bit_num
	add	r1, r2, #3	@ tmp230, <variable>.nal_trail_zero_bit_num,
	cmp	r0, r1	@, tmp230
	bcs	.L3999	@,
.L3972:
	mov	r0, #0	@ D.43118,
	b	.L3965	@
.L3999:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC349	@,
	movt	r1, #:upper16:.LC349	@,
	bl	mvc_u_1	@
	movw	r1, #:lower16:.LC350	@,
	movt	r1, #:upper16:.LC350	@,
	str	r0, [r5, #60]	@, <variable>.transform_8x8_mode_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	uxtb	r0, r0	@ D.43177,
	strb	r0, [r5, #18]	@ D.43177, <variable>.pic_scaling_matrix_present_flag
	cmp	r0, #1	@ D.43177,
	beq	.L4000	@,
.L3973:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC352	@,
	movt	r1, #:upper16:.LC352	@,
	bl	mvc_se_v	@
	add	r1, r0, #12	@ tmp311, D.43263,
	str	r0, [r5, #56]	@ D.43263, <variable>.second_chroma_qp_index_offset
	cmp	r1, #24	@ tmp311,
	bhi	.L3993	@,
	movw	r0, #:lower16:11199460	@ tmp312,
	movt	r0, #:upper16:11199460	@ tmp312,
	ldr	r3, [r4, r0]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L3972	@,
.L3993:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC353	@,
	movt	r1, #:upper16:.LC353	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43118,
	b	.L3965	@
.L3963:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC334	@,
	movt	r1, #:upper16:.LC334	@,
	bl	dprint_vfmw	@
	movw	r2, #:lower16:g_event_report	@ tmp197,
	movt	r2, #:upper16:g_event_report	@ tmp197,
	ldr	r3, [r2, #0]	@ g_event_report.767, g_event_report
	cmp	r3, #0	@ g_event_report.767,
	beq	.L3962	@,
	movw	ip, #:lower16:11199520	@ tmp198,
	movt	ip, #:upper16:11199520	@ tmp198,
	mov	r1, #102	@,
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.767
	mvn	r0, #0	@ D.43118,
	b	.L3965	@
.L3966:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC336	@,
	movt	r1, #:upper16:.LC336	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43118,
	b	.L3965	@
.L4000:
	movw	sl, #:lower16:11155240	@ tmp336,
	movw	r9, #:lower16:.LANCHOR2	@ tmp339,
	movt	sl, #:upper16:11155240	@ tmp336,
	movt	r9, #:upper16:.LANCHOR2	@ tmp339,
	sub	r6, fp, #76	@ ivtmp.9097,,
	add	r7, r5, #2016	@, pPPS,
	str	r7, [fp, #-88]	@, %sfp
	add	r1, r5, #64	@, pPPS,
	str	r7, [fp, #-80]	@, %sfp
	str	r7, [fp, #-84]	@, %sfp
	mov	r7, r8	@ i.9116, ivtmp.9103
	str	r1, [fp, #-92]	@, %sfp
.L3982:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC264	@,
	movt	r1, #:upper16:.LC264	@,
	bl	mvc_u_1	@
	add	r1, r5, r7	@ tmp236, pPPS, i.9116
	ldr	r2, [fp, #-88]	@, %sfp
	mov	r3, r0	@ D.43182,
	str	r0, [r6, #0]	@ D.43182, q4x4defaultflag
	strb	r3, [r1, #5]	@ D.43182, <variable>.pic_scaling_list_present_flag
	add	r0, r8, r2	@, ivtmp.9103,
	ldr	r3, [r6, #0]	@ tmp238, q4x4defaultflag
	mov	r2, #16	@,
	cmp	r3, #1	@ tmp238,
	beq	.L4001	@,
	rsbs	ip, r7, #1	@ D.43205, i.9116
	movcc	ip, #0	@ D.43205
	cmp	r7, #0	@ i.9116,
	cmpne	r7, #3	@, i.9116,
	bne	.L3978	@,
	ldr	r1, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	lr, #3992	@,
	ldr	r3, [r4, sl]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, lr, r3	@ D.43213, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	lr, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	lr, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L4002	@,
	cmp	ip, #0	@ D.43205,
	ldr	r1, .L4006	@,
	movne	r1, r9	@, tmp339
	bl	memcpy	@
.L3975:
	add	r7, r7, #1	@ i.9116, i.9116,
	ldr	ip, [fp, #-84]	@, %sfp
	ldr	lr, [fp, #-80]	@, %sfp
	cmp	r7, #6	@ i.9116,
	ldr	r3, [fp, #-92]	@, %sfp
	add	r2, ip, #16	@,,
	add	r1, lr, #16	@,,
	add	r6, r6, #4	@ ivtmp.9097, ivtmp.9097,
	add	r0, r3, #64	@,,
	str	r2, [fp, #-84]	@, %sfp
	add	r8, r8, #16	@ ivtmp.9103, ivtmp.9103,
	str	r1, [fp, #-80]	@, %sfp
	str	r0, [fp, #-92]	@, %sfp
	bne	.L3982	@,
	add	r8, r5, #2112	@, pPPS,
	add	r6, r5, #448	@, pPPS,
	mov	r7, #0	@ ivtmp.9082,
	movw	sl, #:lower16:11155240	@ tmp329,
	str	r6, [fp, #-88]	@, %sfp
	movt	sl, #:upper16:11155240	@ tmp329,
	sub	r6, fp, #52	@ ivtmp.9087,,
	str	r8, [fp, #-80]	@, %sfp
	mov	r9, r8	@ ivtmp.9081,
	mov	r8, r7	@ i, ivtmp.9082
	str	r5, [fp, #-84]	@ pPPS, %sfp
.L3992:
	ldr	r0, [r5, #60]	@ <variable>.transform_8x8_mode_flag, <variable>.transform_8x8_mode_flag
	mov	r3, #0	@ prephitmp.9063,
	cmp	r0, #1	@ <variable>.transform_8x8_mode_flag,
	movne	r0, #0	@,
	strne	r0, [r6, #0]	@, q8x8defaultflag
	beq	.L4003	@,
.L3984:
	ldr	r1, [fp, #-84]	@, %sfp
	mov	r2, #64	@,
	ldr	lr, [fp, #-80]	@, %sfp
	strb	r3, [r1, #11]	@ prephitmp.9063, <variable>.pic_scaling_list_present_flag
	add	r0, lr, r7	@,, ivtmp.9082
	ldr	r3, [r6, #0]	@ tmp282, q8x8defaultflag
	cmp	r3, #1	@ tmp282,
	beq	.L4004	@,
	ldr	lr, [r5, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	ip, #3992	@,
	ldr	r3, [r4, sl]	@ <variable>.SPS, <variable>.SPS
	mla	r3, lr, ip, r3	@ temp.9122, <variable>.seq_parameter_set_id,, <variable>.SPS
	ldrb	r1, [r3, #27]	@ zero_extendqisi2	@ <variable>.seq_scaling_matrix_present_flag, <variable>.seq_scaling_matrix_present_flag
	cmp	r1, #1	@ <variable>.seq_scaling_matrix_present_flag,
	beq	.L4005	@,
	ldr	r3, .L4006+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L4006+8	@,
	movne	r1, r3	@,
	bl	memcpy	@
.L3986:
	add	r8, r8, #1	@ i, i,
	ldr	r2, [fp, #-88]	@, %sfp
	ldr	lr, [fp, #-84]	@, %sfp
	cmp	r8, #2	@ i,
	add	ip, r2, #256	@,,
	add	r9, r9, #64	@ ivtmp.9081, ivtmp.9081,
	add	r0, lr, #1	@,,
	add	r7, r7, #64	@ ivtmp.9082, ivtmp.9082,
	str	ip, [fp, #-88]	@, %sfp
	add	r6, r6, #4	@ ivtmp.9087, ivtmp.9087,
	str	r0, [fp, #-84]	@, %sfp
	beq	.L3973	@,
	b	.L3992	@
.L3978:
	ldr	r0, [fp, #-80]	@, %sfp
	mov	r2, #16	@,
	sub	r1, r0, #16	@,,
	bl	memcpy	@
	b	.L3975	@
.L4001:
	ldr	r1, [fp, #-92]	@, %sfp
	mov	r0, r4	@, pMvcCtx
	ldr	r2, [fp, #-84]	@, %sfp
	add	r3, r3, #15	@,,
	str	r6, [sp, #0]	@ ivtmp.9097,
	bl	MVC_Scaling_List	@
	ldr	ip, [r6, #0]	@ tmp239, q4x4defaultflag
	cmp	ip, #1	@ tmp239,
	bne	.L3975	@,
	cmp	r7, #2	@ i.9116,
	ldr	r1, .L4006	@,
	ldr	r0, [fp, #-84]	@, %sfp
	mov	r2, #16	@,
	movls	r1, r9	@, tmp339
	bl	memcpy	@
	b	.L3975	@
.L3998:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC341	@,
	movt	r1, #:upper16:.LC341	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43118,
	b	.L3965	@
.L4002:
	ldr	ip, [fp, #-88]	@, %sfp
	add	r2, r3, #2672	@ tmp260, D.43213,
	add	r1, r2, r8	@, tmp260, ivtmp.9103
	mov	r2, #16	@,
	add	r0, r8, ip	@, ivtmp.9103,
	bl	memcpy	@
	b	.L3975	@
.L4005:
	ldr	r1, [fp, #-80]	@, %sfp
	add	r2, r3, #2768	@ tmp297, temp.9122,
	add	r0, r1, r7	@,, ivtmp.9082
	add	r1, r2, r7	@, tmp297, ivtmp.9082
	mov	r2, #64	@,
	bl	memcpy	@
	b	.L3986	@
.L4004:
	mov	r3, r2	@,
	ldr	r1, [fp, #-88]	@, %sfp
	mov	r2, r9	@, ivtmp.9081
	mov	r0, r4	@, pMvcCtx
	str	r6, [sp, #0]	@ ivtmp.9087,
	bl	MVC_Scaling_List	@
	ldr	r2, [r6, #0]	@ tmp283, q8x8defaultflag
	cmp	r2, #1	@ tmp283,
	bne	.L3986	@,
	ldr	ip, .L4006+4	@,
	cmp	r8, #0	@ i,
	ldr	r1, .L4006+8	@,
	mov	r2, #64	@,
	mov	r0, r9	@, ivtmp.9081
	movne	r1, ip	@,
	bl	memcpy	@
	b	.L3986	@
.L4003:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC351	@,
	movt	r1, #:upper16:.LC351	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ prephitmp.9063, D.43231
	str	r0, [r6, #0]	@ D.43231, q8x8defaultflag
	b	.L3984	@
.L4007:
	.align	2
.L4006:
	.word	.LANCHOR2+16
	.word	.LANCHOR2+96
	.word	.LANCHOR2+32
	.fnend
	.size	MVC_ProcessPPS, .-MVC_ProcessPPS
	.align	2
	.global	MVC_DecPPS
	.type	MVC_DecPPS, %function
MVC_DecPPS:
	.fnstart
.LFB1634:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC354	@,
	movt	r1, #:upper16:.LC354	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r5, #:lower16:11155236	@ tmp145,
	movt	r5, #:upper16:11155236	@ tmp145,
	mov	r8, r0	@ pic_parameter_set_id,
	ldr	r0, [r4, r5]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp146, <variable>.MaxPpsNum,
	cmp	r8, r3	@ pic_parameter_set_id, tmp146
	bhi	.L4018	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC356	@,
	movt	r1, #:upper16:.LC356	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11155232	@ tmp158,
	movt	r1, #:upper16:11155232	@ tmp158,
	mov	r3, r0	@ seq_parameter_set_id,
	ldr	r0, [r4, r1]	@ <variable>.MaxSpsNum, <variable>.MaxSpsNum
	sub	r2, r0, #1	@ tmp159, <variable>.MaxSpsNum,
	cmp	r3, r2	@ seq_parameter_set_id, tmp159
	bhi	.L4019	@,
	mov	sl, #2240	@ tmp162,
	movw	r5, #:lower16:11155244	@ tmp163,
	mul	r6, sl, r8	@ D.43082, tmp162, pic_parameter_set_id
	movt	r5, #:upper16:11155244	@ tmp163,
	ldr	r7, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r2, r6, r7	@ D.43083, D.43082, <variable>.PPS
	ldrb	r7, [r2, #19]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r7, #0	@ <variable>.is_valid,
	bne	.L4020	@,
	str	r8, [r2, #24]	@ pic_parameter_set_id, <variable>.pic_parameter_set_id
	mov	r0, r4	@, pMvcCtx
	ldr	ip, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r1, ip, r6	@ tmp190, <variable>.PPS, D.43082
	str	r3, [r1, #28]	@ seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r2, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r1, r6, r2	@, D.43082, <variable>.PPS
	bl	MVC_ProcessPPS	@
	cmp	r0, #0	@ D.43096
	bne	.L4021	@,
	ldr	r1, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	mov	lr, #1	@ tmp215,
	add	r2, r1, r6	@ tmp213, <variable>.PPS, D.43082
	strb	lr, [r2, #20]	@ tmp215, <variable>.is_refreshed
	ldr	r3, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r6, r3, r6	@ tmp220, <variable>.PPS, D.43082
	strb	lr, [r6, #19]	@ tmp215, <variable>.is_valid
.L4011:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4020:
	movw	r9, #:lower16:.LANCHOR1	@ tmp166,
	movt	r9, #:upper16:.LANCHOR1	@ tmp166,
	mov	r0, r4	@, pMvcCtx
	add	r1, r9, #4064	@, tmp166,
	str	r8, [r9, #4088]	@ pic_parameter_set_id, pps_tmp.pic_parameter_set_id
	str	r3, [r9, #4092]	@ seq_parameter_set_id, pps_tmp.seq_parameter_set_id
	bl	MVC_ProcessPPS	@
	subs	r7, r0, #0	@ D.43087,
	bne	.L4022	@,
	ldr	r3, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r0, r9, #4064	@, tmp166,
	add	r1, r6, r3	@, D.43082, <variable>.PPS
	bl	MVC_PPSEqual	@
	cmp	r0, #0	@ D.43091
	beq	.L4011	@,
	mov	lr, #1	@ tmp177,
	strb	lr, [r9, #4083]	@ tmp177, pps_tmp.is_valid
	strb	lr, [r9, #4084]	@ tmp177, pps_tmp.is_refreshed
	add	r1, r9, #4064	@, tmp166,
	ldr	ip, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	mov	r2, sl	@, tmp162
	add	r0, r6, ip	@, D.43082, <variable>.PPS
	bl	memmove	@
	mov	r0, r7	@ D.43073, D.43087
	b	.L4011	@
.L4018:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC355	@,
	movt	r1, #:upper16:.LC355	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r5]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r1, r2, #1	@ tmp150, <variable>.MaxPpsNum,
	cmp	r8, r1	@ pic_parameter_set_id, tmp150
	bhi	.L4023	@,
.L4010:
	mvn	r0, #0	@ D.43073,
	b	.L4011	@
.L4023:
	movw	ip, #:lower16:g_event_report	@ tmp152,
	movt	ip, #:upper16:g_event_report	@ tmp152,
	ldr	r3, [ip, #0]	@ g_event_report.765, g_event_report
	cmp	r3, #0	@ g_event_report.765,
	beq	.L4010	@,
	movw	lr, #:lower16:11199520	@ tmp155,
	movt	lr, #:upper16:11199520	@ tmp155,
	str	r2, [fp, #-48]	@ <variable>.MaxPpsNum, para
	mov	r1, #110	@,
	str	r8, [fp, #-52]	@ pic_parameter_set_id, para
	sub	r2, fp, #52	@,,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.765
	mvn	r0, #0	@ D.43073,
	b	.L4011	@
.L4022:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC357	@,
	movw	r2, #9401	@,
	movt	r1, #:upper16:.LC357	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43073,
	b	.L4011	@
.L4019:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC307	@,
	movt	r1, #:upper16:.LC307	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.43073,
	b	.L4011	@
.L4021:
	movw	r2, #9419	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC357	@,
	movt	r1, #:upper16:.LC357	@,
	bl	dprint_vfmw	@
	ldr	ip, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	mov	r2, #1	@ tmp201,
	mvn	r0, #0	@ D.43073,
	add	r1, ip, r6	@ tmp199, <variable>.PPS, D.43082
	strb	r2, [r1, #20]	@ tmp201, <variable>.is_refreshed
	ldr	r3, [r4, r5]	@ <variable>.PPS, <variable>.PPS
	add	r6, r3, r6	@ tmp206, <variable>.PPS, D.43082
	strb	r7, [r6, #19]	@ <variable>.is_valid, <variable>.is_valid
	b	.L4011	@
	.fnend
	.size	MVC_DecPPS, .-MVC_DecPPS
	.align	2
	.global	MVC_ProcessSliceHeaderFirstPart
	.type	MVC_ProcessSliceHeaderFirstPart, %function
MVC_ProcessSliceHeaderFirstPart:
	.fnstart
.LFB1627:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC358	@,
	movt	r1, #:upper16:.LC358	@,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r1, #:lower16:11155236	@ tmp161,
	movt	r1, #:upper16:11155236	@ tmp161,
	mov	r6, r0	@ tmp_pic_parameter_set_id,
	ldr	r0, [r4, r1]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	sub	r3, r0, #1	@ tmp162, <variable>.MaxPpsNum,
	cmp	r6, r3	@ tmp_pic_parameter_set_id, tmp162
	bhi	.L4025	@,
	movw	r5, #:lower16:11199460	@ tmp164,
	movt	r5, #:upper16:11199460	@ tmp164,
	ldr	r2, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L4025	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, tmp_pic_parameter_set_id
	bl	MVC_PPSSPSCheckTmpId	@
	cmp	r0, #0	@,
	bne	.L4051	@,
	movw	ip, #:lower16:11162632	@ tmp168,
	movt	ip, #:upper16:11162632	@ tmp168,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, ip]	@ tmp_pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L4052	@,
	movw	r7, #:lower16:11152040	@ tmp171,
	movt	r7, #:upper16:11152040	@ tmp171,
	movw	ip, #:lower16:11152044	@ tmp170,
	movt	ip, #:upper16:11152044	@ tmp170,
	ldr	r6, [r4, r7]	@ pSPS, <variable>.pSPS
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC362	@,
	movt	r2, #:upper16:.LC362	@,
	ldr	r7, [r4, ip]	@ pPPS, <variable>.pPPS
	ldr	lr, [r6, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	add	r1, lr, #4	@, <variable>.log2_max_frame_num_minus4,
	bl	mvc_u_v	@
	ldr	r1, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	movw	r3, #:lower16:11162644	@ tmp175,
	movt	r3, #:upper16:11162644	@ tmp175,
	cmp	r1, #0	@ <variable>.SeErrFlg,
	str	r0, [r4, r3]	@ D.42510, <variable>.CurrSlice.frame_num
	bne	.L4030	@,
	movw	r8, #:lower16:11162627	@ tmp178,
	movt	r8, #:upper16:11162627	@ tmp178,
	ldrb	r5, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4053	@,
.L4031:
	movw	r5, #:lower16:11162625	@ tmp183,
	movw	r8, #:lower16:11162626	@ tmp186,
	movt	r5, #:upper16:11162625	@ tmp183,
	movt	r8, #:upper16:11162626	@ tmp186,
	mov	r3, #0	@ tmp184,
	strb	r3, [r4, r5]	@ tmp184, <variable>.CurrSlice.field_pic_flag
	strb	r3, [r4, r8]	@ tmp184, <variable>.CurrSlice.bottom_field_flag
	ldrb	r1, [r6, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	cmp	r1, r3	@ <variable>.frame_mbs_only_flag,
	beq	.L4054	@,
	ldr	r0, [r6, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	ldr	r1, [r6, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	add	ip, r0, #1	@ tmp270, <variable>.pic_height_in_map_units_minus1,
	mla	r2, r1, ip, ip	@ D.42540, <variable>.pic_width_in_mbs_minus1, tmp270, tmp270
.L4049:
	mov	ip, #1	@ iftmp.736,
.L4036:
	cmp	r3, #0	@ prephitmp.9217,
	mul	ip, ip, r2	@ pic_size, iftmp.736, D.42540
	movne	r1, #0	@ prephitmp.9189,
	bne	.L4038	@,
	ldrb	r2, [r6, #21]	@ zero_extendqisi2	@ <variable>.mb_adaptive_frame_field_flag, <variable>.mb_adaptive_frame_field_flag
	subs	r1, r2, #0	@ prephitmp.9189, <variable>.mb_adaptive_frame_field_flag,
	movne	r1, #1	@ prephitmp.9189
.L4038:
	movw	r3, #:lower16:11162625	@ tmp207,
	movt	r3, #:upper16:11162625	@ tmp207,
	movw	r0, #:lower16:11162628	@ tmp205,
	movt	r0, #:upper16:11162628	@ tmp205,
	ldrb	lr, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	strb	r1, [r4, r0]	@ prephitmp.9189, <variable>.CurrSlice.MbaffFrameFlag
	cmp	lr, #1	@ <variable>.CurrSlice.field_pic_flag,
	beq	.L4039	@,
	cmp	r1, #1	@ prephitmp.9189,
	beq	.L4039	@,
	movw	r0, #:lower16:11162676	@ tmp213,
	movt	r0, #:upper16:11162676	@ tmp213,
	ldr	lr, [r4, r0]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	ip, lr	@ pic_size, <variable>.CurrSlice.first_mb_in_slice
	bls	.L4055	@,
.L4041:
	movw	r8, #:lower16:11162627	@ tmp216,
	movt	r8, #:upper16:11162627	@ tmp216,
	ldrb	r5, [r4, r8]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4056	@,
.L4042:
	movw	r5, #:lower16:11161480	@ tmp224,
	movw	r8, #:lower16:11161484	@ tmp226,
	movt	r5, #:upper16:11161480	@ tmp224,
	movt	r8, #:upper16:11161484	@ tmp226,
	mov	lr, #0	@ tmp225,
	str	lr, [r4, r5]	@ tmp225, <variable>.CurrPOC.pic_order_cnt_lsb
	str	lr, [r4, r8]	@ tmp225, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	ldr	r2, [r6, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r2, #0	@ <variable>.pic_order_cnt_type,
	beq	.L4057	@,
.L4044:
	movw	r5, #:lower16:11161528	@ tmp238,
	movw	r8, #:lower16:11161532	@ tmp240,
	movt	r5, #:upper16:11161528	@ tmp238,
	movt	r8, #:upper16:11161532	@ tmp240,
	mov	r2, #0	@ tmp239,
	str	r2, [r4, r5]	@ tmp239, <variable>.CurrPOC.delta_pic_order_cnt
	str	r2, [r4, r8]	@ tmp239, <variable>.CurrPOC.delta_pic_order_cnt
	ldr	r1, [r6, #2900]	@ <variable>.pic_order_cnt_type, <variable>.pic_order_cnt_type
	cmp	r1, #1	@ <variable>.pic_order_cnt_type,
	beq	.L4058	@,
.L4045:
	movw	r5, #:lower16:11199460	@ tmp251,
	movt	r5, #:upper16:11199460	@ tmp251,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L4030	@,
	ldrb	r1, [r7, #17]	@ zero_extendqisi2	@ <variable>.redundant_pic_cnt_present_flag, <variable>.redundant_pic_cnt_present_flag
	cmp	r1, #0	@ <variable>.redundant_pic_cnt_present_flag,
	beq	.L4046	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC374	@,
	movt	r1, #:upper16:.LC374	@,
	bl	mvc_ue_v	@
	cmp	r0, #0	@,
	bne	.L4047	@,
	ldr	r2, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	bne	.L4047	@,
.L4046:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsNewPic	@
	movw	r3, #:lower16:11162629	@ tmp260,
	movt	r3, #:upper16:11162629	@ tmp260,
	uxtb	ip, r0	@ D.42612,
	strb	ip, [r4, r3]	@ D.42612, <variable>.CurrSlice.new_pic_flag
	cmp	ip, #0	@ D.42612,
	bne	.L4048	@,
	movw	r2, #:lower16:11162676	@ tmp262,
	movw	lr, #:lower16:11164344	@ tmp263,
	movt	r2, #:upper16:11162676	@ tmp262,
	movt	lr, #:upper16:11164344	@ tmp263,
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	ldr	r0, [r4, lr]	@ <variable>.PrevSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	cmp	r1, r0	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.PrevSlice.first_mb_in_slice
	bls	.L4059	@,
.L4048:
	mov	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4052:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC361	@,
	movt	r1, #:upper16:.LC361	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4030:
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4054:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC364	@,
	movt	r1, #:upper16:.LC364	@,
	bl	mvc_u_1	@
	uxtb	r3, r0	@ D.42530,
	strb	r3, [r4, r5]	@ D.42530, <variable>.CurrSlice.field_pic_flag
	cmp	r3, #0	@ D.42530,
	bne	.L4060	@,
.L4034:
	ldrb	ip, [r6, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	ldr	r0, [r6, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	r1, [r6, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	cmp	ip, #0	@ <variable>.frame_mbs_only_flag,
	add	lr, r0, #1	@ tmp199, <variable>.pic_width_in_mbs_minus1,
	moveq	ip, #2	@ iftmp.736,
	mla	r2, r1, lr, lr	@ D.42540, <variable>.pic_height_in_map_units_minus1, tmp199, tmp199
	beq	.L4036	@,
	movw	r3, #:lower16:11162625	@ tmp202,
	movt	r3, #:upper16:11162625	@ tmp202,
	ldrb	r3, [r4, r3]	@ zero_extendqisi2	@ prephitmp.9217, <variable>.CurrSlice.field_pic_flag
	b	.L4049	@
.L4053:
	cmp	r0, #0	@ D.42510,
	beq	.L4031	@,
	movw	r2, #:lower16:11164280	@ tmp180,
	movt	r2, #:upper16:11164280	@ tmp180,
	ldr	r0, [r4, r2]	@ <variable>.CurrSlice.view_id, <variable>.CurrSlice.view_id
	cmp	r0, #0	@ <variable>.CurrSlice.view_id,
	bgt	.L4031	@,
	movw	r1, #:lower16:.LC363	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC363	@,
	bl	dprint_vfmw	@
	b	.L4031	@
.L4039:
	movw	r2, #:lower16:11162676	@ tmp210,
	movt	r2, #:upper16:11162676	@ tmp210,
	ldr	r1, [r4, r2]	@ <variable>.CurrSlice.first_mb_in_slice, <variable>.CurrSlice.first_mb_in_slice
	cmp	r1, ip, lsr #1	@ <variable>.CurrSlice.first_mb_in_slice, pic_size,
	bcc	.L4041	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC366	@,
	movt	r1, #:upper16:.LC366	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4025:
	mov	r2, r6	@, tmp_pic_parameter_set_id
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC359	@,
	movt	r1, #:upper16:.LC359	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4057:
	ldr	ip, [r6, #2904]	@ <variable>.log2_max_pic_order_cnt_lsb_minus4, <variable>.log2_max_pic_order_cnt_lsb_minus4
	mov	r0, r4	@, pMvcCtx
	movw	r2, #:lower16:.LC370	@,
	movt	r2, #:upper16:.LC370	@,
	add	r1, ip, #4	@, <variable>.log2_max_pic_order_cnt_lsb_minus4,
	bl	mvc_u_v	@
	str	r0, [r4, r5]	@, <variable>.CurrPOC.pic_order_cnt_lsb
	ldrb	r0, [r7, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #0	@ <variable>.pic_order_present_flag,
	beq	.L4044	@,
	movw	r3, #:lower16:11162625	@ tmp234,
	movt	r3, #:upper16:11162625	@ tmp234,
	ldrb	r5, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r5, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4044	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC371	@,
	movt	r1, #:upper16:.LC371	@,
	bl	mvc_se_v	@
	str	r0, [r4, r8]	@, <variable>.CurrPOC.delta_pic_order_cnt_bottom
	b	.L4044	@
.L4058:
	ldrb	lr, [r6, #18]	@ zero_extendqisi2	@ <variable>.delta_pic_order_always_zero_flag, <variable>.delta_pic_order_always_zero_flag
	cmp	lr, #0	@ <variable>.delta_pic_order_always_zero_flag,
	bne	.L4045	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC372	@,
	movt	r1, #:upper16:.LC372	@,
	bl	mvc_se_v	@
	str	r0, [r4, r5]	@, <variable>.CurrPOC.delta_pic_order_cnt
	ldrb	r0, [r7, #1]	@ zero_extendqisi2	@ <variable>.pic_order_present_flag, <variable>.pic_order_present_flag
	cmp	r0, #1	@ <variable>.pic_order_present_flag,
	bne	.L4045	@,
	movw	r5, #:lower16:11162625	@ tmp247,
	movt	r5, #:upper16:11162625	@ tmp247,
	ldrb	ip, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	ip, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4045	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC373	@,
	movt	r1, #:upper16:.LC373	@,
	bl	mvc_se_v	@
	str	r0, [r4, r8]	@, <variable>.CurrPOC.delta_pic_order_cnt
	b	.L4045	@
.L4055:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC367	@,
	movt	r1, #:upper16:.LC367	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4051:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC360	@,
	movt	r1, #:upper16:.LC360	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4056:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC368	@,
	movt	r1, #:upper16:.LC368	@,
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11162664	@ tmp219,
	movt	ip, #:upper16:11162664	@ tmp219,
	cmp	r0, #65536	@ D.42567,
	str	r0, [r4, ip]	@ D.42567, <variable>.CurrSlice.idr_pic_id
	bcs	.L4043	@,
	movw	r1, #:lower16:11199460	@ tmp221,
	movt	r1, #:upper16:11199460	@ tmp221,
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4042	@,
.L4043:
	movw	r1, #:lower16:.LC369	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC369	@,
	bl	dprint_vfmw	@
	b	.L4042	@
.L4060:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC365	@,
	movt	r1, #:upper16:.LC365	@,
	bl	mvc_u_1	@
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.9217, <variable>.CurrSlice.field_pic_flag
	strb	r0, [r4, r8]	@, <variable>.CurrSlice.bottom_field_flag
	b	.L4034	@
.L4047:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC375	@,
	movt	r1, #:upper16:.LC375	@,
	bl	dprint_vfmw	@
	movw	r0, #:lower16:g_event_report	@ tmp258,
	movt	r0, #:upper16:g_event_report	@ tmp258,
	ldr	r3, [r0, #0]	@ g_event_report.739, g_event_report
	cmp	r3, #0	@ g_event_report.739,
	beq	.L4030	@,
	movw	lr, #:lower16:11199520	@ tmp259,
	movt	lr, #:upper16:11199520	@ tmp259,
	mov	r1, #102	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.739
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4059:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC376	@,
	movt	r1, #:upper16:.LC376	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42499,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_ProcessSliceHeaderFirstPart, .-MVC_ProcessSliceHeaderFirstPart
	.align	2
	.global	MVC_DecMMCO
	.type	MVC_DecMMCO, %function
MVC_DecMMCO:
	.fnstart
.LFB1625:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	cmp	r1, #0	@ save
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	movweq	r6, #:lower16:11199460	@ tmp299,
	moveq	r7, r1	@ MMCONum.9258, save
	movteq	r6, #:upper16:11199460	@ tmp299,
	beq	.L4063	@,
	movw	r3, #:lower16:11168368	@,
	movw	r9, #:lower16:11199460	@ tmp293,
	movt	r3, #:upper16:11168368	@,
	movt	r9, #:upper16:11199460	@ tmp293,
	str	r3, [fp, #-48]	@, %sfp
	mov	r6, #0	@ MMCONum,
	movw	sl, #2004	@ tmp289,
	b	.L4064	@
.L4066:
	cmp	r3, #2	@ prephitmp.9234,
	beq	.L4097	@,
.L4067:
	cmp	r3, #3	@ prephitmp.9234,
	cmpne	r3, #6	@, prephitmp.9234,
	beq	.L4098	@,
.L4068:
	cmp	r3, #4	@ prephitmp.9234,
	beq	.L4099	@,
.L4069:
	cmp	r3, #6	@ prephitmp.9234,
	bhi	.L4070	@,
.L4101:
	ldr	lr, [r5, r9]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4070	@,
	cmp	r3, #0	@ prephitmp.9234,
	beq	.L4073	@,
	add	r6, r6, #1	@ MMCONum, MMCONum,
	cmp	r6, #100	@ MMCONum,
	beq	.L4100	@,
.L4064:
	ldr	r7, [fp, #-48]	@, %sfp
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC378	@,
	movt	r1, #:upper16:.LC378	@,
	movw	r4, #:lower16:11164360	@ tmp159,
	movt	r4, #:upper16:11164360	@ tmp159,
	ldr	r8, [r5, r7]	@ D.42350, <variable>.CurrMarkIdx
	bl	mvc_ue_v	@
	mov	r7, r6, asl #2	@ tmp282, MMCONum,
	add	r1, r7, r6	@ tmp153, tmp282, MMCONum
	mul	ip, sl, r8	@ tmp155, tmp289, D.42350
	mov	r3, r0	@ prephitmp.9234,
	cmp	r0, #1	@ prephitmp.9234,
	cmpne	r0, #3	@, prephitmp.9234,
	add	r0, ip, r1, asl #2	@, tmp157, tmp155, tmp153,
	add	r2, r0, r5	@ tmp158, tmp157, pMvcCtx
	add	r4, r2, r4	@ tmp159, tmp158, tmp159
	str	r3, [r4, #4]	@ prephitmp.9234, <variable>.memory_management_control_operation
	bne	.L4066	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC379	@,
	movt	r1, #:upper16:.LC379	@,
	bl	mvc_ue_v	@
	ldr	r3, [r4, #4]	@ prephitmp.9234, <variable>.memory_management_control_operation
	cmp	r3, #2	@ prephitmp.9234,
	str	r0, [r4, #8]	@, <variable>.difference_of_pic_nums_minus1
	bne	.L4067	@,
.L4097:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC380	@,
	movt	r1, #:upper16:.LC380	@,
	bl	mvc_ue_v	@
	mul	ip, sl, r8	@ tmp194, tmp289, D.42350
	add	r2, r7, r6	@ tmp192, tmp282, MMCONum
	movw	r3, #:lower16:11164360	@ tmp208,
	movt	r3, #:upper16:11164360	@ tmp208,
	movw	r1, #:lower16:11164368	@ tmp198,
	movt	r1, #:upper16:11164368	@ tmp198,
	add	r2, ip, r2, asl #2	@, tmp196, tmp194, tmp192,
	add	r2, r2, r5	@ tmp197, tmp196, pMvcCtx
	add	r3, r2, r3	@ tmp208, tmp197, tmp208
	add	ip, r2, r1	@ tmp198, tmp197, tmp198
	ldr	r3, [r3, #4]	@ prephitmp.9234, <variable>.memory_management_control_operation
	cmp	r3, #3	@ prephitmp.9234,
	cmpne	r3, #6	@, prephitmp.9234,
	str	r0, [ip, #4]	@, <variable>.long_term_pic_num
	bne	.L4068	@,
.L4098:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC381	@,
	movt	r1, #:upper16:.LC381	@,
	bl	mvc_ue_v	@
	mul	ip, sl, r8	@ tmp222, tmp289, D.42350
	add	r1, r7, r6	@ tmp220, tmp282, MMCONum
	movw	r3, #:lower16:11164360	@ tmp236,
	movt	r3, #:upper16:11164360	@ tmp236,
	movw	r2, #:lower16:11164368	@ tmp226,
	movt	r2, #:upper16:11164368	@ tmp226,
	add	r1, ip, r1, asl #2	@, tmp224, tmp222, tmp220,
	add	r1, r1, r5	@ tmp225, tmp224, pMvcCtx
	add	r3, r1, r3	@ tmp236, tmp225, tmp236
	add	r2, r1, r2	@ tmp226, tmp225, tmp226
	ldr	r3, [r3, #4]	@ prephitmp.9234, <variable>.memory_management_control_operation
	cmp	r3, #4	@ prephitmp.9234,
	str	r0, [r2, #8]	@, <variable>.long_term_frame_idx
	bne	.L4069	@,
.L4099:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	bl	mvc_ue_v	@
	mul	r8, sl, r8	@ tmp243, tmp289, D.42350
	add	r2, r7, r6	@ tmp241, tmp282, MMCONum
	movw	ip, #:lower16:11164360	@ tmp257,
	movt	ip, #:upper16:11164360	@ tmp257,
	movw	r1, #:lower16:11164376	@ tmp247,
	movt	r1, #:upper16:11164376	@ tmp247,
	add	r7, r8, r2, asl #2	@, tmp245, tmp243, tmp241,
	add	r7, r7, r5	@ tmp246, tmp245, pMvcCtx
	add	r3, r7, ip	@ tmp257, tmp246, tmp257
	add	r2, r7, r1	@ tmp247, tmp246, tmp247
	ldr	r3, [r3, #4]	@ prephitmp.9234, <variable>.memory_management_control_operation
	cmp	r3, #6	@ prephitmp.9234,
	str	r0, [r2, #4]	@, <variable>.max_long_term_frame_idx_plus1
	bls	.L4101	@,
.L4070:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42349,
	b	.L4065	@
.L4073:
	mov	r0, #0	@ D.42349,
.L4065:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4063:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC378	@,
	movt	r1, #:upper16:.LC378	@,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.42393
	moveq	r8, #1	@, D.42393
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r4, r0	@ memory_management_control_operation,
	beq	.L4102	@,
.L4074:
	cmp	r4, #2	@ memory_management_control_operation,
	beq	.L4103	@,
.L4075:
	cmp	r4, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp275, D.42393
	cmp	r8, #0	@ tmp275,
	bne	.L4104	@,
.L4076:
	cmp	r4, #4	@ memory_management_control_operation,
	beq	.L4105	@,
	cmp	r4, #6	@ memory_management_control_operation,
	bhi	.L4079	@,
.L4078:
	ldr	r0, [r5, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4079	@,
	cmp	r4, #0	@ memory_management_control_operation,
	beq	.L4073	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC378	@,
	movt	r1, #:upper16:.LC378	@,
	add	r7, r7, #1	@ tmp300, MMCONum.9258,
	bl	mvc_ue_v	@
	cmp	r0, #3	@ memory_management_control_operation,
	movne	r8, #0	@, D.42393
	moveq	r8, #1	@, D.42393
	cmp	r0, #3	@ memory_management_control_operation,
	cmpne	r0, #1	@, memory_management_control_operation,
	mov	r4, r0	@ memory_management_control_operation,
	beq	.L4106	@,
.L4085:
	cmp	r4, #2	@ memory_management_control_operation,
	beq	.L4107	@,
.L4086:
	cmp	r4, #6	@ memory_management_control_operation,
	orreq	r8, r8, #1	@,, tmp313, D.42393
	cmp	r8, #0	@ tmp313,
	bne	.L4108	@,
.L4087:
	cmp	r4, #4	@ memory_management_control_operation,
	beq	.L4093	@,
	cmp	r4, #6	@ memory_management_control_operation,
	bhi	.L4079	@,
.L4094:
	ldr	r3, [r5, r6]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	bne	.L4079	@,
	cmp	r4, #0	@ memory_management_control_operation,
	beq	.L4073	@,
	add	r7, r7, #1	@ MMCONum.9258, tmp300,
	cmp	r7, #100	@ MMCONum.9258,
	bne	.L4063	@,
	mvn	r0, #0	@ D.42349,
	b	.L4065	@
.L4100:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC377	@,
	movt	r1, #:upper16:.LC377	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42349,
	b	.L4065	@
.L4104:
	movw	r1, #:lower16:.LC381	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC381	@,
	bl	mvc_ue_v	@
	b	.L4076	@
.L4102:
	movw	r1, #:lower16:.LC379	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC379	@,
	bl	mvc_ue_v	@
	b	.L4074	@
.L4108:
	movw	r1, #:lower16:.LC381	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC381	@,
	bl	mvc_ue_v	@
	b	.L4087	@
.L4106:
	movw	r1, #:lower16:.LC379	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC379	@,
	bl	mvc_ue_v	@
	b	.L4085	@
.L4105:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC382	@,
	movt	r1, #:upper16:.LC382	@,
	bl	mvc_ue_v	@
	b	.L4078	@
.L4103:
	movw	r1, #:lower16:.LC380	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC380	@,
	bl	mvc_ue_v	@
	b	.L4075	@
.L4107:
	movw	r1, #:lower16:.LC380	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC380	@,
	bl	mvc_ue_v	@
	b	.L4086	@
.L4093:
	movw	r1, #:lower16:.LC382	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC382	@,
	bl	mvc_ue_v	@
	b	.L4094	@
.L4079:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC383	@,
	movt	r1, #:upper16:.LC383	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42349,
	b	.L4065	@
	.fnend
	.size	MVC_DecMMCO, .-MVC_DecMMCO
	.align	2
	.global	mvc_dec_ref_pic_marking
	.type	mvc_dec_ref_pic_marking, %function
mvc_dec_ref_pic_marking:
	.fnstart
.LFB1626:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r2, #:lower16:11162629	@ tmp150,
	movt	r2, #:upper16:11162629	@ tmp150,
	movw	r3, #:lower16:11168368	@ tmp149,
	movt	r3, #:upper16:11168368	@ tmp149,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldrb	r8, [r0, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	ldr	r6, [r0, r3]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	cmp	r8, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L4110	@,
	movw	r7, #2004	@ tmp158,
	movw	r1, #:lower16:11164360	@ tmp156,
	mla	ip, r7, r6, r0	@ tmp159, tmp158, tmpMarkIdx, pMvcCtx
	movt	r1, #:upper16:11164360	@ tmp156,
	mov	r7, r6	@ tmpMarkIdx.9283, tmpMarkIdx
	add	r5, ip, r1	@ tmp160, tmp159, tmp160
	ldrb	r3, [ip, r1]	@ zero_extendqisi2	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L4113	@,
	movw	lr, #:lower16:11162627	@ tmp162,
	movt	lr, #:upper16:11162627	@ tmp162,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4122	@,
.L4114:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	movw	r5, #:lower16:11164360	@ tmp190,
	bl	mvc_u_1	@
	movw	r1, #2004	@ tmp188,
	mla	r7, r1, r7, r4	@ tmp189, tmp188, tmpMarkIdx.9283, pMvcCtx
	movt	r5, #:upper16:11164360	@ tmp190,
	movw	r1, #:lower16:.LC388	@,
	movt	r1, #:upper16:.LC388	@,
	add	r5, r7, r5	@ tmp190, tmp189, tmp190
	uxtb	r2, r0	@ D.42445,
	mov	r0, #16	@,
	strb	r2, [r5, #3]	@ D.42445, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	dprint_vfmw	@
	ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r3, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	bne	.L4123	@,
.L4116:
	mov	r0, #0	@ D.42455,
.L4115:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L4110:
	movw	lr, #:lower16:11162627	@ tmp162,
	movt	lr, #:upper16:11162627	@ tmp162,
	rsbs	r7, r6, #1	@ tmpMarkIdx.9283, tmpMarkIdx
	movcc	r7, #0	@ tmpMarkIdx.9283
	str	r7, [r0, r3]	@ tmpMarkIdx.9283, <variable>.CurrMarkIdx
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	bne	.L4114	@,
.L4122:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	movw	r5, #:lower16:11164360	@ tmp169,
	bl	mvc_u_1	@
	movw	r2, #2004	@ tmp167,
	mla	r7, r2, r7, r4	@ tmp168, tmp167, tmpMarkIdx.9283, pMvcCtx
	movt	r5, #:upper16:11164360	@ tmp169,
	movw	r1, #:lower16:.LC385	@,
	movt	r1, #:upper16:.LC385	@,
	add	r5, r7, r5	@ tmp169, tmp168, tmp169
	strb	r0, [r5, #1]	@, <variable>.no_output_of_prior_pics_flag
	mov	r0, r4	@, pMvcCtx
	bl	mvc_u_1	@
	ldrb	r2, [r5, #1]	@ zero_extendqisi2	@, <variable>.no_output_of_prior_pics_flag
	movw	r1, #:lower16:.LC386	@,
	movt	r1, #:upper16:.LC386	@,
	strb	r0, [r5, #2]	@, <variable>.long_term_reference_flag
	mov	r0, #16	@,
	bl	dprint_vfmw	@
	mov	r0, #0	@ D.42455,
	b	.L4115	@
.L4113:
	movw	lr, #:lower16:11162627	@ tmp215,
	movt	lr, #:upper16:11162627	@ tmp215,
	ldrb	r6, [r0, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r6, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4124	@,
	movw	r1, #:lower16:.LC387	@,
	movt	r1, #:upper16:.LC387	@,
	ldrb	r6, [r5, #3]	@ zero_extendqisi2	@ D.42470, <variable>.adaptive_ref_pic_marking_mode_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.42470,
	bne	.L4125	@,
	ldrb	r0, [r5, #3]	@ zero_extendqisi2	@ <variable>.adaptive_ref_pic_marking_mode_flag, <variable>.adaptive_ref_pic_marking_mode_flag
	cmp	r0, #0	@ <variable>.adaptive_ref_pic_marking_mode_flag,
	beq	.L4116	@,
	mov	r0, r4	@, pMvcCtx
	mov	r1, r8	@, <variable>.CurrSlice.new_pic_flag
	bl	MVC_DecMMCO	@
	b	.L4115	@
.L4123:
	mov	r0, r4	@, pMvcCtx
	mov	r1, #1	@,
	bl	MVC_DecMMCO	@
	cmn	r0, #1	@ D.42451,
	mov	r7, r0	@ D.42451,
	movne	r3, #1	@ tmp213,
	movne	r0, #0	@ D.42455,
	strneb	r3, [r5, #0]	@ tmp213, <variable>.is_valid
	bne	.L4115	@,
	movw	ip, #:lower16:11168368	@ tmp206,
	movt	ip, #:upper16:11168368	@ tmp206,
	mov	r0, #0	@ tmp204,
	movw	r1, #:lower16:.LC389	@,
	strb	r0, [r5, #0]	@ tmp204, <variable>.is_valid
	movt	r1, #:upper16:.LC389	@,
	str	r6, [r4, ip]	@ tmpMarkIdx, <variable>.CurrMarkIdx
	mov	r0, #1	@,
	bl	dprint_vfmw	@
	mov	r0, r7	@ D.42455, D.42451
	b	.L4115	@
.L4124:
	movw	r1, #:lower16:.LC384	@,
	movt	r1, #:upper16:.LC384	@,
	ldrb	r6, [r5, #1]	@ zero_extendqisi2	@ D.42458, <variable>.no_output_of_prior_pics_flag
	bl	mvc_u_1	@
	cmp	r6, r0	@ D.42458,
	bne	.L4126	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC385	@,
	movt	r1, #:upper16:.LC385	@,
	ldrb	r4, [r5, #2]	@ zero_extendqisi2	@ D.42464, <variable>.long_term_reference_flag
	bl	mvc_u_1	@
	cmp	r4, r0	@ D.42464,
	beq	.L4116	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC391	@,
	movt	r1, #:upper16:.LC391	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42455,
	b	.L4115	@
.L4125:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC392	@,
	movt	r1, #:upper16:.LC392	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:11199464	@ tmp243,
	movt	r1, #:upper16:11199464	@ tmp243,
	movw	r2, #:lower16:11199484	@ tmp239,
	movw	r3, #:lower16:11199500	@ tmp241,
	movt	r2, #:upper16:11199484	@ tmp239,
	ldr	ip, [r4, r1]	@ <variable>.TotalNal, <variable>.TotalNal
	movt	r3, #:upper16:11199500	@ tmp241,
	ldr	r2, [r4, r2]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	mov	r0, #1	@,
	ldr	r3, [r4, r3]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	movw	r1, #:lower16:.LC393	@,
	movt	r1, #:upper16:.LC393	@,
	str	ip, [sp, #0]	@ <variable>.TotalNal,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42455,
	b	.L4115	@
.L4126:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC390	@,
	movt	r1, #:upper16:.LC390	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42455,
	b	.L4115	@
	.fnend
	.size	mvc_dec_ref_pic_marking, .-mvc_dec_ref_pic_marking
	.align	2
	.global	mvc_pred_weight_table
	.type	mvc_pred_weight_table, %function
mvc_pred_weight_table:
	.fnstart
.LFB1624:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r6, #:lower16:11152044	@ tmp163,
	movt	r6, #:upper16:11152044	@ tmp163,
	movw	r2, #:lower16:11152040	@ tmp164,
	movt	r2, #:upper16:11152040	@ tmp164,
	movw	r1, #:lower16:.LC394	@,
	ldr	r3, [r0, r6]	@, <variable>.pPPS
	movt	r1, #:upper16:.LC394	@,
	ldr	r7, [r0, r2]	@ pSPS, <variable>.pSPS
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	movw	r4, #:lower16:11162688	@ tmp166,
	movt	r4, #:upper16:11162688	@ tmp166,
	str	r3, [fp, #-48]	@, %sfp
	bl	mvc_ue_v	@
	mov	r6, #1	@ tmp167,
	str	r0, [r5, r4]	@ prephitmp.9337, <variable>.CurrSlice.luma_log2_weight_denom
	mov	sl, r6, asl r0	@ y_default_weight, tmp167,
	ldr	r9, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r9, #0	@ <variable>.chroma_format_idc,
	bne	.L4153	@,
.L4129:
	cmp	r0, #7	@ prephitmp.9337,
	bhi	.L4152	@,
	movw	lr, #:lower16:11162692	@ tmp174,
	movt	lr, #:upper16:11162692	@ tmp174,
	ldr	r0, [r5, lr]	@ <variable>.CurrSlice.chroma_log2_weight_denom, <variable>.CurrSlice.chroma_log2_weight_denom
	cmp	r0, #7	@ <variable>.CurrSlice.chroma_log2_weight_denom,
	bhi	.L4152	@,
	movw	r1, #:lower16:11199460	@ tmp177,
	movt	r1, #:upper16:11199460	@ tmp177,
	ldr	r2, [r5, r1]	@ prephitmp.9303, <variable>.SeErrFlg
	cmp	r2, #0	@ prephitmp.9303,
	bne	.L4131	@,
	movw	r4, #:lower16:11162696	@ ivtmp.9332,
	movt	r4, #:upper16:11162696	@ ivtmp.9332,
	movw	r8, #:lower16:11162680	@ tmp241,
	add	r4, r5, r4	@ ivtmp.9332, pMvcCtx, ivtmp.9332
	movt	r8, #:upper16:11162680	@ tmp241,
	mov	r6, r2	@ i, prephitmp.9303
	b	.L4140	@
.L4136:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L4154	@,
.L4137:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l0_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l0_v
.L4139:
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	add	r4, r4, #4	@ ivtmp.9332, ivtmp.9332,
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	bcc	.L4155	@,
.L4140:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC397	@,
	movt	r1, #:upper16:.LC397	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.42286
	streq	r0, [r4, #768]	@ D.42286, <variable>.CurrSlice.wp_offset_l0_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l0_y
	beq	.L4136	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC398	@,
	movt	r1, #:upper16:.LC398	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC399	@,
	movt	r1, #:upper16:.LC399	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l0_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l0_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L4137	@,
.L4154:
	movw	r1, #:lower16:.LC400	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC400	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.42295
	bne	.L4156	@,
	ldr	r2, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r6, r6, #1	@ i, i,
	str	r0, [r4, #1024]	@ D.42295, <variable>.CurrSlice.wp_offset_l0_v
	cmp	r2, r6	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, i
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_u
	str	r0, [r4, #896]	@ D.42295, <variable>.CurrSlice.wp_offset_l0_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l0_v
	add	r4, r4, #4	@ ivtmp.9332, ivtmp.9332,
	bcs	.L4140	@,
.L4155:
	ldr	r0, [fp, #-48]	@, %sfp
	ldr	ip, [r0, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	ip, #1	@ <variable>.weighted_bipred_idc,
	beq	.L4157	@,
.L4141:
	movw	r2, #:lower16:11199460	@ tmp220,
	movt	r2, #:upper16:11199460	@ tmp220,
	ldr	r0, [r5, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@, D.42285,
	b	.L4134	@
.L4152:
	movw	r3, #:lower16:11199460	@ tmp176,
	movt	r3, #:upper16:11199460	@ tmp176,
	ldr	r2, [r5, r3]	@ prephitmp.9303, <variable>.SeErrFlg
.L4131:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC396	@,
	movt	r1, #:upper16:.LC396	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42285,
.L4134:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4156:
	movw	r1, #:lower16:.LC401	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC401	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC402	@,
	movt	r1, #:upper16:.LC402	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC401	@,
	movt	r1, #:upper16:.LC401	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l0_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC402	@,
	movt	r1, #:upper16:.LC402	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l0_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l0_v
	b	.L4139	@
.L4153:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC395	@,
	movt	r1, #:upper16:.LC395	@,
	bl	mvc_ue_v	@
	movw	ip, #:lower16:11162692	@ tmp170,
	movt	ip, #:upper16:11162692	@ tmp170,
	mov	r1, r0	@ D.42276,
	ldr	r0, [r5, r4]	@ prephitmp.9337, <variable>.CurrSlice.luma_log2_weight_denom
	mov	r9, r6, asl r1	@ uv_default_weight, tmp167,
	str	r1, [r5, ip]	@ D.42276, <variable>.CurrSlice.chroma_log2_weight_denom
	b	.L4129	@
.L4157:
	movw	r3, #:lower16:11162624	@ tmp199,
	movt	r3, #:upper16:11162624	@ tmp199,
	ldrb	lr, [r5, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	lr, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4141	@,
	movw	r8, #:lower16:11163080	@ ivtmp.9322,
	movt	r8, #:upper16:11163080	@ ivtmp.9322,
	add	r4, r5, r8	@ ivtmp.9322, pMvcCtx, ivtmp.9322
	mov	r6, #0	@ i.9336,
	movw	r8, #:lower16:11162684	@ tmp234,
	movt	r8, #:upper16:11162684	@ tmp234,
	b	.L4147	@
.L4143:
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	bne	.L4158	@,
.L4144:
	str	r3, [r4, #1024]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_v
	str	r3, [r4, #128]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_u
	str	r3, [r4, #896]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_offset_l1_u
	str	r3, [r4, #256]	@ <variable>.chroma_format_idc, <variable>.CurrSlice.wp_weight_l1_v
.L4146:
	ldr	r1, [r5, r8]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r6, r6, #1	@ i.9336, i.9336,
	add	r4, r4, #4	@ ivtmp.9322, ivtmp.9322,
	cmp	r1, r6	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, i.9336
	bcc	.L4141	@,
.L4147:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC403	@,
	movt	r1, #:upper16:.LC403	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.42311
	streq	r0, [r4, #768]	@ D.42311, <variable>.CurrSlice.wp_offset_l1_y
	streq	sl, [r4, #0]	@ y_default_weight, <variable>.CurrSlice.wp_weight_l1_y
	beq	.L4143	@,
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC404	@,
	movt	r1, #:upper16:.LC404	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC405	@,
	movt	r1, #:upper16:.LC405	@,
	str	r0, [r4, #0]	@, <variable>.CurrSlice.wp_weight_l1_y
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #768]	@, <variable>.CurrSlice.wp_offset_l1_y
	ldr	r3, [r7, #748]	@ <variable>.chroma_format_idc, <variable>.chroma_format_idc
	cmp	r3, #0	@ <variable>.chroma_format_idc,
	beq	.L4144	@,
.L4158:
	movw	r1, #:lower16:.LC406	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC406	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@ D.42319
	bne	.L4159	@,
	str	r0, [r4, #1024]	@ D.42319, <variable>.CurrSlice.wp_offset_l1_v
	str	r9, [r4, #128]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_u
	str	r0, [r4, #896]	@ D.42319, <variable>.CurrSlice.wp_offset_l1_u
	str	r9, [r4, #256]	@ uv_default_weight, <variable>.CurrSlice.wp_weight_l1_v
	b	.L4146	@
.L4159:
	movw	r1, #:lower16:.LC407	@,
	mov	r0, r5	@, pMvcCtx
	movt	r1, #:upper16:.LC407	@,
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC408	@,
	movt	r1, #:upper16:.LC408	@,
	str	r0, [r4, #128]	@, <variable>.CurrSlice.wp_weight_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC407	@,
	movt	r1, #:upper16:.LC407	@,
	str	r0, [r4, #896]	@, <variable>.CurrSlice.wp_offset_l1_u
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	movw	r1, #:lower16:.LC408	@,
	movt	r1, #:upper16:.LC408	@,
	str	r0, [r4, #256]	@, <variable>.CurrSlice.wp_weight_l1_v
	mov	r0, r5	@, pMvcCtx
	bl	mvc_se_v	@
	str	r0, [r4, #1024]	@, <variable>.CurrSlice.wp_offset_l1_v
	b	.L4146	@
	.fnend
	.size	mvc_pred_weight_table, .-mvc_pred_weight_table
	.align	2
	.global	mvc_ref_pic_list_reordering
	.type	mvc_ref_pic_list_reordering, %function
mvc_ref_pic_list_reordering:
	.fnstart
.LFB1623:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11164276	@ tmp162,
	movt	ip, #:upper16:11164276	@ tmp162,
	movw	r5, #:lower16:11162625	@ tmp171,
	movt	r5, #:upper16:11162625	@ tmp171,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	ldr	sl, [r0, ip]	@ <variable>.CurrSlice.mvcinfo_flag, <variable>.CurrSlice.mvcinfo_flag
	movw	r1, #:lower16:11152040	@ tmp164,
	ldrb	r0, [r0, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	r1, #:upper16:11152040	@ tmp164,
	cmp	sl, #0	@ <variable>.CurrSlice.mvcinfo_flag,
	movw	r2, #:lower16:11161572	@ tmp165,
	movw	r3, #:lower16:11161573	@ tmp168,
	movt	r2, #:upper16:11161572	@ tmp165,
	movne	sl, #5	@ max_reorder_num,
	moveq	sl, #3	@ max_reorder_num,
	cmp	r0, #0	@ <variable>.CurrSlice.field_pic_flag,
	ldr	r0, [r4, r1]	@ pSPS, <variable>.pSPS
	movt	r3, #:upper16:11161573	@ tmp168,
	mov	ip, #0	@ tmp166,
	strb	ip, [r4, r2]	@ tmp166, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	mov	r1, #1	@ tmp178,
	strb	ip, [r4, r3]	@ tmp166, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	ldr	r5, [r0, #2896]	@ <variable>.log2_max_frame_num_minus4, <variable>.log2_max_frame_num_minus4
	addne	r5, r5, #5	@ tmp173, <variable>.log2_max_frame_num_minus4,
	addeq	r5, r5, #4	@ tmp176, <variable>.log2_max_frame_num_minus4,
	mov	r2, r1, asl r5	@, tmp178,
	movw	r5, #:lower16:11162624	@ tmp179,
	movt	r5, #:upper16:11162624	@ tmp179,
	str	r2, [fp, #-48]	@, %sfp
	ldrb	r3, [r4, r5]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r3, #1	@ <variable>.CurrSlice.slice_type,
	bls	.L4199	@,
.L4165:
	movw	r2, #:lower16:11199460	@ tmp240,
	movt	r2, #:upper16:11199460	@ tmp240,
	ldr	r3, [r4, r2]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	mvnne	r0, #0	@ D.42190,
	beq	.L4186	@,
.L4172:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4186:
	mov	r0, #0	@ D.42190,
	b	.L4172	@
.L4199:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC409	@,
	movt	r1, #:upper16:.LC409	@,
	bl	mvc_u_1	@
	movw	r3, #:lower16:11161572	@ tmp182,
	movt	r3, #:upper16:11161572	@ tmp182,
	uxtb	r0, r0	@ D.42178,
	strb	r0, [r4, r3]	@ D.42178, <variable>.CurrReorder.ref_pic_list_reordering_flag_l0
	cmp	r0, #0	@ D.42178,
	ldreqb	r3, [r4, r5]	@ zero_extendqisi2	@ prephitmp.9353, <variable>.CurrSlice.slice_type
	beq	.L4167	@,
	movw	r8, #:lower16:11162680	@ tmp185,
	movt	r8, #:upper16:11162680	@ tmp185,
	ldr	r7, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	cmn	r7, #2	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	beq	.L4168	@,
	movw	r9, #:lower16:11161576	@ ivtmp.9376,
	movt	r9, #:upper16:11161576	@ ivtmp.9376,
	add	r5, r4, r9	@ ivtmp.9376, pMvcCtx, ivtmp.9376
	mov	r7, #0	@ i,
	movw	r9, #:lower16:11199460	@ tmp258,
	movt	r9, #:upper16:11199460	@ tmp258,
	b	.L4180	@
.L4175:
	cmp	r0, #2	@ D.42183,
	beq	.L4200	@,
	sub	r0, r0, #4	@ tmp199, D.42183,
	cmp	r0, #1	@ tmp199,
	bls	.L4201	@,
.L4178:
	ldr	ip, [r4, r8]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r7, r7, #1	@ i, i,
	add	r5, r5, #4	@ ivtmp.9376, ivtmp.9376,
	add	r3, ip, #2	@ prephitmp.9384, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
	cmp	r3, r7	@ prephitmp.9384, i
	bls	.L4174	@,
.L4180:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC410	@,
	movt	r1, #:upper16:.LC410	@,
	bl	mvc_ue_v	@
	cmp	sl, r0	@ max_reorder_num, D.42183
	str	r0, [r5, #0]	@ D.42183, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	bcc	.L4202	@,
	ldr	r3, [r4, r9]	@ prephitmp.9387, <variable>.SeErrFlg
	movw	r6, #:lower16:11199460	@ tmp190,
	movt	r6, #:upper16:11199460	@ tmp190,
	cmp	r3, #0	@ prephitmp.9387,
	bne	.L4170	@,
	cmp	r0, #3	@ D.42183,
	beq	.L4203	@,
	cmp	r0, #1	@ D.42183,
	bhi	.L4175	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC412	@,
	movt	r1, #:upper16:.LC412	@,
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, r0	@, D.42194
	str	r0, [r5, #264]	@ D.42194, <variable>.CurrReorder.abs_diff_pic_num_minus1_l0
	bls	.L4204	@,
	ldr	r3, [r4, r9]	@ prephitmp.9383, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9383,
	beq	.L4178	@,
.L4177:
	mov	r2, r0	@, D.42194
	movw	r1, #:lower16:.LC413	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC413	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4203:
	movw	r2, #:lower16:11162680	@ tmp192,
	movt	r2, #:upper16:11162680	@ tmp192,
	ldr	r3, [r4, r2]	@ <variable>.CurrSlice.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	add	r3, r3, #2	@ prephitmp.9384, <variable>.CurrSlice.num_ref_idx_l0_active_minus1,
.L4174:
	cmp	r7, r3	@ i, prephitmp.9384
	beq	.L4181	@,
.L4198:
	movw	ip, #:lower16:11162624	@ tmp211,
	movt	ip, #:upper16:11162624	@ tmp211,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ prephitmp.9353, <variable>.CurrSlice.slice_type
.L4167:
	cmp	r3, #1	@ prephitmp.9353,
	bne	.L4165	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC417	@,
	movt	r1, #:upper16:.LC417	@,
	bl	mvc_u_1	@
	movw	r3, #:lower16:11161573	@ tmp214,
	movt	r3, #:upper16:11161573	@ tmp214,
	uxtb	r0, r0	@ D.42219,
	strb	r0, [r4, r3]	@ D.42219, <variable>.CurrReorder.ref_pic_list_reordering_flag_l1
	cmp	r0, #0	@ D.42219,
	beq	.L4165	@,
	movw	r9, #:lower16:11162684	@ tmp216,
	movt	r9, #:upper16:11162684	@ tmp216,
	ldr	lr, [r4, r9]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmn	lr, #2	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	beq	.L4165	@,
	movw	r6, #:lower16:11161708	@ ivtmp.9368,
	movt	r6, #:upper16:11161708	@ ivtmp.9368,
	movw	r8, #:lower16:11199460	@ tmp252,
	add	r6, r4, r6	@ ivtmp.9368, pMvcCtx, ivtmp.9368
	movt	r8, #:upper16:11199460	@ tmp252,
	mov	r5, #0	@ i.9386,
	b	.L4193	@
.L4192:
	add	r5, r5, #1	@ i.9386, i.9386,
	add	r6, r6, #4	@ ivtmp.9368, ivtmp.9368,
	cmp	r3, r5	@ D.42248, i.9386
	bls	.L4165	@,
.L4193:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC418	@,
	movt	r1, #:upper16:.LC418	@,
	bl	mvc_ue_v	@
	cmp	sl, r0	@ max_reorder_num, D.42223
	str	r0, [r6, #0]	@ D.42223, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	bcc	.L4205	@,
	ldr	r3, [r4, r8]	@ prephitmp.9355, <variable>.SeErrFlg
	movw	r7, #:lower16:11199460	@ tmp221,
	movt	r7, #:upper16:11199460	@ tmp221,
	cmp	r3, #0	@ prephitmp.9355,
	bne	.L4184	@,
	cmp	r0, #3	@ D.42223,
	beq	.L4186	@,
	cmp	r0, #1	@ D.42223,
	bls	.L4206	@,
	cmp	r0, #2	@ D.42223,
	beq	.L4207	@,
	sub	r0, r0, #4	@ tmp228, D.42223,
	cmp	r0, #1	@ tmp228,
	bls	.L4208	@,
.L4190:
	ldr	r2, [r4, r9]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	add	r3, r2, #2	@ D.42248, <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	cmp	r3, r5	@ D.42248, i.9386
	bne	.L4192	@,
	movw	ip, #:lower16:2790428	@ tmp232,
	movt	ip, #:upper16:2790428	@ tmp232,
	add	r1, r2, ip	@ tmp232, <variable>.CurrSlice.num_ref_idx_l1_active_minus1, tmp232
	add	lr, r4, r1, asl #2	@, tmp236, pMvcCtx, tmp232,
	ldr	ip, [lr, #4]	@ tmp238, <variable>.CurrReorder.reordering_of_pic_nums_idc_l1
	cmp	ip, #3	@ tmp238,
	beq	.L4192	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC424	@,
	movt	r1, #:upper16:.LC424	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4206:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC420	@,
	movt	r1, #:upper16:.LC420	@,
	bl	mvc_ue_v	@
	ldr	r1, [fp, #-48]	@, %sfp
	cmp	r1, r0	@, D.42232
	str	r0, [r6, #264]	@ D.42232, <variable>.CurrReorder.abs_diff_pic_num_minus1_l1
	bls	.L4209	@,
	ldr	r3, [r4, r8]	@ prephitmp.9388, <variable>.SeErrFlg
	cmp	r3, #0	@ prephitmp.9388,
	beq	.L4190	@,
.L4189:
	mov	r2, r0	@, D.42232
	movw	r1, #:lower16:.LC421	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC421	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4207:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC422	@,
	movt	r1, #:upper16:.LC422	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #524]	@, <variable>.CurrReorder.long_term_pic_idx_l1
	b	.L4190	@
.L4208:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC423	@,
	movt	r1, #:upper16:.LC423	@,
	bl	mvc_ue_v	@
	str	r0, [r6, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l1
	b	.L4190	@
.L4205:
	movw	r2, #:lower16:11199460	@ tmp220,
	movt	r2, #:upper16:11199460	@ tmp220,
	ldr	r3, [r4, r2]	@ prephitmp.9355, <variable>.SeErrFlg
.L4184:
	mov	r2, r0	@, D.42223
	movw	r1, #:lower16:.LC419	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC419	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4200:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC414	@,
	movt	r1, #:upper16:.LC414	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #528]	@, <variable>.CurrReorder.long_term_pic_idx_l0
	b	.L4178	@
.L4201:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC415	@,
	movt	r1, #:upper16:.LC415	@,
	bl	mvc_ue_v	@
	str	r0, [r5, #784]	@, <variable>.CurrReorder.abs_diff_view_idx_minus1_l0
	b	.L4178	@
.L4202:
	movw	lr, #:lower16:11199460	@ tmp189,
	movt	lr, #:upper16:11199460	@ tmp189,
	ldr	r3, [r4, lr]	@ prephitmp.9387, <variable>.SeErrFlg
.L4170:
	mov	r2, r0	@, D.42183
	movw	r1, #:lower16:.LC411	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC411	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4209:
	ldr	r3, [r4, r7]	@ prephitmp.9388, <variable>.SeErrFlg
	b	.L4189	@
.L4168:
	mov	r7, #0	@ i,
.L4181:
	movw	r1, #:lower16:2790392	@ tmp204,
	movt	r1, #:upper16:2790392	@ tmp204,
	add	r2, r7, r1	@ tmp204, i, tmp204
	add	r3, r4, r2, asl #2	@, tmp208, pMvcCtx, tmp204,
	ldr	lr, [r3, #8]	@ tmp210, <variable>.CurrReorder.reordering_of_pic_nums_idc_l0
	cmp	lr, #3	@ tmp210,
	beq	.L4198	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC416	@,
	movt	r1, #:upper16:.LC416	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42190,
	b	.L4172	@
.L4204:
	ldr	r3, [r4, r6]	@ prephitmp.9383, <variable>.SeErrFlg
	b	.L4177	@
	.fnend
	.size	mvc_ref_pic_list_reordering, .-mvc_ref_pic_list_reordering
	.align	2
	.global	MVC_ProcessSliceHeaderSecondPart
	.type	MVC_ProcessSliceHeaderSecondPart, %function
MVC_ProcessSliceHeaderSecondPart:
	.fnstart
.LFB1628:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	ip, #:lower16:11155236	@ tmp156,
	movt	ip, #:upper16:11155236	@ tmp156,
	movw	r2, #:lower16:11162632	@ tmp155,
	movt	r2, #:upper16:11162632	@ tmp155,
	movw	r3, #:lower16:11152044	@ tmp154,
	ldr	r5, [r0, ip]	@ <variable>.MaxPpsNum, <variable>.MaxPpsNum
	movt	r3, #:upper16:11152044	@ tmp154,
	ldr	r2, [r0, r2]	@ D.42630, <variable>.CurrSlice.pic_parameter_set_id
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	sub	r1, r5, #1	@ tmp157, <variable>.MaxPpsNum,
	ldr	r5, [r0, r3]	@ pPPS, <variable>.pPPS
	cmp	r1, r2	@ tmp157, D.42630
	bcc	.L4211	@,
	movw	r1, #:lower16:11199460	@ tmp159,
	movt	r1, #:upper16:11199460	@ tmp159,
	ldr	lr, [r0, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4211	@,
	bl	MVC_PPSSPSCheck	@
	cmp	r0, #0	@,
	bne	.L4243	@,
	movw	r6, #:lower16:11162624	@ tmp163,
	movt	r6, #:upper16:11162624	@ tmp163,
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	beq	.L4244	@,
.L4215:
	ldr	r2, [r5, #36]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.num_ref_idx_l0_active_minus1
	movw	r7, #:lower16:11162624	@ tmp172,
	movt	r7, #:upper16:11162624	@ tmp172,
	movw	r6, #:lower16:11162680	@ tmp168,
	movt	r6, #:upper16:11162680	@ tmp168,
	movw	r8, #:lower16:11162684	@ tmp170,
	ldrb	r3, [r4, r7]	@ zero_extendqisi2	@ prephitmp.9429, <variable>.CurrSlice.slice_type
	movt	r8, #:upper16:11162684	@ tmp170,
	str	r2, [r4, r6]	@ <variable>.num_ref_idx_l0_active_minus1, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	ldr	r2, [r5, #40]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.num_ref_idx_l1_active_minus1
	cmp	r3, #1	@ prephitmp.9429,
	str	r2, [r4, r8]	@ <variable>.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bls	.L4245	@,
.L4216:
	cmp	r3, #2	@ prephitmp.9429,
	beq	.L4246	@,
.L4224:
	cmp	r3, #1	@ prephitmp.9429,
	mov	r0, r4	@, pMvcCtx
	movwne	r3, #:lower16:11162684	@ tmp203,
	movtne	r3, #:upper16:11162684	@ tmp203,
	movne	r2, #32	@ tmp204,
	strne	r2, [r4, r3]	@ tmp204, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	bl	mvc_ref_pic_list_reordering	@
	cmp	r0, #0	@,
	bne	.L4247	@,
	ldrb	r6, [r5, #2]	@ zero_extendqisi2	@ <variable>.weighted_pred_flag, <variable>.weighted_pred_flag
	cmp	r6, #0	@ <variable>.weighted_pred_flag,
	beq	.L4227	@,
	movw	r3, #:lower16:11162624	@ tmp207,
	movt	r3, #:upper16:11162624	@ tmp207,
	ldrb	r2, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #0	@ <variable>.CurrSlice.slice_type,
	moveq	r3, #1	@ prephitmp.9405,
	beq	.L4230	@
.L4227:
	ldr	r1, [r5, #44]	@ <variable>.weighted_bipred_idc, <variable>.weighted_bipred_idc
	cmp	r1, #1	@ <variable>.weighted_bipred_idc,
	beq	.L4248	@,
.L4229:
	mov	r3, #0	@ prephitmp.9405,
.L4230:
	movw	r6, #:lower16:11162631	@ tmp212,
	movt	r6, #:upper16:11162631	@ tmp212,
	mov	r2, r3	@, prephitmp.9405
	mov	r0, #19	@,
	strb	r3, [r4, r6]	@ prephitmp.9405, <variable>.CurrSlice.apply_weights_flag
	movw	r1, #:lower16:.LC432	@,
	movt	r1, #:upper16:.LC432	@,
	bl	dprint_vfmw	@
	ldrb	r0, [r4, r6]	@ zero_extendqisi2	@ <variable>.CurrSlice.apply_weights_flag, <variable>.CurrSlice.apply_weights_flag
	movw	r2, #:lower16:11162688	@ tmp215,
	movw	r3, #:lower16:11162692	@ tmp217,
	movt	r2, #:upper16:11162688	@ tmp215,
	movt	r3, #:upper16:11162692	@ tmp217,
	cmp	r0, #0	@ <variable>.CurrSlice.apply_weights_flag,
	mov	r1, #0	@ tmp216,
	str	r1, [r4, r2]	@ tmp216, <variable>.CurrSlice.luma_log2_weight_denom
	str	r1, [r4, r3]	@ tmp216, <variable>.CurrSlice.chroma_log2_weight_denom
	bne	.L4249	@,
.L4231:
	movw	ip, #:lower16:11162656	@ tmp222,
	movt	ip, #:upper16:11162656	@ tmp222,
	ldr	lr, [r4, ip]	@ <variable>.CurrSlice.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	cmp	lr, #0	@ <variable>.CurrSlice.nal_ref_idc,
	bne	.L4250	@,
.L4232:
	movw	r6, #:lower16:11164232	@ tmp225,
	movt	r6, #:upper16:11164232	@ tmp225,
	mov	r3, #0	@ tmp226,
	str	r3, [r4, r6]	@ tmp226, <variable>.CurrSlice.cabac_init_idc
	ldrb	r1, [r5, #0]	@ zero_extendqisi2	@ <variable>.entropy_coding_mode_flag, <variable>.entropy_coding_mode_flag
	cmp	r1, #0	@ <variable>.entropy_coding_mode_flag,
	beq	.L4233	@,
	movw	r0, #:lower16:11162624	@ tmp228,
	movt	r0, #:upper16:11162624	@ tmp228,
	ldrb	r2, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r2, #1	@ <variable>.CurrSlice.slice_type,
	bls	.L4251	@,
.L4233:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC437	@,
	movt	r1, #:upper16:.LC437	@,
	movw	r6, #:lower16:11164240	@ tmp237,
	bl	mvc_se_v	@
	movt	r6, #:upper16:11164240	@ tmp237,
	movw	r2, #:lower16:11164236	@ tmp236,
	movw	r7, #:lower16:11164244	@ tmp239,
	movt	r2, #:upper16:11164236	@ tmp236,
	movt	r7, #:upper16:11164244	@ tmp239,
	movw	r8, #:lower16:11164248	@ tmp241,
	movt	r8, #:upper16:11164248	@ tmp241,
	mov	r1, #0	@ tmp238,
	str	r1, [r4, r6]	@ tmp238, <variable>.CurrSlice.disable_deblocking_filter_idc
	str	r1, [r4, r8]	@ tmp238, <variable>.CurrSlice.slice_beta_offset_div2
	str	r1, [r4, r7]	@ tmp238, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	str	r0, [r4, r2]	@, <variable>.CurrSlice.slice_qp_delta
	ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ <variable>.deblocking_filter_control_present_flag, <variable>.deblocking_filter_control_present_flag
	cmp	r3, r1	@ <variable>.deblocking_filter_control_present_flag,
	bne	.L4252	@,
.L4235:
	mov	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4252:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC438	@,
	movt	r1, #:upper16:.LC438	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.42722,
	str	r0, [r4, r6]	@ D.42722, <variable>.CurrSlice.disable_deblocking_filter_idc
	bhi	.L4236	@,
	movw	r5, #:lower16:11199460	@ tmp246,
	movt	r5, #:upper16:11199460	@ tmp246,
	ldr	lr, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4236	@,
	cmp	r0, #1	@ D.42722,
	beq	.L4235	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC440	@,
	movt	r1, #:upper16:.LC440	@,
	bl	mvc_se_v	@
	add	ip, r0, #6	@ tmp251, D.42730,
	str	r0, [r4, r7]	@ D.42730, <variable>.CurrSlice.slice_alpha_c0_offset_div2
	cmp	ip, #12	@ tmp251,
	bhi	.L4238	@,
	ldr	r0, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4238	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC442	@,
	movt	r1, #:upper16:.LC442	@,
	bl	mvc_se_v	@
	add	r1, r0, #6	@ tmp257, D.42738,
	str	r0, [r4, r8]	@ D.42738, <variable>.CurrSlice.slice_beta_offset_div2
	cmp	r1, #12	@ tmp257,
	bhi	.L4240	@,
	ldr	r3, [r4, r5]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4235	@,
.L4240:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC443	@,
	movt	r1, #:upper16:.LC443	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4249:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_pred_weight_table	@
	cmp	r0, #0	@,
	beq	.L4231	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC433	@,
	movt	r1, #:upper16:.LC433	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4250:
	mov	r0, r4	@, pMvcCtx
	bl	mvc_dec_ref_pic_marking	@
	cmp	r0, #0	@,
	beq	.L4232	@,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC434	@,
	movt	r1, #:upper16:.LC434	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4246:
	movw	lr, #:lower16:11162624	@ tmp202,
	movw	r2, #:lower16:11162680	@ tmp200,
	movt	lr, #:upper16:11162624	@ tmp202,
	movt	r2, #:upper16:11162680	@ tmp200,
	mov	ip, #32	@ tmp201,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ prephitmp.9429, <variable>.CurrSlice.slice_type
	str	ip, [r4, r2]	@ tmp201, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	b	.L4224	@
.L4248:
	movw	ip, #:lower16:11162624	@ tmp210,
	movt	ip, #:upper16:11162624	@ tmp210,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4229	@,
	mov	r3, #1	@ prephitmp.9405,
	b	.L4230	@
.L4244:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC425	@,
	movt	r1, #:upper16:.LC425	@,
	movw	r7, #:lower16:11162630	@ tmp166,
	bl	mvc_u_1	@
	movt	r7, #:upper16:11162630	@ tmp166,
	strb	r0, [r4, r7]	@, <variable>.CurrSlice.direct_spatial_mv_pred_flag
	b	.L4215	@
.L4245:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC426	@,
	movt	r1, #:upper16:.LC426	@,
	bl	mvc_u_1	@
	cmp	r0, #0	@,
	ldreq	r3, [r4, r6]	@ prephitmp.9407, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4253	@,
.L4218:
	movw	lr, #:lower16:11162625	@ tmp182,
	movt	lr, #:upper16:11162625	@ tmp182,
	ldrb	r2, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	cmp	r2, #0	@ <variable>.CurrSlice.field_pic_flag,
	bne	.L4219	@,
	cmp	r3, #15	@ prephitmp.9407,
	bhi	.L4220	@,
	movw	r1, #:lower16:11162684	@ tmp184,
	movt	r1, #:upper16:11162684	@ tmp184,
	ldr	r3, [r4, r1]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r3, #15	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L4221	@,
	movw	ip, #:lower16:11162624	@ tmp186,
	movt	ip, #:upper16:11162624	@ tmp186,
	ldrb	r0, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	r0, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4221	@,
.L4220:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC429	@,
	movt	r1, #:upper16:.LC429	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4221:
	movw	r3, #:lower16:11199460	@ tmp188,
	movt	r3, #:upper16:11199460	@ tmp188,
	ldr	lr, [r4, r3]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	bne	.L4220	@,
.L4242:
	movw	r0, #:lower16:11162624	@ tmp198,
	movt	r0, #:upper16:11162624	@ tmp198,
	ldrb	r3, [r4, r0]	@ zero_extendqisi2	@ prephitmp.9429, <variable>.CurrSlice.slice_type
	b	.L4216	@
.L4211:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC359	@,
	movt	r1, #:upper16:.LC359	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4251:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC435	@,
	movt	r1, #:upper16:.LC435	@,
	bl	mvc_ue_v	@
	cmp	r0, #2	@ D.42712,
	str	r0, [r4, r6]	@ D.42712, <variable>.CurrSlice.cabac_init_idc
	bhi	.L4234	@,
	movw	ip, #:lower16:11199460	@ tmp232,
	movt	ip, #:upper16:11199460	@ tmp232,
	ldr	lr, [r4, ip]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	lr, #0	@ <variable>.SeErrFlg,
	beq	.L4233	@,
.L4234:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC436	@,
	movt	r1, #:upper16:.LC436	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4219:
	cmp	r3, #31	@ prephitmp.9407,
	bhi	.L4222	@,
	movw	r0, #:lower16:11162684	@ tmp192,
	movt	r0, #:upper16:11162684	@ tmp192,
	ldr	r1, [r4, r0]	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	cmp	r1, #31	@ <variable>.CurrSlice.num_ref_idx_l1_active_minus1,
	bls	.L4223	@,
	movw	lr, #:lower16:11162624	@ tmp194,
	movt	lr, #:upper16:11162624	@ tmp194,
	ldrb	ip, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	bne	.L4223	@,
.L4222:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC430	@,
	movt	r1, #:upper16:.LC430	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4223:
	movw	r1, #:lower16:11199460	@ tmp196,
	movt	r1, #:upper16:11199460	@ tmp196,
	ldr	r3, [r4, r1]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r3, #0	@ <variable>.SeErrFlg,
	beq	.L4242	@,
	b	.L4222	@
.L4253:
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC427	@,
	movt	r1, #:upper16:.LC427	@,
	bl	mvc_ue_v	@
	ldrb	ip, [r4, r7]	@ zero_extendqisi2	@ <variable>.CurrSlice.slice_type, <variable>.CurrSlice.slice_type
	cmp	ip, #1	@ <variable>.CurrSlice.slice_type,
	mov	r3, r0	@ prephitmp.9407,
	str	r0, [r4, r6]	@ prephitmp.9407, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	bne	.L4218	@,
	mov	r0, r4	@, pMvcCtx
	movw	r1, #:lower16:.LC428	@,
	movt	r1, #:upper16:.LC428	@,
	bl	mvc_ue_v	@
	ldr	r3, [r4, r6]	@ prephitmp.9407, <variable>.CurrSlice.num_ref_idx_l0_active_minus1
	str	r0, [r4, r8]	@, <variable>.CurrSlice.num_ref_idx_l1_active_minus1
	b	.L4218	@
.L4238:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC441	@,
	movt	r1, #:upper16:.LC441	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4236:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC439	@,
	movt	r1, #:upper16:.LC439	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4243:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC360	@,
	movt	r1, #:upper16:.LC360	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
.L4247:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC431	@,
	movt	r1, #:upper16:.LC431	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42634,
	ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, pc}	@
	.fnend
	.size	MVC_ProcessSliceHeaderSecondPart, .-MVC_ProcessSliceHeaderSecondPart
	.align	2
	.global	MVC_DecSlice
	.type	MVC_DecSlice, %function
MVC_DecSlice:
	.fnstart
.LFB1632:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #16
	sub	sp, sp, #16	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r3, #:lower16:11199464	@ tmp164,
	movt	r3, #:upper16:11199464	@ tmp164,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	movw	r1, #:lower16:.LC444	@,
	movt	r1, #:upper16:.LC444	@,
	ldr	lr, [r0, r3]	@ <variable>.TotalNal, <variable>.TotalNal
	mov	r0, #22	@,
	sub	r2, lr, #1	@, <variable>.TotalNal,
	bl	dprint_vfmw	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r2, #:lower16:11162627	@ tmp167,
	movt	r2, #:upper16:11162627	@ tmp167,
	movw	r3, #:lower16:11162656	@ tmp171,
	movt	r3, #:upper16:11162656	@ tmp171,
	ldrb	ip, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	mov	r0, r4	@, pMvcCtx
	strb	ip, [r4, r2]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r2, [r1, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r2, [r4, r3]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4258	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderSecondPart	@
	cmp	r0, #0	@,
	bne	.L4258	@,
	movw	r0, #:lower16:11199444	@ tmp179,
	movt	r0, #:upper16:11199444	@ tmp179,
	ldr	r3, [r4, r0]	@ temp.9483, <variable>.SliceParaNum
	cmp	r3, #0	@ temp.9483,
	beq	.L4260	@,
	movw	r5, #:lower16:11197380	@ tmp186,
	movt	r5, #:upper16:11197380	@ tmp186,
	add	r2, r4, r5	@ tmp186, pMvcCtx, tmp186
	mov	r5, r3, asl #2	@ D.55526, temp.9483,
	sub	r6, r5, #4	@ tmp257, D.55526,
	ldr	r3, [r2, #0]	@ D.42911, <variable>.pSliceNal
	ubfx	r0, r6, #2, #1	@ tmp258, tmp257,,
	ldr	r6, [r3, #4]	@ Addr0, <variable>.streamBuffer
	cmp	r6, #0	@ Addr0,
	ldrne	r7, [r3, #8]	@ Size0, <variable>.bitstream_length
	beq	.L4338	@,
.L4311:
	ldr	lr, [r3, #32]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr1,
	ldrne	r1, [r3, #36]	@ Size1, <variable>.bitstream_length
	moveq	r1, lr	@ Size1, Addr1
	cmp	lr, #0	@ Addr1,
	add	r3, r7, r1	@ Size, Size0, Size1
	movne	r6, lr	@ PrevNalAddr, Addr1
	movne	r7, r1	@ PrevNalSize, Size1
	mov	r1, #4	@ ivtmp.9463,
	cmp	r1, r5	@ ivtmp.9463, D.55526
	beq	.L4260	@,
	cmp	r0, #0	@ tmp258,
	beq	.L4272	@,
	movw	r0, #:lower16:11197384	@ tmp289,
	movt	r0, #:upper16:11197384	@ tmp289,
	add	ip, r4, r0	@ tmp289, pMvcCtx, tmp289
	ldr	r0, [ip, #0]	@ D.42911, <variable>.pSliceNal
	ldr	ip, [r0, #4]	@ Addr0, <variable>.streamBuffer
	ldr	r2, [r0, #32]	@ Addr1, <variable>.streamBuffer
	cmp	ip, #0	@ Addr0,
	ldrne	lr, [r0, #8]	@ Size0, <variable>.bitstream_length
	moveq	lr, ip	@ Size0, Addr0
	cmp	r2, #0	@ Addr1,
	ldrne	r0, [r0, #36]	@ Size1, <variable>.bitstream_length
	moveq	r0, r2	@ Size1, Addr1
	cmp	r6, #0	@ PrevNalAddr,
	addeq	r3, lr, r3	@ D.42931, Size0, Size
	addeq	r3, r3, r0	@ Size, D.42931, Size1
	beq	.L4321	@,
	cmp	ip, r6	@ Addr0, PrevNalAddr
	bls	.L4339	@,
	rsb	r7, r7, ip	@ tmp299, PrevNalSize, Addr0
	rsb	r6, r6, r7	@ tmp300, PrevNalAddr, tmp299
	add	r6, r6, lr	@ Size0.9465, tmp300, Size0
.L4323:
	add	r3, r0, r3	@ Size.9471, Size1, Size
	add	r3, r3, r6	@ Size, Size.9471, Size0.9465
.L4321:
	cmp	r2, #0	@ Addr1,
	moveq	r6, ip	@ PrevNalAddr, Addr0
	moveq	r7, lr	@ PrevNalSize, Size0
	bne	.L4333	@,
.L4334:
	add	r1, r1, #4	@ ivtmp.9463, tmp259,
	cmp	r1, r5	@ ivtmp.9463, D.55526
	beq	.L4260	@,
.L4272:
	add	r0, r4, r1	@ tmp262, pMvcCtx, ivtmp.9463
	movw	ip, #:lower16:11197380	@ tmp264,
	movt	ip, #:upper16:11197380	@ tmp264,
	add	r2, r0, ip	@ tmp264, tmp262, tmp264
	ldr	ip, [r2, #0]	@ D.42911, <variable>.pSliceNal
	ldr	lr, [ip, #4]	@ Addr0, <variable>.streamBuffer
	ldr	r0, [ip, #32]	@ Addr1, <variable>.streamBuffer
	cmp	lr, #0	@ Addr0,
	ldrne	r2, [ip, #8]	@ Size0, <variable>.bitstream_length
	moveq	r2, lr	@ Size0, Addr0
	cmp	r0, #0	@ Addr1,
	moveq	ip, r0	@ Size1, Addr1
	ldrne	ip, [ip, #36]	@ Size1, <variable>.bitstream_length
	cmp	r6, #0	@ PrevNalAddr,
	addeq	r3, r2, r3	@ D.42931, Size0, Size
	addeq	r6, r3, ip	@ Size, D.42931, Size1
	beq	.L4269	@,
	cmp	lr, r6	@ Addr0, PrevNalAddr
	add	r3, ip, r3	@ Size.9471, Size1, Size
	rsbhi	r6, r6, lr	@ tmp189, PrevNalAddr, Addr0
	rsbhi	r7, r7, r6	@ tmp190, PrevNalSize, tmp189
	movls	r7, r2	@ Size0.9465, Size0
	addhi	r7, r7, r2	@ Size0.9465, tmp190, Size0
	add	r6, r3, r7	@ Size, Size.9471, Size0.9465
.L4269:
	cmp	r0, #0	@ Addr1,
	add	r1, r1, #4	@ tmp259, ivtmp.9463,
	movne	lr, r0	@ PrevNalAddr, Addr1
	movne	r3, ip	@ PrevNalSize, Size1
	add	r0, r4, r1	@ tmp273, pMvcCtx, tmp259
	movw	ip, #:lower16:11197380	@ tmp275,
	movt	ip, #:upper16:11197380	@ tmp275,
	moveq	r3, r2	@ PrevNalSize, Size0
	add	r2, r0, ip	@ tmp275, tmp273, tmp275
	ldr	r0, [r2, #0]	@ D.42911, <variable>.pSliceNal
	ldr	ip, [r0, #4]	@ Addr0, <variable>.streamBuffer
	cmp	ip, #0	@ Addr0,
	ldrne	r7, [r0, #8]	@ Size0, <variable>.bitstream_length
	moveq	r7, ip	@ Size0, Addr0
.L4326:
	ldr	r2, [r0, #32]	@ Addr1, <variable>.streamBuffer
	cmp	r2, #0	@ Addr1,
	ldrne	r0, [r0, #36]	@ Size1, <variable>.bitstream_length
	moveq	r0, r2	@ Size1, Addr1
	cmp	lr, #0	@ PrevNalAddr,
	addeq	r3, r7, r6	@ D.42931, Size0, Size
	addeq	r3, r3, r0	@ Size, D.42931, Size1
	beq	.L4330	@,
	cmp	ip, lr	@ Addr0, PrevNalAddr
	bls	.L4340	@,
	rsb	r3, r3, ip	@ tmp308, PrevNalSize, Addr0
	rsb	lr, lr, r3	@ tmp309, PrevNalAddr, tmp308
	add	lr, lr, r7	@ Size0.9465, tmp309, Size0
.L4332:
	add	r3, r0, r6	@ Size.9471, Size1, Size
	add	r3, r3, lr	@ Size, Size.9471, Size0.9465
.L4330:
	cmp	r2, #0	@ Addr1,
	moveq	r6, ip	@ PrevNalAddr, Addr0
	beq	.L4334	@,
.L4333:
	add	r1, r1, #4	@ ivtmp.9463, tmp259,
	mov	r6, r2	@ PrevNalAddr, Addr1
	cmp	r1, r5	@ ivtmp.9463, D.55526
	mov	r7, r0	@ PrevNalSize, Size1
	bne	.L4272	@,
.L4260:
	movw	r1, #:lower16:11196708	@ tmp192,
	movw	ip, #:lower16:11196704	@ tmp193,
	movt	r1, #:upper16:11196708	@ tmp192,
	movt	ip, #:upper16:11196704	@ tmp193,
	movw	r2, #:lower16:11199504	@ tmp191,
	movt	r2, #:upper16:11199504	@ tmp191,
	ldr	r0, [r4, r1]	@ <variable>.CurrPic.pic_height_in_mb, <variable>.CurrPic.pic_height_in_mb
	movw	r1, #1620	@ tmp196,
	ldr	lr, [r4, ip]	@ <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_width_in_mb
	str	r3, [r4, r2]	@ Size, <variable>.MaxBytesReceived
	mul	ip, lr, r0	@ TotalMbs, <variable>.CurrPic.pic_width_in_mb, <variable>.CurrPic.pic_height_in_mb
	cmp	ip, r1	@ TotalMbs, tmp196
	movgt	ip, ip, asl #7	@ MaxStreamThr, TotalMbs,
	ble	.L4341	@,
.L4274:
	movw	r2, #:lower16:11199444	@ tmp202,
	movw	lr, #:lower16:11155228	@ tmp203,
	movt	r2, #:upper16:11199444	@ tmp202,
	movt	lr, #:upper16:11155228	@ tmp203,
	ldr	r2, [r4, r2]	@ D.42940, <variable>.SliceParaNum
	ldr	r1, [r4, lr]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r2, r1	@ D.42940, <variable>.MaxSliceNum
	bcs	.L4276	@,
	cmp	r3, ip	@ Size, MaxStreamThr
	bhi	.L4276	@,
	movw	r2, #:lower16:11162629	@ tmp215,
	movt	r2, #:upper16:11162629	@ tmp215,
	ldrb	r1, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	cmp	r1, #0	@ <variable>.CurrSlice.new_pic_flag,
	bne	.L4342	@,
.L4279:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_PicTypeStatistic	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecList	@
	subs	r2, r0, #0	@ ret.9474,
	bne	.L4343	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_IsRefListWrong	@
	subs	r5, r0, #0	@ ret.9475,
	bne	.L4344	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_CalcStreamBits	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WriteSliceMsg	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ExitSlice	@
	movw	r3, #:lower16:11199500	@ tmp244,
	movt	r3, #:upper16:11199500	@ tmp244,
	movw	r2, #:lower16:11198004	@ tmp242,
	movt	r2, #:upper16:11198004	@ tmp242,
	mov	r0, r5	@ D.42904, ret.9475
	ldr	r1, [r4, r3]	@ <variable>.SliceNumInPic, <variable>.SliceNumInPic
	mov	ip, #1	@ tmp243,
	str	ip, [r4, r2]	@ tmp243, <variable>.AllowStartDec
	add	r2, r1, ip	@ tmp247, <variable>.SliceNumInPic,
	str	r2, [r4, r3]	@ tmp247, <variable>.SliceNumInPic
.L4257:
	sub	sp, fp, #28
	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
.L4340:
	mov	lr, r7	@ Size0.9465, Size0
	b	.L4332	@
.L4341:
	add	r0, ip, ip, asl #1	@, tmp199, TotalMbs, TotalMbs,
	movw	lr, #32769	@ tmp201,
	mov	ip, r0, asl #8	@ tmp200, tmp199,
	cmp	ip, lr	@ tmp200, tmp201
	movgt	ip, ip, asr #1	@ MaxStreamThr, tmp200,
	movle	ip, #16384	@ MaxStreamThr,
	b	.L4274	@
.L4338:
	mov	r7, r6	@ Size0, Addr0
	b	.L4311	@
.L4342:
	mov	r0, #2	@,
	movw	r1, #:lower16:.LC448	@,
	movt	r1, #:upper16:.LC448	@,
	bl	dprint_vfmw	@
	movw	ip, #:lower16:11162627	@ tmp218,
	movt	ip, #:upper16:11162627	@ tmp218,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	cmp	r3, #5	@ <variable>.CurrSlice.nal_unit_type,
	beq	.L4345	@,
.L4280:
	movw	r0, #:lower16:11196171	@ tmp229,
	movt	r0, #:upper16:11196171	@ tmp229,
	movw	r3, #:lower16:11199484	@ tmp225,
	movt	r3, #:upper16:11199484	@ tmp225,
	ldrb	ip, [r4, r0]	@ zero_extendqisi2	@ <variable>.CurrPic.structure, <variable>.CurrPic.structure
	movw	r2, #:lower16:11199500	@ tmp223,
	ldr	lr, [r4, r3]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	movt	r2, #:upper16:11199500	@ tmp223,
	cmp	ip, #0	@ <variable>.CurrPic.structure,
	mov	r1, #0	@ tmp224,
	add	r0, lr, #1	@ tmp228, <variable>.TotalPicNum,
	str	r0, [r4, r3]	@ tmp228, <variable>.TotalPicNum
	movweq	r3, #:lower16:11199488	@ tmp231,
	movwne	r3, #:lower16:11199492	@ tmp235,
	movteq	r3, #:upper16:11199488	@ tmp231,
	movtne	r3, #:upper16:11199492	@ tmp235,
	str	r1, [r4, r2]	@ tmp224, <variable>.SliceNumInPic
	mov	r0, r4	@, pMvcCtx
	ldr	ip, [r4, r3]	@ <variable>.TotalFieldNum,
	add	r2, ip, #1	@ tmp238, <variable>.TotalFieldNum,
	str	r2, [r4, r3]	@ tmp238,
	bl	MVC_InitPic	@
	cmp	r0, #0	@,
	bne	.L4346	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_WritePicMsg	@
	b	.L4279	@
.L4339:
	mov	r6, lr	@ Size0.9465, Size0
	b	.L4323	@
.L4345:
	movw	r1, #:lower16:11199484	@ tmp221,
	movt	r1, #:upper16:11199484	@ tmp221,
	movw	lr, #:lower16:11199496	@ tmp220,
	movt	lr, #:upper16:11199496	@ tmp220,
	ldr	r0, [r4, r1]	@ <variable>.TotalPicNum, <variable>.TotalPicNum
	str	r0, [r4, lr]	@ <variable>.TotalPicNum, <variable>.IDRPicOfCurrPic
	b	.L4280	@
.L4276:
	mov	r0, #0	@,
	movw	r1, #:lower16:.LC446	@,
	movt	r1, #:upper16:.LC446	@,
	str	ip, [sp, #0]	@ MaxStreamThr,
	bl	dprint_vfmw	@
	movw	ip, #:lower16:11199444	@ tmp206,
	movw	r3, #:lower16:11155228	@ tmp207,
	movt	ip, #:upper16:11199444	@ tmp206,
	movt	r3, #:upper16:11155228	@ tmp207,
	ldr	r1, [r4, ip]	@ temp.9476, <variable>.SliceParaNum
	ldr	r2, [r4, r3]	@ <variable>.MaxSliceNum, <variable>.MaxSliceNum
	cmp	r1, r2	@ temp.9476, <variable>.MaxSliceNum
	bcc	.L4278	@,
	movw	r0, #:lower16:g_event_report	@ tmp209,
	movt	r0, #:upper16:g_event_report	@ tmp209,
	ldr	r3, [r0, #0]	@ g_event_report.9479, g_event_report
	cmp	r3, #0	@ g_event_report.9479,
	beq	.L4278	@,
	movw	lr, #:lower16:11199520	@ tmp212,
	movt	lr, #:upper16:11199520	@ tmp212,
	str	r1, [fp, #-36]	@ temp.9476, para
	mov	r1, #108	@,
	str	r2, [fp, #-32]	@ <variable>.MaxSliceNum, para
	sub	r2, fp, #36	@,,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9479
.L4278:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC447	@,
	movt	r1, #:upper16:.LC447	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrPic	@
	mvn	r0, #0	@ D.42904,
	b	.L4257	@
.L4258:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC445	@,
	movt	r1, #:upper16:.LC445	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:g_event_report	@ tmp181,
	movt	r1, #:upper16:g_event_report	@ tmp181,
	ldr	r3, [r1, #0]	@ g_event_report.9469, g_event_report
	cmp	r3, #0	@ g_event_report.9469,
	beq	.L4335	@,
	movw	ip, #:lower16:11199520	@ tmp183,
	sub	r2, fp, #28	@ tmp184,,
	movt	ip, #:upper16:11199520	@ tmp183,
	mvn	lr, #0	@ tmp182,
	mov	r1, #100	@,
	str	lr, [r2, #-8]!	@ tmp182,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9469
.L4335:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	mvn	r0, #0	@ D.42904,
	b	.L4257	@
.L4344:
	movw	r1, #:lower16:.LC451	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC451	@,
	bl	dprint_vfmw	@
	b	.L4335	@
.L4343:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC450	@,
	movt	r1, #:upper16:.LC450	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42904,
	b	.L4257	@
.L4346:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC449	@,
	movt	r1, #:upper16:.LC449	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.42904,
	b	.L4257	@
	.fnend
	.size	MVC_DecSlice, .-MVC_DecSlice
	.align	2
	.global	MVC_SliceCheck
	.type	MVC_SliceCheck, %function
MVC_SliceCheck:
	.fnstart
.LFB1619:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}	@,
	.pad #4
	.save {r3, r4, r5, r6, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r1, #:lower16:.LC452	@,
	movt	r1, #:upper16:.LC452	@,
	mov	r5, r0	@ pMvcCtx, pMvcCtx
	bl	mvc_ue_v	@
	movw	r4, #:lower16:11199460	@ tmp140,
	movt	r4, #:upper16:11199460	@ tmp140,
	movw	r3, #:lower16:11162676	@ tmp139,
	movt	r3, #:upper16:11162676	@ tmp139,
	ldr	r2, [r5, r4]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r2, #0	@ <variable>.SeErrFlg,
	str	r0, [r5, r3]	@ D.41982, <variable>.CurrSlice.first_mb_in_slice
	bne	.L4348	@,
	cmp	r0, #262144	@ D.41982,
	bcs	.L4356	@,
	movw	r1, #13560	@ tmp145,
	movw	r3, #13564	@ tmp144,
	ldr	r2, [r5, r1]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	ldr	lr, [r5, r3]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mul	ip, r2, lr	@ tmp146, <variable>.CurWidthInMb, <variable>.CurHeightInMb
	sub	r1, ip, #1	@ tmp149, tmp146,
	cmp	r0, r1	@ D.41982, tmp149
	bls	.L4357	@,
.L4348:
	mvn	r0, #0	@ D.41986,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L4356:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC453	@,
	movt	r1, #:upper16:.LC453	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41986,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L4357:
	mov	r0, r5	@, pMvcCtx
	movw	r1, #:lower16:.LC454	@,
	movt	r1, #:upper16:.LC454	@,
	bl	mvc_ue_v	@
	movw	r1, #:lower16:.LC455	@,
	movt	r1, #:upper16:.LC455	@,
	mov	r6, r0	@ SliceType,
	mov	r0, #19	@,
	mov	r2, r6	@, SliceType
	bl	dprint_vfmw	@
	ldr	r0, [r5, r4]	@ <variable>.SeErrFlg, <variable>.SeErrFlg
	cmp	r0, #0	@ <variable>.SeErrFlg,
	bne	.L4348	@,
	cmp	r6, #9	@ SliceType,
	bls	.L4358	@,
.L4351:
	mov	r2, r6	@, SliceType
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC456	@,
	movt	r1, #:upper16:.LC456	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.41986,
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L4358:
	mov	r2, #1	@ tmp155,
	mov	r3, r2, asl r6	@ tmp154, tmp155,
	ands	r1, r3, #660	@ tmp156, tmp154,
	bne	.L4354	@,
	movw	r0, #:lower16:297	@ tmp157,
	movt	r0, #:upper16:297	@ tmp157,
	and	r0, r3, r0	@ tmp157, tmp154, tmp157
	cmp	r0, #0	@ tmp157,
	bne	.L4352	@,
	tst	r3, #66	@ tmp154,
	movwne	r3, #:lower16:11162624	@ tmp166,
	movtne	r3, #:upper16:11162624	@ tmp166,
	strneb	r2, [r5, r3]	@ tmp155, <variable>.CurrSlice.slice_type
	ldmnefd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	b	.L4351	@
.L4354:
	movw	lr, #:lower16:11162624	@ tmp160,
	movt	lr, #:upper16:11162624	@ tmp160,
	mov	ip, #2	@ tmp161,
	strb	ip, [r5, lr]	@ tmp161, <variable>.CurrSlice.slice_type
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
.L4352:
	movw	r2, #:lower16:11162624	@ tmp163,
	movt	r2, #:upper16:11162624	@ tmp163,
	mov	r0, r1	@ D.41986, tmp156
	strb	r1, [r5, r2]	@ tmp156, <variable>.CurrSlice.slice_type
	ldmfd	sp, {r3, r4, r5, r6, fp, sp, pc}	@
	.fnend
	.size	MVC_SliceCheck, .-MVC_SliceCheck
	.align	2
	.global	MVC_InquireSliceProperty
	.type	MVC_InquireSliceProperty, %function
MVC_InquireSliceProperty:
	.fnstart
.LFB1661:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	movw	r5, #:lower16:11199464	@ tmp150,
	movt	r5, #:upper16:11199464	@ tmp150,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r6, r1	@ MVC_IsNewPic, MVC_IsNewPic
	movw	r1, #:lower16:.LC444	@,
	ldr	r8, [r0, r5]	@ <variable>.TotalNal, <variable>.TotalNal
	movt	r1, #:upper16:.LC444	@,
	mov	r5, r2	@ IsSizeChanged, IsSizeChanged
	mov	r0, #22	@,
	sub	r2, r8, #1	@, <variable>.TotalNal,
	movw	r7, #:lower16:11162627	@ tmp155,
	bl	dprint_vfmw	@
	mov	r0, #0	@ tmp153,
	str	r0, [r5, #0]	@ tmp153,* IsSizeChanged
	movt	r7, #:upper16:11162627	@ tmp155,
	str	r0, [r6, #0]	@ tmp153,* MVC_IsNewPic
	mov	r3, #13568	@ tmp165,
	ldr	ip, [r4, #368]	@ D.45532, <variable>.pCurrNal
	movw	lr, #:lower16:11162656	@ tmp158,
	movt	lr, #:upper16:11162656	@ tmp158,
	ldr	r8, [r4, r3]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11164272	@ tmp160,
	movw	r2, #:lower16:11164276	@ tmp161,
	ldrb	sl, [ip, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	r1, #:upper16:11164272	@ tmp160,
	movt	r2, #:upper16:11164276	@ tmp161,
	movw	r3, #:lower16:11164280	@ tmp163,
	cmp	r8, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	movt	r3, #:upper16:11164280	@ tmp163,
	strb	sl, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	ldr	r7, [ip, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	str	r7, [r4, lr]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	ldr	ip, [ip, #88]	@ D.45535, <variable>.svc_extension_flag
	str	r0, [r4, r2]	@ tmp153, <variable>.CurrSlice.mvcinfo_flag
	mvn	r0, #0	@ tmp164,
	str	r0, [r4, r3]	@ tmp164, <variable>.CurrSlice.view_id
	str	ip, [r4, r1]	@ D.45535, <variable>.CurrSlice.svc_extension_flag
	beq	.L4386	@,
	cmn	ip, #1	@ D.45535,
	beq	.L4387	@,
.L4361:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	cmp	r0, #0	@,
	beq	.L4367	@,
.L4385:
	mvn	r0, #0	@ D.45565,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4367:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ProcessSliceHeaderFirstPart	@
	cmp	r0, #0	@,
	bne	.L4388	@,
	movw	r3, #:lower16:11162629	@ tmp207,
	movt	r3, #:upper16:11162629	@ tmp207,
	movw	r2, #:lower16:11164272	@ tmp216,
	movt	r2, #:upper16:11164272	@ tmp216,
	ldrb	r0, [r4, r3]	@ zero_extendqisi2	@ <variable>.CurrSlice.new_pic_flag, <variable>.CurrSlice.new_pic_flag
	movw	lr, #:lower16:11155244	@ tmp210,
	movw	r1, #:lower16:11162632	@ tmp211,
	movt	lr, #:upper16:11155244	@ tmp210,
	movt	r1, #:upper16:11162632	@ tmp211,
	cmp	r0, #1	@ <variable>.CurrSlice.new_pic_flag,
	movne	ip, #0	@, tmp209
	moveq	ip, #1	@, tmp209
	str	ip, [r6, #0]	@ tmp209,* MVC_IsNewPic
	mov	r0, #2240	@ tmp214,
	ldr	r2, [r4, r2]	@ D.45543, <variable>.CurrSlice.svc_extension_flag
	ldr	ip, [r4, r1]	@ <variable>.CurrSlice.pic_parameter_set_id, <variable>.CurrSlice.pic_parameter_set_id
	ldr	r3, [r4, lr]	@ <variable>.PPS, <variable>.PPS
	cmn	r2, #1	@ D.45543,
	mla	r1, r0, ip, r3	@ pPPS, tmp214, <variable>.CurrSlice.pic_parameter_set_id, <variable>.PPS
	beq	.L4389	@,
	cmp	r2, #0	@ D.45543,
	bne	.L4372	@,
	movw	r3, #:lower16:11152048	@ tmp222,
	movt	r3, #:upper16:11152048	@ tmp222,
	ldr	r0, [r4, r3]	@ <variable>.Init_Subsps_Flag, <variable>.Init_Subsps_Flag
	cmp	r0, #1	@ <variable>.Init_Subsps_Flag,
	beq	.L4390	@,
	movw	r3, #:lower16:10814504	@ tmp229,
	movt	r3, #:upper16:10814504	@ tmp229,
	ldr	lr, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	ldr	r3, [r4, r3]	@ <variable>.CurrSUBSPSID, <variable>.CurrSUBSPSID
	cmp	r3, lr	@ <variable>.CurrSUBSPSID, <variable>.seq_parameter_set_id
	movweq	r3, #:lower16:10814508	@ pSPS,
	movteq	r3, #:upper16:10814508	@ pSPS,
	addeq	r3, r4, r3	@ pSPS, pMvcCtx, pSPS
	bne	.L4391	@,
.L4371:
	ldrb	r1, [r3, #20]	@ zero_extendqisi2	@ <variable>.frame_mbs_only_flag, <variable>.frame_mbs_only_flag
	movw	lr, #13560	@ tmp244,
	ldr	r0, [r3, #3952]	@ <variable>.pic_height_in_map_units_minus1, <variable>.pic_height_in_map_units_minus1
	movw	ip, #13564	@ tmp235,
	rsb	r2, r1, #2	@ tmp237, <variable>.frame_mbs_only_flag,
	ldr	r1, [r3, #3948]	@ <variable>.pic_width_in_mbs_minus1, <variable>.pic_width_in_mbs_minus1
	ldr	ip, [r4, ip]	@ <variable>.CurHeightInMb, <variable>.CurHeightInMb
	mla	r2, r0, r2, r2	@ tmp240, <variable>.pic_height_in_map_units_minus1, tmp237, tmp237
	ldr	r0, [r4, lr]	@ <variable>.CurWidthInMb, <variable>.CurWidthInMb
	add	lr, r1, #1	@ tmp245, <variable>.pic_width_in_mbs_minus1,
	cmp	r0, lr	@ <variable>.CurWidthInMb, tmp245
	cmpeq	ip, r2	@, <variable>.CurHeightInMb, tmp240
	movw	r2, #:lower16:11168612	@ tmp253,
	movt	r2, #:upper16:11168612	@ tmp253,
	ldreq	lr, [r5, #0]	@ cstore.9520,* IsSizeChanged
	movne	lr, #1	@ cstore.9520,
	str	lr, [r5, #0]	@ cstore.9520,* IsSizeChanged
	ldr	r1, [r4, r2]	@ <variable>.DPB.size, <variable>.DPB.size
	ldr	r0, [r3, #3972]	@ <variable>.dpb_size_plus1, <variable>.dpb_size_plus1
	add	ip, r1, #1	@ tmp254, <variable>.DPB.size,
	cmp	r0, ip	@ <variable>.dpb_size_plus1, tmp254
	mov	r0, #0	@ D.45565,
	movhi	ip, #1	@ tmp257,
	strhi	ip, [r5, #0]	@ tmp257,* IsSizeChanged
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4386:
	movw	r0, #13580	@ tmp170,
	movw	ip, #13588	@ tmp173,
	movw	r1, #13592	@ tmp176,
	ldr	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldr	lr, [r4, ip]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11164288	@ tmp172,
	ldr	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11164288	@ tmp172,
	movw	r1, #:lower16:11164292	@ tmp175,
	movt	r1, #:upper16:11164292	@ tmp175,
	str	r8, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r7, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	str	lr, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	str	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	b	.L4361	@
.L4387:
	movw	r3, #:lower16:10814496	@ tmp178,
	movt	r3, #:upper16:10814496	@ tmp178,
	ldr	r2, [r4, r3]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	r2, #0	@ <variable>.TotalSUBSPS,
	beq	.L4361	@,
	movw	r1, #:lower16:10818504	@ tmp180,
	movt	r1, #:upper16:10818504	@ tmp180,
	ldr	lr, [r4, r1]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	lr, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	bne	.L4362	@,
	movw	ip, #:lower16:11152032	@ tmp182,
	movt	ip, #:upper16:11152032	@ tmp182,
	ldr	r0, [r4, ip]	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r0, #0	@ <variable>.CurrSUBSPS.is_valid,
	bne	.L4362	@,
	add	r2, r4, #17408	@ ivtmp.9557, pMvcCtx,
	add	r3, r2, #188	@ ivtmp.9557, ivtmp.9557,
.L4365:
	ldr	lr, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	movw	ip, #:lower16:337528	@ ivtmp.9557,
	movw	r1, #:lower16:333528	@ tmp186,
	movt	ip, #:upper16:337528	@ ivtmp.9557,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	movt	r1, #:upper16:333528	@ tmp186,
	add	r2, r3, ip	@ ivtmp.9557, ivtmp.9557, ivtmp.9557
	add	r1, r3, r1	@ tmp186, ivtmp.9557, tmp186
	beq	.L4363	@,
	ldr	lr, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	lr, #0	@ <variable>.is_valid,
	bne	.L4383	@,
.L4363:
	ldr	r1, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r0, r0, #1	@ i, i,
	cmp	r1, #0	@ <variable>.num_views_minus1,
	mov	r1, r0	@ tmp265, i
	beq	.L4380	@,
	add	ip, r3, #667648	@ tmp268, ivtmp.9557,
	add	lr, ip, #3408	@ tmp268, tmp268,
	ldr	r3, [lr, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L4383	@,
.L4380:
	add	r0, r1, #1	@ i, tmp265,
	movw	r1, #:lower16:337528	@ ivtmp.9557,
	cmp	r0, #32	@ i,
	movt	r1, #:upper16:337528	@ ivtmp.9557,
	add	r3, r2, r1	@ ivtmp.9557, ivtmp.9557, ivtmp.9557
	bne	.L4365	@,
	mvn	r2, #0	@ baseviewid,
.L4364:
	movw	ip, #:lower16:11164280	@ tmp195,
	movt	ip, #:upper16:11164280	@ tmp195,
	str	r2, [r4, ip]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4366	@
.L4390:
	ldr	r2, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r0, #:lower16:337528	@ tmp225,
	movt	r0, #:upper16:337528	@ tmp225,
	mul	ip, r2, r0	@ tmp224, <variable>.seq_parameter_set_id, tmp225
	add	r1, ip, #13568	@ tmp227, tmp224,
	add	lr, r1, #32	@ tmp227, tmp227,
	add	r3, r4, lr	@ pSPS, pMvcCtx, tmp227
	b	.L4371	@
.L4362:
	movw	r0, #:lower16:10818508	@ tmp196,
	movt	r0, #:upper16:10818508	@ tmp196,
	movw	lr, #:lower16:11164280	@ tmp197,
	movt	lr, #:upper16:11164280	@ tmp197,
	ldr	r2, [r4, r0]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, lr]	@ baseviewid, <variable>.CurrSlice.view_id
.L4366:
	cmn	r2, #1	@ baseviewid,
	beq	.L4361	@,
	movw	lr, #:lower16:11162627	@ tmp203,
	movt	lr, #:upper16:11162627	@ tmp203,
	movw	r3, #:lower16:11164276	@ tmp198,
	movw	r1, #:lower16:11164292	@ tmp200,
	ldrb	r0, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r3, #:upper16:11164276	@ tmp198,
	movt	r1, #:upper16:11164292	@ tmp200,
	movw	r2, #:lower16:11164288	@ tmp202,
	movt	r2, #:upper16:11164288	@ tmp202,
	mov	lr, #1	@ tmp199,
	cmp	r0, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	ip, #0	@, tmp205
	moveq	ip, #1	@, tmp205
	str	lr, [r4, r1]	@ tmp199, <variable>.CurrSlice.inter_view_flag
	str	ip, [r4, r2]	@ tmp205, <variable>.CurrSlice.anchor_pic_flag
	str	lr, [r4, r3]	@ tmp199, <variable>.CurrSlice.mvcinfo_flag
	b	.L4361	@
.L4389:
	movw	ip, #:lower16:11155240	@ tmp217,
	movt	ip, #:upper16:11155240	@ tmp217,
	ldr	lr, [r1, #28]	@ <variable>.seq_parameter_set_id, <variable>.seq_parameter_set_id
	movw	r1, #3992	@ tmp220,
	ldr	r2, [r4, ip]	@ <variable>.SPS, <variable>.SPS
	mla	r3, r1, lr, r2	@ pSPS, tmp220, <variable>.seq_parameter_set_id, <variable>.SPS
	b	.L4371	@
.L4383:
	movw	r2, #:lower16:337528	@ tmp191,
	movt	r2, #:upper16:337528	@ tmp191,
	mla	r3, r2, r0, r4	@ tmp192, tmp191, i, pMvcCtx
	movw	r0, #17600	@ tmp189,
	ldr	r2, [r3, r0]	@ baseviewid, <variable>.view_id
	b	.L4364	@
.L4391:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC19	@,
	movt	r1, #:upper16:.LC19	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45565,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4388:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC445	@,
	movt	r1, #:upper16:.LC445	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45565,
	ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, pc}	@
.L4372:
	movw	r1, #:lower16:.LC457	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC457	@,
	bl	dprint_vfmw	@
	b	.L4385	@
	.fnend
	.size	MVC_InquireSliceProperty, .-MVC_InquireSliceProperty
	.align	2
	.global	MVC_DecOneNal
	.type	MVC_DecOneNal, %function
MVC_DecOneNal:
	.fnstart
.LFB1655:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #12
	sub	sp, sp, #12	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	ldr	r2, [r0, #368]	@ temp.9654, <variable>.pCurrNal
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	mov	r8, r1	@ NalMode, NalMode
	ldr	r3, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r3, #0	@ <variable>.nal_segment,
	beq	.L4393	@,
	movw	r0, #:lower16:11199504	@ tmp187,
	movt	r0, #:upper16:11199504	@ tmp187,
	mov	r3, #0	@ i,
	ldr	r1, [r4, r0]	@ prephitmp.9593, <variable>.MaxBytesReceived
	mov	ip, r0	@ tmp447, tmp187
.L4394:
	rsb	lr, r3, r3, asl #3	@, tmp190, i, i,
	add	r3, r3, #1	@ i, i,
	add	r7, r2, lr, asl #2	@, tmp192, temp.9654, tmp190,
	ldr	r6, [r7, #8]	@ <variable>.bitstream_length, <variable>.bitstream_length
	add	r1, r1, r6	@ prephitmp.9593, prephitmp.9593, <variable>.bitstream_length
	str	r1, [r4, ip]	@ prephitmp.9593, <variable>.MaxBytesReceived
	ldr	r5, [r2, #64]	@ <variable>.nal_segment, <variable>.nal_segment
	cmp	r5, r3	@ <variable>.nal_segment, i
	bhi	.L4394	@,
.L4393:
	add	r5, r4, #13504	@ D.45136, pMvcCtx,
	mov	r6, #0	@ tmp196,
	add	r7, r5, #24	@ D.45136, D.45136,
	strb	r6, [r2, #0]	@ tmp196, <variable>.nal_used_segment
	mov	r1, #32	@,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r3, #:lower16:11199460	@ tmp211,
	movt	r3, #:upper16:11199460	@ tmp211,
	and	ip, r0, #31	@ tmp201, nal_header,
	strb	ip, [r2, #2]	@ tmp201, <variable>.nal_unit_type
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r5, r0	@ nal_header,
	ubfx	r0, r0, #5, #2	@ tmp205, nal_header,,
	ubfx	r1, r5, #7, #1	@ tmp208, nal_header,,
	str	r0, [r2, #72]	@ tmp205, <variable>.nal_ref_idc
	ldr	ip, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r1, [ip, #76]	@ tmp208, <variable>.forbidden_bit
	mvn	ip, #0	@ tmp214,
	ldr	r2, [r4, #368]	@ temp.9618, <variable>.pCurrNal
	ldr	r1, [r2, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r0, r1, #32	@ tmp210, <variable>.nal_bitoffset,
	str	r0, [r2, #60]	@ tmp210, <variable>.nal_bitoffset
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r6, [r4, r3]	@ tmp196, <variable>.SeErrFlg
	str	ip, [r2, #88]	@ tmp214, <variable>.svc_extension_flag
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r1, #2]	@ zero_extendqisi2	@ prephitmp.9586, <variable>.nal_unit_type
	cmp	r3, #14	@ prephitmp.9586,
	cmpne	r3, #20	@, prephitmp.9586,
	beq	.L4456	@,
.L4395:
	movw	r6, #:lower16:11199464	@ tmp255,
	movt	r6, #:upper16:11199464	@ tmp255,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC458	@,
	ldr	r2, [r4, r6]	@, <variable>.TotalNal
	movt	r1, #:upper16:.LC458	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r6]	@ prephitmp.9588, <variable>.TotalNal
	movw	r3, #371	@ tmp258,
	cmp	r2, r3	@ prephitmp.9588, tmp258
	beq	.L4457	@,
.L4399:
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r0, #:lower16:11199464	@ tmp261,
	movt	r0, #:upper16:11199464	@ tmp261,
	add	r2, r2, #1	@ tmp262, prephitmp.9588,
	str	r2, [r4, r0]	@ tmp262, <variable>.TotalNal
	ldrb	r2, [r1, #2]	@ zero_extendqisi2	@ temp.9624, <variable>.nal_unit_type
	sub	ip, r2, #1	@ tmp264, temp.9624,
	cmp	ip, #29	@ tmp264,
	ldrls	pc, [pc, ip, asl #2]	@ tmp264
	b	.L4400	@
.L4414:
	.word	.L4401
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4401
	.word	.L4402
	.word	.L4403
	.word	.L4404
	.word	.L4405
	.word	.L4406
	.word	.L4407
	.word	.L4408
	.word	.L4409
	.word	.L4410
	.word	.L4411
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4412
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4400
	.word	.L4413
.L4456:
	mov	r1, #24	@,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r5, r0	@ nal_header,
	ubfx	r0, r0, #23, #1	@ tmp225, nal_header,,
	str	r0, [r3, #88]	@ tmp225, <variable>.svc_extension_flag
	ldr	r3, [r4, #368]	@ prephitmp.9591, <variable>.pCurrNal
	ldr	r1, [r3, #88]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r1, r6	@ <variable>.svc_extension_flag,
	bne	.L4396	@,
	mov	r2, #13568	@ tmp227,
	mov	r1, #1	@ tmp228,
	movw	ip, #13572	@ tmp230,
	str	r1, [r4, r2]	@ tmp228, <variable>.CurrNalMvcInfo.is_valid
	movw	lr, #13576	@ tmp231,
	movw	r1, #13580	@ tmp234,
	ubfx	r0, r5, #16, #6	@ tmp233, nal_header,,
	ubfx	r2, r5, #22, #1	@ D.45160, nal_header,,
	str	r0, [r4, lr]	@ tmp233, <variable>.CurrNalMvcInfo.priority_id
	movw	lr, #13584	@ tmp238,
	str	r2, [r4, ip]	@ D.45160, <variable>.CurrNalMvcInfo.non_idr_flag
	ubfx	ip, r5, #6, #10	@ tmp236, nal_header,,
	str	ip, [r4, r1]	@ tmp236, <variable>.CurrNalMvcInfo.view_id
	movw	r1, #13588	@ tmp241,
	ubfx	r0, r5, #3, #3	@ tmp240, nal_header,,
	ubfx	ip, r5, #2, #1	@ tmp243, nal_header,,
	str	r0, [r4, lr]	@ tmp240, <variable>.CurrNalMvcInfo.temporal_id
	movw	lr, #13592	@ tmp244,
	str	ip, [r4, r1]	@ tmp243, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r1, #13596	@ tmp247,
	ubfx	r0, r5, #1, #1	@ tmp246, nal_header,,
	and	ip, r5, #1	@ tmp248, nal_header,
	str	r0, [r4, lr]	@ tmp246, <variable>.CurrNalMvcInfo.inter_view_flag
	str	ip, [r4, r1]	@ tmp248, <variable>.CurrNalMvcInfo.reserved_one_bit
	ldrb	lr, [r3, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	lr, #20	@ <variable>.nal_unit_type,
	beq	.L4458	@,
.L4396:
	ldr	lr, [r3, #60]	@ <variable>.nal_bitoffset, <variable>.nal_bitoffset
	add	r0, lr, #24	@ tmp252, <variable>.nal_bitoffset,
	str	r0, [r3, #60]	@ tmp252, <variable>.nal_bitoffset
	ldr	r6, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r3, [r6, #2]	@ zero_extendqisi2	@ prephitmp.9586, <variable>.nal_unit_type
	b	.L4395	@
.L4400:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC477	@,
	mov	r3, r5	@, nal_header
	movt	r1, #:upper16:.LC477	@,
	bl	dprint_vfmw	@
	cmp	r5, #256	@ nal_header,
	beq	.L4435	@,
	movw	r1, #:lower16:.LC478	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC478	@,
	bl	dprint_vfmw	@
.L4435:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
.L4454:
	movw	r0, #:lower16:g_event_report	@ tmp435,
	movt	r0, #:upper16:g_event_report	@ tmp435,
	ldr	r3, [r0, #0]	@ g_event_report.9670, g_event_report
	cmp	r3, #0	@ g_event_report.9670,
	beq	.L4427	@,
	movw	ip, #:lower16:11199520	@ tmp436,
	movt	ip, #:upper16:11199520	@ tmp436,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9670
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4401:
	movw	r6, #:lower16:11199476	@ tmp266,
	movt	r6, #:upper16:11199476	@ tmp266,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC460	@,
	ldr	r3, [r4, r6]	@, <variable>.TotalSlice
	movt	r1, #:upper16:.LC460	@,
	bl	dprint_vfmw	@
	ldr	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	movw	r7, #:lower16:11162627	@ tmp268,
	movt	r7, #:upper16:11162627	@ tmp268,
	movw	ip, #:lower16:11162656	@ tmp272,
	mov	lr, #13568	@ tmp281,
	ldrb	r5, [r0, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	movt	ip, #:upper16:11162656	@ tmp272,
	ldr	r6, [r4, lr]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrNalMvcInfo.is_valid
	movw	r1, #:lower16:11164272	@ tmp276,
	movw	r2, #:lower16:11164276	@ tmp277,
	movt	r1, #:upper16:11164272	@ tmp276,
	strb	r5, [r4, r7]	@ <variable>.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r2, #:upper16:11164276	@ tmp277,
	ldr	r7, [r0, #72]	@ <variable>.nal_ref_idc, <variable>.nal_ref_idc
	movw	r3, #:lower16:11164280	@ tmp279,
	cmp	r6, #1	@ <variable>.CurrNalMvcInfo.is_valid,
	movt	r3, #:upper16:11164280	@ tmp279,
	mov	r5, #0	@ tmp278,
	str	r7, [r4, ip]	@ <variable>.nal_ref_idc, <variable>.CurrSlice.nal_ref_idc
	mvn	ip, #0	@ tmp280,
	ldr	r0, [r0, #88]	@ temp.9630, <variable>.svc_extension_flag
	str	ip, [r4, r3]	@ tmp280, <variable>.CurrSlice.view_id
	str	r5, [r4, r2]	@ tmp278, <variable>.CurrSlice.mvcinfo_flag
	str	r0, [r4, r1]	@ temp.9630, <variable>.CurrSlice.svc_extension_flag
	beq	.L4459	@,
	cmn	r0, #1	@ temp.9630,
	beq	.L4460	@,
.L4416:
	movw	r3, #:lower16:11199484	@ tmp325,
	movt	r3, #:upper16:11199484	@ tmp325,
	mov	r0, #21	@,
	movw	r1, #:lower16:.LC461	@,
	ldr	r2, [r4, r3]	@, <variable>.TotalPicNum
	movt	r1, #:upper16:.LC461	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_SliceCheck	@
	subs	r5, r0, #0	@ ret,
	bne	.L4461	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSlice	@
	cmp	r0, #0	@,
	bne	.L4462	@,
.L4427:
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4402:
	mov	r2, #6	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC466	@,
	movt	r1, #:upper16:.LC466	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSEI	@
	mov	r5, r0	@ ret.9646,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r5, #0	@ ret.9646,
	beq	.L4427	@,
	movw	r1, #:lower16:.LC467	@,
	mov	r0, #1	@,
	movt	r1, #:upper16:.LC467	@,
	bl	dprint_vfmw	@
	b	.L4454	@
.L4403:
	movw	r5, #:lower16:11199468	@ tmp346,
	movt	r5, #:upper16:11199468	@ tmp346,
	mov	r2, #7	@,
	mov	r0, #22	@,
	ldr	r3, [r4, r5]	@, <variable>.TotalSPS
	movw	r1, #:lower16:.LC464	@,
	movt	r1, #:upper16:.LC464	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSPS	@
	mov	r7, r0	@ ret.9640,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9640,
	bne	.L4463	@,
.L4429:
	ldr	r2, [r4, r5]	@ <variable>.TotalSPS,
	mov	r0, r7	@ D.45227, ret.9640
	add	r1, r2, #1	@ tmp358, <variable>.TotalSPS,
	str	r1, [r4, r5]	@ tmp358,
.L4426:
	sub	sp, fp, #32
	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
.L4405:
	mov	r2, #9	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC468	@,
	movt	r1, #:upper16:.LC468	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4406:
	mov	r2, #10	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC469	@,
	movt	r1, #:upper16:.LC469	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4404:
	movw	r5, #:lower16:11199472	@ tmp332,
	movt	r5, #:upper16:11199472	@ tmp332,
	mov	r2, #8	@,
	mov	r0, #22	@,
	ldr	r3, [r4, r5]	@, <variable>.TotalPPS
	movw	r1, #:lower16:.LC462	@,
	movt	r1, #:upper16:.LC462	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecPPS	@
	mov	r7, r0	@ ret.9634,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9634,
	beq	.L4429	@,
	movw	r6, #:lower16:g_event_report	@ tmp335,
	movt	r6, #:upper16:g_event_report	@ tmp335,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC463	@,
	movt	r1, #:upper16:.LC463	@,
	bl	dprint_vfmw	@
	ldr	r3, [r6, #0]	@ g_event_report.9635, g_event_report
	cmp	r3, #0	@ g_event_report.9635,
	beq	.L4425	@,
.L4450:
	sub	r2, fp, #36	@ tmp352,,
	movw	r5, #:lower16:11199520	@ tmp351,
	movt	r5, #:upper16:11199520	@ tmp351,
	mvn	r7, #0	@ tmp350,
	mov	r1, #100	@,
	str	r7, [r2, #-4]!	@ tmp350,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9641
	ldr	r3, [r6, #0]	@ g_event_report.9643, g_event_report
	cmp	r3, #0	@ g_event_report.9643,
	beq	.L4425	@,
	ldr	r0, [r4, r5]	@, <variable>.ChanID
	mov	r1, #113	@,
	mov	r2, #0	@,
	blx	r3	@ g_event_report.9643
	mov	r0, r7	@ D.45227, tmp350
	b	.L4426	@
.L4407:
	mov	r2, #11	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC471	@,
	movt	r1, #:upper16:.LC471	@,
	bl	dprint_vfmw	@
	mov	r1, #32	@,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.45266,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	movw	ip, #:lower16:1128615492	@ tmp369,
	movw	r3, #:lower16:1213419593	@ tmp372,
	movt	ip, #:upper16:1128615492	@ tmp369,
	movt	r3, #:upper16:1213419593	@ tmp372,
	cmp	r0, ip	@, tmp369
	cmpeq	r5, r3	@, D.45266, tmp372
	bne	.L4448	@,
	movw	r5, #:lower16:g_event_report	@ tmp443,
	movt	r5, #:upper16:g_event_report	@ tmp443,
	movw	lr, #13556	@ tmp377,
	mov	r6, #1	@ tmp378,
	strb	r6, [r4, lr]	@ tmp378, <variable>.IsStreamEndFlag
	ldr	r3, [r5, #0]	@ g_event_report.9649, g_event_report
	cmp	r3, #0	@ g_event_report.9649,
	beq	.L4431	@,
	movw	r0, #:lower16:11199520	@ tmp381,
	movt	r0, #:upper16:11199520	@ tmp381,
	mov	r1, #112	@,
	mov	r2, #0	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9649
.L4431:
	mov	r6, #0	@ tmp383,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, #364]	@ tmp383, <variable>.StartMode
	bl	MVC_DecVDM	@
	cmp	r0, r6	@,
	beq	.L4448	@,
	b	.L4452	@
.L4408:
	mov	r2, #12	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC470	@,
	movt	r1, #:upper16:.LC470	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4411:
	mov	r2, #15	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC474	@,
	movt	r1, #:upper16:.LC474	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecSubSPS	@
	mov	r7, r0	@ ret.9656,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	cmp	r7, #0	@ ret.9656,
	bne	.L4464	@,
	movw	r3, #:lower16:10814496	@ tmp394,
	movt	r3, #:upper16:10814496	@ tmp394,
	mov	r0, r7	@ D.45227, ret.9656
	ldr	lr, [r4, r3]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	add	r2, lr, #1	@ tmp397, <variable>.TotalSUBSPS,
	str	r2, [r4, r3]	@ tmp397, <variable>.TotalSUBSPS
	b	.L4426	@
.L4412:
	movw	r1, #:lower16:.LC475	@,
	mov	r2, #19	@,
	mov	r0, #22	@,
	movt	r1, #:upper16:.LC475	@,
	bl	dprint_vfmw	@
.L4448:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4413:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC476	@,
	mov	r2, #30	@,
	movt	r1, #:upper16:.LC476	@,
	bl	dprint_vfmw	@
	cmp	r8, #0	@ NalMode,
	beq	.L4465	@,
.L4433:
	mov	r1, #32	@,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	mov	r1, #32	@,
	mov	r5, r0	@ D.45294,
	mov	r0, r7	@, D.45136
	bl	BsGet	@
	ldr	r3, .L4468	@ tmp414,
	and	r6, r5, #65280	@ tmp404, D.45294,
	mov	r1, r5, asl #24	@ tmp402, D.45294,
	orr	r1, r1, r5, lsr #24	@, tmp403, tmp402, D.45294,
	and	r5, r5, #16711680	@ tmp400, D.45294,
	orr	r1, r1, r6, asl #8	@, D.45302, tmp403, tmp404,
	orr	r5, r1, r5, lsr #8	@, tmp418, D.45302, tmp400,
	and	ip, r0, #65280	@ tmp410, D.45295,
	mov	r2, r0, asl #24	@ tmp408, D.45295,
	orr	r2, r2, r0, lsr #24	@, tmp409, tmp408, D.45295,
	and	r0, r0, #16711680	@ tmp406, D.45295,
	orr	ip, r2, ip, asl #8	@, D.45310, tmp409, tmp410,
	ldmib	r3, {r2, r3}	@ phole ldm
	orr	r0, ip, r0, lsr #8	@, tmp412, D.45310, tmp406,
	cmp	r0, r3	@ tmp412, tmp416
	cmpeq	r5, r2	@, tmp418, tmp422
	bne	.L4427	@,
	movw	r5, #:lower16:g_event_report	@ tmp451,
	movt	r5, #:upper16:g_event_report	@ tmp451,
	ldr	r3, [r5, #0]	@ g_event_report.9664, g_event_report
	cmp	r3, #0	@ g_event_report.9664,
	beq	.L4434	@,
	movw	r6, #:lower16:11199520	@ tmp428,
	movt	r6, #:upper16:11199520	@ tmp428,
	mov	r1, #112	@,
	mov	r2, #0	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9664
.L4434:
	mov	r6, #0	@ tmp430,
	mov	r0, r4	@, pMvcCtx
	str	r6, [r4, #364]	@ tmp430, <variable>.StartMode
	bl	MVC_DecVDM	@
	cmp	r0, r6	@,
	beq	.L4427	@,
.L4452:
	ldr	r3, [r5, #0]	@ g_event_report.9667, g_event_report
	cmp	r3, r6	@ g_event_report.9667,
	bne	.L4466	@,
.L4425:
	mvn	r0, #0	@ D.45227,
	b	.L4426	@
.L4409:
	mov	r2, #13	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC472	@,
	movt	r1, #:upper16:.LC472	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4410:
	mov	r2, #14	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC473	@,
	movt	r1, #:upper16:.LC473	@,
	bl	dprint_vfmw	@
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	mov	r0, #0	@ D.45227,
	b	.L4426	@
.L4457:
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC459	@,
	movt	r1, #:upper16:.LC459	@,
	bl	dprint_vfmw	@
	ldr	r2, [r4, r6]	@ prephitmp.9588, <variable>.TotalNal
	b	.L4399	@
.L4458:
	cmp	r2, r6	@ D.45160,
	movne	r2, #1	@ iftmp.874,
	moveq	r2, #5	@ iftmp.874,
	strb	r2, [r3, #2]	@ iftmp.874, <variable>.nal_unit_type
	ldr	r3, [r4, #368]	@ prephitmp.9591, <variable>.pCurrNal
	b	.L4396	@
.L4460:
	movw	r2, #:lower16:10814496	@ tmp296,
	movt	r2, #:upper16:10814496	@ tmp296,
	ldr	lr, [r4, r2]	@ <variable>.TotalSUBSPS, <variable>.TotalSUBSPS
	cmp	lr, #0	@ <variable>.TotalSUBSPS,
	beq	.L4416	@,
	movw	r0, #:lower16:10818504	@ tmp298,
	movt	r0, #:upper16:10818504	@ tmp298,
	ldr	r5, [r4, r0]	@ <variable>.CurrSUBSPS.num_views_minus1, <variable>.CurrSUBSPS.num_views_minus1
	cmp	r5, #0	@ <variable>.CurrSUBSPS.num_views_minus1,
	beq	.L4419	@,
	movw	ip, #:lower16:11152032	@ tmp301,
	movt	ip, #:upper16:11152032	@ tmp301,
	ldr	r1, [r4, ip]	@ <variable>.CurrSUBSPS.is_valid, <variable>.CurrSUBSPS.is_valid
	cmp	r1, #1	@ <variable>.CurrSUBSPS.is_valid,
	beq	.L4467	@,
.L4419:
	add	r3, r4, #17408	@ ivtmp.9610, pMvcCtx,
	mov	r0, #0	@ i,
	add	r3, r3, #188	@ ivtmp.9610, ivtmp.9610,
.L4418:
	ldr	lr, [r3, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	movw	r2, #:lower16:337528	@ ivtmp.9610,
	movw	r5, #:lower16:333528	@ tmp304,
	movt	r2, #:upper16:337528	@ ivtmp.9610,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	movt	r5, #:upper16:333528	@ tmp304,
	add	r2, r3, r2	@ ivtmp.9610, ivtmp.9610, ivtmp.9610
	add	r1, r3, r5	@ tmp304, ivtmp.9610, tmp304
	beq	.L4421	@,
	ldr	r1, [r1, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r1, #0	@ <variable>.is_valid,
	bne	.L4443	@,
.L4421:
	ldr	lr, [r2, #0]	@ <variable>.num_views_minus1, <variable>.num_views_minus1
	add	r0, r0, #1	@ i, i,
	cmp	lr, #0	@ <variable>.num_views_minus1,
	mov	r1, r0	@ tmp448, i
	beq	.L4439	@,
	add	lr, r3, #667648	@ tmp452, ivtmp.9610,
	add	r5, lr, #3408	@ tmp452, tmp452,
	ldr	r3, [r5, #0]	@ <variable>.is_valid, <variable>.is_valid
	cmp	r3, #0	@ <variable>.is_valid,
	bne	.L4443	@,
.L4439:
	add	r0, r1, #1	@ i, tmp448,
	movw	r1, #:lower16:337528	@ ivtmp.9610,
	cmp	r0, #32	@ i,
	movt	r1, #:upper16:337528	@ ivtmp.9610,
	add	r3, r2, r1	@ ivtmp.9610, ivtmp.9610, ivtmp.9610
	bne	.L4418	@,
	mvn	r2, #0	@ baseviewid,
.L4422:
	movw	r5, #:lower16:11164280	@ tmp313,
	movt	r5, #:upper16:11164280	@ tmp313,
	str	r2, [r4, r5]	@ baseviewid, <variable>.CurrSlice.view_id
.L4423:
	cmn	r2, #1	@ baseviewid,
	beq	.L4416	@,
	movw	r2, #:lower16:11162627	@ tmp321,
	movt	r2, #:upper16:11162627	@ tmp321,
	movw	r3, #:lower16:11164276	@ tmp316,
	movw	r1, #:lower16:11164292	@ tmp318,
	movt	r3, #:upper16:11164276	@ tmp316,
	ldrb	r5, [r4, r2]	@ zero_extendqisi2	@ <variable>.CurrSlice.nal_unit_type, <variable>.CurrSlice.nal_unit_type
	movt	r1, #:upper16:11164292	@ tmp318,
	movw	lr, #:lower16:11164288	@ tmp320,
	movt	lr, #:upper16:11164288	@ tmp320,
	mov	r0, #1	@ tmp317,
	cmp	r5, #5	@ <variable>.CurrSlice.nal_unit_type,
	movne	ip, #0	@, tmp323
	moveq	ip, #1	@, tmp323
	str	r0, [r4, r1]	@ tmp317, <variable>.CurrSlice.inter_view_flag
	str	ip, [r4, lr]	@ tmp323, <variable>.CurrSlice.anchor_pic_flag
	str	r0, [r4, r3]	@ tmp317, <variable>.CurrSlice.mvcinfo_flag
	b	.L4416	@
.L4462:
	movw	ip, #:lower16:g_event_report	@ tmp329,
	movt	ip, #:upper16:g_event_report	@ tmp329,
	ldr	r3, [ip, #0]	@ g_event_report.9632, g_event_report
	cmp	r3, #0	@ g_event_report.9632,
	beq	.L4425	@,
	movw	r0, #:lower16:11199520	@ tmp330,
	movt	r0, #:upper16:11199520	@ tmp330,
	mov	r2, r5	@, ret
	mov	r1, #113	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9632
	mvn	r0, #0	@ D.45227,
	b	.L4426	@
.L4466:
	movw	lr, #:lower16:11199520	@ tmp432,
	movt	lr, #:upper16:11199520	@ tmp432,
	mov	r2, r6	@, tmp430
	mov	r1, #113	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.9667
	mvn	r0, #0	@ D.45227,
	b	.L4426	@
.L4465:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	b	.L4433	@
.L4459:
	movw	r7, #13580	@ tmp286,
	movw	ip, #13588	@ tmp289,
	movw	r1, #13592	@ tmp292,
	ldr	r8, [r4, r7]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrNalMvcInfo.view_id
	ldr	r7, [r4, ip]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrNalMvcInfo.anchor_pic_flag
	movw	r0, #:lower16:11164288	@ tmp288,
	ldr	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrNalMvcInfo.inter_view_flag
	movt	r0, #:upper16:11164288	@ tmp288,
	movw	r1, #:lower16:11164292	@ tmp291,
	movt	r1, #:upper16:11164292	@ tmp291,
	str	r6, [r4, r2]	@ <variable>.CurrNalMvcInfo.is_valid, <variable>.CurrSlice.mvcinfo_flag
	str	r8, [r4, r3]	@ <variable>.CurrNalMvcInfo.view_id, <variable>.CurrSlice.view_id
	str	r7, [r4, r0]	@ <variable>.CurrNalMvcInfo.anchor_pic_flag, <variable>.CurrSlice.anchor_pic_flag
	str	ip, [r4, r1]	@ <variable>.CurrNalMvcInfo.inter_view_flag, <variable>.CurrSlice.inter_view_flag
	str	r5, [r4, lr]	@ tmp278, <variable>.CurrNalMvcInfo.is_valid
	b	.L4416	@
.L4461:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrSlice	@
	movw	r0, #:lower16:g_event_report	@ tmp327,
	movt	r0, #:upper16:g_event_report	@ tmp327,
	ldr	r3, [r0, #0]	@ g_event_report.876, g_event_report
	cmp	r3, #0	@ g_event_report.876,
	beq	.L4425	@,
	movw	lr, #:lower16:11199520	@ tmp328,
	movt	lr, #:upper16:11199520	@ tmp328,
	mov	r1, #113	@,
	mov	r2, #0	@,
	ldr	r0, [r4, lr]	@, <variable>.ChanID
	blx	r3	@ g_event_report.876
	mvn	r0, #0	@ D.45227,
	b	.L4426	@
.L4443:
	movw	ip, #:lower16:337528	@ tmp309,
	movt	ip, #:upper16:337528	@ tmp309,
	mla	r3, ip, r0, r4	@ tmp310, tmp309, i, pMvcCtx
	movw	r0, #17600	@ tmp307,
	ldr	r2, [r3, r0]	@ baseviewid, <variable>.view_id
	b	.L4422	@
.L4463:
	movw	r6, #:lower16:g_event_report	@ tmp349,
	movt	r6, #:upper16:g_event_report	@ tmp349,
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC465	@,
	movt	r1, #:upper16:.LC465	@,
	bl	dprint_vfmw	@
	ldr	r3, [r6, #0]	@ g_event_report.9641, g_event_report
	cmp	r3, #0	@ g_event_report.9641,
	bne	.L4450	@,
	mvn	r0, #0	@ D.45227,
	b	.L4426	@
.L4464:
	mov	r0, #1	@,
	movw	r1, #:lower16:.LC313	@,
	movt	r1, #:upper16:.LC313	@,
	bl	dprint_vfmw	@
	movw	r1, #:lower16:g_event_report	@ tmp390,
	movt	r1, #:upper16:g_event_report	@ tmp390,
	ldr	r3, [r1, #0]	@ g_event_report.9657, g_event_report
	cmp	r3, #0	@ g_event_report.9657,
	beq	.L4425	@,
	sub	r2, fp, #36	@ tmp393,,
	movw	ip, #:lower16:11199520	@ tmp392,
	movt	ip, #:upper16:11199520	@ tmp392,
	mvn	r5, #0	@ tmp391,
	mov	r1, #100	@,
	ldr	r0, [r4, ip]	@, <variable>.ChanID
	str	r5, [r2, #-4]!	@ tmp391, para
	blx	r3	@ g_event_report.9657
	mov	r0, r5	@ D.45227, tmp391
	b	.L4426	@
.L4467:
	movw	r2, #:lower16:10818508	@ tmp314,
	movt	r2, #:upper16:10818508	@ tmp314,
	ldr	r2, [r4, r2]	@ baseviewid, <variable>.CurrSUBSPS.view_id
	str	r2, [r4, r3]	@ baseviewid, <variable>.CurrSlice.view_id
	b	.L4423	@
.L4469:
	.align	2
.L4468:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DecOneNal, .-MVC_DecOneNal
	.align	2
	.global	MVC_DEC_DecodePacket
	.type	MVC_DEC_DecodePacket, %function
MVC_DEC_DecodePacket:
	.fnstart
.LFB1666:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	.movsp ip
	mov	ip, sp	@,
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}	@,
	.pad #4
	.save {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	.setfp fp, ip, #-4
	sub	fp, ip, #4	@,,
	.pad #28
	sub	sp, sp, #28	@,,
	push	{lr}
	bl	__gnu_mcount_nc
	subs	r3, r1, #0	@ pPacket, pPacket
	mov	r5, #0	@ tmp156,
	mov	r4, r0	@ pMvcCtx, pMvcCtx
	str	r5, [fp, #-56]	@ tmp156, NewNum
	str	r5, [fp, #-52]	@ tmp156, ReadNum
	str	r5, [fp, #-48]	@ tmp156, RefNum
	beq	.L4498	@,
	ldr	r3, [r0, #0]	@ <variable>.pstExtraData, <variable>.pstExtraData
	movw	ip, #:lower16:11199508	@ tmp161,
	movt	ip, #:upper16:11199508	@ tmp161,
	movw	r6, #:lower16:11198008	@ tmp174,
	movt	r6, #:upper16:11198008	@ tmp174,
	movw	r2, #:lower16:11199512	@ tmp166,
	ldr	r7, [r3, #8]	@ <variable>.s32DecMode, <variable>.s32DecMode
	movt	r2, #:upper16:11199512	@ tmp166,
	ldr	r9, [r0, r6]	@ <variable>.HaveNalNotDecoded, <variable>.HaveNalNotDecoded
	movw	sl, #:lower16:11199516	@ tmp169,
	movw	r8, #:lower16:11199460	@ tmp172,
	movt	sl, #:upper16:11199516	@ tmp169,
	mov	r7, r7, asl #16	@ tmp163, <variable>.s32DecMode,
	movt	r8, #:upper16:11199460	@ tmp172,
	and	r7, r7, #196608	@ tmp165, tmp163,
	str	r7, [r0, ip]	@ tmp165, <variable>.advanced_cfg
	ldr	ip, [r3, #0]	@ <variable>.s32RefErrThr, <variable>.s32RefErrThr
	cmp	r9, #1	@ <variable>.HaveNalNotDecoded,
	str	ip, [r0, r2]	@ <variable>.s32RefErrThr, <variable>.ref_error_thr
	ldr	r3, [r3, #4]	@ <variable>.s32OutErrThr, <variable>.s32OutErrThr
	str	r5, [r0, r8]	@ tmp156, <variable>.SeErrFlg
	str	r3, [r0, sl]	@ <variable>.s32OutErrThr, <variable>.out_error_thr
	beq	.L4473	@,
	bl	MVC_ReceivePacket	@
	str	r5, [r4, r6]	@ tmp156, <variable>.HaveNalNotDecoded
	cmp	r0, #0	@,
	ldreq	r0, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	beq	.L4474	@,
.L4475:
	mov	r0, #0	@ D.45836,
.L4472:
	sub	sp, fp, #40
	ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
.L4473:
	ldr	r0, [r0, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	cmp	r0, #0	@ <variable>.pCurrNal,
	strne	r5, [r4, r6]	@ tmp156, <variable>.HaveNalNotDecoded
	beq	.L4499	@,
.L4474:
	mov	lr, #0	@ tmp180,
	add	r5, r4, #13504	@ D.45858, pMvcCtx,
	str	lr, [r0, #60]	@ tmp180, <variable>.nal_bitoffset
	add	r5, r5, #24	@ D.45858, D.45858,
	ldr	r6, [r4, #368]	@ temp.9702, <variable>.pCurrNal
	mov	r0, r5	@, D.45858
	ldmib	r6, {r1, r2}	@ phole ldm
	bl	BsInit	@
	mov	r1, #32	@,
	mov	r0, r5	@, D.45858
	bl	BsGet	@
	ldr	r2, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	and	r6, r0, #31	@ nal_unit_type, D.45862,
	strb	r6, [r2, #2]	@ nal_unit_type, <variable>.nal_unit_type
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #5, #2	@ tmp188, D.45862,,
	mvn	r2, #0	@ tmp190,
	str	ip, [r1, #72]	@ tmp188, <variable>.nal_ref_idc
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	str	r2, [r3, #88]	@ tmp190, <variable>.svc_extension_flag
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ldrb	r0, [r1, #2]	@ zero_extendqisi2	@ <variable>.nal_unit_type, <variable>.nal_unit_type
	cmp	r0, #20	@ <variable>.nal_unit_type,
	beq	.L4478	@,
.L4496:
	cmp	r6, #5	@ nal_unit_type,
	movne	r3, #0	@, prephitmp.9725
	moveq	r3, #1	@, prephitmp.9725
	cmp	r6, #1	@ nal_unit_type,
	movne	r6, #0	@, prephitmp.9688
	moveq	r6, #1	@, prephitmp.9688
.L4479:
	orr	r1, r6, r3	@ tmp223, prephitmp.9688, prephitmp.9725
	movw	r2, #:lower16:11199460	@ tmp220,
	tst	r1, #255	@ tmp223
	movt	r2, #:upper16:11199460	@ tmp220,
	mov	r6, #0	@ tmp221,
	str	r6, [r4, r2]	@ tmp221, <variable>.SeErrFlg
	beq	.L4483	@,
	mov	r0, r4	@, pMvcCtx
	sub	r1, fp, #60	@,,
	sub	r2, fp, #64	@,,
	bl	MVC_InquireSliceProperty	@
	cmp	r0, r6	@,
	bne	.L4484	@,
	ldr	lr, [fp, #-60]	@ MVC_IsNewPic, MVC_IsNewPic
	movw	r3, #:lower16:11199536	@ tmp227,
	movt	r3, #:upper16:11199536	@ tmp227,
	cmp	lr, #1	@ MVC_IsNewPic,
	ldr	r0, [r4, r3]	@ <variable>.PicCounter, <variable>.PicCounter
	addeq	r0, r0, #1	@, tmp233, <variable>.PicCounter
	str	r0, [r4, r3]	@ tmp233, <variable>.PicCounter
	beq	.L4500	@,
.L4485:
	ldr	r6, [fp, #-64]	@ IsSizeChanged, IsSizeChanged
	cmp	r6, #1	@ IsSizeChanged,
	beq	.L4501	@,
.L4483:
	mov	r0, r4	@, pMvcCtx
	mov	r6, #0	@ tmp276,
	bl	MVC_FindTrailZeros	@
	ldr	r1, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r0, r5	@, D.45858
	str	r6, [r1, #60]	@ tmp276, <variable>.nal_bitoffset
	ldr	ip, [r4, #368]	@ temp.9720, <variable>.pCurrNal
	ldmib	ip, {r1, r2}	@ phole ldm
	bl	BsInit	@
	mov	r0, r4	@, pMvcCtx
	mov	r1, r6	@, tmp276
	bl	MVC_DecOneNal	@
	cmp	r0, r6	@,
	beq	.L4475	@,
	mov	r0, #22	@,
	movw	r1, #:lower16:.LC479	@,
	movt	r1, #:upper16:.LC479	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45836,
	b	.L4472	@
.L4499:
	str	r0, [r4, r6]	@ <variable>.pCurrNal, <variable>.HaveNalNotDecoded
	b	.L4472	@
.L4500:
	movw	lr, #:lower16:11162625	@ tmp235,
	movt	lr, #:upper16:11162625	@ tmp235,
	movw	r0, #:lower16:11199540	@ tmp237,
	movw	r2, #:lower16:11199444	@ tmp246,
	movt	r0, #:upper16:11199540	@ tmp237,
	movt	r2, #:upper16:11199444	@ tmp246,
	ldrb	r3, [r4, lr]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	ldr	r1, [r4, r0]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	ldr	ip, [r4, r2]	@ <variable>.SliceParaNum, <variable>.SliceParaNum
	cmp	r3, #1	@ <variable>.CurrSlice.field_pic_flag,
	addeq	r1, r1, #1	@ tmp240, <variable>.NewPicCounter,
	addne	r1, r1, #2	@ tmp244, <variable>.NewPicCounter,
	cmp	ip, #0	@ <variable>.SliceParaNum,
	str	r1, [r4, r0]	@ tmp244, <variable>.NewPicCounter
	beq	.L4485	@,
	ldr	lr, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	mov	r3, #0	@ tmp249,
	mov	r2, #12	@,
	mov	r0, r5	@, D.45858
	ldr	r1, .L4503	@,
	str	r3, [lr, #60]	@ tmp249, <variable>.nal_bitoffset
	bl	BsInit	@
	mov	r1, #1	@,
	mov	r0, r4	@, pMvcCtx
	bl	MVC_DecOneNal	@
	movw	ip, #:lower16:11162625	@ tmp252,
	movw	r0, #:lower16:11199540	@ tmp254,
	movt	ip, #:upper16:11162625	@ tmp252,
	movt	r0, #:upper16:11199540	@ tmp254,
	movw	r2, #:lower16:11198008	@ tmp262,
	ldrb	r3, [r4, ip]	@ zero_extendqisi2	@ <variable>.CurrSlice.field_pic_flag, <variable>.CurrSlice.field_pic_flag
	movt	r2, #:upper16:11198008	@ tmp262,
	ldr	r1, [r4, r0]	@ <variable>.NewPicCounter, <variable>.NewPicCounter
	mov	ip, #1	@ tmp263,
	cmp	r3, #1	@ <variable>.CurrSlice.field_pic_flag,
	str	ip, [r4, r2]	@ tmp263, <variable>.HaveNalNotDecoded
	subeq	r1, r1, #1	@ tmp257, <variable>.NewPicCounter,
	subne	r1, r1, #2	@ tmp261, <variable>.NewPicCounter,
	str	r1, [r4, r0]	@ tmp261, <variable>.NewPicCounter
	mvn	r0, #1	@ D.45836,
	b	.L4472	@
.L4478:
	mov	r0, r5	@, D.45858
	mov	r1, #24	@,
	bl	BsGet	@
	ldr	r3, [r4, #368]	@ <variable>.pCurrNal, <variable>.pCurrNal
	ubfx	ip, r0, #23, #1	@ tmp199, D.45869,,
	str	ip, [r3, #88]	@ tmp199, <variable>.svc_extension_flag
	ldr	r2, [r4, #368]	@ temp.9709, <variable>.pCurrNal
	ldr	r3, [r2, #88]	@ <variable>.svc_extension_flag, <variable>.svc_extension_flag
	cmp	r3, #0	@ <variable>.svc_extension_flag,
	bne	.L4496	@,
	movw	ip, #13572	@ tmp208,
	ubfx	r1, r0, #22, #1	@ D.45877, D.45869,,
	movw	r6, #13592	@ tmp216,
	str	r1, [r4, ip]	@ D.45877, <variable>.CurrNalMvcInfo.non_idr_flag
	mov	ip, #13568	@ tmp205,
	cmp	r1, #0	@ D.45877,
	ubfx	lr, r0, #1, #1	@ tmp218, D.45869,,
	str	lr, [r4, r6]	@ tmp218, <variable>.CurrNalMvcInfo.inter_view_flag
	mov	r6, #1	@ tmp206,
	str	r6, [r4, ip]	@ tmp206, <variable>.CurrNalMvcInfo.is_valid
	movw	ip, #13580	@ tmp209,
	ubfx	lr, r0, #6, #10	@ tmp211, D.45869,,
	str	lr, [r4, ip]	@ tmp211, <variable>.CurrNalMvcInfo.view_id
	movw	lr, #13588	@ tmp213,
	ubfx	r0, r0, #2, #1	@ tmp215, D.45869,,
	moveq	r3, r6	@ prephitmp.9725, tmp206
	str	r0, [r4, lr]	@ tmp215, <variable>.CurrNalMvcInfo.anchor_pic_flag
	moveq	r6, r1	@ prephitmp.9688, D.45877
	movne	r1, r6	@ prephitmp.9687, prephitmp.9688
	moveq	r1, #5	@ prephitmp.9687,
	strb	r1, [r2, #2]	@ prephitmp.9687, <variable>.nal_unit_type
	b	.L4479	@
.L4501:
	mov	r0, r4	@, pMvcCtx
	mvn	r1, #0	@,
	bl	MVC_FlushDPB	@
	cmp	r0, #0	@,
	bne	.L4502	@,
.L4490:
	movw	r6, #:lower16:11199520	@ tmp266,
	movt	r6, #:upper16:11199520	@ tmp266,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	bl	FSP_GetFspType	@
	cmp	r0, #0	@,
	bne	.L4483	@,
	ldr	r0, [r4, r6]	@, <variable>.ChanID
	sub	r1, fp, #48	@,,
	sub	r2, fp, #52	@,,
	sub	r3, fp, #56	@,,
	bl	VCTRL_GetChanImgNum	@
	b	.L4483	@
.L4502:
	movw	r1, #:lower16:.LC103	@,
	movw	r2, #13021	@,
	movt	r1, #:upper16:.LC103	@,
	mov	r3, #0	@,
	mov	r0, #22	@,
	bl	dprint_vfmw	@
	b	.L4490	@
.L4484:
	mov	r0, r4	@, pMvcCtx
	bl	MVC_ClearCurrNal	@
	movw	r2, #:lower16:g_event_report	@ tmp273,
	movt	r2, #:upper16:g_event_report	@ tmp273,
	ldr	r3, [r2, #0]	@ g_event_report.916, g_event_report
	cmp	r3, #0	@ g_event_report.916,
	mvneq	r0, #0	@ D.45836,
	beq	.L4472	@
.L4491:
	movw	r0, #:lower16:11199520	@ tmp274,
	movt	r0, #:upper16:11199520	@ tmp274,
	mov	r2, r6	@, tmp221
	mov	r1, #113	@,
	ldr	r0, [r4, r0]	@, <variable>.ChanID
	blx	r3	@ g_event_report.916
	mvn	r0, #0	@ D.45836,
	b	.L4472	@
.L4498:
	mov	r0, r3	@, pPacket
	movw	r1, #:lower16:.LC1	@,
	movw	r2, #:lower16:.LC2	@,
	movt	r1, #:upper16:.LC1	@,
	movt	r2, #:upper16:.LC2	@,
	movw	r3, #12929	@,
	bl	dprint_vfmw	@
	mvn	r0, #0	@ D.45836,
	b	.L4472	@
.L4504:
	.align	2
.L4503:
	.word	.LANCHOR2+432
	.fnend
	.size	MVC_DEC_DecodePacket, .-MVC_DEC_DecodePacket
	.global	MVC_g_NalTypeEOPIC
	.global	MVC_g_AspecRatioIdc
	.global	MVC_CalcZeroNum
	.global	MVC_g_ZZ_SCAN
	.global	MVC_g_ZZ_SCAN8
	.global	MVC_quant_intra_default
	.global	MVC_quant_inter_default
	.global	MVC_quant8_intra_default
	.global	MVC_quant8_inter_default
	.global	MVC_quant_org
	.global	MVC_quant8_org
	.global	MvcTmpBuf
	.section	.rodata
	.align	2
.LANCHOR0 = . + 0
	.type	MVC_g_ZZ_SCAN, %object
	.size	MVC_g_ZZ_SCAN, 16
MVC_g_ZZ_SCAN:
	.byte	0
	.byte	1
	.byte	4
	.byte	8
	.byte	5
	.byte	2
	.byte	3
	.byte	6
	.byte	9
	.byte	12
	.byte	13
	.byte	10
	.byte	7
	.byte	11
	.byte	14
	.byte	15
	.type	MVC_g_ZZ_SCAN8, %object
	.size	MVC_g_ZZ_SCAN8, 64
MVC_g_ZZ_SCAN8:
	.byte	0
	.byte	1
	.byte	8
	.byte	16
	.byte	9
	.byte	2
	.byte	3
	.byte	10
	.byte	17
	.byte	24
	.byte	32
	.byte	25
	.byte	18
	.byte	11
	.byte	4
	.byte	5
	.byte	12
	.byte	19
	.byte	26
	.byte	33
	.byte	40
	.byte	48
	.byte	41
	.byte	34
	.byte	27
	.byte	20
	.byte	13
	.byte	6
	.byte	7
	.byte	14
	.byte	21
	.byte	28
	.byte	35
	.byte	42
	.byte	49
	.byte	56
	.byte	57
	.byte	50
	.byte	43
	.byte	36
	.byte	29
	.byte	22
	.byte	15
	.byte	23
	.byte	30
	.byte	37
	.byte	44
	.byte	51
	.byte	58
	.byte	59
	.byte	52
	.byte	45
	.byte	38
	.byte	31
	.byte	39
	.byte	46
	.byte	53
	.byte	60
	.byte	61
	.byte	54
	.byte	47
	.byte	55
	.byte	62
	.byte	63
	.type	MVC_SarTable.43687, %object
	.size	MVC_SarTable.43687, 136
MVC_SarTable.43687:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.word	4
	.word	3
	.word	3
	.word	2
	.word	2
	.word	1
	.type	__func__.41606, %object
	.size	__func__.41606, 18
__func__.41606:
	.ascii	"MVC_WriteSliceMsg\000"
	.space	2
	.type	__func__.36657, %object
	.size	__func__.36657, 13
__func__.36657:
	.ascii	"MVC_ClearAll\000"
	.space	3
	.type	__func__.45680, %object
	.size	__func__.45680, 13
__func__.45680:
	.ascii	"MVC_DEC_Init\000"
	.space	3
	.type	__func__.36640, %object
	.size	__func__.36640, 13
__func__.36640:
	.ascii	"MVC_ClearDPB\000"
	.data
	.align	2
.LANCHOR2 = . + 0
	.type	MVC_quant_intra_default, %object
	.size	MVC_quant_intra_default, 16
MVC_quant_intra_default:
	.word	471076102
	.word	538711053
	.word	622861332
	.word	707076124
	.type	MVC_quant_inter_default, %object
	.size	MVC_quant_inter_default, 16
MVC_quant_inter_default:
	.word	403967498
	.word	454562830
	.word	505092116
	.word	572398360
	.type	MVC_quant8_intra_default, %object
	.size	MVC_quant8_intra_default, 64
MVC_quant8_intra_default:
	.word	269289990
	.word	454629138
	.word	303041290
	.word	488315159
	.word	387059725
	.word	522001177
	.word	420942352
	.word	555687195
	.word	454629138
	.word	606150429
	.word	488315159
	.word	639901983
	.word	522001177
	.word	673588257
	.word	555687195
	.word	707274276
	.type	MVC_quant8_inter_default, %object
	.size	MVC_quant8_inter_default, 256
MVC_quant8_inter_default:
	.word	286199049
	.word	404100371
	.word	319884557
	.word	421008917
	.word	353571087
	.word	454629398
	.word	370479889
	.word	471537944
	.word	404100371
	.word	505158425
	.word	421008917
	.word	538844187
	.word	454629398
	.word	555752988
	.word	471537944
	.word	589373470
	.space	192
	.type	MVC_quant_org, %object
	.size	MVC_quant_org, 16
MVC_quant_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_quant8_org, %object
	.size	MVC_quant8_org, 64
MVC_quant8_org:
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.word	269488144
	.type	MVC_g_NalTypeEOPIC, %object
	.size	MVC_g_NalTypeEOPIC, 12
MVC_g_NalTypeEOPIC:
	.byte	0
	.byte	0
	.byte	1
	.byte	30
	.byte	72
	.byte	83
	.byte	80
	.byte	73
	.byte	67
	.byte	69
	.byte	78
	.byte	68
	.type	MVC_g_AspecRatioIdc, %object
	.size	MVC_g_AspecRatioIdc, 112
MVC_g_AspecRatioIdc:
	.word	1
	.word	1
	.word	1
	.word	1
	.word	12
	.word	11
	.word	10
	.word	11
	.word	16
	.word	11
	.word	40
	.word	33
	.word	24
	.word	11
	.word	20
	.word	11
	.word	32
	.word	11
	.word	80
	.word	33
	.word	18
	.word	11
	.word	15
	.word	11
	.word	64
	.word	33
	.word	160
	.word	99
	.type	MVC_CalcZeroNum, %object
	.size	MVC_CalcZeroNum, 256
MVC_CalcZeroNum:
	.byte	8
	.byte	7
	.byte	6
	.byte	6
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.section	.rodata.str1.4,"aMS",%progbits,1
	.align	2
.LC0:
	.ascii	"dar=%d\012\000"
.LC1:
	.ascii	"NULL pointer: %s, L%d\012\000"
	.space	1
.LC2:
	.ascii	"/release/HiSTBLinuxV100R002C01SPC020/source/kernel/"
	.ascii	"linux-3.10.y/drivers/msp/vfmw/vfmw_v4.0/firmware/co"
	.ascii	"mmon/syntax/mvc.c\000"
.LC3:
	.ascii	"pMvcCtx->pCurrNal->nal_bitoffset = %d; code_len_byt"
	.ascii	"e = %d; bitstream_length = %d; pMvcCtx->pCurrNal->n"
	.ascii	"al_trail_zero_bit_num = %d\012\000"
	.space	2
.LC4:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d; byt"
	.ascii	"espos = %x\012\000"
	.space	1
.LC5:
	.ascii	"stream[%d]: bitsoffset = %d; valid_bitlen = %d\012\000"
.LC6:
	.ascii	"nal_segment = %d is not expected value\012\000"
.LC7:
	.ascii	"new pic flag = %d\012\000"
	.space	1
.LC8:
	.ascii	"tmp slice  pps id = %d\012\000"
.LC9:
	.ascii	"MVC_PPSSPSCheckTmpId: pps with this pic_parameter_s"
	.ascii	"et_id = %d havn't decode\012\000"
	.space	3
.LC10:
	.ascii	"MVC_PPSSPSCheckTmpId: seq_parameter_set_id out of r"
	.ascii	"ange.\012\000"
	.space	2
.LC11:
	.ascii	"MVC_PPSSPSCheckTmpId: sps with this pic_parameter_s"
	.ascii	"et_id = %d havn't decode\012\000"
	.space	3
.LC12:
	.ascii	"slice  pps id = %d\012\000"
.LC13:
	.ascii	"pps with this pic_parameter_set_id = %d havn't deco"
	.ascii	"de\012\000"
	.space	1
.LC14:
	.ascii	"sps with this pic_parameter_set_id havn't decode\012"
	.ascii	"\000"
	.space	2
.LC15:
	.ascii	"subsps with this seq_parameter_set_id = %d havn't d"
	.ascii	"ecoded\012\000"
	.space	1
.LC16:
	.ascii	"sps but mvc flag %d is wrong\012\000"
	.space	2
.LC17:
	.ascii	"save pic yuv :  structure = %d;  idc = %d\012\000"
	.space	1
.LC18:
	.ascii	"structure = %d pMvcCtx->CurrPic.pic_width_in_mb = %"
	.ascii	"d pMvcCtx->CurrPic.pic_height_in_mb = %d\012\000"
	.space	3
.LC19:
	.ascii	"In one access unit,all non-base view should have th"
	.ascii	"e same subsps!\012\000"
	.space	1
.LC20:
	.ascii	"list[%d][%d]: frame_num=%d, poc=%d\012\000"
.LC21:
	.ascii	"pMvcCtx->DPB.fs[%d]: frame_num=%d poc=%d is_referen"
	.ascii	"ce=%d\012\000"
	.space	2
.LC22:
	.ascii	"\012\000"
	.space	2
.LC23:
	.ascii	"pMvcCtx->DPB.fs_ref[%d]: frame_num=%d poc=%d is_ref"
	.ascii	"erence=%d\012\000"
	.space	2
.LC24:
	.ascii	"pMvcCtx->DPB.fs_ref[%d]: MVC_FRAME.poc=%d \012\000"
.LC25:
	.ascii	"fuction return value is null,%s %d unknow error!!\012"
	.ascii	"\000"
	.space	1
.LC26:
	.ascii	"framestore %d allocate apc %d\012\000"
	.space	1
.LC27:
	.ascii	"find APC, but logic_fs_id %d abnormal(ref=%d,plfs=%"
	.ascii	"p, pdfs=%p)\012\000"
.LC28:
	.ascii	"exg_pts: %lld <-> %lld\012\000"
.LC29:
	.ascii	"MVC_FRAME %d, state=%d, is already output\012\000"
	.space	1
.LC30:
	.ascii	"plfs(fs=%p, eFoState=%d) is null, logic_fs_id = %d\012"
	.ascii	"\000"
.LC31:
	.ascii	"not used MVC_FRAME: (%d,%d)\012\000"
	.space	3
.LC32:
	.ascii	"MVC_FRAME skip: is_used=%d,skip=%d\012\000"
.LC33:
	.ascii	"topfield skip\012\000"
	.space	1
.LC34:
	.ascii	"bottom field skip\012\000"
	.space	1
.LC35:
	.ascii	"err(%d) > out_thr(%d)\012\000"
	.space	1
.LC36:
	.ascii	"MVC recycle image\012\000"
	.space	1
.LC37:
	.ascii	"%-50s%50d\012\000"
	.space	1
.LC38:
	.ascii	"DecPicTimingSEI but SPS is invalid.\012\000"
	.space	3
.LC39:
	.ascii	"SEI: cpb_removal_delay\000"
	.space	1
.LC40:
	.ascii	"SEI: dpb_output_delay\000"
	.space	2
.LC41:
	.ascii	"pic_struct\000"
	.space	1
.LC42:
	.ascii	"\012 VFMW ** release streambuff=%08x   bitstream_le"
	.ascii	"ngth=%d\012\000"
	.space	3
.LC43:
	.ascii	"MvcDec destroy\012\000"
.LC44:
	.ascii	"clear curr slice.\012\000"
	.space	1
.LC45:
	.ascii	"\012\012END of the bit buffer, copy the first packe"
	.ascii	"t!\012\012\000"
	.space	2
.LC46:
	.ascii	"0:phy:0x%x, 1:phy:0x%x; len0:%d len1:%d\012\000"
	.space	3
.LC47:
	.ascii	"0:phy:0x%x, len0:%d\012\000"
	.space	3
.LC48:
	.ascii	"nal_ref_idc=%d, structure=%d, image_id=%d, pmv_idc="
	.ascii	"%d\012\000"
	.space	1
.LC49:
	.ascii	"logic MVC_FRAME id(=%d): get LogicFs error!\012\000"
	.space	3
.LC50:
	.ascii	"phy fs is null: pstDecodeFs = %p, pstDispOutFs = %p"
	.ascii	"\012\000"
	.space	3
.LC51:
	.ascii	"for P slice size of list equal 0(1st).\012\000"
.LC52:
	.ascii	"for P slice size of list equal 0(2nd).\012\000"
.LC53:
	.ascii	"for B slice size of two list all equal 0.\012\000"
	.space	1
.LC54:
	.ascii	"init list error.\012\000"
	.space	2
.LC55:
	.ascii	"partition fs memory fail!\012\000"
	.space	1
.LC56:
	.ascii	"ERROR: FSP_ConfigInstance fail!\012\000"
	.space	3
.LC57:
	.ascii	"stream MVC_FRAME packing type is %d! what can we do"
	.ascii	"?\012\000"
	.space	2
.LC58:
	.ascii	"clear all dec para\012\000"
.LC59:
	.ascii	"%s %d MVC_OK != MVC_InitDPB!!\012\000"
	.space	1
.LC60:
	.ascii	"cann't find FrameStore\012\000"
.LC61:
	.ascii	"========== MVC FrameStore state(is_used, is_in_dpb,"
	.ascii	" MVC_IsOutDPB) ========\012\000"
.LC62:
	.ascii	"%02d: %d %d %d\012\000"
.LC63:
	.ascii	"ReadImgNum = %d, NewImgNum = %d\012\000"
	.space	3
.LC64:
	.ascii	"FrameStore leak, MVC_ClearAll\012\000"
	.space	1
.LC65:
	.ascii	"%s %d NULL== pMvcCtx->SPS || NULL == pMvcCtx->PPS |"
	.ascii	"| NULL == pMvcCtx->DecSlicePara!!\012\000"
	.space	2
.LC66:
	.ascii	"-1 == VCTRL_GetChanIDByCtx() Err! \012\000"
.LC67:
	.ascii	"line: %d, pImage is NULL!\012\000"
	.space	1
.LC68:
	.ascii	"FS_ALLOC_ERR, MVC_ClearAll\012\000"
.LC69:
	.ascii	"Can not new logic fs! MVC_ClearAll\012\000"
.LC70:
	.ascii	"pH264Ctx is %#x, pFrameStore is %#x\012\000"
	.space	3
.LC71:
	.ascii	"line: %d, pstLogicFsImage is NULL\012\000"
	.space	1
.LC72:
	.ascii	"InsertVO err:%d, MVC_ClearAll\012\000"
	.space	1
.LC73:
	.ascii	"mvc.c line %d: MVC_FRAME para err(ret=%d), recycle "
	.ascii	"image self\012\000"
	.space	1
.LC74:
	.ascii	"%s %d MVC_OK != MVC_FlushDPB!!\012\000"
.LC75:
	.ascii	"\012 receive streambuff=0x%08x; phy_addr=0x%x; bits"
	.ascii	"tream_length=%d\012\000"
	.space	3
.LC76:
	.ascii	"nal_releaMVC_SE_ERR\012\000"
	.space	3
.LC77:
	.ascii	"cann't find slot for current nal\012\000"
	.space	2
.LC78:
	.ascii	"receive a zero packet\012\000"
	.space	1
.LC79:
	.ascii	"----------------- MVC_IMODE -> %d -----------------"
	.ascii	"-\012\000"
	.space	2
.LC80:
	.ascii	"***** VDM start, TotalPicNum=%d, pMvcCtx->CurrPic.s"
	.ascii	"tructure=%d.\012\000"
	.space	3
.LC81:
	.ascii	"line %d, get APC error, ret %d\012\000"
.LC82:
	.ascii	"InserFrmInDPB: cur pic struct = %d!\012\000"
	.space	3
.LC83:
	.ascii	"CurrPic.state is 'MVC_EMPTY'\012\000"
	.space	2
.LC84:
	.ascii	"MVC_StorePicInDpb return(%d) from L%d\012\000"
	.space	1
.LC85:
	.ascii	"line %d, return %d\012\000"
.LC86:
	.ascii	"Is IDR, but init DPB failed!\012\000"
	.space	2
.LC87:
	.ascii	"Is IDR, but FlushDPB failed!\012\000"
	.space	2
.LC88:
	.ascii	"MVC_DirectOutput mode\012\000"
	.space	1
.LC89:
	.ascii	"line %d, REPORT_IFRAME_ERR\012\000"
.LC90:
	.ascii	"err(%d) > ref_thr(%d)\012\000"
	.space	1
.LC91:
	.ascii	"MVC_Marking return %d\012\000"
	.space	1
.LC92:
	.ascii	"line %d: pMvcCtx->DPB.size = %d, ref %d, ltref %d\012"
	.ascii	"\000"
	.space	1
.LC93:
	.ascii	"line %d, MVC_GetMinPOC failed\012\000"
	.space	1
.LC94:
	.ascii	"store pic err, ret = %d\012\000"
	.space	3
.LC95:
	.ascii	"MVC_IMODE nal store pic err, ret = %d\012\000"
	.space	1
.LC96:
	.ascii	"MVC_IMODE nal flush dpb err, ret = %d\012\000"
	.space	1
.LC97:
	.ascii	"GAP found while DPB is MVC_EMPTY!\012\000"
	.space	1
.LC98:
	.ascii	"MVC_FRAME num gap try to fill it \012\000"
	.space	1
.LC99:
	.ascii	"CurrFrameNum = %d  UnusedShortTermFrameNum = %d\012"
	.ascii	"\000"
	.space	3
.LC100:
	.ascii	"cann't allocate MVC_FRAME store when gap find\012\000"
	.space	1
.LC101:
	.ascii	"allocate MVC_FRAME store when gap find\012\000"
.LC102:
	.ascii	"line %d: store gap pic err, ret=%d\012\000"
.LC103:
	.ascii	"line %d: flush dpb return %d\012\000"
	.space	2
.LC104:
	.ascii	"line %d: init dpb return %d\012\000"
	.space	3
.LC105:
	.ascii	"resolution error, the CAP_LEVEL_USER_DEFINE_WITH_OP"
	.ascii	"TION channel with s32ReRangeEn == 0 can't support s"
	.ascii	"uch bitstream.\012\000"
	.space	2
.LC106:
	.ascii	"s32MaxRefFrameNum < pMvcCtx->DPB.size, the CAP_LEVE"
	.ascii	"L_USER_DEFINE_WITH_OPTION channel can't support suc"
	.ascii	"h bitstream.\012\000"
.LC107:
	.ascii	"mem arrange err, MVC_ClearAll\012\000"
	.space	1
.LC108:
	.ascii	"get back frm\012\000"
	.space	2
.LC109:
	.ascii	"line %d: MVC_FRAME gap(=%d) > dpb size(=%d)\012\000"
	.space	3
.LC110:
	.ascii	"MVC_FRAME num gap don't allowed but gap find\012\000"
	.space	2
.LC111:
	.ascii	"line %d: frame num(%d/%d) find gap in NON-I slice b"
	.ascii	"ut here gap is not allowed\012\000"
	.space	1
.LC112:
	.ascii	"line %d: dec gap failed\012\000"
	.space	3
.LC113:
	.ascii	"line %d: alloc framestore failed\012\000"
	.space	2
.LC114:
	.ascii	"dec_pts: %lld\012\000"
	.space	1
.LC115:
	.ascii	"dec_usertag: %lld\012\000"
	.space	1
.LC116:
	.ascii	"   : delta_sl   \000"
	.space	3
.LC117:
	.ascii	"SEI: frame_packing_arrangement_id\000"
	.space	2
.LC118:
	.ascii	"SEI: frame_packing_arrangement_cancel_flag\000"
	.space	1
.LC119:
	.ascii	"SEI: frame_packing_arrangement_type\000"
.LC120:
	.ascii	"SEI: quincunx_sampling_flag\000"
.LC121:
	.ascii	"SEI: content_interpretation_type\000"
	.space	3
.LC122:
	.ascii	"SEI: spatial_flipping_flag\000"
	.space	1
.LC123:
	.ascii	"SEI: frame0_flipped_flag\000"
	.space	3
.LC124:
	.ascii	"SEI: field_views_flag\000"
	.space	2
.LC125:
	.ascii	"SEI: current_frame_is_frame0_flag\000"
	.space	2
.LC126:
	.ascii	"SEI: frame0_self_contained_flag\000"
.LC127:
	.ascii	"SEI: frame1_self_contained_flag\000"
.LC128:
	.ascii	"SEI: frame0_grid_position_x\000"
.LC129:
	.ascii	"SEI: frame0_grid_position_y\000"
.LC130:
	.ascii	"SEI: frame1_grid_position_x\000"
.LC131:
	.ascii	"SEI: frame1_grid_position_y\000"
.LC132:
	.ascii	"SEI: frame_packing_arrangement_reserved_byte\000"
	.space	3
.LC133:
	.ascii	"SEI: frame_packing_arrangement_repetition_period\000"
	.space	3
.LC134:
	.ascii	"SEI: frame_packing_arrangement_extension_flag\000"
	.space	2
.LC135:
	.ascii	"SEI nal dec payload type err\012\000"
	.space	2
.LC136:
	.ascii	"SEI nal dec payloadSize err\012\000"
	.space	3
.LC137:
	.ascii	"MVC_SEI_BUFFERING_PERIOD,offset = %d,payload_size ="
	.ascii	" %d \012\000"
	.space	3
.LC138:
	.ascii	"MVC_SEI_PIC_TIMING,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC139:
	.ascii	"MVC_SEI_PAN_SCAN_RECT,offset = %d,payload_size = %d"
	.ascii	" \012\000"
	.space	2
.LC140:
	.ascii	"MVC_SEI_FILLER_PAYLOAD,offset = %d,payload_size = %"
	.ascii	"d \012\000"
	.space	1
.LC141:
	.ascii	"MVC_SEI_USER_DATA_REGISTERED_ITU_T_T35, offset = %d"
	.ascii	", payload_size = %d \012\000"
	.space	3
.LC142:
	.ascii	"MVC_SEI_USER_DATA_UNREGISTERED, offset = %d, payloa"
	.ascii	"d_size = %d \012\000"
	.space	3
.LC143:
	.ascii	"SEI: itu_t_t35_country_code\000"
.LC144:
	.ascii	"SEI: itu_t_t35_country_code_extension_byte\000"
	.space	1
.LC145:
	.ascii	"SEI: itu_t_t35_provider_code\000"
	.space	3
.LC146:
	.ascii	"cann't dec usrdata\012\000"
.LC147:
	.ascii	"MVC_SEI_RECOVERY_POINT,offset = %d,payload_size = %"
	.ascii	"d \012\000"
	.space	1
.LC148:
	.ascii	"MVC_SEI_DEC_REF_PIC_MARKING_REPETITION,offset = %d,"
	.ascii	"payload_size = %d \012\000"
	.space	1
.LC149:
	.ascii	"MVC_SEI_SPARE_PIC,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	2
.LC150:
	.ascii	"MVC_SEI_SCENE_INFO,offset = %d,payload_size = %d \012"
	.ascii	"\000"
	.space	1
.LC151:
	.ascii	"MVC_SEI_SUB_SEQ_INFO,offset = %d,payload_size = %d "
	.ascii	"\012\000"
	.space	3
.LC152:
	.ascii	"MVC_SEI_SUB_SEQ_LAYER_CHARACTERISTICS,offset = %d,p"
	.ascii	"ayload_size = %d \012\000"
	.space	2
.LC153:
	.ascii	"MVC_SEI_SUB_SEQ_CHARACTERISTICS,offset = %d,payload"
	.ascii	"_size = %d \012\000"
.LC154:
	.ascii	"MVC_SEI_FULL_FRAME_FREEZE,offset = %d,payload_size "
	.ascii	"= %d \012\000"
	.space	2
.LC155:
	.ascii	"MVC_SEI_FULL_FRAME_FREEZE_RELEASE,offset = %d,paylo"
	.ascii	"ad_size = %d \012\000"
	.space	2
.LC156:
	.ascii	"MVC_SEI_FULL_FRAME_SNAPSHOT,offset = %d,payload_siz"
	.ascii	"e = %d \012\000"
.LC157:
	.ascii	"MVC_SEI_PROGRESSIVE_REFINEMENT_SEGMENT_START,offset"
	.ascii	" = %d,payload_size = %d \012\000"
	.space	3
.LC158:
	.ascii	"MVC_SEI_PROGRESSIVE_REFINEMENT_SEGMENT_END,offset ="
	.ascii	" %d,payload_size = %d \012\000"
	.space	1
.LC159:
	.ascii	"MVC_SEI_MOTION_CONSTRAINED_SLICE_GROUP_SET,offset ="
	.ascii	" %d,payload_size = %d \012\000"
	.space	1
.LC160:
	.ascii	"MVC_SEI_FILM_GRAIN_CHARACTERISTICS,offset = %d,payl"
	.ascii	"oad_size = %d \012\000"
	.space	1
.LC161:
	.ascii	"MVC_SEI_DEBLOCKING_FILTER_DISPLAY_PREFERENCE,offset"
	.ascii	" = %d,payload_size = %d \012\000"
	.space	3
.LC162:
	.ascii	"MVC_SEI_STEREO_VIDEO_INFO,offset = %d,payload_size "
	.ascii	"= %d \012\000"
	.space	2
.LC163:
	.ascii	"too much usrdat, cann't dec SEI\012\000"
	.space	3
.LC164:
	.ascii	"MVC VUI: vui_mvc_num_ops_minus1\000"
.LC165:
	.ascii	"MVC VUI: vui_mvc_temporal_id[]\000"
	.space	1
.LC166:
	.ascii	"SUBSPS VUI: vui_mvc_num_target_output_views_minus1["
	.ascii	"]\000"
	.space	3
.LC167:
	.ascii	"MVC VUI: vui_mvc_view_id[][]\000"
	.space	3
.LC168:
	.ascii	"MVC VUI: vui_mvc_timing_info_present_flag\000"
	.space	2
.LC169:
	.ascii	"MVC VUI: vui_mvc_num_units_in_tick\000"
	.space	1
.LC170:
	.ascii	"MVC VUI: vui_mvc_time_scale[]\000"
	.space	2
.LC171:
	.ascii	"MVC VUI: vui_mvc_fixed_frame_rate_flag\000"
	.space	1
.LC172:
	.ascii	"MVC VUI: vui_mvc_nal_hrd_parameters_present_flag[]\000"
	.space	1
.LC173:
	.ascii	"MVC VUI: cpb_cnt_minus1\000"
.LC174:
	.ascii	"MVC VUI: bit_rate_scale\000"
.LC175:
	.ascii	"MVC VUI: cpb_size_scale\000"
.LC176:
	.ascii	"hrd->cpb_cnt_minus1 out of range\012\000"
	.space	2
.LC177:
	.ascii	"MVC VUI: bit_rate_value_minus1\000"
	.space	1
.LC178:
	.ascii	"MVC VUI: cpb_size_value_minus1\000"
	.space	1
.LC179:
	.ascii	"MVC VUI: cbr_flag\000"
	.space	2
.LC180:
	.ascii	"MVC VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC181:
	.ascii	"MVC VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC182:
	.ascii	"MVC VUI: dpb_output_delay_length_minus1\000"
.LC183:
	.ascii	"MVC VUI: time_offset_length\000"
.LC184:
	.ascii	"MVC VUI: vui_mvc_vcl_hrd_parameters_present_flag[]\000"
	.space	1
.LC185:
	.ascii	"MVC VUI: vui_mvc_low_delay_hrd_flag[]\000"
	.space	2
.LC186:
	.ascii	"MVC VUI: vui_mvc_pic_struct_present_flag[]\000"
	.space	1
.LC187:
	.ascii	"SUBSPS: num_views_minus1\000"
	.space	3
.LC188:
	.ascii	"pSubsps->num_views_minus1(%d) out of range.\012\000"
	.space	3
.LC189:
	.ascii	"SUBSPS: view_id[]\000"
	.space	2
.LC190:
	.ascii	"SUBSPS: num_anchor_refs_l0[]\000"
	.space	3
.LC191:
	.ascii	"pSubsps->num_anchor_refs_l0(%d) out of range.\012\000"
	.space	1
.LC192:
	.ascii	"SUBSPS: anchor_ref_l0[][]\000"
	.space	2
.LC193:
	.ascii	"SUBSPS: num_anchor_refs_l1[]\000"
	.space	3
.LC194:
	.ascii	"pSubsps->num_anchor_refs_l1(%d) out of range.\012\000"
	.space	1
.LC195:
	.ascii	"SUBSPS: anchor_ref_l1[][]\000"
	.space	2
.LC196:
	.ascii	"SUBSPS: num_non_anchor_refs_l0[]\000"
	.space	3
.LC197:
	.ascii	"pSubsps->num_non_anchor_refs_l0(%d) out of range.\012"
	.ascii	"\000"
	.space	1
.LC198:
	.ascii	"SUBSPS: non_anchor_ref_l0[][]\000"
	.space	2
.LC199:
	.ascii	"SUBSPS: num_non_anchor_refs_l1[]\000"
	.space	3
.LC200:
	.ascii	"pSubsps->num_non_anchor_refs_l1(%d) out of range.\012"
	.ascii	"\000"
	.space	1
.LC201:
	.ascii	"SUBSPS: non_anchor_ref_l1[][]\000"
	.space	2
.LC202:
	.ascii	"SUBSPS: num_level_values_signalled_minus1\000"
	.space	2
.LC203:
	.ascii	"num_level(%d) out of range.\012\000"
	.space	3
.LC204:
	.ascii	"SUBSPS: level_idc[]\000"
.LC205:
	.ascii	"SUBSPS: num_applicable_ops_minus1\000"
	.space	2
.LC206:
	.ascii	"num_ops(%d) out of range.\012\000"
	.space	1
.LC207:
	.ascii	"SUBSPS: applicable_op_temporal_id[][]\000"
	.space	2
.LC208:
	.ascii	"SUBSPS: applicable_op_num_target_views_minus1[][]\000"
	.space	2
.LC209:
	.ascii	"applicable_op_num_target_views(%d) out of range.\012"
	.ascii	"\000"
	.space	2
.LC210:
	.ascii	"SUBSPS: applicable_op_target_view_id[][][]\000"
	.space	1
.LC211:
	.ascii	"SUBSPS: applicable_op_num_views_minus1\000"
	.space	1
.LC212:
	.ascii	"pSubsps->applicable_op_num_views_minus1(%d) out of "
	.ascii	"range.\012\000"
	.space	1
.LC213:
	.ascii	"VUI: aspect_ratio_info_present_flag\000"
.LC214:
	.ascii	"VUI: aspect_ratio_idc\000"
	.space	2
.LC215:
	.ascii	"VUI: sar_width\000"
	.space	1
.LC216:
	.ascii	"VUI: sar_height\000"
.LC217:
	.ascii	"VUI: overscan_info_present_flag\000"
.LC218:
	.ascii	"VUI: overscan_appropriate_flag\000"
	.space	1
.LC219:
	.ascii	"VUI: video_signal_type_present_flag\000"
.LC220:
	.ascii	"VUI: video_format\000"
	.space	2
.LC221:
	.ascii	"VUI: video_full_range_flag\000"
	.space	1
.LC222:
	.ascii	"VUI: color_description_present_flag\000"
.LC223:
	.ascii	"VUI: colour_primaries\000"
	.space	2
.LC224:
	.ascii	"VUI: transfer_characteristics\000"
	.space	2
.LC225:
	.ascii	"VUI: matrix_coefficients\000"
	.space	3
.LC226:
	.ascii	"VUI: chroma_loc_info_present_flag\000"
	.space	2
.LC227:
	.ascii	"VUI: chroma_sample_loc_type_top_field\000"
	.space	2
.LC228:
	.ascii	"VUI: chroma_sample_loc_type_bottom_field\000"
	.space	3
.LC229:
	.ascii	"VUI: timing_info_present_flag\000"
	.space	2
.LC230:
	.ascii	"VUI: num_units_in_tick\000"
	.space	1
.LC231:
	.ascii	"VUI: time_scale\000"
.LC232:
	.ascii	"VUI: fixed_frame_rate_flag\000"
	.space	1
.LC233:
	.ascii	"VUI: nal_hrd_parameters_present_flag\000"
	.space	3
.LC234:
	.ascii	"VUI: cpb_cnt_minus1\000"
.LC235:
	.ascii	"VUI: bit_rate_scale\000"
.LC236:
	.ascii	"VUI: cpb_size_scale\000"
.LC237:
	.ascii	"VUI: bit_rate_value_minus1\000"
	.space	1
.LC238:
	.ascii	"VUI: cpb_size_value_minus1\000"
	.space	1
.LC239:
	.ascii	"VUI: cbr_flag\000"
	.space	2
.LC240:
	.ascii	"VUI: initial_cpb_removal_delay_length_minus1\000"
	.space	3
.LC241:
	.ascii	"VUI: cpb_removal_delay_length_minus1\000"
	.space	3
.LC242:
	.ascii	"VUI: dpb_output_delay_length_minus1\000"
.LC243:
	.ascii	"VUI: time_offset_length\000"
.LC244:
	.ascii	"VUI: vcl_hrd_parameters_present_flag\000"
	.space	3
.LC245:
	.ascii	"VUI: low_delay_hrd_flag\000"
.LC246:
	.ascii	"VUI: pic_struct_present_flag\000"
	.space	3
.LC247:
	.ascii	"VUI: bitstream_restriction_flag\000"
.LC248:
	.ascii	"VUI: motion_vectors_over_pic_boundaries_flag\000"
	.space	3
.LC249:
	.ascii	"VUI: max_bytes_per_pic_denom\000"
	.space	3
.LC250:
	.ascii	"VUI: max_bits_per_mb_denom\000"
	.space	1
.LC251:
	.ascii	"VUI: log2_max_mv_length_horizontal\000"
	.space	1
.LC252:
	.ascii	"VUI: log2_max_mv_length_vertical\000"
	.space	3
.LC253:
	.ascii	"VUI: num_reorder_frames\000"
.LC254:
	.ascii	"VUI: max_dec_frame_buffering\000"
	.space	3
.LC255:
	.ascii	"SPS: chroma_format_idc\000"
	.space	1
.LC256:
	.ascii	"pSPS->chroma_format_idc out of range.\012\000"
	.space	1
.LC257:
	.ascii	"SPS: bit_depth_luma_minus8\000"
	.space	1
.LC258:
	.ascii	"bit_depth_luma_minus8 not equal 0.\012\000"
.LC259:
	.ascii	"SPS: bit_depth_chroma_minus8\000"
	.space	3
.LC260:
	.ascii	"bit_depth_chroma_minus8 not equal 0.\012\000"
	.space	2
.LC261:
	.ascii	"SPS: qpprime_y_zero_trans_bypass_flag\000"
	.space	2
.LC262:
	.ascii	"qpprime_y_zero_trans_bypass_flag not equal 0.\012\000"
	.space	1
.LC263:
	.ascii	"SPS: seq_scaling_matrix_present_flag\000"
	.space	3
.LC264:
	.ascii	"SPS: seq_scaling_list_present_flag\000"
	.space	1
.LC265:
	.ascii	"SPS: log2_max_frame_num_minus4\000"
	.space	1
.LC266:
	.ascii	"pSPS->log2_max_frame_num_minus4 out of range.\012\000"
	.space	1
.LC267:
	.ascii	"SPS: pic_order_cnt_type\000"
.LC268:
	.ascii	"pSPS->pic_order_cnt_type out of range.\012\000"
.LC269:
	.ascii	"SPS: log2_max_pic_order_cnt_lsb_minus4\000"
	.space	1
.LC270:
	.ascii	"pSPS->log2_max_pic_order_cnt_lsb_minus4 out of rang"
	.ascii	"e.\012\000"
	.space	1
.LC271:
	.ascii	"SPS: delta_pic_order_always_zero_flag\000"
	.space	2
.LC272:
	.ascii	"SPS: offset_for_non_ref_pic\000"
.LC273:
	.ascii	"SPS: offset_for_top_to_bottom_field\000"
.LC274:
	.ascii	"SPS: num_ref_frames_in_pic_order_cnt_cycle\000"
	.space	1
.LC275:
	.ascii	"pSPS->num_ref_frames_in_pic_order_cnt_cycle out of "
	.ascii	"range.\012\000"
	.space	1
.LC276:
	.ascii	"SPS: offset_for_ref_frame[i]\000"
	.space	3
.LC277:
	.ascii	"SPS: num_ref_frames\000"
.LC278:
	.ascii	"SPS: gaps_in_frame_num_value_allowed_flag\000"
	.space	2
.LC279:
	.ascii	"SPS: pic_width_in_mbs_minus1\000"
	.space	3
.LC280:
	.ascii	"pSPS->pic_width_in_mbs_minus1 out of range(=%d).\012"
	.ascii	"\000"
	.space	2
.LC281:
	.ascii	"SPS: pic_height_in_map_units_minus1\000"
.LC282:
	.ascii	"SPS: frame_mbs_only_flag\000"
	.space	3
.LC283:
	.ascii	"SPS: mb_adaptive_frame_field_flag\000"
	.space	2
.LC284:
	.ascii	"pSPS->pic_height_in_map_units_minus1 out of range.\012"
	.ascii	"\000"
.LC285:
	.ascii	"pic size too large.\012\000"
	.space	3
.LC286:
	.ascii	"level_idc %d not support.\012\000"
	.space	1
.LC287:
	.ascii	"dpb size according level : %d\012\000"
	.space	1
.LC288:
	.ascii	"pSPS->num_ref_frames(%d) > DPB size(%d), try to sel"
	.ascii	"ect the reasonable one.\012\000"
.LC289:
	.ascii	"SPS: direct_8x8_inference_flag\000"
	.space	1
.LC290:
	.ascii	"SPS: frame_cropping_flag\000"
	.space	3
.LC291:
	.ascii	"SPS: frame_cropping_rect_left_offset\000"
	.space	3
.LC292:
	.ascii	"SPS: frame_cropping_rect_right_offset\000"
	.space	2
.LC293:
	.ascii	"SPS: frame_cropping_rect_top_offset\000"
.LC294:
	.ascii	"SPS: frame_cropping_rect_bottom_offset\000"
	.space	1
.LC295:
	.ascii	"SPS: vui_parameters_present_flag\000"
	.space	3
.LC296:
	.ascii	"max_dec_frame_buffering(%d) > MaxDpbSize(%d)\012\000"
	.space	2
.LC297:
	.ascii	"SUBSPS: profile_idc\000"
.LC298:
	.ascii	"SUBSPS: constrained_set0_flag\000"
	.space	2
.LC299:
	.ascii	"SUBSPS: constrained_set1_flag\000"
	.space	2
.LC300:
	.ascii	"SUBSPS: constrained_set2_flag\000"
	.space	2
.LC301:
	.ascii	"SUBSPS: constrained_set3_flag\000"
	.space	2
.LC302:
	.ascii	"SUBSPS: constrained_set4_flag\000"
	.space	2
.LC303:
	.ascii	"SUBSPS: constrained_set5_flag\000"
	.space	2
.LC304:
	.ascii	"SUBSPS: reserved_zero_2bits\000"
.LC305:
	.ascii	"SUBSPS: level_idc\000"
	.space	2
.LC306:
	.ascii	"SUBSPS: seq_parameter_set_id\000"
	.space	3
.LC307:
	.ascii	"seq_parameter_set_id out of range.\012\000"
.LC308:
	.ascii	"MVC_BASELINE stream, try to decode, exit when FMO o"
	.ascii	"ccurred.\012\000"
	.space	3
.LC309:
	.ascii	"MVC_EXTENDED stream, try to decode, exit when datap"
	.ascii	"artition occurred.\012\000"
	.space	1
.LC310:
	.ascii	"others High profile stream, try to decode, exit whe"
	.ascii	"n high profile not support occurred.\012\000"
	.space	3
.LC311:
	.ascii	"profile_idc = %5d error\012\000"
	.space	3
.LC312:
	.ascii	"level_idc = %5d error, try to decode as level_idc 4"
	.ascii	"1.\012\000"
	.space	1
.LC313:
	.ascii	"SUBSPS decode error.\012\000"
	.space	2
.LC314:
	.ascii	"SUBSPS: bit_equal_to_one\000"
	.space	3
.LC315:
	.ascii	"SUBSPS Mvc Ext decode error.\012\000"
	.space	2
.LC316:
	.ascii	"SUBSPS: mvc_vui_parameters_present_flag\000"
.LC317:
	.ascii	"SUBSPS Mvc Vui Ext decode error.\012\000"
	.space	2
.LC318:
	.ascii	"SPS: profile_idc\000"
	.space	3
.LC319:
	.ascii	"SPS: constrained_set0_flag\000"
	.space	1
.LC320:
	.ascii	"SPS: constrained_set1_flag\000"
	.space	1
.LC321:
	.ascii	"SPS: constrained_set2_flag\000"
	.space	1
.LC322:
	.ascii	"SPS: constrained_set3_flag\000"
	.space	1
.LC323:
	.ascii	"SPS: constrained_set4_flag\000"
	.space	1
.LC324:
	.ascii	"SPS: constrained_set5_flag\000"
	.space	1
.LC325:
	.ascii	"SPS: reserved_zero_2bits\000"
	.space	3
.LC326:
	.ascii	"SPS: level_idc\000"
	.space	1
.LC327:
	.ascii	"SPS: seq_parameter_set_id\000"
	.space	2
.LC328:
	.ascii	"profile_idc = %5d error, try to decode as main prof"
	.ascii	"ile.\012\000"
	.space	3
.LC329:
	.ascii	"level_idc = %5d error, try to decode as level_idc %"
	.ascii	"d.\012\000"
	.space	1
.LC330:
	.ascii	"Line %d: SPS[%d] decode error.\012\000"
.LC331:
	.ascii	"PPS: entropy_coding_mode_flag\000"
	.space	2
.LC332:
	.ascii	"PPS: pic_order_present_flag\000"
.LC333:
	.ascii	"PPS: num_slice_groups_minus1\000"
	.space	3
.LC334:
	.ascii	"MVC_BASELINE stream with FMO, not support.\012\000"
.LC335:
	.ascii	"PPS: num_ref_idx_l0_active_minus1\000"
	.space	2
.LC336:
	.ascii	"num_ref_idx_l0_active_minus1 out of range.\012\000"
.LC337:
	.ascii	"PPS: num_ref_idx_l1_active_minus1\000"
	.space	2
.LC338:
	.ascii	"num_ref_idx_l1_active_minus1 out of range.\012\000"
.LC339:
	.ascii	"PPS: weighted prediction flag\000"
	.space	2
.LC340:
	.ascii	"PPS: weighted_bipred_idc\000"
	.space	3
.LC341:
	.ascii	"weighted_bipred_idc out of range\012\000"
	.space	2
.LC342:
	.ascii	"PPS: pic_init_qp_minus26\000"
	.space	3
.LC343:
	.ascii	"PPS: pic_init_qs_minus26\000"
	.space	3
.LC344:
	.ascii	"PPS: chroma_qp_index_offset\000"
.LC345:
	.ascii	"PPS: deblocking_filter_control_present_flag\000"
.LC346:
	.ascii	"PPS: constrained_intra_pred_flag\000"
	.space	3
.LC347:
	.ascii	"PPS: redundant_pic_cnt_present_flag\000"
.LC348:
	.ascii	"redundant pic not support when find redundant slice"
	.ascii	" later, exit\012\000"
	.space	3
.LC349:
	.ascii	"PPS: transform_8x8_mode_flag\000"
	.space	3
.LC350:
	.ascii	"PPS: pic_scaling_matrix_present_flag\000"
	.space	3
.LC351:
	.ascii	"PPS: pic_scaling_list_present_flag\000"
	.space	1
.LC352:
	.ascii	"PPS: second_chroma_qp_index_offset\000"
	.space	1
.LC353:
	.ascii	"second_chroma_qp_index_offset out of range.\012\000"
	.space	3
.LC354:
	.ascii	"PPS: pic_parameter_set_id\000"
	.space	2
.LC355:
	.ascii	"pic_parameter_set_id out of range.\012\000"
.LC356:
	.ascii	"PPS: seq_parameter_set_id\000"
	.space	2
.LC357:
	.ascii	"PPS decode error line: %d.\012\000"
.LC358:
	.ascii	"SH: pic_parameter_set_id\000"
	.space	3
.LC359:
	.ascii	"pps id:%d in sliceheader err\012\000"
	.space	2
.LC360:
	.ascii	"PPS or SPS of this slice not valid\012\000"
.LC361:
	.ascii	"MVC_PPSSPSCheck failed, PPS or SPS of this slice no"
	.ascii	"t valid\012\000"
.LC362:
	.ascii	"SH: frame_num\000"
	.space	2
.LC363:
	.ascii	"IDR NAL but frame_num!=0.\012\000"
	.space	1
.LC364:
	.ascii	"SH: field_pic_flag\000"
	.space	1
.LC365:
	.ascii	"SH: bottom_field_flag\000"
	.space	2
.LC366:
	.ascii	"field first_mb_in_slice bigger than pic size\012\000"
	.space	2
.LC367:
	.ascii	"MVC_FRAME first_mb_in_slice bigger than pic size\012"
	.ascii	"\000"
	.space	2
.LC368:
	.ascii	"SH: idr_pic_id\000"
	.space	1
.LC369:
	.ascii	"idr_pic_id bigger than 65535\012\000"
	.space	2
.LC370:
	.ascii	"SH: pic_order_cnt_lsb\000"
	.space	2
.LC371:
	.ascii	"SH: delta_pic_order_cnt_bottom\000"
	.space	1
.LC372:
	.ascii	"SH: delta_pic_order_cnt[0]\000"
	.space	1
.LC373:
	.ascii	"SH: delta_pic_order_cnt[1]\000"
	.space	1
.LC374:
	.ascii	"SH: redundant_pic_cnt\000"
	.space	2
.LC375:
	.ascii	"redundant pic not support.\012\000"
.LC376:
	.ascii	"first_mb_in_slice in currslice small than prevslice"
	.ascii	" in same pic\012\000"
	.space	3
.LC377:
	.ascii	"overflow MVC_MAX_MMCO_LEN\012\000"
	.space	1
.LC378:
	.ascii	"SH: memory_management_control_operation\000"
.LC379:
	.ascii	"SH: difference_of_pic_nums_minus1\000"
	.space	2
.LC380:
	.ascii	"SH: long_term_pic_num\000"
	.space	2
.LC381:
	.ascii	"SH: long_term_frame_idx\000"
.LC382:
	.ascii	"SH: max_long_term_frame_idx_plus1\000"
	.space	2
.LC383:
	.ascii	"mmco exceed 6\012\000"
	.space	1
.LC384:
	.ascii	"SH: no_output_of_prior_pics_flag\000"
	.space	3
.LC385:
	.ascii	"SH: long_term_reference_flag\000"
	.space	3
.LC386:
	.ascii	"IDR and no_output_of_prior_pics_flag = %d\012\000"
	.space	1
.LC387:
	.ascii	"SH: adaptive_ref_pic_marking_mode_flag\000"
	.space	1
.LC388:
	.ascii	"adaptive_ref_pic_marking_mode_flag = %d\012\000"
	.space	3
.LC389:
	.ascii	"MMCO para would save dec err\012\000"
	.space	2
.LC390:
	.ascii	"mulitislice diff no_out_of_prior_pics_flag, used fi"
	.ascii	"rst.\012\000"
	.space	3
.LC391:
	.ascii	"mulitislice diff long_term_reference_flag, used fir"
	.ascii	"st.\012\000"
.LC392:
	.ascii	"mulitislice diff adaptive_ref_pic_marking_mode_flag"
	.ascii	", used first.\012\000"
	.space	2
.LC393:
	.ascii	"TotalPicNum=%d, SliceNumInPic=%d, TotalNal=%d\012\000"
	.space	1
.LC394:
	.ascii	"SH: luma_log2_weight_denom\000"
	.space	1
.LC395:
	.ascii	"SH: chroma_log2_weight_denom\000"
	.space	3
.LC396:
	.ascii	"WP log2 exceed  and err flag = %d\012\000"
	.space	1
.LC397:
	.ascii	"SH: luma_weight_flag_l0\000"
.LC398:
	.ascii	"SH: luma_weight_l0\000"
	.space	1
.LC399:
	.ascii	"SH: luma_offset_l0\000"
	.space	1
.LC400:
	.ascii	"SH: chroma_weight_flag_l0\000"
	.space	2
.LC401:
	.ascii	"SH: chroma_weight_l0\000"
	.space	3
.LC402:
	.ascii	"SH: chroma_offset_l0\000"
	.space	3
.LC403:
	.ascii	"SH: luma_weight_flag_l1\000"
.LC404:
	.ascii	"SH: luma_weight_l1\000"
	.space	1
.LC405:
	.ascii	"SH: luma_offset_l1\000"
	.space	1
.LC406:
	.ascii	"SH: chroma_weight_flag_l1\000"
	.space	2
.LC407:
	.ascii	"SH: chroma_weight_l1\000"
	.space	3
.LC408:
	.ascii	"SH: chroma_offset_l1\000"
	.space	3
.LC409:
	.ascii	"SH: ref_pic_list_reordering_flag_l0\000"
.LC410:
	.ascii	"SH: reordering_of_pic_nums_idc_l0\000"
	.space	2
.LC411:
	.ascii	"reorder idc l0 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC412:
	.ascii	"SH: abs_diff_pic_num_minus1_l0\000"
	.space	1
.LC413:
	.ascii	"abs_diff_pic_num_minus1_l0 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC414:
	.ascii	"SH: long_term_pic_idx_l0\000"
	.space	3
.LC415:
	.ascii	"SH: abs_diff_view_idx_minus1_l0\000"
.LC416:
	.ascii	"num of idc l0 exceed\012\000"
	.space	2
.LC417:
	.ascii	"SH: ref_pic_list_reordering_flag_l1\000"
.LC418:
	.ascii	"SH: reordering_of_pic_nums_idc_l1\000"
	.space	2
.LC419:
	.ascii	"reorder idc l1 = %d, g_SeErrFlag=%d\012\000"
	.space	3
.LC420:
	.ascii	"SH: abs_diff_pic_num_minus1_l1\000"
	.space	1
.LC421:
	.ascii	"abs_diff_pic_num_minus1_l1 = %d, g_SeErrFlag=%d\012"
	.ascii	"\000"
	.space	3
.LC422:
	.ascii	"SH: long_term_pic_idx_l1\000"
	.space	3
.LC423:
	.ascii	"SH: abs_diff_view_idx_minus1_l1\000"
.LC424:
	.ascii	"num of idc l1 exceed\012\000"
	.space	2
.LC425:
	.ascii	"SH: direct_spatial_mv_pred_flag\000"
.LC426:
	.ascii	"SH: num_ref_idx_override_flag\000"
	.space	2
.LC427:
	.ascii	"SH: num_ref_idx_l0_active_minus1\000"
	.space	3
.LC428:
	.ascii	"SH: num_ref_idx_l1_active_minus1\000"
	.space	3
.LC429:
	.ascii	"MVC_FRAME num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC430:
	.ascii	"field num_ref_idx_lx_active_minus1 exceed\012\000"
	.space	1
.LC431:
	.ascii	"reordering para dec err\012\000"
	.space	3
.LC432:
	.ascii	"apply_weights_flag=%d\012\000"
	.space	1
.LC433:
	.ascii	"wpt dec err\012\000"
	.space	3
.LC434:
	.ascii	"mark para dec err\012\000"
	.space	1
.LC435:
	.ascii	"SH: cabac_init_idc\000"
	.space	1
.LC436:
	.ascii	"cabac_init_idc bigger than 3\012\000"
	.space	2
.LC437:
	.ascii	"SH: slice_qp_delta\000"
	.space	1
.LC438:
	.ascii	"SH: disable_deblocking_filter_idc\000"
	.space	2
.LC439:
	.ascii	"disable_deblocking_filter_idc dec err\012\000"
	.space	1
.LC440:
	.ascii	"SH: slice_alpha_c0_offset_div2\000"
	.space	1
.LC441:
	.ascii	"slice_alpha_c0_offset_div2 dec err\012\000"
.LC442:
	.ascii	"SH: slice_beta_offset_div2\000"
	.space	1
.LC443:
	.ascii	"slice_beta_offset_div2 dec err\012\000"
.LC444:
	.ascii	"\012Slice nal or IDR nal = %d\012\000"
.LC445:
	.ascii	"sliceheader dec err\012\000"
	.space	3
.LC446:
	.ascii	"Start Reason: SliceParaNum, MaxBytesReceived = %d, "
	.ascii	"%d(thr=%d)\012\000"
	.space	1
.LC447:
	.ascii	"Too many slice or bitstream, err!\012\000"
	.space	1
.LC448:
	.ascii	"Start Reason: new_pic_flag\012\000"
.LC449:
	.ascii	"init pic err, find next recover point or next valid"
	.ascii	" sps, pps, or exit\012\000"
	.space	1
.LC450:
	.ascii	"MVC_DecList error, ret=%d\012\000"
	.space	1
.LC451:
	.ascii	"dec list err.\012\000"
	.space	1
.LC452:
	.ascii	"SH: first_mb_in_slice\000"
	.space	2
.LC453:
	.ascii	"MVC_SliceCheck first_mb_in_slice >= MAX_MB_NUM_IN_P"
	.ascii	"IC error.\012\000"
	.space	2
.LC454:
	.ascii	"SH: slice_type\000"
	.space	1
.LC455:
	.ascii	"slice type = %d\012\000"
	.space	3
.LC456:
	.ascii	"slice type = %d, err\012\000"
	.space	2
.LC457:
	.ascii	"MVC_InquireSliceProperty mvc flag %d is wrong\012\000"
	.space	1
.LC458:
	.ascii	"pMvcCtx->TotalNal = %d, type:%d\012\000"
	.space	3
.LC459:
	.ascii	"stop i want\012\000"
	.space	3
.LC460:
	.ascii	"***** NAL: IDR/Slice, nal_unit_type=%d, TotalSlice="
	.ascii	"%d\012\000"
	.space	1
.LC461:
	.ascii	"*******TotalPicNum=%d********\012\000"
	.space	1
.LC462:
	.ascii	"***** NAL: PPS, nal_unit_type=%d, TotalPPS=%d\012\000"
	.space	1
.LC463:
	.ascii	"PPS decode error.\012\000"
	.space	1
.LC464:
	.ascii	"***** NAL: SPS, nal_unit_type=%d, TotalSPS=%d\012\000"
	.space	1
.LC465:
	.ascii	"SPS decode error.\012\000"
	.space	1
.LC466:
	.ascii	"***** NAL: SEI, nal_unit_type=%d\012\000"
	.space	2
.LC467:
	.ascii	"SEI decode error.\012\000"
	.space	1
.LC468:
	.ascii	"***** NAL: AUD, nal_unit_type=%d\012\000"
	.space	2
.LC469:
	.ascii	"***** NAL: EOSEQ, nal_unit_type=%d\012\000"
.LC470:
	.ascii	"***** NAL: FILL, nal_unit_type=%d\012\000"
	.space	1
.LC471:
	.ascii	"***** NAL: EOSTREAM, nal_unit_type=%d\012\000"
	.space	1
.LC472:
	.ascii	"***** NAL: SPSEXT, nal_unit_type=%d\012\000"
	.space	3
.LC473:
	.ascii	"***** NAL: PREFIX, nal_unit_type=%d\012\000"
	.space	3
.LC474:
	.ascii	"***** NAL: SUBSPS, nal_unit_type=%d\012\000"
	.space	3
.LC475:
	.ascii	"***** NAL: AUX, nal_unit_type=%d\012\000"
	.space	2
.LC476:
	.ascii	"***** NAL: EOPIC, nal_unit_type=%d\012\000"
.LC477:
	.ascii	"***** NAL: UNSUPPORT, nal_unit_type=%d,nalu header:"
	.ascii	"%x\012\000"
	.space	1
.LC478:
	.ascii	"nal_header != 0x00000100 not support.\012\000"
	.space	1
.LC479:
	.ascii	"MVC_DecOneNal ERR\012\000"
	.bss
	.align	2
.LANCHOR1 = . + 0
	.type	MvcTmpBuf, %object
	.size	MvcTmpBuf, 68
MvcTmpBuf:
	.space	68
	.type	cnt.37878, %object
	.size	cnt.37878, 4
cnt.37878:
	.space	4
	.type	sps_tmp.44127, %object
	.size	sps_tmp.44127, 3992
sps_tmp.44127:
	.space	3992
	.type	pps_tmp.43055, %object
	.size	pps_tmp.43055, 2240
pps_tmp.43055:
	.space	2240
	.ident	"GCC: (Hisilicon_v200(gcc4.4-290+glibc-2.11+eabi+nptl)) 4.4.1"
	.section	.note.GNU-stack,"",%progbits
